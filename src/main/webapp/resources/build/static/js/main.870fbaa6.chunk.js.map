{"version":3,"sources":["AppContext.js","apis/axiosConfig.js","redux/auth-rducer.js","AppMenu.js","views/Home/Notice/NoticeDetail.js","apis/Main.js","views/Home/Notice/NoticeAdd.js","views/Home/Notice/index.js","views/Home/User/index.js","views/Home/Photo/index.js","views/Home/Calendar/index.js","views/Home/Weekly/WeeklyWrite.js","views/Home/Weekly/WeeklyDetail.js","views/Home/Weekly/index.js","views/Home/index.js","views/Reception/SearchPatient/Calendar.js","views/components/Item.js","views/Reception/components/ReceptionHeader.js","apis/Reception.js","views/Reception/Reservation/ReservationUpdateModal.js","apis/Redis.js","views/Reception/BackEnd/index.js","redux/reception-reducer.js","views/Reception/SearchPatient/DoctorSelectorModal.js","views/Reception/SearchPatient/TestSelectorModal.js","views/Reception/Reservation/index.js","views/Reception/SearchPatient/SearchPatientModal.js","views/Reception/SearchPatient/RegisterPatientModal.js","views/Reception/SearchPatient/UpdatePatientModal.js","redux/reservation-reducer.js","views/Reception/SearchPatient/RegisterReservationModal.js","views/Reception/SearchPatient/PatientProfile.js","views/Reception/SearchPatient/PatientHistory.js","views/Reception/SearchPatient/index.js","redux/patient-reducer.js","views/Reception/PatientReception/TestReception.js","views/Reception/PatientReception/TreatmentReception.js","redux/toast-reducer.js","views/Reception/PatientReception/index.js","views/Reception/index.js","views/Treatment/components/ButtonHeader.js","views/Treatment/components/Diagnoses/DiagnosesItem.js","views/Treatment/components/Diagnoses/PrescriptionDiagnosesItem.js","views/Treatment/components/Diagnoses/PrescriptionDiagnosesModal.js","views/Treatment/DiagnosisList.js","views/Treatment/components/Drugs/PrescriptionDrugItem.js","views/Treatment/components/Drugs/PrescriptionDrugsModal.js","views/Treatment/components/Drugs/DrugsItem.js","views/Treatment/DrugList.js","views/Treatment/components/TreatmentItem.js","views/Treatment/PatientTreatment.js","apis/Treatment.js","views/Treatment/components/Tests/ImgDetailModal.js","views/Treatment/components/Tests/PackageImgTest.js","views/Treatment/components/Test.js","views/Treatment/components/Tests/PackageTest.js","views/Treatment/components/Tests/PrescriptionPackageItem.js","views/Treatment/components/Tests/PrescriptionTestItem.js","views/Treatment/components/Tests/PrescriptionTestsModal.js","views/Treatment/TestList.js","views/Treatment/TreatmentMemo.js","views/Treatment/components/PatientItem.js","views/Treatment/components/SearchPatient.js","views/Treatment/components/PatientProfile.js","views/Treatment/index.js","views/Test/PeriodSearch.js","views/Test/Print.js","apis/test.js","views/Test/TestGroup.js","views/Test/Banner.js","views/Test/TestResult.js","views/Test/PatientList.js","views/Test/index.js","views/Members/JoinForm.js","apis/User.js","views/Members/UpdateForm.js","views/Members/index.js","AppRoute.js","views/components/Messenger/Chatting/index.js","views/components/DrawerReceptions.js","views/components/Menu.js","views/components/Redis/index.js","Main.js","views/hospital/data/Data.js","views/hospital/HospitalNoticeDetail.js","views/hospital/HospitalNotice.js","views/hospital/index.js","apis/Auth.js","App.js","reportWebVitals.js","redux/treatment-reducer.js","redux/realtime-reducer.js","redux/websocket-reducer.js","redux/root-reducer.js","index.js"],"names":["AppContext","React","createContext","websocket","AppContextProvider","props","value","Provider","children","addAuthHeader","authToken","axios","defaults","headers","common","baseURL","initState","userid","role_authority","codenumber","username","SET_USERID","SET_AuthToken","SET_CodeNumber","SET_Authority","SET_UserName","createSetUseridAction","type","createSetAuthTokenAction","createSetCodeNumberAction","createSetRoleAuthority","authority","createSetUserName","userName","authReducer","state","action","AppMenu","dispatch","useDispatch","globalUserRole","useSelector","globalUserName","style","backgroundColor","height","marginRight","paddingTop","className","src","width","alt","to","exact","activeStyle","color","position","bottom","paddingBottom","Button","variant","onClick","sessionStorage","removeItem","NoticeDetail","Modal","show","onHide","handleClose","Header","closeButton","Title","board","title","Body","content","Footer","event","deleteNoticeState","noticeid","alert","noticeUpdate","newBoard","post","getScheduleList","startDate","get","scheduleUpdate","NoticeAdd","globalUserid","console","log","useState","setBoard","handleChange","target","name","handleAdd","a","preventDefault","date","Date","handleClose1","work","Form","onSubmit","Group","controlId","Label","Control","onChange","as","rows","Notice","setShow","show1","setShow1","selectedNotice","setSelectedNotice","response","data","useEffect","float","id","scope","length","map","index","handleShow","delete","deleteNotice","then","User","UserList","setUserList","usertype","params","userroom","phonenumber","sex","Photo","setIndex","Carousel","activeIndex","onSelect","selectedIndex","e","Item","with","Calendar","setStartDate","selected","inline","WeeklyWrite","WeeklyDetail","deleteScheduleState","scheduleid","Weekly","ExampleCustomInput","forwardRef","ref","scheduleList","setScheduleList","moment","format","formatDate","customInput","deleteSchedule","Home","fontSize","fontWeight","CalcCitem","month","lastDay","getDate","ItemBoard","i","j","push","getMonth","setMonth","DayIndex","CalcDayIndex","dayIndex","setDayIndex","slideIndex","setSlideIndex","CItem","setCItem","day","selectDate","getFullYear","setSelectDate","toLocaleDateString","today","tmpSlideindex","parseInt","week","ChangeMonth","dir","newMonth","margin","border","interval","prevIcon","nextIcon","indicators","citem","padding","onChangeDaySelect","borderRadius","marginLeft","textAlign","getDay","item","property","order","itemArray","setItemArray","itemarray","ip","jsx","tabIndex","memo","ReceptionHeader","iclassName","headertitle","GetTreatmentListBypatientid","patientid","GetTreatmentList","GetTestReceptionList","UpdateReservationModal","reservationType","setReservationType","handleReservation","patient","setPatient","selectedReservation","result","reservationdate","patientname","age","ssn1","ssn2","marginTop","showTimeSelect","timeFormat","popperPlacement","minDate","minTime","maxTime","dateFormat","newDateOptions","hour","minute","origin","toLocaleString","setMinutes","getMinutes","getTime","getReservationDate","newreservation","reservation","put","UpdateReservation","closeModal","BASE_URL","sendRedisMessage","JSON","stringify","topic","saveChatting","chatArray","chatArrayst","initialState","testreception","treatmentreception","testresult","SET_TESTRECEPTION","SET_TREATMENTRECEPTION","SET_TESTRESULT","createSetTreatmentReception","receptionReducer","patientslist","TR","registerday","lasttreatment","userslist","userpassword","userenabled","treatmentslist","treatmentid","treatmentdate","status","drugslist","drugid","description","reservationslist","reservationid","testList","testreceptionslist","testreceptionid","testdate","testslist","groupcode","groupname","testdataid","DoctorSelectorModal","doctorList","setDoctorList","selectedDoctor","setselectedDoctor","controlLoading","overflow","checked","disabled","treatment","newTreatment","selectedPatient","CancelReservation","TestSelectorModal","setTestList","entry","Object","entries","rowSpan","modify","ischeck","handleTestList","index2","testdataname","filter","test","testdataidlist","testdataArray","receptiontestarg","testreceptionarg","Reservation","reservationUpdateModalshow","setReservationUpdateModalshow","doctorSelectorModalshow","setDoctorSelectorModalshow","reservationList","setReservationList","reservationReducer","setSelectedReservation","testSelectorModalshow","setTestSelectorModalshow","loading","setLoading","click","focusItem","modalname","newreservationlist","concat","sort","r1","r2","Number","ControlLoading","bool","findIndex","tmplist","splice","marginBottom","rdate","item2","reservationuidate","backdrop","size","ReservationUpdateModal","Spinner","animation","role","SearchPatientModal","selectname","keyword","setKeyword","select","setSelect","patientList","setPatientList","setSelectedPatient","disableHeight","tmp","toString","indexOf","list","rowCount","rowHeight","rowRenderer","key","overscanRowCount","RegisterPatientModal","useForm","register","handleSubmit","errors","RegisterPatient","required","pattern","UpdatePatient","defaultValue","SET_RESERVATION","RegisterReservationModal","testlist","createSetReservation","PatientProfile","minWidth","borderTop","borderBottom","PatientHistory","selectedTreatment","setSelectedTreatment","treatmentData","setTreatmentData","testData","setTestData","drugsData","setDrugsData","setDiagnosesData","treatmentReception","userlist","treatmentlist","treatmentdetail","useCallback","treatmentProperty","Math","round","window","innerHeight","drugname","SearchPatient","searchModalshow","setSearchModalshow","reservationRegisterhModalshow","setreservationRegisterhModalshow","patientRegisterhModalshow","setPatientRegisterhModalshow","patientUpdateModalshow","setPatientUpdateModalshow","tmpPatient","UpdatePatientModal","SET_PATIENT","createSetPatient","patientReducer","TestReception","listtype","setListtype","selectedTestReception","setSelectedTestReception","testProperty","ButtonGroup","toggle","ToggleButton","isDrawer","deleteTestReception","TreatmentReception","selectedTreatmetReception","setSelectedTreatmetReception","deleteTreatmentReception","treatmentList","toast","SET_TOAST","realtimeReducer","PatientReception","testReception","treatementsData","setTreatmentsData","testReceptionsData","setTestReceptionsData","onoff","showToast","setShowToast","patientlist","prev","treatment_id","selectedtreatment","testreception_id","right","zIndex","Row","Col","Toast","onClose","delay","autohide","Reception","fontFamily","ButtonHeader","onclick","btnicon","cursor","DiagnosesItem","diagnosesdataid","OverlayTrigger","placement","overlay","Tooltip","diagnosesdataname","whiteSpace","textOverflow","diagnosesdataename","PrescriptionDiagnosesItem","addItem","PrescriptionDiagnosesModal","searchName","setSearchName","prescriptionItems","setPrescriptionItems","searchList","setSearchList","searchType","setSearchType","itemList","staticItemList","prescribe","items","prevItems","obj","Swal","fire","text","imageUrl","imageWidth","confirmButtonText","confirmButtonColor","newItem","prevItem","selectType","search","newItems","toUpperCase","diagnosis","centered","DiagnosisList","staticDignoses","treatmentDiagnoses","prescribeDiagnoses","class","PrescriptionDrugItem","min","quantityArr","onChangeQuantity","drugunit","PrescriptionDrugsModal","setQuantityArr","quantity","drug","DrugsItem","drugtype","DrugList","staticDrugs","treatmentDrugs","prescribeDrugs","TreatmentItem","prop","Badge","PatientTreatment","selectTreatment","patientTreatments","getAllTreatments","prescribeTreatment","prescription","updateTreatment","getTestImgs","ImgDetailModal","closeImgModal","selectedImg","imgid","href","PackageImgTest","imgList","setImgList","setSelectedImg","imgShow","setImgShow","groupTest","tests","Accordion","Card","Toggle","Alert","eventKey","Collapse","defaultActiveKey","block","img","showImgModal","Test","testname","testcontainer","Table","striped","hover","max","testunit","PackageTest","PrescriptionPackageItem","addPackage","PrescriptionTestItem","PrescriptionTestsModal","setEventKey","groupTests","setGroupTests","searchGroupTests","setSearchGroupTests","groupList","reduce","gt","t","newTests","selectNav","rowRendererPackage","Tab","Container","Nav","fill","Link","Content","Pane","TestList","receptionToast","setReceptionToast","group","treatmentTests","testtype","staticTests","prescribeTests","values","closeShow","toastShow","TreatmentMemo","setMemo","readOnly","boxShadow","outline","PatientItem","checkedPatient","setCheckedPatient","checkPatient","selectPatient","saveTreatment","Treatment","globalPatient","catch","error","setTreatment","setPatientTreatments","setTreatmentDrugs","setTreatmentDiagnoses","setTreatmentTests","setStaticDrugs","setStaticDignoses","setStaticTests","prescribeLoading","setPrescribeLoading","treatmentsLoading","setTreatmentLoading","denyButtonText","showDenyButton","isConfirmed","prevList","prevtreatment","drugsList","diagnosesList","testsList","drugResponse","diagnosesResponse","testResponse","testResult","prescribeList","message","heighn","registerLocale","ko","PeriodSearch","start","setStart","end","setEnd","setBtnClicked","handleBtnClicked","currentDate","threeDaysAgo","weekAgo","oneMonthAgo","threeMonthAgo","locale","getpatient","setStartdate","setEnddate","Print","selectpatientinfo","inputRef","grouplist","useBarcode","options","background","testlistByDate","startdate","enddate","insertResult","resultStatus","startTests","checkedList","val","startPatient","cancelTests","cancelPatient","finishTests","promise","finishPatient","TestGroup","open","setOpen","setGroupList","excel","setExcel","resultlist","setResultlist","globalUsername","testdatas","set","Set","chkresult","saveBtn","label","tcolor","handleStart","flag","newGroupList","gettest","handlePrint","handleExit","handleCancel","count","handleFinish","ws","xlsx","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","alignItems","changeHandler","paddingLeft","display","Banner","TestResult","setTreatmentid","inputFile","useRef","formData","FormData","append","current","files","multipartFormData","htmlFor","PatientList","patients","waitings","progresss","completes","ClickPatient","resultstatus","TestPage","setWaiting","setProgress","setComplete","setSelectpatientinfo","groupshow","setGroupShow","setTestdatas","waiting","progress","complete","testlistByReceptionid","borderRight","borderLeft","errorMsg","JoinForm","globalcode","validated","setValidated","errorMessage","setErrorMesssage","errorMessageID","setErrorMesssageID","isInvalid","setIsInvalid","isInvalidID","setIsInvalidID","isNurse","setIsNurse","confirmpassword","setFormData","prevData","noValidate","user","form","currentTarget","stopPropagation","checkValidity","getUsers","finally","placeholder","Feedback","Check","feedback","UpdateForm","updateUser","setIsUpdate","updateShow","confirm","Members","toastMessage","setToastMessage","isUpdate","userList","setUpdateUser","completeUpdate","AppRoute","chatarray","Chatting","setChatArray","connectionList","setConnectionList","setMessage","globalUid","userInfo","setUserInfo","scrollRef","setWebsocket","brb","setBRB","scrollIntoView","behavior","onbeforeunload","webSocket","WebSocket","onopen","GetUserData","send","header","from","connectioninfo","userrole","onclose","onmessage","parse","connectionlist","chatObj","dateTime","isMe","enabled","close","sendMsg","BRB","minHeight","chat","maxWidth","wordBreak","onKeyPress","DrawerReceptions","Menus","toastReducer","customBurgerIcon","Redis","connected","setConnected","subTopic","pubMessage","contents","setContents","groupEnd","connectWebSocket","sendSubTopic","strJson","json","Main","Menu","path","component","bno","btitle","bcontent","bwriter","bdate","bhitcount","HospitalNoticeDetail","HospitalNotice","heght","Hospital","errorMessageCode","setErrorMessageCode","errorMessageUserid","setErrorMessageUserid","errorMessagePassword","setErrorPassword","isInvalidCode","setIsInvalidCode","isInvalidUserid","setIsInvalidUserid","isInvalidPassword","setIsInvalidPassword","loginForm","setLoginFoem","backgroundImage","backgroundRepeat","setItem","autoComplete","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_TREATMENT","treatmentReducer","realtime","SET_REALTIME","SET_WEBSOCKET","websocketReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","getItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.870fbaa6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AppContext = React.createContext({\r\n    websocket:null\r\n})\r\n\r\nexport function AppContextProvider(props){\r\n    const websocket = null;\r\n    const value = {\r\n        websocket:websocket\r\n    }\r\n    \r\n    return(\r\n        <AppContext.Provider value={value}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    ) \r\n}\r\n\r\nexport default AppContext;","import axios from \"axios\";\r\naxios.defaults.baseURL = \"http://kosa3.iptime.org:50006/\";\r\n// axios.defaults.baseURL = \"http://localhost:8080/\";\r\nexport function addAuthHeader(authToken){\r\n    axios.defaults.headers.common[\"authToken\"] = authToken; \r\n  }\r\n  \r\n  export function removeAuthHeader(){\r\n    delete axios.defaults.headers.common[\"authToken\"]; \r\n  }","\r\nconst initState = {\r\n    userid:\"\",\r\n    role_authority:\"\",\r\n    authToken:\"\",\r\n    codenumber:\"\",\r\n    username:\"\"\r\n}\r\nconst SET_USERID = \"auth/set_userid\"\r\nconst SET_AuthToken = \"auth/set_authtoken\"\r\nconst SET_CodeNumber = \"auth/set_codenumber\"\r\nconst SET_Authority = \"auth/set_role_authority\"\r\nconst SET_UserName = \"auth/set_username\"\r\n\r\nexport const createSetUseridAction = (userid) => {\r\n    return { type:SET_USERID, userid}\r\n}\r\nexport const createSetAuthTokenAction = (authToken) => {\r\n    return {type:SET_AuthToken, authToken}\r\n}\r\n\r\nexport const createSetCodeNumberAction = (codenumber) => {\r\n    return {type:SET_CodeNumber, codenumber}\r\n}\r\n\r\nexport const createSetRoleAuthority = (authority) => {\r\n    return {type:SET_Authority, authority}\r\n}\r\n\r\nexport const createSetUserName = (userName) => {\r\n    return {type:SET_UserName, userName}\r\n}\r\n\r\nconst authReducer=(state = initState,action)=> {\r\n    switch(action.type){\r\n        case SET_USERID:\r\n            return {\r\n                ...state,\r\n                userid:action.userid\r\n            }\r\n        case SET_AuthToken:\r\n            return {\r\n                ...state,\r\n                authToken:action.authToken\r\n            }\r\n        case SET_CodeNumber:\r\n            return {\r\n                ...state,\r\n                codenumber:action.codenumber\r\n            }\r\n        case SET_Authority:\r\n            return {\r\n                ...state,\r\n                role_authority:action.authority\r\n            }\r\n        case SET_UserName:\r\n            return {\r\n                ...state,\r\n                username:action.userName\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;","\r\nimport { removeAuthHeader } from \"apis/axiosConfig\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { createSetAuthTokenAction, createSetCodeNumberAction, createSetRoleAuthority, createSetUseridAction } from \"redux/auth-rducer\";\r\n\r\n\r\nfunction AppMenu() {\r\n    const dispatch = useDispatch();\r\n\r\n    const globalUserRole = useSelector((state) => { return state.authReducer.role_authority });\r\n    const globalUserName = useSelector((state) => { return state.authReducer.username });\r\n    const logout = () => {\r\n      //Redux를 이용\r\n      dispatch(createSetUseridAction(\"\"));\r\n      dispatch(createSetAuthTokenAction(\"\"));\r\n      dispatch(createSetCodeNumberAction(\"\"));\r\n      dispatch(createSetRoleAuthority(\"\"));\r\n\r\n      //요청헤더에 authToken제거\r\n      removeAuthHeader();\r\n\r\n      //SessionStorage에 인증 내용 제거\r\n      sessionStorage.removeItem(\"userid\");\r\n      sessionStorage.removeItem(\"authToken\");    \r\n      sessionStorage.removeItem(\"codenumber\");\r\n      sessionStorage.removeItem(\"role_authority\");\r\n    }\r\n\r\n    return (\r\n    <>\r\n    <div style={{backgroundColor:\"#1B296D\", height:\"55vh\", marginRight:\"-15px\", paddingTop:\"20px\"}}>\r\n    <div className=\"d-flex justify-content-center\">\r\n      <img src=\"/logo2.png\" width=\"80%\" alt=\"img\"></img>\r\n    </div>\r\n    </div>\r\n    <div style={{height:\"45vh\", paddingTop:\"20px\"}}>\r\n      <ul className=\"nav flex-column\" >\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"/main/home\" exact className=\"nav-link pt-2 pb-2 mt-3 mb-3\" activeStyle={{color:\"#FFFFFF\", backgroundColor:\"#2F4273\"}} style={{color:\"black\"}}>\r\n            <div className=\"row\">\r\n              <div className=\"col-5 text-right\"><i className=\"bi bi-house-door\"></i></div>\r\n              <div className=\"col-7 pl-0\">Home</div>\r\n            </div>\r\n          </NavLink>\r\n          {/* Link는 이걸 클릭하면 이동한다 라는 뜻 */}\r\n          {globalUserRole === \"ROLE_DOCTOR\" ? \r\n            null \r\n          : \r\n            <NavLink to=\"/main/reception\" className=\"nav-link pt-2 pb-2 mt-3 mb-3\" style={{color:\"black\"}} activeStyle={{color:\"#FFFFFF\", backgroundColor:\"#2F4273\"}}>\r\n            <div className=\"row\">\r\n                <div className=\"col-5 text-right\"><i className=\"bi bi-receipt\"></i></div>\r\n                <div className=\"col-7 pl-0\">Reception</div>\r\n              </div>\r\n            </NavLink>\r\n          }\r\n          {globalUserRole === \"ROLE_NURSE\" ? \r\n            null \r\n          :\r\n            <>\r\n              <NavLink to=\"/main/treatment\" className=\"nav-link pt-2 pb-2 mt-3 mb-3\" style={{color:\"black\"}} activeStyle={{color:\"#FFFFFF\", backgroundColor:\"#2F4273\"}}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 text-right\"><i className=\"bi bi-calendar-plus\"></i></div>\r\n                  <div className=\"col-7 pl-0\">Treatment</div>\r\n                </div>\r\n              </NavLink>\r\n              <NavLink to=\"/main/test\" className=\"nav-link pt-2 pb-2 mt-3 mb-3\" style={{color:\"black\"}} activeStyle={{color:\"#FFFFFF\", backgroundColor:\"#2F4273\"}}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 text-right\"><i className=\"bi bi-eyedropper\"></i></div>\r\n                  <div className=\"col-7 pl-0\">Test</div>\r\n                </div>\r\n              </NavLink>\r\n            </>\r\n          }\r\n          {globalUserRole === \"ROLE_ADMIN\" \r\n          ? \r\n            <NavLink to=\"/main/members\" className=\"nav-link pt-2 pb-2 mt-3 mb-3\" style={{color:\"black\"}} activeStyle={{color:\"#FFFFFF\", backgroundColor:\"#2F4273\"}}>\r\n              <div className=\"row\">\r\n                <div className=\"col-5 text-right\"><i className=\"bi bi-file-person\"></i></div>\r\n                <div className=\"col-7 pl-0\">Members</div>\r\n              </div>\r\n            </NavLink>\r\n          :\r\n            null\r\n          }\r\n\r\n        <div className=\"text-center\" style={{width:\"100%\", position:\"absolute\", bottom:\"0px\", paddingBottom:\"10px\"}}>\r\n          <div className=\"pb-2\">\r\n            {globalUserName}({globalUserRole === \"ROLE_DOCTOR\" ? \"의사\" : (globalUserRole === \"ROLE_NURSE\" ? \"간호사\" : \"병원장\") }) 님\r\n          </div>\r\n          <Button  variant=\"dark\" onClick={logout}>로그아웃</Button>\r\n        </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    </>\r\n    );\r\n}\r\n\r\n\r\nexport default AppMenu;","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nfunction NoticeDetail(props) {\r\n  \r\n  const handleRemove =(event) =>{\r\n    props.deleteNoticeState(props.board.noticeid);\r\n    props.handleClose();\r\n    alert('공지사항을 삭제 하였습니다!');\r\n  };\r\n\r\n  return(\r\n    <>\r\n    <Modal show={props.show} onHide={props.handleClose}>\r\n    <Modal.Header closeButton style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>\r\n          <Modal.Title><strong>{props.board.title}</strong></Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{props.board.content}</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={props.handleClose}>\r\n              CLOSE\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={handleRemove}>\r\n              DELETE\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NoticeDetail;","import axios from \"axios\";\r\n\r\n//공지사항 가져오기\r\nexport function getNoticeList() {\r\n    const promise = axios.get(\"/main/NoticeList\");\r\n    return promise;\r\n}\r\n\r\n//공지사항 추가\r\nexport function noticeUpdate(newBoard){\r\n    const promise = axios.post(\"/main/noticeUpdate\", newBoard);\r\n    return promise;\r\n}\r\n\r\n//공지사항 삭제하기\r\nexport function deleteNotice(noticeid){\r\n    const promise = axios.delete(\"/main/delete/\" + noticeid);\r\n    return promise;\r\n}\r\n\r\n//유저정보 가져오기\r\nexport function getUserList(usertype) {\r\n    const promise = axios.get(\"/main/userList\", {\r\n        params: {\r\n            usertype\r\n        }\r\n    });\r\n    return promise;\r\n}\r\n\r\n//스케쥴 가져오기\r\nexport function getScheduleList(startDate) {\r\n    const promise = axios.get(\"/main/ScheduleList/\" + startDate);\r\n    return promise;\r\n}\r\n\r\n//스케줄 등록\r\nexport function scheduleUpdate(newBoard) {\r\n    const promise = axios.post(\"/main/scheduleUpdate\", newBoard);\r\n    return promise;\r\n}\r\n\r\n//스케줄 삭제\r\nexport function deleteSchedule(scheduleid, startDate) {\r\n    const promise = axios.get(\"/main/scheduleDelete/\" + scheduleid + \"/\" + startDate);\r\n    return promise;\r\n}","import { noticeUpdate } from \"apis/Main\";\r\nimport { useState } from \"react\";\r\nimport { Modal, Form, Button } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction NoticeAdd(props) {\r\n\r\n  const globalUserid = useSelector((state) => {\r\n    return state.authReducer.userid;\r\n  });//리덕스에 있는 userid 사용\r\n  console.log(globalUserid);\r\n\r\n  const [board, setBoard] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setBoard({\r\n      ...board,\r\n      [event.target.name]: event.target.value //이벤트 받아오기\r\n    });\r\n  };\r\n\r\n  const handleAdd = async(event) => {\r\n    event.preventDefault(); //form 안에 submit 역할을 하는 버튼을 눌렀어도 새로 실행하지 않게\r\n    const newBoard = {...board};\r\n    newBoard.userid = globalUserid;\r\n    newBoard.date = new Date();\r\n    await noticeUpdate(newBoard);\r\n    setBoard({title: \"\", content: \"\"});\r\n    props.handleClose1();\r\n    props.work();\r\n    alert('공지사항을 등록 하였습니다!');\r\n  };\r\n\r\n  return(\r\n    <>\r\n    <Modal show={props.show} onHide={props.handleClose1}>\r\n              <Form className=\"text-center\" onSubmit={handleAdd}> \r\n                <h4>NOTICE<img src=\"/pencil.png\"width=\"25\"height=\"25\"/></h4>\r\n                <hr></hr>\r\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                  <Form.Label><strong>제목</strong></Form.Label>\r\n                  <Form.Control type=\"text\" name=\"title\" value={board.title} onChange={handleChange}/>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                  <Form.Label><strong>내용</strong></Form.Label>\r\n                  <Form.Control as=\"textarea\" rows={3} name=\"content\" value={board.content} onChange={handleChange}/>\r\n                </Form.Group>\r\n              </Form>\r\n              <Modal.Footer>\r\n              <Button type=\"submit\" variant=\"primary\" onClick={handleAdd}>\r\n                  ADD\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={props.handleClose1}>\r\n                  CLOSE\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NoticeAdd;","import { Form, Modal } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button } from 'react-bootstrap';\r\nimport \"./scrollbar1.css\"\r\nimport NoticeDetail from \"./NoticeDetail\";\r\nimport NoticeAdd from \"./NoticeAdd\";\r\nimport { deleteNotice, getNoticeList } from \"apis/Main\";\r\nfunction Notice(props){\r\n  const [a, setA] = useState(1);//상태데이터 선언 문법\r\n  //자바에서 int a = 1;와 같음\r\n  //setA(바꿔주고싶은값)\r\n  //a = 2;(자바) setA(2)\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [show1, setShow1] = useState(false);\r\n  const [selectedNotice, setSelectedNotice] = useState([]);\r\n  //공지사항을 가져올 list \r\n  const [board, setBoard] = useState({});\r\n  \r\n  const work = async() => {\r\n    const response = await getNoticeList(); //백이랑 통신\r\n    console.log(response.data);\r\n    setSelectedNotice(response.data);\r\n  }\r\n\r\n  const deleteNoticeState=(noticeid)=>{\r\n    //boardlist에서 해당 noticeid의 notice 삭제 \r\n    deleteNotice(noticeid).then((response)=>{\r\n      console.log(noticeid)\r\n      console.log(response.data);\r\n      setSelectedNotice(response.data);\r\n    });\r\n   \r\n  }\r\n\r\n  useEffect(() => {\r\n    work();\r\n  }, [])\r\n\r\n  const handleShow =(board) => {\r\n    setShow(true);\r\n    setBoard(board);\r\n  }\r\n  \r\n  const handleClose = () => {\r\n    setShow(false);\r\n  }\r\n  \r\n\r\n  const handleClose1 = () => setShow1(false);\r\n  const handleShow1 = () => setShow1(true);\r\n\r\nreturn(\r\n  <>\r\n  <h5>NOTICE <img src=\"/pencil.png\"width=\"25\"height=\"25\"/>\r\n      <Button variant=\"outline-primary\" style={{float: \"right\"}} onClick={handleShow1}>\r\n      <img src=\"/pen.png\"width=\"25\"height=\"25\"/></Button>\r\n    </h5> \r\n    <NoticeAdd show={show1} handleClose1={handleClose1} work={work}></NoticeAdd>\r\n  <div className=\"scrollbar\" id=\"style-7\">\r\n    <div className=\"force-overflow-auto\">\r\n   <table className=\"table table-hover\">\r\n     <thead className=\"card-header\" style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>\r\n       <tr>\r\n         <th scope=\"col\">#</th>\r\n         <th scope=\"col\">작성자</th>\r\n         <th scope=\"col\">제목</th>\r\n         <th scope=\"col\">날짜</th>\r\n       </tr>\r\n     </thead>\r\n     <tbody>\r\n       {console.log(selectedNotice)}\r\n       {selectedNotice.length != 0 &&\r\n       selectedNotice.map((board,index) => {\r\n         return(\r\n           <tr key={board.noticeid} onClick={()=>{handleShow(board);}}>\r\n             <th style={{width:\"100px\"}}>{index}</th>\r\n             <th style={{width:\"200px\"}}>{board.userid}</th>\r\n             <th>{board.title}</th>\r\n             <th style={{width:\"200px\"}}>{board.date}</th>\r\n           </tr>\r\n         )\r\n       })}\r\n     </tbody>\r\n    </table>\r\n    </div>\r\n    </div>\r\n      \r\n    <NoticeDetail deleteNoticeState={deleteNoticeState} board={board} show={show} handleClose={handleClose}></NoticeDetail>\r\n  </>\r\n)\r\n}\r\n\r\nexport default Notice;","import { useEffect, useState } from \"react\";\r\nimport { getUserList } from \"apis/Main\";\r\nimport \"./scrollbar2.css\";\r\n\r\nfunction User(props){\r\n\r\n  const [UserList, setUserList] = useState([]);\r\n\r\n  const work = async() => {\r\n    const response = await getUserList(\"전체\");    \r\n    setUserList(response.data);\r\n    console.log(response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    work();\r\n  },[])\r\n  \r\n  return(    \r\n    <>\r\n    <div className=\"scrollbar\" id=\"style-7\">\r\n      <div className=\"force-overflow-auto\">\r\n      <table className=\"table table-hover\">\r\n        <thead className=\"card-header\" style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>\r\n        <tr>\r\n          <th scope=\"col\">ROOM</th>\r\n          <th scope=\"col\">NAME</th>\r\n          <th scope=\"col\">PHONE</th>\r\n          <th scope=\"col\">SEX</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody style={{backgroundColor:\"white\"}}>\r\n          {UserList.length != 0 &&\r\n          UserList.map((board) => {\r\n            return(\r\n                <tr>\r\n                  <th style={{width:\"100px\"}}>{board.userroom}</th>\r\n                  <th style={{width:\"110px\"}}>{board.username}</th>\r\n                  <th style={{width:\"210px\"}}>{board.phonenumber}</th>\r\n                  <th>{board.sex}</th>\r\n                </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n   </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default User;","import { useState } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\n\r\nfunction Photo(props){\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  return(\r\n    <Carousel activeIndex={index} onSelect={handleSelect}>\r\n      <Carousel.Item>\r\n        <img src=\"/123.JPG\" with=\"360\" height=\"280\"  className=\"d-block w-100\" alt=\"First slide\"/>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img src=\"/mask.JPG\" with=\"360\" height=\"280\" className=\"d-block w-100\" alt=\"Second slide\"/>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img src=\"/mask2.JPG\" with=\"360\" height=\"280\" className=\"d-block w-100\" alt=\"Third slide\"/>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default Photo;","import { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./datepickerHome.css\";\r\n\r\nfunction Calendar(props) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  return (\r\n    <>\r\n    <div className=\"text-center\">\r\n      <DatePicker\r\n      selected={startDate}\r\n      onChange={(date) => setStartDate(date)}\r\n      inline\r\n      />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calendar;","import { scheduleUpdate } from \"apis/Main\";\r\nimport React, { useState } from \"react\";\r\nimport { Form, Modal, Button } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction WeeklyWrite(props){\r\n\r\n  const globalUserid = useSelector((state) => {\r\n    return state.authReducer.userid;\r\n  });\r\n\r\n  const [board, setBoard] = useState({\r\n    content: \"\"\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setBoard({\r\n      ...board,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleAdd = async(event) => {\r\n    event.preventDefault();\r\n    const newBoard = {...board};\r\n    newBoard.userid = globalUserid;\r\n    newBoard.date = props.startDate;\r\n    await scheduleUpdate(newBoard);\r\n    setBoard({content: \"\"});\r\n    props.handleClose1();\r\n    props.work();\r\n    alert('스케줄을 등록 하였습니다!');\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Modal show={props.show} onHide={props.handleClose}>\r\n              <Form onSubmit={handleAdd}>\r\n                <h4 className=\"text-center\">WEEKLY <img src=\"/weekly.png\"width=\"25\"height=\"25\"/></h4>\r\n                <hr></hr>\r\n                <Form.Group className=\"mb-3, text-center\" controlId=\"exampleForm.ControlTextarea1\">\r\n                  <Form.Label><strong>내용</strong></Form.Label>\r\n                  <Form.Control as=\"textarea\" rows={3} name=\"content\" value={board.content} onChange={handleChange}/>\r\n                </Form.Group>\r\n              </Form>\r\n              <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={handleAdd}>\r\n                  ADD\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={props.handleClose1}>\r\n                  CLOSE\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            </>\r\n  );\r\n};\r\n\r\nexport default WeeklyWrite;","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nfunction WeeklyDetail(props) {\r\n\r\n  const handleRemove = (event) => {\r\n    props.deleteScheduleState(props.board.scheduleid, props.board.date);\r\n    props.handleClose1();\r\n    alert('스케쥴을 삭제 하였습니다!');\r\n  };\r\n\r\n  return(\r\n    <>\r\n    <Modal show={props.show} onHide={props.handleClose}>\r\n    <Modal.Header closeButton style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>\r\n          <Modal.Title><strong>{props.board.userid}</strong></Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{props.board.content}</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={props.handleClose1}>\r\n              CLOSE\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={handleRemove}>\r\n              DELETE\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WeeklyDetail;","import { forwardRef, useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { deleteSchedule, getScheduleList } from \"apis/Main\";\r\nimport \"./scrollbar.css\";\r\nimport \"./boxstyle.css\";\r\nimport moment from \"moment\";\r\nimport WeeklyWrite from \"./WeeklyWrite\";\r\nimport WeeklyDetail from \"./WeeklyDetail\";\r\n\r\nfunction Weekly(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [show1, setShow1] = useState(false);\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\r\n    <button className=\"example-custom-input\" onClick={onClick} ref={ref}>\r\n      {value}\r\n    </button>\r\n  ));\r\n\r\n\r\n  const [scheduleList, setScheduleList] = useState([]);\r\n  const [board, setBoard] = useState({});\r\n\r\n  const work = async() => {\r\n    console.log(moment(startDate).format('YYYY-MM-DD'))\r\n    const formatDate = moment(startDate).format('YYYY-MM-DD');\r\n    const response = await getScheduleList(formatDate);\r\n\r\n    console.log(response.data);\r\n    setScheduleList(response.data);\r\n  }\r\n\r\n  const deleteScheduleState = (scheduleid, startDate) => {\r\n\r\n    deleteSchedule(scheduleid, startDate).then((response) => {\r\n      console.log(response.data);\r\n      setScheduleList(response.data);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    work();\r\n  }, [startDate])\r\n\r\n  const handleClose1 = () => setShow1(false);\r\n  const handleShow1 = () => setShow1(true);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (board) => { \r\n    setShow(true); \r\n    setBoard(board); \r\n  }\r\n  return(\r\n    <>\r\n    <h5>WEEKLY <img src=\"/appointment.png\"width=\"30\"height=\"30\"/>\r\n    <Button variant=\"outline-primary\" style={{float: \"right\"}} onClick={handleShow1}>\r\n      <img src=\"/pen.png\"width=\"25\"height=\"25\"/></Button>\r\n    <WeeklyWrite show={show1} handleClose1={handleClose1} work={work} startDate={startDate}></WeeklyWrite>\r\n    <div className=\"text-center p-4\">\r\n    <DatePicker\r\n      selected={startDate}\r\n      onChange={(date) => setStartDate(date)}\r\n      customInput={<ExampleCustomInput />}\r\n    />\r\n    </div>\r\n    </h5>\r\n    <div className=\"scrollbar\" id=\"style-7\">\r\n    <div className=\"force-overflow-auto\">\r\n   <table className=\"table table-hover\">\r\n     <thead className=\"card-header\" style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>\r\n       <tr>\r\n        <th scope=\"col\">날짜</th>\r\n        <th scope=\"col\">일정</th>\r\n         <th scope=\"col\">작성자</th>\r\n       </tr>\r\n     </thead>\r\n     <tbody>\r\n       {console.log(scheduleList)}\r\n       {scheduleList.length != 0 &&\r\n       scheduleList.map((board,index) => {\r\n         return(\r\n           <tr onClick={() => {handleShow(board);}}>\r\n            <th style={{width:\"200px\"}}>{board.date}</th>\r\n            <th>{board.content}</th>\r\n             <th style={{width:\"200px\"}}>{board.userid}</th>\r\n           </tr>\r\n          )\r\n       })}\r\n     </tbody>\r\n    </table>\r\n    </div>\r\n    </div>\r\n    \r\n    {/* 함수명()  <- 함수를 실행하겠다는 뜻  */}\r\n\r\n    <WeeklyDetail deleteScheduleState = {deleteScheduleState} board={board} show={show} handleClose1={handleClose}></WeeklyDetail>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Weekly;","import Notice from \"./Notice\";\r\nimport User from \"./User\";\r\nimport Photo from \"./Photo\";\r\nimport Calendar from \"./Calendar\";\r\nimport Weekly from \"./Weekly\";\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"container-fluid row vh-100 p-3\">\r\n   <div className=\"col-8\">\r\n      <div className=\"col card p-3\" style={{height:\"30vh\"}}>\r\n      <Notice/>\r\n      </div>\r\n      <div className=\"p-2\"></div>\r\n      <div className=\"col card p-3\"style={{height:\"65vh\"}}>\r\n      <Weekly/>\r\n      </div>\r\n   </div>\r\n   <div className=\"col-4\">\r\n   <div className=\"col p-0 pt-0\" style={{height:\"30vh\"}}>\r\n      <Calendar/>\r\n      </div>\r\n      <div className=\"p-2\"></div>\r\n      <div className=\"col p-0 pl-2 pt-0 ml-4\"style={{height:\"30vh\"}}>\r\n      <div className=\"pb-1\" style={{fontSize:\"20px\", fontWeight:\"bold\"}}>Hospital's Contact Info: </div>\r\n      <User/>\r\n      </div>\r\n      <div className=\"p-2 pt-2\"></div>\r\n      <div className=\"col\"style={{height:\"33.7vh\"}}>\r\n        <div className=\"pb-1\" style={{fontSize:\"20px\", fontWeight:\"bold\"}}>COVID-19 Card News:</div>\r\n      <Photo/>\r\n      </div>\r\n   </div>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import { Carousel, Pagination } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\n//현재 DayIndex 구하기\r\nconst CalcDayIndex =(month) =>{\r\n    let today = new Date().getDate();\r\n    \r\n    let DayIndex = (today%7) -1\r\n    if(DayIndex<0){\r\n        DayIndex = DayIndex+7\r\n    }\r\n    return DayIndex;\r\n}\r\n\r\n// 달에 따른 슬라이드 배열 넣기\r\nconst CalcCitem = (month) =>{ \r\n    let lastDay = null;\r\n    // 해당 달의 마지막 날\r\n    lastDay = new Date(2021,month,0).getDate();\r\n    \r\n    let ItemBoard =[];\r\n    // 마지막 슬라이드를 제외하고 각 슬라이드의 배열에 들어갈 숫자넣기 \r\n    for(var i=1; i<=4; i++){\r\n        let Item = [];\r\n        for(var j=7*(i-1)+1; j<=7*i; j++){\r\n            Item.push(j);\r\n        }\r\n        ItemBoard.push(Item)\r\n    }\r\n    let Item = [];\r\n    // 마지막 슬라이드에 넣을것(해당 달의 마지막날 까지 배열에 추가)\r\n    for(var j=29; j<=lastDay; j++){\r\n        Item.push(j)\r\n    }\r\n    // 해당 슬라이드에 아무것도 없을때 슬라이드 안나오게\r\n    if(Item.length>0)\r\n    ItemBoard.push(Item);\r\n    return ItemBoard;\r\n}\r\nfunction Calendar(props){\r\n    // 현재 달 상태\r\n    const [month,setMonth] = useState(new Date().getMonth()+1)\r\n    // 현재 day index 상태\r\n    const [dayIndex, setDayIndex] = useState(()=>(CalcDayIndex(new Date().getMonth()+1)))\r\n    // 현재 슬라이드 인덱스\r\n    const [slideIndex, setSlideIndex] = useState(0);\r\n    // 현재 슬라이드 배열\r\n    const [CItem, setCItem] = useState(()=>(CalcCitem(month)));\r\n\r\n    //일자 선택 함수\r\n    const onChangeDaySelect =(index,e) =>{\r\n        setDayIndex(index);\r\n      \r\n    }\r\n    // 최종 결과 date set하는곳\r\n    useEffect(()=>{\r\n        const day = CItem[slideIndex][dayIndex];\r\n        const selectDate = new Date(new Date().getFullYear()+\"-\"+month+\"-\"+day)\r\n        props.setSelectDate(selectDate.toLocaleDateString()) \r\n\r\n    },[dayIndex,slideIndex,month])\r\n\r\n    // 현재 슬라이드 이동 함수\r\n  const handleSelect = (selectedIndex,e) => {\r\n    setSlideIndex(selectedIndex);\r\n  };\r\n\r\n  //현재 날짜의 슬라이드로 이동 초기화\r\n  useEffect(()=>{\r\n    const today = new Date().getDate()\r\n    let tmpSlideindex =parseInt(today/7)\r\n    if(today%7===0){\r\n        tmpSlideindex = parseInt(today/7)-1;\r\n    } \r\n    setSlideIndex(tmpSlideindex);\r\n  },[])\r\n\r\n  //달이 바뀔때 해당 달의 날짜배열 상태 변경\r\n  useEffect(()=>{\r\n   setCItem(CalcCitem(month)); \r\n  },[month])\r\n\r\n  //날짜에 따른 요일 매핑\r\n  var week = ['일', '월', '화', '수', '목', '금', '토']; \r\n\r\n  // 달 바꾸기(버튼에 따른 달 숫자 변경)\r\n    const ChangeMonth = (dir) =>{\r\n        let newMonth = month;\r\n        if(dir && newMonth<12){\r\n            newMonth++\r\n            setMonth(newMonth)\r\n        }else if(!dir && newMonth>1){\r\n            newMonth-- \r\n            setMonth(newMonth)\r\n        }\r\n    }\r\n  \r\n \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"d-flex flex-row\" style={{margin:\"10px 0px\"}}>\r\n                <button className=\"carousel-control-prev-icon bg-info\" style={{border:\"none\"}} onClick={()=>{ChangeMonth(false)}}/>\r\n                <label style={{fontWeight:\"bold\", margin:\"0px 10px\"}}>{month}월</label>\r\n                <button className=\"carousel-control-next-icon  bg-info \"style={{border:\"none\"}} onClick={()=>{ChangeMonth(true)}}/>\r\n            </div>\r\n            <Carousel interval={null}  variant=\"dark\"  prevIcon = {<span className=\"carousel-control-prev-icon bg-info\" />} nextIcon={<span className=\"carousel-control-next-icon  bg-info \" />} indicators={false} activeIndex={slideIndex} onSelect={handleSelect}>\r\n                {\r\n                    CItem.map((citem,index)=>{\r\n                        return(\r\n                            <Carousel.Item key={index}>\r\n                                    <div  className={index<4?\"row d-flex justify-content-between\":\"row d-flex\"}  style={{padding:\"0px 130px\"}}>\r\n                                \r\n                                 {citem.map((day,index)=>{return(\r\n                                       <button key={index} onClick={()=>{onChangeDaySelect(index)}} style={{backgroundColor:dayIndex!==index?\"white\":\"#F6FCFA\",border:dayIndex!==index?\"none\":\"2px solid skyblue\", borderRadius:\"15px\",marginLeft:\"5px\", width:\"50px\", textAlign:\"center\"}}>\r\n                                        {day}<br/>\r\n                                       {week[new Date(new Date().getFullYear()+\"-\"+month+\"-\"+day).getDay()]}\r\n                                        </button>       \r\n                                )\r\n                                })}\r\n                               </div>\r\n                            </Carousel.Item>\r\n                        )\r\n                    })\r\n                }\r\n \r\n            </Carousel>\r\n            \r\n        </div>\r\n\r\n        \r\n            \r\n    )\r\n}\r\n\r\nexport default Calendar;","import React from \"react\";\r\nimport { useEffect,  useState } from \"react\";\r\n\r\nfunction Item(props) {\r\n\r\n  const item = props.item\r\n  const property = props.property\r\n  const order = props.order\r\n  const [itemArray, setItemArray] = useState([]);\r\n  useEffect(()=>{\r\n    let itemarray = [];\r\n    if(order!=null){\r\n      itemarray.push(order)\r\n    }\r\n    if(property==null){\r\n      for(var ip in item){\r\n        itemarray.push(item[ip])\r\n      }\r\n    }\r\n    else{\r\n      for(var i=0; i<property.length; i++){\r\n        itemarray.push(item[property[i]]); \r\n       }\r\n    }\r\n      setItemArray(itemarray);\r\n},[item])\r\n  \r\n  return (\r\n    <>\r\n     <style jsx=\"true\">{`\r\n     \r\n        .test:focus {\r\n          background: #e0ecf8;\r\n          color:black;\r\n        }\r\n        \r\n      `}</style>\r\n    <div tabIndex=\"-1\" onClick={(event)=>{if(props.onClick)props.onClick(item); }} className={\"test ml-2 mr-2 mb-2 pt-2 pb-2 d-flex align-items-center border-bottom  \"} style={{ fontSize: \"13px\" }}>\r\n    {itemArray.map((item,index)=>{\r\n      return(\r\n        <div key={index} style={{color:(item===\"진료 대기\") || (item===\"대기중\")?\"green\":(item===\"검사완료\") || (item===\"진료 완료\")?\"red\":(item===\"진행중\") || (item===\"진료중\")?\"orange\":\"black\"}} className=\"col pl-0 pr-0 text-center\">\r\n\r\n         {item}\r\n        </div>\r\n      )\r\n    })}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Item);\r\n\r\n\r\n\r\n\r\n","function ReceptionHeader(props) {\r\n  return (\r\n    <>\r\n      <div className=\" d-flex justify-content-between \" style={{height:\"46px\"}}>\r\n        <div className=\"d-flex \" style={{height:\"46px\"}}>\r\n        <div className=\"col-auto justify-content-start  text-center p-0 pt-2\" style={{ backgroundColor:props.color, width:\"40px\", color:\"#FFFFFF\"}}>\r\n          <i className={props.iclassName}></i>\r\n        </div>\r\n        <div className=\"p-2 col align-self-center\">{props.headertitle}</div>\r\n        </div>\r\n        <div className=\"align-self-center\"> \r\n        {props.children}\r\n        </div>\r\n        \r\n    \r\n      </div>    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReceptionHeader;","import axios from \"axios\";\r\n\r\n//예약정보 가져오기\r\nexport function GetReservationList(){\r\n    const result = axios.get(\"reception/reservationlist\");\r\n    return result;\r\n}\r\n//예약정보 등록하기\r\nexport function RegisterReservation(reservation, testlist){\r\n    const result = axios.post(\"reception/registerreservation\",[reservation,testlist],{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n    return result;\r\n}\r\n//예약정보 삭제하기\r\nexport function RemoveReservation(reservationid){\r\n    const result = axios.delete(\"reception/removereservation\", {\r\n        data: { \r\n          reservationid \r\n        }\r\n      });\r\n    return result;\r\n}\r\n//예약정보 수정하기\r\nexport function UpdateReservation(reservation){\r\n    let result = axios.put(\"reception/updatereservation\",reservation);\r\n    return result;\r\n}\r\n//특정 환자정보가져오기\r\nexport function getPatient(patientid) {\r\n    const result = axios.get(\"reception/getpatient\",{\r\n        params:{    \r\n            patientid\r\n        }\r\n    });\r\n    return result;\r\n  }\r\n//환자정보가져오기\r\nexport function GetPatientList(){\r\n    const result = axios.get(\"reception/patientlist\");\r\n    return result;\r\n}\r\n//환자등록하기\r\nexport function RegisterPatient(patient){\r\n    const result = axios.post(\"reception/registerpatient\",patient,{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n    return result;\r\n}\r\n//환자수정하기\r\nexport function UpdatePatient(patient){\r\n    const result = axios.put(\"reception/updatepatient\",patient,{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n    return result;\r\n}\r\n\r\n//환자의 진료정보 가져오기\r\nexport function GetTreatmentListBypatientid(patientid){\r\n    const result = axios.get(\"reception/treatments/\"+patientid);\r\n    return result;\r\n}\r\n\r\n//환자의 진료상세정보 가져오기\r\nexport function GetTreatmentDetail(treatmentid){\r\n    const result = axios.get(\"reception/treatmentdetail\",{\r\n        params:{    \r\n            treatmentid\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\n//처방받은 검사데이터 가져오기\r\nexport function PrescriptionTest(patientid){\r\n    const result = axios.get(\"reception/prescriptiontest\",{\r\n        params:{    \r\n            patientid\r\n        }\r\n    });\r\n    return result;\r\n}\r\n//검사 접수하기\r\nexport function ReceptionTest(receptiontestarg){\r\n    const result = axios.post(\"reception/receptiontest\",receptiontestarg,{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n    return result;\r\n}\r\n// 진료접수하기\r\nexport function ReceptionTreatment(treatment){\r\n    const result = axios.post(\"reception/receptiontreatment\",treatment,{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n    return result;\r\n}\r\n\r\n//검사접수 삭제하기\r\nexport function DeleteReceptionTest(testreceptionid){\r\n    const result = axios.delete(\"reception/removetestreception\", {\r\n        data: { \r\n            testreceptionid\r\n        }\r\n      });\r\n    return result;\r\n}\r\n\r\n\r\n//진료접수 삭제하기\r\nexport function DeleteReceptionTreatment(treatmentid){\r\n    const result = axios.delete(\"reception/removereceptiontreatment\", {\r\n        data: { \r\n            treatmentid \r\n        }\r\n      });\r\n    return result;\r\n}\r\n\r\n//그날의 진료접수정보 가져오기\r\nexport function GetTreatmentList(){\r\n    const result = axios.get(\"reception/treatmentlist\");\r\n    return result;\r\n}\r\n//그날의 검사접수정보 가져오기\r\nexport function GetTestReceptionList(){\r\n    const result = axios.get(\"reception/testreceptionlist\");\r\n    return result;\r\n}\r\n\r\n//임직원 정보 가져오기(usertype)\r\nexport function GetUsersData(usertype){\r\n    const result = axios.get(\"user/userlist\",{\r\n        params:{    \r\n            usertype\r\n        }\r\n    });\r\n    return result;\r\n}\r\n//임직원 정보 가져오기(userid)\r\nexport function GetUserData(userid){\r\n    const result = axios.get(\"reception/getuser/\"+userid);\r\n    return result;\r\n}\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport ReactDatePicker, {} from \"react-datepicker\";\r\nimport \"../SearchPatient/datepickerReservation.css\";\r\nimport { getPatient, UpdateReservation } from \"apis/Reception\";\r\n\r\n\r\nfunction UpdateReservationModal(props){\r\n    //예약 리스트\r\n    //const [reservationList, setReservationList] = useState([]);\r\n    //선택된 날짜 상태\r\n    const [startDate, setStartDate] = useState(new Date())\r\n\r\n    //예약된 시간상태\r\n    //const [reservatedTimes,setReservatedTimes] = useState([]); \r\n\r\n    //진료인지 날짜인지 예약 타입상태 -> true이면 진료, false이면 예약\r\n    const [reservationType, setReservationType] = useState(true)\r\n    //예약상태 결정하는 함수\r\n    const handleReservation = (type) =>{\r\n        setReservationType(type)\r\n    }\r\n    //const dispatch = useDispatch();\r\n    //선택된 검사리스트 (초기값으로 DB에서 불러온 처방검사리스트 들어감)\r\n    //const [testList,setTestList] = useState([]);\r\n    //선택된 환자\r\n    const [patient, setPatient] = useState();\r\n\r\n\r\n    //처방된 검사 선택\r\n    // const handleTestList = (event, index) =>{\r\n    //     const modify = testList.map((item,i)=>{\r\n    //         if(i===index){\r\n    //             item.ischeck = event.target.checked\r\n    //         }\r\n    //         return item;\r\n    //     })\r\n    //     setTestList(modify);\r\n    // }\r\n\r\n    // const GetTimeIndex=(date)=>{\r\n    //     let hour = date.getHours()*10\r\n    //     let minute = date.getMinutes()\r\n    //     if(minute===0){\r\n    //         minute = 0;\r\n    //     }else if(minute===30){\r\n    //         minute = 5;\r\n    //     }\r\n    //     const Index = (hour+minute)/5-18\r\n    //     return Index\r\n    // }\r\n    // const GetTime=(Index)=>{\r\n    //     let num = (Index+18)*5\r\n    //     let hour = num/10\r\n    //     let minute = num%10===5?30:0\r\n    //     const date = new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate(),hour,minute)\r\n    //     return date;\r\n    // }\r\n    useEffect(()=>{\r\n        if(props.selectedReservation){\r\n            getPatient(props.selectedReservation.patientid).then((result)=>{\r\n                console.log(result.data)\r\n                setPatient(result.data)\r\n            })\r\n        }\r\n        \r\n    },[props.selectedReservation])\r\n    useEffect(()=>{\r\n        // var reservationlist = getAllReservationsData();\r\n        // setReservationList(reservationlist)\r\n        //var testlist = getAllTestsGroupData(props.selectedReservation.patientid);\r\n        //setTestList(testlist);\r\n        //선택된 예약정보 가져오기 타입, 시간\r\n        setReservationType(props.selectedReservation.type===\"진료\"?true:false)\r\n        setStartDate(new Date(props.selectedReservation.reservationdate))\r\n        //console.log(GetTime(GetTimeIndex(new Date(new Date().getFullYear(),new Date().getMonth(),29,15,30))))\r\n        //  let Times=new Array(18);\r\n        //     Times[GetTimeIndex(new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),13,0))] = true;\r\n        //     Times[GetTimeIndex(new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),13,30))] = true;\r\n        //     for(var i=0; i<reservationlist.length; i++){\r\n        //         if(reservationlist[i].reservationdate){\r\n        //             Times[GetTimeIndex(reservationlist[i].reservationdate)] = true;\r\n        //         }\r\n        //     }\r\n         \r\n        \r\n            //처음 들어갈시간 넣기\r\n        //  setStartDate(props.selectedReservation.rdate);\r\n\r\n        //  let excludeTime = new Array(12)\r\n        //  for(var i=0; i<12; i++){\r\n        //      var lastday = new Date(new Date().getFullYear(),i+1,0).getDate();\r\n        //     excludeTime[i] = new Array(lastday)\r\n        //     for(var j=0; j<lastday; j++){\r\n        //         excludeTime[i][j] = new Array();\r\n        //     }\r\n        //  }\r\n         //exclude에 들어갈 월별 시간 구하기\r\n        \r\n        //     for(var i=0; i<reservationlist.length; i++){\r\n        //         //수정된 예약의 시간은 다시선택할수있게함\r\n        //         if(reservationlist[i].reservationid===props.selectedReservation.reservationid){\r\n        //             continue;\r\n        //         }\r\n        //         var month = reservationlist[i].reservationdate.getMonth()+1\r\n        //         var day = reservationlist[i].reservationdate.getDate()\r\n        //         excludeTime[month-1][day-1].push(reservationlist[i].reservationdate)\r\n        //         console.log(month + \",\"+day+\",\"+reservationlist[i].reservationdate)\r\n        //      }\r\n         \r\n         \r\n        // console.log(excludeTime)\r\n        // setReservatedTimes(excludeTime)  \r\n      \r\n      \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n    },[startDate])\r\n    const getReservationDate= () =>{\r\n        var newDateOptions = {\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour:\"2-digit\",\r\n            minute:\"2-digit\"\r\n        }\r\n        const origin = startDate.toLocaleString(\"ko-kr\",newDateOptions);\r\n        let date = new Date(startDate);\r\n        date.setMinutes(date.getMinutes()+30)\r\n        if(startDate.getTime()){\r\n            \r\n            return origin+\" ~ \"+date.toLocaleString(\"ko-kr\",newDateOptions)\r\n        }else{\r\n            return \"시간을 선택해 주세요\"\r\n        }\r\n       \r\n    }\r\n    \r\n    //예약 수정함수\r\n    const UpdateReservationClickBtn=()=>{\r\n        let newreservation;\r\n        //reservationType이 true가 진료 / false가 검사\r\n       \r\n            newreservation = {...props.selectedReservation,reservationdate:startDate.getTime(),type:reservationType?\"진료\":\"검사\"};\r\n            //DB에 새로운 예약정보로 업데이트 \r\n            UpdateReservation(newreservation).then((result)=>{\r\n                //부모함수 불러서 ui변경\r\n                props.UpdateReservation(newreservation)\r\n                //모달 닫기\r\n                props.closeModal(\"ReservationUpdateModal\")\r\n            })\r\n           \r\n        \r\n      \r\n            //DB에 해당 patient, startDate, testList로 해당 시간에 검사예약\r\n            // const checkedtestlist = testList.filter((test)=>(test.ischeck===true))\r\n            //이 안에는 검사리스트도 같이 있음\r\n            // newreservation = UpdateReservation({reservationdate:startDate,patientid:props.selectedPatient.patientid,status:\"대기\",type:\"검사\" }, checkedtestlist)\r\n        \r\n \r\n    }\r\n    return(\r\n        <div className=\"conatainer\" style={{height:\"50vh\"}}>\r\n            <div style={{height:\"15%\"}}>\r\n               <div className=\"row d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\"}}>\r\n                    <div style={{width:\"10%\"}}>ID</div>\r\n                    <div style={{width:\"15%\"}}>이름</div>\r\n                    <div style={{width:\"10%\"}}>성별</div>\r\n                    <div style={{width:\"10%\"}}>나이</div>\r\n                    <div style={{width:\"30%\"}}>주민번호</div>\r\n                    <div style={{width:\"25%\"}}>Phone</div>\r\n                </div>\r\n                \r\n                <div className=\"row d-flex justify-content-between text-center  \" style={{borderRadius:\"15px\"}}>\r\n                    <div style={{width:\"10%\"}}>{patient&&patient.patientid}</div>\r\n                    <div style={{width:\"15%\"}}>{patient&&patient.patientname}</div>\r\n                    <div style={{width:\"10%\"}}>{patient&&patient.sex}</div>\r\n                    <div style={{width:\"10%\"}}>{patient&&patient.age}</div>\r\n                    <div style={{width:\"30%\"}}>{patient&&(patient.ssn1 + \" - \" + patient.ssn2)}</div>\r\n                    <div style={{width:\"25%\"}}>{patient&&patient.phonenumber}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\" style={{height:\"90%\"}}>\r\n                    <div className=\"col-6 text-center\" style={{margin:\"10px\",marginTop:\"2%\", height:\"100%\"}} >\r\n                        <ReactDatePicker \r\n                        selected={startDate}\r\n                        onChange={(date) => setStartDate(date)}\r\n                        showTimeSelect\r\n                        timeFormat=\"HH:mm\"\r\n                        popperPlacement=\"bottom\" \r\n                        minDate={new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate())}\r\n                        minTime={new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),9,0)}\r\n                        maxTime={new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),17,30)}\r\n                        //excludeTimes={reservatedTimes.length>1&&reservatedTimes[startDate.getMonth()][startDate.getDate()-1]}\r\n                        inline\r\n                        dateFormat=\"yyyy-MM-dd hh:mm\"\r\n                        />\r\n                      \r\n                    </div>                \r\n                    <div className=\"col-5 \" style={{margin:\"10px\", height:\"100%\", padding:\"0px\" ,marginTop:\"2%\"  }}>\r\n                    <div className=\"border text-center mb-4\" style={{borderRadius:\"15px\"}}> \r\n                            예약날짜<br/>{getReservationDate()}\r\n                    </div>\r\n                        \r\n                        <button onClick={()=>{handleReservation(true)}} style={{backgroundColor:reservationType? \"#ffcd82\":\"white\",border:\"2px solid #ffcd82\",borderRadius:\"15px\",width:\"47%\",height:\"30%\", fontSize:\"1.8em\"}} className=\"  mr-1 \">진료</button>\r\n                        <button onClick={()=>{handleReservation(false)}}  style={{backgroundColor:!reservationType? \"#ffcd82\":\"white\",border:\"2px solid #ffcd82\",borderRadius:\"15px\",width:\"47%\",height:\"30%\", fontSize:\"1.8em\"}} className=\" \">검사</button>   \r\n             \r\n                        {/* {!reservationType&&\r\n                            testList&&testList.map((item,index)=>{return(\r\n                                <div key={index}>\r\n                                <input type=\"checkbox\" onChange={(e)=>{handleTestList(e,index)}} value={testList[index].ischeck}/>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.groupcode}</label>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.groupname}</label>\r\n                                </div>\r\n                            )})\r\n                        } */}\r\n\r\n                        <button className=\"btn btn-dark btn-sm mt-4\" style={{borderRadius:\"15px\",  marginTop:\"10px\", width:\"100%\", fontSize:\"1.3em\"}} /*disabled={reservationType===false&&(testList==null || (testList.filter((item)=>(item.ischeck===true)).length<1)) }*/  onClick={UpdateReservationClickBtn}>수정</button>\r\n             \r\n                    </div>                   \r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n\r\nexport default UpdateReservationModal;","import axios from \"axios\";\r\n//const BASE_URL = \"http://localhost:8080/\";\r\n const BASE_URL =\"http://kosa3.iptime.org:50006/\";\r\nexport function sendRedisMessage(content) {\r\n    content =JSON.stringify(content)\r\n    return axios.get(BASE_URL+\"reception/sendRedisMessage\", {params:{topic:\"/reception\", content}});\r\n  }\r\n\r\n  export function clearChatting(userid) {\r\n    return axios.get(BASE_URL+\"reception/clearchatting/\"+userid);\r\n  }\r\n\r\nexport function saveChatting(userid,chatArray) {\r\n  var chatArrayst = JSON.stringify(chatArray)\r\n  return axios.post(BASE_URL+\"reception/savechatting\",{userid,chatArray:chatArrayst},{\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }});\r\n}\r\n\r\nexport function loadChatting(userid) {\r\n  return axios.get(BASE_URL+\"reception/loadchatting/\"+userid);\r\n}","\r\n\r\n\r\n\r\n//환자 정보\r\nlet patientslist=[];\r\nfor(var i=1; i<10; i++){\r\n    const TR = {patientid:\"patientid\"+i, patientname:\"name\"+i, sex:i%2?\"남자\":\"여자\",age:i,ssn1:\"950328\",ssn2:\"111111\"\r\n    ,phonenumber:\"01024967236\",registerday:new Date().toLocaleDateString(),lasttreatment:new Date().toLocaleDateString() } \r\n    patientslist.push(TR);\r\n}\r\n//전체 환자 가져오기\r\nexport function getAllPatientsData(){\r\n    return patientslist;\r\n}\r\n//특정 환자 가져오기\r\nexport function getPatientData(patient_id){\r\n    return patientslist.filter((item)=>{return item.patientid===patient_id})[0]\r\n    \r\n}\r\n//환자 등록\r\nexport function insertPatientData(patient){\r\n    const i = patientslist.length+1;\r\n    patientslist.push({patientid:\"patientid\"+i, patientname:patient.patientname, sex:patient.sex,\r\n    age:patient.age,ssn1:patient.ssn1,ssn2:patient.ssn2\r\n    ,phonenumber:patient.phonenumber,registerday:new Date().toLocaleDateString(),lasttreatment:\"-\"})\r\n    return \"patient\"+i;\r\n}\r\n//환자 수정\r\nexport function updatePatientData(patient){\r\n    var index = patientslist.findIndex((item)=>(item.patientid===patient.patientid))\r\n    patientslist.splice(index,1,{patientid:index,...patient})\r\n}\r\n\r\n\r\n\r\n//병원임직원정보\r\nlet userslist=[];\r\nfor(var i=1; i<3; i++){\r\n    const TR = {userid:\"userid\"+i, username:\"name\"+i,userroom:\"room\"+i,role_authority:\"role_doctor\",userpassword:\"12345\",phonenumber:\"01024967236\",userenabled:\"1\" } \r\n    userslist.push(TR);\r\n}\r\n//의사리스트 불러오기\r\nexport function getAllDoctorData(){\r\n    const doctorlist = userslist.filter((item)=>(item.role_authority===\"role_doctor\"))\r\n    return doctorlist;\r\n}\r\n\r\n\r\n//진료정보\r\nlet treatmentslist=[];\r\nfor(var i=1; i<1; i++){\r\n    const TR = {treatmentid:\"treatmentid\"+i, memo:\"memo\"+i,treatmentdate:new Date().toLocaleDateString(),patientid:\"patientid\"+i,userid:\"userid\"+i,status:\"대기\" } \r\n    treatmentslist.push(TR);\r\n}\r\n//진료정보 가져오기\r\nexport function getAllTreatmentsData(){\r\n    return treatmentslist;\r\n}\r\n//진료접수 가능한지 확인 \r\nexport function isReceptionTreatment(patient_id){\r\n    return treatmentslist.filter((item)=>(item.patientid===patient_id &&item.status===\"대기\" )).length<1?true:false\r\n}\r\n//접수된 진료 삭제하기\r\nexport function DeleteReceptionTreatment(treatment_id){\r\n    const index = treatmentslist.findIndex((item)=>(item.treatmentid===treatment_id))\r\n    if(index>=0){\r\n        treatmentslist.splice(index,1)\r\n    }\r\n}\r\n\r\n//진료생성하기\r\nexport function ReceptionTreatment(patient_id, user_id){\r\n    const tid = treatmentslist.length+1\r\n    const newTreatment = {treatmentid:\"treatmentid\"+tid, memo:\"\",treatmentdate:new Date().toLocaleDateString(),patientid:patient_id,userid:user_id,status:\"대기\" }\r\n    treatmentslist.push(newTreatment)\r\n    return newTreatment;\r\n}\r\n\r\n\r\n//약데이터\r\nlet drugslist=[];\r\nfor(var i=1; i<10; i++){\r\n    const TR = {treatmentid:\"treatmentid\"+i,drugid:\"drugid\"+i,description:\"description\"+i } \r\n    drugslist.push(TR);\r\n}\r\ndrugslist.push({treatmentid:\"treatmentid\"+1,drugid:\"drugid\"+2,description:\"description\"+1 });\r\n//해당 진료의 처방된 약데이터 가져오기\r\nexport function getDrugsData(treatment_id){\r\n    var prescriptionlist = drugslist.filter((drugs)=>(drugs.treatmentid===treatment_id))\r\n    return prescriptionlist;\r\n}\r\n\r\n\r\n//예약정보\r\nlet reservationslist=[];\r\nfor(var i=1; i<1; i++){\r\n    const TR = {reservationid:\"reservationid\"+i,\r\n     reservationdate:new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate(),8+i,0),\r\n    patientid:\"patientid\"+i,status:\"대기\",type:i%2===0?\"진료\":\"검사\",testList:[] } \r\n    reservationslist.push(TR);\r\n}\r\n//예약 가져오기\r\nexport function getAllReservationsData(){   \r\n    const newreservationlist = reservationslist.map((item)=>(item))\r\n    return newreservationlist;\r\n}\r\n//특정 예약 가져오기\r\nexport function getReservationData(reservation_id){\r\n    return reservationslist.filter((item)=>{return item.reservationid===reservation_id})[0]\r\n    \r\n}\r\n//예약 취소\r\nexport function cancelReservationData(reservation_id){\r\n    const index = reservationslist.findIndex((item)=>(item.reservationid===reservation_id))\r\n    if(index>=0){\r\n        reservationslist.splice(index,1);\r\n    }\r\n   \r\n}\r\n\r\n\r\n//예약 등록\r\nexport function insertReservationData(reservation,selectedtestlist){\r\n    const i = reservationslist.length+1;\r\n    reservationslist.push({reservationid:\"reservationid\"+i, reservationdate:reservation.reservationdate\r\n    ,patientid:reservation.patientid,status:reservation.status,type:reservation.type } )\r\n    if(reservation.type===\"검사\"){\r\n        // 예약타입이 검사일때 검사테이블 돌면서 선택된 그룹코드들과 같은 검사들의 예약id에 해당 예약id 넣어줌+ 환자아이디 같아야하고 해당 검사의 상태가 접수대기 여야함\r\n        for(var c=0; c<testslist.length; c++){\r\n            for(var j=0; j<selectedtestlist.length; j++){\r\n                if(selectedtestlist[j].groupcode===testslist[c].groupcode && reservation.patientid===testslist[c].patientid && testslist[c].status===\"접수대기\" ){\r\n                    testslist[c].reservationid = \"reservationid\"+i;\r\n                }\r\n    \r\n            }\r\n        }\r\n    }\r\n    return \"reservationid\"+i;\r\n}\r\n//예약 수정\r\nexport function updateReservationData(reservation){\r\n    var index = reservationslist.findIndex((item)=>(item.reservationid===reservation.reservationid))\r\n    reservationslist.splice(index,1,{reservationid:index,...reservation})\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//검사 접수 정보\r\nlet testreceptionslist=[];\r\nfor(var i=1; i<1; i++){\r\n    const TR = {testreceptionid:\"testreceptionid\"+i, testdate:new Date().toLocaleDateString(),patientid:\"patientid\"+i,status:\"대기\"} \r\n    testreceptionslist.push(TR);\r\n}\r\n//검사 접수 가져오기\r\nexport function getAllTestsReceptionData(){\r\n    return testreceptionslist;\r\n}\r\n//접수된 검사 삭제하기\r\nexport function DeleteReceptionTest(testreception_id){\r\n    //접수된 검사테이블 상태 변경\r\n    for(var i=0; i<testslist.length; i++){\r\n        if(testslist[i].testreceptionid===testreception_id){\r\n            testslist[i].testreceptionid = \"\"\r\n            testslist[i].status = \"접수대기\"\r\n        }\r\n    }\r\n    const index = testreceptionslist.findIndex((item)=>(item.testreceptionid===testreception_id))\r\n    if(index>=0){\r\n        testreceptionslist.splice(index,1)\r\n    }\r\n}\r\n//검사접수하기\r\nexport function ReceptionTest(patient_id,grouplist){\r\n    //검사접수데이터 만들기\r\n    const trid = testreceptionslist.length+1;\r\n    const tmpTestReceptiondata = {testreceptionid:\"testreceptionid\"+trid, testdate:new Date().toLocaleDateString(),patientid:patient_id,status:\"대기\"}\r\n    testreceptionslist.push(tmpTestReceptiondata)\r\n    //testReceptionid 채우기\r\n    for(var i=0; i< testslist.length; i++){\r\n        for(var j=0; j< grouplist.length; j++){\r\n            if(grouplist[j].ischeck===true&&testslist[i].groupcode ===grouplist[j].groupcode &&testslist[i].patientid ===patient_id  ){\r\n                testslist[i].testreceptionid = \"testreceptionid\"+trid\r\n                testslist[i].status = \"접수완료\"\r\n            }\r\n        }    \r\n        \r\n    } \r\n    return {...tmpTestReceptiondata};\r\n}\r\n\r\n\r\n\r\n\r\n//검사 정보\r\nlet testslist=[];\r\nfor(var i=1; i<4; i++){\r\n    const TR = {groupcode:\"groupcode\"+i,groupname:\"groupname\"+i,result:\"result\"+i,status:\"접수대기\",testreceptionid:\"\",testdataid:\"testdata\"+i,reservationid:0,treatmentid:\"treatmentid\"+i,patientid:\"patientid\"+i,userid:\"userid\"+i} \r\n    testslist.push(TR);\r\n}\r\nconst TR = {groupcode:\"groupcode\"+1,groupname:\"groupname\"+1,result:\"result\"+1,status:\"접수대기\",testreceptionid:\"\",testdataid:\"testdata\"+1,reservationid:0,treatmentid:\"treatmentid\"+1,patientid:\"patientid\"+1,userid:\"userid\"+1} \r\ntestslist.push(TR);\r\n\r\n//특정 환자가 처방받은 검사중  특정 예약의 검사 체크해서 가져오기\r\nexport function getCheckedTestsGroupData(patient_id, reservation_id){\r\n    testslist.sort(function(a, b) {\r\n        if(a.groupcode<b.groupcode){\r\n            return -1;\r\n        }\r\n        else if(a.groupcode>b.groupcode){\r\n            return 1;\r\n        }else{\r\n            return 0;    \r\n        }\r\n    });\r\n    //중복되는 그룹코드 제거하여 그룹코드와 그룹이름 객체배열 반환\r\n    var grouplist=[]\r\n    const testslist2 = testslist.filter((test)=>(test.patientid===patient_id))\r\n    if(testslist2.length===0){return null}\r\n    var tmp =testslist2[0].reservationid===reservation_id? {groupcode:testslist2[0].groupcode, groupname:testslist2[0].groupname,ischeck:true}:{groupcode:testslist2[0].groupcode, groupname:testslist2[0].groupname,ischeck:false}\r\n    grouplist.push(tmp);\r\n    for(var i=1; i<testslist2.length; i++){\r\n        if(testslist2[i].groupcode!==tmp.groupcode){\r\n            var tmps =testslist2[i].reservationid===reservation_id? {groupcode:testslist2[i].groupcode, groupname:testslist2[i].groupname,ischeck:true}: {groupcode:testslist2[i].groupcode, groupname:testslist2[i].groupname,ischeck:false}\r\n            grouplist.push(tmps)\r\n        }\r\n    }\r\n \r\n   return grouplist;\r\n    \r\n}\r\n\r\n\r\n//특정 환자의 처방검사 그룹가져오기\r\nexport function getAllTestsGroupData(patient_id){\r\n   testslist.sort(function(a, b) {\r\n        if(a.groupcode<b.groupcode){\r\n            return -1;\r\n        }\r\n        else if(a.groupcode>b.groupcode){\r\n            return 1;\r\n        }else{\r\n            return 0;    \r\n        }\r\n    });\r\n    //중복되는 그룹코드 제거하여 그룹코드와 그룹이름 객체배열 반환  \r\n    var grouplist=[]\r\n    const testslist2 = testslist.filter((test)=>(test.patientid===patient_id && test.status===\"접수대기\"))\r\n    if(testslist2.length===0){return null}\r\n    var tmp = {groupcode:testslist2[0].groupcode, groupname:testslist2[0].groupname,treatmentid:testslist2[0].treatmentid };\r\n    grouplist.push(tmp);\r\n    for(var i=1; i<testslist2.length; i++){\r\n        if(testslist2[i].groupcode!==tmp.groupcode){\r\n            var tmps = {groupcode:testslist2[i].groupcode, groupname:testslist2[i].groupname,treatmentid:testslist2[i].treatmentid}\r\n            grouplist.push(tmps)\r\n        }\r\n    }\r\n    return grouplist;\r\n}\r\n\r\n\r\n","const initialState = {\r\n    testreception: {},\r\n    treatmentreception:{},\r\n    testresult:{}\r\n  }\r\n  \r\n  //액션 타입 선언\r\n  const SET_TESTRECEPTION=\"reception/setTestReception\";\r\n  const SET_TREATMENTRECEPTION=\"reception/setTreatmentReception\";\r\n  const SET_TESTRESULT=\"reception/setTestResult\";\r\n  \r\n  \r\n  //액션 생성 함수 선언\r\n  export const createSetTestReception = (testreception) => {\r\n    return {type:SET_TESTRECEPTION, testreception};\r\n  } \r\n\r\n  export const createSetTreatmentReception = (treatmentreception) => {\r\n    return {type:SET_TREATMENTRECEPTION, treatmentreception};\r\n  } \r\n  export const createSetTestResult = (testresult) => {\r\n    return {type:SET_TESTRESULT, testresult};\r\n  } \r\n  \r\n  //리듀스 선언\r\n  const receptionReducer = (state = initialState, action) => {\r\n    if(action.type === SET_TESTRECEPTION) {\r\n      return {...state, testreception:action.testreception};\r\n    }else if(action.type === SET_TREATMENTRECEPTION) {\r\n      return {...state, treatmentreception:action.treatmentreception};\r\n    }else if(action.type === SET_TESTRESULT){\r\n      return {...state, testresult:action.testresult};\r\n    }else {\r\n      return state;\r\n    }\r\n  }\r\n  \r\n  \r\n  export default receptionReducer;","import { GetUsersData } from \"apis/Reception\";\r\nimport { sendRedisMessage } from \"apis/Redis\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createSetTreatmentReception } from \"redux/reception-reducer\";\r\nimport {isReceptionTreatment} from \"views/Reception/BackEnd/index\"\r\nimport { ReceptionTreatment} from \"apis/Reception\";\r\nimport moment from 'moment';\r\nfunction DoctorSelectorModal(props){\r\n    //의사리스트\r\n    const [doctorList,setDoctorList] = useState([]);\r\n    //의사 선택\r\n    const [selectedDoctor, setselectedDoctor] = useState();\r\n    const handleInputChange = (event,doctor) => {\r\n      setselectedDoctor(doctor);\r\n    };\r\n    const dispatch = useDispatch();\r\n    // 진료접수 가능한지 여부\r\n    const[disable,setDisable]  = useState(false)\r\n    //처음 컴포넌트 시작시 의사 목록 불러오기\r\n    useEffect(()=>{\r\n        props.controlLoading(true);\r\n        GetUsersData(\"의사\").then((result)=>{\r\n            setDoctorList(result.data);\r\n            //진료접수 가능한지 여부 체크\r\n            //setDisable(isReceptionTreatment(props.selectedPatient.patientid))\r\n            props.controlLoading(false);\r\n        })\r\n    },[])\r\n    \r\n   \r\n\r\n   //진료접수\r\n   const ResisterTreatment = () =>{\r\n    let treatmentdate = new Date().getTime()\r\n    const newTreatment = {memo:\"\",treatmentdate:treatmentdate,patientid:props.selectedPatient.patientid,userid:selectedDoctor.userid,status:\"진료 대기\" }\r\n    //만약 예약된거라면 예약에서 지우기\r\n    if(props.CancelReservation){\r\n        props.CancelReservation()\r\n    }\r\n    \r\n    //DB에 진료생성\r\n    ReceptionTreatment(newTreatment).then((result)=>{\r\n       console.log(moment(treatmentdate).format(\"HH:mm\"));\r\n        //redux에 접수된 진료넘기기\r\n        //dispatch(createSetTreatmentReception(result.data))\r\n        //실시간으로 데이터 넘기기\r\n\r\n        sendRedisMessage({type:\"treatment\",patientid:props.selectedPatient.patientid, status:\"접수\"})\r\n\r\n        props.closeModal(\"DoctorSelectorModal\")\r\n    })\r\n   \r\n    // if(props.modifyReservationList){\r\n    //     props.modifyReservationList()\r\n    // }\r\n    \r\n\r\n}\r\n\r\n    return(\r\n    <div className=\"conatainer\" style={{height:\"400px\"}}>\r\n      <div className=\"col border\" style={{overflow:\"auto\" ,borderRadius:\"15px\",  marginTop:\"15px\", height:\"70%\"}}> \r\n                        {doctorList&&doctorList.map((item,index)=>{return(\r\n                                <div key={index}>\r\n                                <input type=\"radio\" onChange={(e)=>{handleInputChange(e,item)}} checked={selectedDoctor&&item.userid===selectedDoctor.userid} value={item.userid}/>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.userid}</label>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.username}</label>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.userroom}</label>\r\n                                </div>\r\n                            )})\r\n                        }\r\n        </div>\r\n        <div className=\"col d-flex justify-content-end\" style={{borderRadius:\"15px\",  marginTop:\"10px\"}}> \r\n            <button disabled={selectedDoctor?false:true} className=\"btn btn-outline-dark btn-sm\" onClick={ResisterTreatment}>진료접수</button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DoctorSelectorModal;","import { PrescriptionTest ,ReceptionTest} from \"apis/Reception\";\r\nimport { sendRedisMessage } from \"apis/Redis\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction TestSelectorModal(props){\r\n    //처방된 검사리스트\r\n    const [testList,setTestList] = useState([]);\r\n\r\n\r\n    //처음 컴포넌트 시작시 처방검사 목록 불러오기\r\n    useEffect(()=>{\r\n        props.controlLoading(true);\r\n        PrescriptionTest(props.selectedPatient.patientid).then((result)=>{\r\n           var entry = Object.entries(result.data)\r\n           for(var en of entry){\r\n               en[\"ischeck\"] = false\r\n           }\r\n\r\n            setTestList(entry);\r\n            props.controlLoading(false);\r\n        })\r\n    },[])\r\n    //처방된 검사 선택\r\n    const handleTestList = (event, index) =>{\r\n   \r\n        const modify = testList.map((item,i)=>{\r\n            if(i===index){\r\n                item.ischeck = event.target.checked\r\n            }\r\n            return item;\r\n        })\r\n        setTestList(modify);\r\n    }\r\n\r\n    const ResisterTest = () =>{\r\n        //만약 예약된거라면 예약에서 지우기\r\n        if(props.CancelReservation){\r\n            props.CancelReservation()\r\n        }\r\n        //DB에 검사 생성\r\n        let testdataidlist=[]\r\n        for(var testdataArray of testList){\r\n            if(testdataArray.ischeck){\r\n                for(var data of testdataArray[1]){\r\n                    testdataidlist.push(data.testdataid);\r\n                }\r\n            }\r\n        }\r\n        const testreceptionarg = {patientid:props.selectedPatient.patientid, testdataidlist}\r\n        ReceptionTest(testreceptionarg).then((result)=>{\r\n            console.log(result.data)\r\n            //redux에 접수된 검사넘기기\r\n            //dispatch(createSetTestReception(result.data))\r\n            sendRedisMessage({type:\"test\"})\r\n            props.closeModal(\"TestSelectorModal\")\r\n        })\r\n       \r\n    }\r\n    return(\r\n    <div className=\"conatainer\" style={{height:\"400px\"}} >\r\n      <div className=\"col border\" style={{overflow:\"auto\" ,  marginTop:\"15px\", height:\"70%\", padding:0}}> \r\n                        {/* testList => {groupcode1:[testdata1, testdata2],groupcode2:[testdata3, testdata4]... } */}\r\n                        \r\n                        <table className=\"table\">\r\n                                    <thead  style={{backgroundColor:\"#e9ecef\"}}>\r\n                                        <tr>\r\n                                            <th>체크</th>\r\n                                            <th>그룹코드</th>\r\n                                            <th >검사명</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                <tbody>\r\n                        {testList&&testList.map((item,index)=>{\r\n                            \r\n                            return(\r\n                                <>\r\n                                <tr>\r\n                                    <td className=\"border-bottom   \"rowSpan={item[1].length+1} ><input type=\"checkbox\" onChange={(e)=>{handleTestList(e,index)}} value={testList[index].ischeck}/></td>\r\n                                    <td className=\"border-right  border-bottom   \" rowSpan={item[1].length+1}>{item[0]}</td>\r\n                                </tr>\r\n                                    \r\n                                {item[1].map((data,index2)=>{\r\n                                    return(\r\n                                    <tr>\r\n                                        <td className=\"border-bottom   \">{data.testdataname}</td>\r\n                                    </tr>\r\n                                        \r\n                                        )\r\n                                })}\r\n                                </>\r\n                            )})\r\n                            \r\n                        }\r\n        </tbody>\r\n        </table>\r\n        </div>\r\n        <div className=\"col d-flex justify-content-end\" style={{borderRadius:\"15px\",  marginTop:\"10px\"}}> \r\n            <button disabled={testList&&testList.filter((test)=>(test.ischeck===true)).length>0?false:true} className=\"btn btn-outline-dark btn-sm\" onClick={ResisterTest}>검사접수</button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default TestSelectorModal;","import Calendar from \"../SearchPatient/Calendar\"\r\nimport Item from \"views/components/Item\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ReceptionHeader from \"../components/ReceptionHeader\";\r\nimport {useSelector } from \"react-redux\";\r\nimport { Modal,Spinner } from \"react-bootstrap\";\r\nimport ReservationUpdateModal from \"./ReservationUpdateModal\";\r\nimport DoctorSelectorModal from \"../SearchPatient/DoctorSelectorModal\";\r\nimport { GetReservationList,RemoveReservation } from \"apis/Reception\";\r\nimport moment from 'moment';\r\nimport TestSelectorModal from \"../SearchPatient/TestSelectorModal\";\r\nfunction Reservation(props){\r\n    const [reservationUpdateModalshow, setReservationUpdateModalshow] = useState(false);\r\n    const [doctorSelectorModalshow, setDoctorSelectorModalshow] = useState(false);\r\n\r\n\r\n    const property = [\"patientid\",\"patientname\",\"type\",\"reservationuidate\"]\r\n    const [selectDate,setSelectDate] = useState(new Date().toLocaleDateString());\r\n    const [reservationList, setReservationList] = useState([])\r\n    const reservationReducer = useSelector((state)=>(state.reservationReducer))\r\n\r\n    const [selectedReservation, setSelectedReservation] = useState();\r\n    const [testSelectorModalshow, setTestSelectorModalshow] = useState(false);\r\n    const [loading,setLoading] = useState(false);\r\n    const click = (focusItem) =>{\r\n        setSelectedReservation(focusItem)\r\n    }\r\n     //모달창 닫는 함수\r\n     const closeModal= (modalname) =>{\r\n        // 모달일때 모달종류에 따라 닫아줌\r\n          if(modalname===\"ReservationUpdateModal\"){\r\n            setReservationUpdateModalshow(false)\r\n          }else if(modalname===\"TestSelectorModal\"){\r\n            setTestSelectorModalshow(false)\r\n          }else if(modalname===\"DoctorSelectorModal\"){\r\n                setDoctorSelectorModalshow(false)\r\n          }\r\n        }\r\n    //예약정보가져옴\r\n    useEffect(()=>{\r\n      GetReservationList().then((result)=>{\r\n        setReservationList(result.data)\r\n       });\r\n    },[])\r\n    //리듀서로 가져온 예약정보를 ui에 추가해줌 + 예약날짜순 정렬\r\n    useEffect(()=>{\r\n        if(reservationReducer.reservation.reservationid){\r\n            const newreservationlist = reservationList.concat(reservationReducer.reservation)         \r\n            newreservationlist.sort((r1,r2)=>{\r\n                return Number(new Date(r1.reservationdate)) - Number(new Date(r2.reservationdate))\r\n            }) \r\n            setReservationList(newreservationlist)\r\n        }\r\n       \r\n    },[reservationReducer])\r\n\r\n    //로딩 스피너 끄고 키는 함수\r\n  const ControlLoading=(bool)=>{\r\n    setLoading(bool)\r\n  }\r\n\r\n    //자식인 예약수정 컴포넌트에 넘길 예약수정함수(부모의 예약 리스트를 바꿔야하기에 부모컴포넌트에서 수행해줌) \r\nconst UpdateReservation=(newreservation)=>{\r\n    if(selectedReservation){\r\n        //UI에서 해당 예약을 새로운 예약으로 교체\r\n        const index = reservationList.findIndex((item)=>(item.reservationid===selectedReservation.reservationid))\r\n        let tmplist = [...reservationList]\r\n        if(index>=0){\r\n            tmplist.splice(index,1,newreservation);\r\n        }\r\n        tmplist.sort((r1,r2)=>{\r\n            return Number(new Date(r1.reservationdate)) - Number(new Date(r2.reservationdate))\r\n        }) \r\n        setReservationList(tmplist)\r\n        setSelectedReservation(null)\r\n    }\r\n    \r\n}\r\n\r\n//예약 취소\r\nconst CancelReservation=()=>{\r\n    if(selectedReservation){\r\n        //DB변경\r\n        RemoveReservation(selectedReservation.reservationid).then((result)=>{\r\n            //ui변경\r\n            const index = reservationList.findIndex((item)=>(item.reservationid===selectedReservation.reservationid))\r\n            let tmplist = [...reservationList]\r\n            if(index>=0){\r\n                tmplist.splice(index,1);\r\n            }\r\n            tmplist.sort((r1,r2)=>{\r\n                return Number(new Date(r1.reservationdate)) - Number(new Date(r2.reservationdate))\r\n            }) \r\n            setReservationList(tmplist)\r\n\r\n        })\r\n        setSelectedReservation(null)\r\n            \r\n        \r\n    }\r\n    \r\n\r\n}\r\n\r\n    //검사접수하기\r\n    const ResisterTest = () =>{\r\n      //모달창 open\r\n      setTestSelectorModalshow(true)\r\n    }\r\n\r\n  //진료접수시 상태변경함수\r\n  // const modifyReservationList = () =>{\r\n  //   const modify = reservationList.map((item)=>{\r\n        \r\n  //     if(item.reservationid===selectedReservation.reservationid){\r\n  //         item.status=\"접수완료\"\r\n  //     }\r\n  //     return item;      \r\n      \r\n  //   })\r\n  //   //상태변경된 예약 수정\r\n  //   setReservationList(modify)\r\n  // }\r\n    //진료접수하기\r\n    const ResisterTreatment = () =>{\r\n             //모달창 open\r\n             setDoctorSelectorModalshow(true)\r\n    }\r\n\r\n\r\n    return(\r\n    <div className=\"pl-3 pr-3 pb-3 border border-dark\" style={{height:\"50vh\", backgroundColor:\"white\"}}>\r\n        <ReceptionHeader headertitle=\"예약\" iclassName=\"bi bi-calendar-event \" color=\"#ffcd82\">\r\n            <button style={{marginRight:\"10px\"}} disabled={!(selectedReservation)}onClick={()=>{setReservationUpdateModalshow(true)}} className=\"btn btn-dark btn-sm\">예약수정</button>\r\n            <button style={{marginRight:\"10px\"}} disabled={!(selectedReservation&&selectedReservation.type===\"검사\" &&selectedReservation.status===\"대기\" )} onClick={ResisterTest} className=\"btn btn-dark btn-sm\">검사접수</button>\r\n            <button style={{marginRight:\"10px\"}} disabled={!(selectedReservation&&selectedReservation.type===\"진료\"&&selectedReservation.status===\"대기\" )} onClick={ResisterTreatment} className=\"btn btn-dark btn-sm\">진료접수</button>\r\n            <button style={{marginRight:\"10px\"}} disabled={!(selectedReservation)}onClick={CancelReservation} className=\"btn btn-dark btn-sm\">예약취소</button>\r\n        </ReceptionHeader>\r\n        <Calendar setSelectDate = {(date)=>{setSelectDate(date)}}/>\r\n        <div className=\"rounded-lg justify-content-center\">\r\n            <div className=\"d-flex justify-content-between text-center  \" style={{marginTop:\"10px\",marginBottom:\"10px\",color:\"white\", backgroundColor:\"#1B296D\", paddingTop:\"5px\",paddingBottom:\"5px\"}}>\r\n                <div style={{width:\"20%\"}}>순번</div>\r\n                <div style={{width:\"20%\"}}>환자ID</div>\r\n                <div style={{width:\"20%\"}}>이름</div>\r\n                <div style={{width:\"20%\"}}>예약타입</div>\r\n                <div style={{width:\"20%\"}}>예약시간</div>\r\n            </div>\r\n            <div className=\"overflow-auto  justify-content-center\" style={{height:\"calc(50vh - 230px)\"}} >\r\n                 {reservationList&&reservationList.map((item,index)=>{\r\n                     \r\n                     \r\n                     let rdate = new Date(item.reservationdate).toLocaleDateString() \r\n                     const item2 = {...item, reservationuidate:moment(item.reservationdate).format(\"HH:mm\")}\r\n                     if(rdate===selectDate){\r\n                        return(\r\n                            <div key={index}>\r\n                                    <Item onClick={click} item ={item2} property={property} order={index}/>\r\n                            </div>                         \r\n                            )\r\n                        }\r\n                     })} \r\n            </div>\r\n        </div>\r\n        <Modal backdrop=\"static\" size=\"lg\" show={reservationUpdateModalshow}  onHide={()=>{setReservationUpdateModalshow(false)}}>\r\n        <Modal.Header style={{backgroundColor:\"rgb(27, 41, 109)\"}}  closeButton>\r\n        <Modal.Title style={{color:\"white\"}}>예약수정</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><ReservationUpdateModal closeModal={closeModal} selectedReservation={selectedReservation} UpdateReservation={UpdateReservation}/></Modal.Body>\r\n        </Modal>\r\n        <Modal  backdrop=\"static\" size=\"lg\" show={testSelectorModalshow} onHide={()=>{setTestSelectorModalshow(false)}}>\r\n        <Modal.Header style={{backgroundColor:\"rgb(27, 41, 109)\"}}  closeButton>\r\n          <Modal.Title style={{color:\"white\"}}>검사선택</Modal.Title>\r\n          {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n        </Modal.Header>\r\n        <Modal.Body><TestSelectorModal CancelReservation={CancelReservation} controlLoading={ControlLoading} closeModal={closeModal} selectedPatient={selectedReservation}/></Modal.Body>\r\n      </Modal>\r\n        <Modal  backdrop=\"static\" show={doctorSelectorModalshow} onHide={()=>{setDoctorSelectorModalshow(false)}}>\r\n        <Modal.Header style={{backgroundColor:\"rgb(27, 41, 109)\"}}  closeButton>\r\n          <Modal.Title style={{color:\"white\"}}>의사선택</Modal.Title>\r\n          {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n        </Modal.Header>\r\n        <Modal.Body><DoctorSelectorModal CancelReservation={CancelReservation} controlLoading={ControlLoading} closeModal={closeModal} selectedPatient={selectedReservation}/></Modal.Body>\r\n      </Modal>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Reservation;","import { useEffect, useState } from \"react\";\r\nimport Item from \"views/components/Item\";\r\nimport {GetPatientList} from \"apis/Reception\"\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nfunction SearchPatientModal(props){\r\n    const property = [\"patientid\",\"patientname\",\"ssn1\",\"lasttreatment\",\"registerday\"]\r\n    const selectname = [\"ID\",\"이름\",\"생년월일\",\"최종진료일\",\"등록일\"]\r\n    const [keyword, setKeyword] = useState(\"\");\r\n    const [select, setSelect] = useState(property[0]);\r\n    //원본 list\r\n    const [patientList,setPatientList] = useState([]);\r\n    let focusItem;\r\n    //처음 컴포넌트 시작시 목록 불러옴\r\n    useEffect(()=>{\r\n        //스피너 on\r\n        props.controlLoading(true);\r\n        //DB 불러옴\r\n        GetPatientList().then((result)=>{\r\n            //DB불러온거 상태저장\r\n            setPatientList(result.data)\r\n            //스피너 off\r\n            props.controlLoading(false);\r\n        })\r\n        //모달 닫을때 호출\r\n        return(()=>{\r\n        })\r\n},[])\r\n\r\n    // keyword 적을때 불리는 함수\r\n    const ChangeKeyword = (event) =>{\r\n        setKeyword(event.target.value)\r\n    }\r\n    // Select 바꿀때 불리는 함수\r\n    const ChangeSelect = (event)=>{\r\n        setSelect(event.target.value);\r\n    }\r\n    // 선택 버튼 누를떄 불리는 함수\r\n    const SelectPatient = () =>{\r\n        //선택된 환자상태에 저장\r\n       props.setSelectedPatient(focusItem)\r\n       //모달 닫기\r\n       props.closeModal(\"SearchPatientModal\")\r\n       \r\n    }\r\n    // 환자 div 포커스 선택\r\n    const click = (item) =>{\r\n        focusItem = item; \r\n    }\r\n    return(\r\n    <div className=\"conatainer\" style={{height:\"400px\"}}>\r\n          \r\n        <div className=\"d-flex justify-content-between\">\r\n            <div >\r\n                <label style={{marginRight:\"10px\"}}>검색</label>\r\n                <select onChange={ChangeSelect} style={{marginRight:\"10px\"}}>\r\n                    {property.map((item,index)=>{return(\r\n                        <option key={index} value={item}>{selectname[index]}</option>\r\n                    )\r\n                    })}\r\n                </select>\r\n                <input style={{marginRight:\"10px\"}} onChange={ChangeKeyword} value={keyword} />\r\n              </div>\r\n\r\n            <div >\r\n                  <button className=\"btn btn-outline-dark btn-sm\" onClick={SelectPatient}>선택</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"rounded-lg justify-content-center\">\r\n            <div className=\"d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\",marginTop:\"10px\",marginBottom:\"10px\"}}>\r\n                <div style={{width:\"20%\"}}>순번</div>\r\n                <div style={{width:\"20%\"}}>ID</div>\r\n                <div style={{width:\"20%\"}}>이름</div>\r\n                <div style={{width:\"20%\"}}>생년월일</div>\r\n                <div style={{width:\"20%\"}}>최종진료일</div>\r\n                <div style={{width:\"20%\"}}>등록일</div>\r\n            </div>\r\n            \r\n            <div className=\" justify-content-center\" style={{height:\"300px\"}} >\r\n            {/* Autosize최적화 */}\r\n            <AutoSizer disableHeight>\r\n            {({width, height}) => {\r\n                \r\n                let tmp = patientList.filter((item)=>{\r\n                    if(item[select]!=null){\r\n                        return item[select].toString().indexOf(keyword)!=-1    \r\n                    }else{\r\n                        var empty=\"\"\r\n                        return empty.indexOf(keyword)!=-1\r\n                    }\r\n                    \r\n                })\r\n                return(\r\n                <List width={width} height={300}\r\n                        list={tmp}\r\n                        rowCount={tmp.length}\r\n                        rowHeight={50}\r\n                        rowRenderer={({index, key, style}) => {\r\n                            return (\r\n                                <div key={key} style={style}>\r\n                                <Item onClick={click} item ={tmp[index]} property={property} order={index}/>\r\n                                </div>   \r\n                            );\r\n                            }}\r\n                        overscanRowCount={5}/>\r\n                )\r\n            }}\r\n            </AutoSizer>\r\n\r\n\r\n                   {/* {patientList.map((item,index)=>{\r\n                     if(item[select].toString().indexOf(keyword)!=-1){\r\n                        return(\r\n                            <div key={index}>\r\n                                    <Item onClick={click} item ={item} property={property} order={index}/>\r\n                            </div>                         \r\n                            )    \r\n                     }\r\n                         \r\n                     })}   */}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SearchPatientModal;","import { RegisterPatient } from \"apis/Reception\";\r\nimport { useForm } from \"react-hook-form\";\r\nfunction RegisterPatientModal(props){\r\n    const { register, handleSubmit,  errors } = useForm();\r\n  \r\n    const onSubmit=(patient)=>{\r\n        //상태가 아닌 고정값 지정\r\n        patient[\"registerday\"] = new Date()\r\n        patient[\"codenumber\"]=1\r\n        patient[\"enabled\"]=1\r\n        //DB에 저장\r\n       RegisterPatient(patient).then((result)=>{\r\n        patient[\"patientid\"] = result.data\r\n        patient[\"lasttreatment\"] = \"-\"\r\n        patient[\"registerday\"] = patient[\"registerday\"].toLocaleDateString()\r\n        // 해당 상태 부모로 빼고 모달 닫기\r\n        props.setSelectedPatient(patient)\r\n        props.closeModal(\"RegisterPatientModal\")\r\n        })\r\n       \r\n    }\r\n\r\n    return(\r\n        <>\r\n      <div>\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"mb-2\">\r\n        <label>이름 : </label>\r\n        <input className=\"ml-2\" name=\"patientname\" ref={register({ required: true })} value=\"김용호\" />\r\n        {errors.patientname && <div style={{color:\"red\"}}>이름을 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>성별 : </label>\r\n      <select className=\"ml-2\" name=\"sex\" ref={register({ required: true })}>\r\n        <option value=\"남자\">남자</option>\r\n        <option value=\"여자\">여자</option>\r\n      </select>\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>나이 : </label>\r\n      <input className=\"ml-2\" name=\"age\" type=\"number\" ref={register({ required: true })} value=\"27\" />\r\n      {errors.age && <div style={{color:\"red\"}}>나이를 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>주민등록번호 : </label>\r\n <br/>\r\n      <input className=\"mr-2\" name=\"ssn1\" type=\"number\" ref={register({required: true, pattern: /[0-9]{6}/})} value=\"950328\" />\r\n\r\n  \r\n      -\r\n   \r\n      <input className=\"ml-2\" name=\"ssn2\" type=\"number\" ref={register({required: true, pattern: /[0-9]{7}/})} value=\"1026013\" />\r\n      {(errors.ssn2?.type === \"required\" || errors.ssn1?.type === \"required\")  && <div style={{color:\"red\"}}>주민번호를 입력해 주세요</div>}\r\n      {(errors.ssn2?.type === \"pattern\" ||errors.ssn1?.type === \"pattern\")  && <div style={{color:\"red\"}}>주민번호 13자리를 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>핸드폰번호 : </label>\r\n      <input className=\"ml-2\" name=\"phonenumber\" type=\"number\" ref={register({ required: true })} value=\"01024967236\" />\r\n      {errors.phonenumber && <div style={{color:\"red\"}}>핸드폰 번호를 입력해 주세요</div>}\r\n      </div>\r\n\r\n      \r\n\r\n\r\n      <div className=\"d-flex justify-content-end\">\r\n      <input  type=\"submit\" />\r\n      </div>\r\n\r\n    </form>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterPatientModal;","import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {UpdatePatient} from \"apis/Reception\"\r\nfunction RegisterPatientModal(props){\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n  \r\n    const onSubmit=(patient)=>{\r\n        patient[\"patientid\"] = props.selectedPatient.patientid\r\n        patient[\"lasttreatment\"] = props.selectedPatient.lasttreatment===\"-\"?null:props.selectedPatient.lasttreatment\r\n        //등록일은 수정한 날짜로 갱신\r\n        patient[\"registerday\"] = new Date()\r\n\r\n        //DB에 저장\r\n        UpdatePatient(patient).then((result)=>{\r\n          patient[\"registerday\"] =  patient[\"registerday\"].toLocaleDateString()\r\n          // 해당 상태 부모로 빼고 모달 닫기\r\n          props.setSelectedPatient(patient)\r\n          props.closeModal(\"UpdatePatientModal\")        \r\n        })\r\n       \r\n    }\r\n\r\n    return(\r\n        <>\r\n      <div>\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"mb-2\">\r\n        <label>이름 : </label>\r\n        <input className=\"ml-2\" name=\"patientname\" defaultValue={props.selectedPatient.patientname} ref={register({ required: true })} />\r\n        {errors.patientname && <div style={{color:\"red\"}}>이름을 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>성별 : </label>\r\n      <select className=\"ml-2\" name=\"sex\" ref={register({ required: true })} defaultValue={props.selectedPatient.sex}>\r\n        <option  value=\"남자\">남자</option>\r\n        <option value=\"여자\">여자</option>\r\n      </select>\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>나이 : </label>\r\n      <input className=\"ml-2\" name=\"age\" type=\"number\" defaultValue={props.selectedPatient.age} ref={register({ required: true })} />\r\n      {errors.age && <div style={{color:\"red\"}}>나이를 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>주민등록번호 : </label>\r\n <br/>\r\n      <input className=\"mr-2\" name=\"ssn1\" type=\"number\" defaultValue={props.selectedPatient.ssn1}  ref={register({required: true, pattern: /[0-9]{6}/})} />\r\n\r\n  \r\n      -\r\n   \r\n      <input className=\"ml-2\" name=\"ssn2\" type=\"number\" defaultValue={props.selectedPatient.ssn2} ref={register({required: true, pattern: /[0-9]{7}/})} />\r\n      {(errors.ssn2?.type === \"required\" || errors.ssn1?.type === \"required\")  && <div style={{color:\"red\"}}>주민번호를 입력해 주세요</div>}\r\n      {(errors.ssn2?.type === \"pattern\" ||errors.ssn1?.type === \"pattern\")  && <div style={{color:\"red\"}}>주민번호 13자리를 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>핸드폰번호 : </label>\r\n      <input className=\"ml-2\" name=\"phonenumber\" type=\"number\" defaultValue={props.selectedPatient.phonenumber} ref={register({ required: true })} />\r\n      {errors.phonenumber && <div style={{color:\"red\"}}>핸드폰 번호를 입력해 주세요</div>}\r\n      </div>\r\n      <div className=\"d-flex justify-content-end\">\r\n      <input  type=\"submit\" />\r\n      </div>\r\n    </form>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterPatientModal;","const initialState = {\r\n  reservation: {}\r\n}\r\n//액션 타입 선언\r\nconst SET_RESERVATION=\"reservation/setReservation\";\r\n\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetReservation = (reservation) => {\r\n  return {type:SET_RESERVATION, reservation};\r\n} \r\n\r\n//리듀스 선언\r\nconst reservationReducer = (state = initialState, action) => {\r\n  if(action.type === SET_RESERVATION) {\r\n    return {...state, reservation:action.reservation};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\n\r\nexport default reservationReducer;","import { useEffect, useState } from \"react\";\r\nimport ReactDatePicker, {} from \"react-datepicker\";\r\nimport \"./datepickerReservation.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createSetReservation } from \"redux/reservation-reducer\";\r\nimport { RegisterReservation } from \"apis/Reception\";\r\n\r\nfunction RegisterReservationModal(props){\r\n    // //예약 리스트\r\n    // const [reservationList, setReservationList] = useState([]);\r\n    //선택된 날짜 상태\r\n    const [startDate, setStartDate] = useState(new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate(),9,0))\r\n\r\n    // //예약된 시간상태\r\n    // const [reservatedTimes,setReservatedTimes] = useState([]); \r\n\r\n    //진료인지 날짜인지 예약 타입상태 -> true이면 진료, false이면 예약\r\n    const [reservationType, setReservationType] = useState(true)\r\n    //예약상태 결정하는 함수\r\n    const handleReservation = (type) =>{\r\n        setReservationType(type)\r\n    }\r\n    const dispatch = useDispatch();\r\n    ////선택된 검사리스트 (초기값으로 DB에서 불러온 처방검사리스트 들어감)\r\n    // const [testList,setTestList] = useState([]);\r\n    // //처방된 검사 선택\r\n    // const handleTestList = (event, index) =>{\r\n    //     const modify = testList.map((item,i)=>{\r\n    //         if(i===index){\r\n    //             item.ischeck = event.target.checked\r\n    //         }\r\n    //         return item;\r\n    //     })\r\n    //     setTestList(modify);\r\n    // }\r\n\r\n    //날짜를 넣으면 인데스 나옴\r\n    // const GetTimeIndex=(date)=>{\r\n    //     let hour = date.getHours()*10\r\n    //     let minute = date.getMinutes()\r\n    //     if(minute===0){\r\n    //         minute = 0;\r\n    //     }else if(minute===30){\r\n    //         minute = 5;\r\n    //     }\r\n    //     const Index = (hour+minute)/5-18\r\n    //     return Index\r\n    // }\r\n    //인덱스를 넣으면 날짜가 나오는 함수\r\n    // const GetTime=(Index)=>{\r\n    //     let num = (Index+18)*5\r\n    //     let hour = num/10\r\n    //     let minute = num%10===5?30:0\r\n    //     const date = new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate(),hour,minute)\r\n    //     return date;\r\n    // }\r\n    useEffect(()=>{\r\n        //예약정보불러오기\r\n        // var reservationlist = getAllReservationsData();\r\n        // setReservationList(reservationlist)\r\n        // var testlist = getAllTestsGroupData(props.selectedPatient.patientid);\r\n        // setTestList(testlist);\r\n         \r\n       //첫번째로 가능한 예약시간을 구하기위해 datepicker의 Time테이블 형식(30분단위)에 맞춰서 해당 날짜의 1차원배열구성\r\n        // let Times=new Array(18);\r\n        //     Times[GetTimeIndex(new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),13,0))] = true;\r\n        //     Times[GetTimeIndex(new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),13,30))] = true;\r\n        //     for(var i=0; i<reservationlist.length; i++){\r\n        //         if(reservationlist[i].reservationdate){\r\n        //             Times[GetTimeIndex(reservationlist[i].reservationdate)] = true;\r\n        //         }\r\n        //     }\r\n         \r\n        \r\n\r\n         //첫번째 들어갈 시간 구하기\r\n        //  for(var i=0; i<Times.length; i++){\r\n        //      if(!Times[i]){\r\n        //          setStartDate(GetTime(i))\r\n        //          break;\r\n        //      }\r\n        //      //만약 모든 시간이 차있으면 예외처리\r\n        //      if(i===Times.length-1){\r\n                \r\n        //      }\r\n        //  }\r\n\r\n          //예약된 정보를  일,시간,분 3차원배열구성\r\n        //  let excludeTime = new Array(12)\r\n        //  for(var i=0; i<12; i++){\r\n        //      var lastday = new Date(new Date().getFullYear(),i+1,0).getDate();\r\n        //     excludeTime[i] = new Array(lastday)\r\n        //     for(var j=0; j<lastday; j++){\r\n        //         excludeTime[i][j] = new Array();\r\n        //     }\r\n        //  }\r\n        \r\n        //     for(var i=0; i<reservationlist.length; i++){\r\n        //         var month = reservationlist[i].reservationdate.getMonth()+1\r\n        //         var day = reservationlist[i].reservationdate.getDate()\r\n        //         excludeTime[month-1][day-1].push(reservationlist[i].reservationdate)\r\n        //         console.log(month + \",\"+day+\",\"+reservationlist[i].reservationdate)\r\n        //      }\r\n         \r\n         \r\n        // console.log(excludeTime)\r\n        // setReservatedTimes(excludeTime)  \r\n      \r\n      \r\n    },[])\r\n\r\n    //선택된 날짜~ +30분 가져오기\r\n    const getReservationDate= () =>{\r\n        var newDateOptions = {\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour:\"2-digit\",\r\n            minute:\"2-digit\"\r\n        }\r\n        const origin = startDate.toLocaleString(\"ko-kr\",newDateOptions);\r\n        let date = new Date(startDate);\r\n        date.setMinutes(date.getMinutes()+30)\r\n        if(startDate.getTime()){\r\n            \r\n            return origin+\" ~ \"+date.toLocaleString(\"ko-kr\",newDateOptions)\r\n        }else{\r\n            return \"시간을 선택해 주세요\"\r\n        }\r\n       \r\n    }\r\n    \r\n    //예약 등록함수\r\n    const ResisterReservation=()=>{\r\n        //let newreservation;\r\n            //DB에 해당 patient, startDate로 해당 시간에 진료예약\r\n            RegisterReservation({reservationdate:startDate.getTime(),patientid:props.selectedPatient.patientid,patientname:props.selectedPatient.patientname,status:\"대기\",type:reservationType?\"진료\":\"검사\" }).then((result)=>{\r\n                //redux 저장\r\n                dispatch(createSetReservation(result.data))\r\n                //모달 닫기\r\n                props.closeModal(\"RegisterReservationModal\")\r\n            })\r\n    }\r\n    return(\r\n        <div className=\"conatainer\" style={{height:\"50vh\"}}>\r\n            <div style={{height:\"15%\"}}>\r\n               <div className=\"row d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\"}}>\r\n                    <div style={{width:\"10%\"}}>ID</div>\r\n                    <div style={{width:\"10%\"}}>이름</div>\r\n                    <div style={{width:\"10%\"}}>성별</div>\r\n                    <div style={{width:\"10%\"}}>나이</div>\r\n                    <div style={{width:\"35%\"}}>주민번호</div>\r\n                    <div style={{width:\"25%\"}}>Phone</div>\r\n                </div>\r\n                \r\n                <div className=\"row d-flex justify-content-between text-center  \" style={{borderRadius:\"15px\"}}>\r\n                  \r\n                    <div style={{width:\"10%\"}}>{props.selectedPatient.patientid}</div>\r\n                    <div style={{width:\"10%\"}}>{props.selectedPatient.patientname}</div>\r\n                    <div style={{width:\"10%\"}}>{props.selectedPatient.sex}</div>\r\n                    <div style={{width:\"10%\"}}>{props.selectedPatient.age}</div>\r\n                    <div style={{width:\"35%\"}}>{props.selectedPatient.ssn1 + \" - \" + props.selectedPatient.ssn2}</div>\r\n                    <div style={{width:\"25%\"}}>{props.selectedPatient.phonenumber}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\" style={{height:\"90%\"}}>\r\n                <div className=\"col-6 text-center\" style={{margin:\"10px\",marginTop:\"2%\", height:\"100%\"}} >\r\n                    <ReactDatePicker \r\n                    selected={startDate}\r\n                    onChange={(date) => setStartDate(date)}\r\n                    showTimeSelect\r\n                    timeFormat=\"HH:mm\"\r\n                    popperPlacement=\"bottom\" \r\n                    minDate={new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate())}\r\n                    minTime={new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),9,0)}\r\n                    maxTime={new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),17,30)}\r\n                    // excludeTimes={reservatedTimes.length>1&&reservatedTimes[startDate.getMonth()][startDate.getDate()-1]}\r\n                    inline\r\n                    dateFormat=\"yyyy-MM-dd hh:mm\"\r\n                    />\r\n                </div>                \r\n                <div className=\"col-5 \" style={{margin:\"10px\", height:\"100%\", padding:\"0px\" ,marginTop:\"2%\"  }}>\r\n                    <div className=\"border text-center mb-4\" style={{borderRadius:\"15px\"}}> \r\n                        예약날짜<br/>{getReservationDate()}\r\n                   </div>\r\n                    <button onClick={()=>{handleReservation(true)}} style={{backgroundColor:reservationType? \"#ffcd82\":\"white\",border:\"2px solid #ffcd82\",borderRadius:\"15px\",width:\"47%\",height:\"30%\", fontSize:\"1.8em\"}} className=\"  mr-1 \">진료</button>\r\n                        \r\n                        \r\n                    <button onClick={()=>{handleReservation(false)}}  style={{backgroundColor:!reservationType? \"#ffcd82\":\"white\",border:\"2px solid #ffcd82\",borderRadius:\"15px\",width:\"47%\",height:\"30%\", fontSize:\"1.8em\"}} className=\" \">검사</button>\r\n\r\n                        {/* {!reservationType&&\r\n                            testList&&testList.map((item,index)=>{return(\r\n                                <div key={index}>\r\n                                <input type=\"checkbox\" onChange={(e)=>{handleTestList(e,index)}} value={testList[index].ischeck}/>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.groupcode}</label>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.groupname}</label>\r\n                                </div>\r\n                            )})\r\n                        } */}\r\n                   \r\n                    <button className=\"btn btn-dark btn-sm mt-4\" style={{borderRadius:\"15px\",  marginTop:\"10px\", width:\"100%\", fontSize:\"1.3em\"}} /*disabled={reservationType===false&&(testList==null || (testList.filter((item)=>(item.ischeck===true)).length<1)) }*/  onClick={ResisterReservation}>예약</button>\r\n                   \r\n                </div>\r\n\r\n            </div>\r\n       \r\n\r\n                      \r\n        </div>\r\n\r\n        )\r\n    }\r\n\r\nexport default RegisterReservationModal;","function PatientProfile(props) {\r\n\r\n    \r\n  return (\r\n    <>\r\n      <div className=\"pt-5\" style={{height:\"calc(35vh - 50px)\"}}>\r\n        <div className=\"d-flex ml-0 mr-0\" style={{height:\"25%\", minWidth:\"200px\"}}>\r\n          <div className=\"col d-flex align-self-center ml-3 mr-3 pb-2 pt-2\" style={{borderTop:\"3px solid #a4a4a4\",borderBottom:\"3px solid #a4a4a4\"}}>\r\n            <div className=\"col-5 text-center mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>차트번호</span></div>\r\n            <div className=\"col-7   ml-0 mr-0\" style={{fontSize:\"14px\"}}>{props.selectedPatient.patientid}</div>\r\n          </div>\r\n          <div className=\"col d-flex align-self-center ml-3 mr-3 pb-2 pt-2\" style={{borderTop:\"3px solid #a4a4a4\",borderBottom:\"3px solid #a4a4a4\"}}>\r\n            <div className=\"col-5 text-center mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>이름</span></div>\r\n            <div className=\"col-7   ml-0 mr-0\" style={{fontSize:\"14px\"}}>{props.selectedPatient.patientname}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex ml-0 mr-0\" style={{height:\"20%\", minWidth:\"200px\"}}>\r\n          <div className=\"col d-flex align-self-center ml-3 mr-3 pb-1 pt-1 \" style={{borderBottom:\"3px solid #a4a4a4\"}}>\r\n            <div className=\"col-5 text-center mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>주민등록번호</span></div>\r\n            <div className=\"col-7   ml-0 mr-0\" style={{fontSize:\"14px\"}}>{props.selectedPatient.ssn1} - {props.selectedPatient.ssn2}</div>\r\n          </div>\r\n          <div className=\"col d-flex align-self-center ml-3 mr-3 pb-1 pt-1 \" style={{borderBottom:\"3px solid #a4a4a4\"}}>\r\n            <div className=\"col-5 text-center mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>나이</span></div>\r\n            <div className=\"col-7   ml-0 mr-0\" style={{fontSize:\"14px\"}}>{props.selectedPatient.age}세</div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        \r\n\r\n          {/* <div className=\"mt-2 mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\", paddingLeft:\"15px\"}}><span>주민등록 번호</span></div>\r\n          <div className=\"ml-0 mr-0 row\">\r\n            <div className=\"col \">\r\n              <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.ssn1}</div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center\">-</div>\r\n            <div className=\"col\">\r\n              <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.ssn2}</div>\r\n            </div>\r\n          </div> */}\r\n        \r\n\r\n        <div className=\"d-flex ml-0 mr-0\" style={{height:\"20%\", minWidth:\"200px\"}}>\r\n          <div className=\"col d-flex align-self-center ml-3 mr-3 pb-1 pt-1\" style={{borderBottom:\"3px solid #a4a4a4\"}}>\r\n            <div className=\"col-5 text-center mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>성별</span></div>\r\n            <div className=\"col-7   ml-0 mr-0\" style={{fontSize:\"14px\"}}>{props.selectedPatient.sex}</div>\r\n          </div>\r\n          <div className=\"col d-flex align-self-center ml-3 mr-3 pb-1 pt-1\" style={{borderBottom:\"3px solid #a4a4a4\"}}>\r\n            <div className=\"col-5 text-center mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>전화번호</span></div>\r\n            <div className=\"col-7   ml-0 mr-0\" style={{fontSize:\"14px\"}}>{props.selectedPatient.phonenumber}</div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"d-flex ml-0 mr-0\" style={{height:\"20%\", minWidth:\"200px\"}}>\r\n          <div className=\"col d-flex align-self-center ml-3 mr-3 pb-1 pt-1\" style={{borderBottom:\"3px solid #a4a4a4\"}}>\r\n            <div className=\"col-5 text-center mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>등록일</span></div>\r\n            <div className=\"col-7   ml-0 mr-0\" style={{fontSize:\"14px\"}}>{props.selectedPatient.registerday}</div>\r\n          </div>\r\n          <div className=\"col d-flex align-self-center ml-3 mr-3 pb-1 pt-1\" style={{borderBottom:\"3px solid #a4a4a4\"}}>\r\n            <div className=\"col-5 text-center mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>최종진료일</span></div>\r\n            <div className=\"col-7   ml-0 mr-0\" style={{fontSize:\"14px\"}}>{props.selectedPatient.lasttreatment}</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div className=\"row ml-0 mr-0\" style={{height:\"25%\"}}>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mt-2 mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>성별</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.sex}</div>\r\n          </div>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mt-2 mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>전화번호</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.phonenumber}</div>\r\n          </div>\r\n        </div> */}\r\n        {/* <div className=\"row ml-0 mr-0\" style={{height:\"25%\"}}>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mt-2 mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>등록일</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.registerday}</div>\r\n          </div>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mt-2 mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>최종진료일</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.lasttreatment}</div>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  } \r\n  \r\n  export default PatientProfile;","import { GetTreatmentListBypatientid,GetTreatmentDetail } from \"apis/Reception\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport Item from \"views/components/Item\";\r\nfunction PatientHistory(props) {\r\n  const[selectedTreatment, setSelectedTreatment] = useState();\r\n  const[treatmentData, setTreatmentData] = useState([])\r\n  const[testData, setTestData] = useState([])\r\n  const[drugsData, setDrugsData] = useState([])\r\n  const[diagnosesData, setDiagnosesData] = useState([])\r\n  const [loading,setLoading] = useState(false);\r\n  \r\n  const treatmentReception = useSelector((state)=>(state.receptionReducer.treatmentreception)) \r\n  useEffect(()=>{\r\n    if(props.selectedPatient.patientid ){\r\n        setLoading(true)\r\n        //히스토리 상세기록 초기화해주기\r\n        setSelectedTreatment(null)\r\n        //해당 환자의 진료기록 불러오기\r\n        GetTreatmentListBypatientid(props.selectedPatient.patientid).then((result)=>{\r\n         //userlist도 불러와서 userid에 맞는 username 가져옴\r\n          const userlist = result.data.userlist;\r\n         const treatmentlist = result.data.treatmentlist\r\n         const data = treatmentlist.map((item,index)=>\r\n         {return {...item,patientname:props.selectedPatient.patientname,username:userlist[index].username}})\r\n          setTreatmentData(data)\r\n          setLoading(false)\r\n        })\r\n        \r\n    }\r\n  },[props.selectedPatient])\r\n  useEffect(()=>{\r\n    if(treatmentReception.patientid === props.selectedPatient.patientid ){\r\n        setLoading(true)\r\n        //히스토리 상세기록 초기화해주기\r\n        setSelectedTreatment(null)\r\n        //해당 환자의 진료기록 불러오기\r\n        GetTreatmentListBypatientid(props.selectedPatient.patientid).then((result)=>{\r\n         //userlist도 불러와서 userid에 맞는 username 가져옴\r\n          const userlist = result.data.userlist;\r\n         const treatmentlist = result.data.treatmentlist\r\n         const data = treatmentlist.map((item,index)=>\r\n         {return {...item,patientname:props.selectedPatient.patientname,username:userlist[index].username}})\r\n          setTreatmentData(data)\r\n          setLoading(false)\r\n        })\r\n        \r\n    }\r\n  },[treatmentReception])\r\n  useEffect(()=>{\r\n    if(selectedTreatment){\r\n      setLoading(true)\r\n      GetTreatmentDetail(selectedTreatment.treatmentid).then((result)=>{\r\n        //데이터 배열의 첫번째가 진단, 두번째가 약, 세번째가 테스트 그룹임\r\n        setDiagnosesData(result.data.treatmentdetail[0])\r\n        setDrugsData(result.data.treatmentdetail[1]);\r\n        setTestData(result.data.treatmentdetail[2]);\r\n        setLoading(false)\r\n      })\r\n    }\r\n    \r\n  },[selectedTreatment])\r\n  const click =useCallback( (focusItem) =>{\r\n    setSelectedTreatment(focusItem);\r\n  },[])\r\n\r\n    const treatmentProperty = [\"treatmentid\",\"patientname\",\"username\",\"status\",\"treatmentdate\"]  \r\n  return (\r\n    <>\r\n      <div className=\"p-2 \" style={{height:\"60vh\"}}>\r\n        <div style={{fontSize:\"20px\", fontWeight:\"bold\", borderBottom:\"1px solid\"}}><label style={{height:\"100%\"}}>환자 히스토리</label> {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}</div>\r\n        <div className=\"mt-3 p-1\">\r\n          <div className=\"rounded-lg justify-content-center\">\r\n            <div className=\"d-flex justify-content-between text-center  \" style={{marginTop:\"10px\",marginBottom:\"10px\", color:\"white\", backgroundColor:\"#1B296D\", paddingTop:\"5px\",paddingBottom:\"5px\"}}>\r\n                <div style={{width:\"20%\"}}>순번</div>\r\n                <div style={{width:\"20%\"}}>진료ID</div>\r\n                <div style={{width:\"20%\"}}>환자</div>\r\n                <div style={{width:\"20%\"}}>진료자</div>\r\n                <div style={{width:\"20%\"}}>접수상태</div>\r\n                <div style={{width:\"20%\"}}>접수시간</div>\r\n            </div>\r\n            <div className=\"  justify-content-center\" style={{height:\"calc(25vh - 70px)\"}} >\r\n            {/* Autosize최적화 */}\r\n            <AutoSizer disableHeight>\r\n                        {({width, height}) => {\r\n                            return(\r\n                            \r\n                            <List width={width} height={Math.round(window.innerHeight / (100 / 25))-70}\r\n                                    list={treatmentData}\r\n                                    rowCount={treatmentData.length}\r\n                                    rowHeight={50}\r\n                                    rowRenderer={({index, key, style}) => {\r\n                                      return (\r\n                                          <div key={key} style={style}>\r\n                                          <Item onClick={click} item ={treatmentData[index]} property={treatmentProperty} order={index}/>\r\n                                          </div>   \r\n                                      );\r\n                                      }}\r\n                                    overscanRowCount={5}/>\r\n                            )\r\n                        }}\r\n              </AutoSizer>\r\n\r\n\r\n\r\n                  {/* {treatmentData.map((item,index)=>{\r\n                    if(item.patientid===props.selectedPatient.patientid){\r\n                      return(\r\n                        <div key={index}>\r\n                                <Item onClick={click} item ={item} property={treatmentProperty} order={index}/>\r\n                        </div>                         \r\n                        )\r\n                    }\r\n                        \r\n                  })}   */}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex  mt-4\" style={{height:\"calc(35vh - 65px)\"}}>\r\n           {/* <div className=\"col-4\">\r\n           진단기록\r\n           <div className=\"overflow-auto  justify-content-center border\" style={{height:\"calc(35vh - 100px)\"}} >\r\n          \r\n                {selectedTreatment&&diagnosesData&&diagnosesData.map((item,index)=>{\r\n                      return(\r\n                          <div className=\"row m-0 border-bottom text-center\" key={index} style={{fontSize:\"0.8em\"}}>\r\n                            <div className=\"col-3 p-0 border-right\">\r\n                            {item.diagnosesdataid}\r\n                            </div>\r\n                            <div className=\"col-9 p-0\">\r\n                            {item.diagnosesdataname}\r\n                            </div>\r\n                           \r\n                          </div>                         \r\n                          )\r\n                      })}  \r\n          </div>\r\n          </div> */}\r\n          <div className=\"col-4\">\r\n           진단메모\r\n           <div className=\"overflow-auto  justify-content-center border\" style={{height:\"calc(35vh - 100px)\"}} >\r\n          \r\n                {selectedTreatment&&selectedTreatment.memo }  \r\n          </div>\r\n          </div>\r\n           <div className=\"col-4\">\r\n            처방검사\r\n           <div className=\"overflow-auto  justify-content-center border\" style={{height:\"calc(35vh - 100px)\"}} >\r\n                {selectedTreatment&&testData&&testData.map((item,index)=>{\r\n                    return(\r\n                      <div className=\"row m-0 border-bottom text-center\" key={index} style={{fontSize:\"0.8em\"}}>\r\n                      <div className=\"col-3 p-0 border-right\">\r\n                      {item.testdataid}\r\n                      </div>\r\n                      <div className=\"col-9 p-0\">\r\n                      {item.testdataname}\r\n                      </div>\r\n                     \r\n                    </div>                             \r\n                      )\r\n                })}  \r\n          </div>\r\n          </div>\r\n           <div className=\"col-4\">\r\n             처방약\r\n           <div className=\"overflow-auto  justify-content-center border\" style={{height:\"calc(35vh - 100px)\"}} >\r\n                \r\n                {selectedTreatment&&drugsData&&drugsData.map((item,index)=>{\r\n                      return(\r\n                        <div className=\"row m-0 border-bottom text-center\" key={index} style={{fontSize:\"0.8em\"}}>\r\n                          <div className=\"col-3 p-0 border-right\">\r\n                          {item.drugid}\r\n                          </div>\r\n                          <div className=\"col-9 p-0\">\r\n                          {item.drugname}\r\n                          </div>\r\n                         \r\n                        </div>                         \r\n                        )\r\n                      })}  \r\n          </div>\r\n           </div>\r\n\r\n        </div>\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  } \r\n  \r\n  export default PatientHistory;","import { Modal, Spinner } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SearchPatientModal from \"./SearchPatientModal\";\r\nimport TestSelectorModal from \"./TestSelectorModal\";\r\nimport RegisterPatientModal from \"./RegisterPatientModal\";\r\nimport UpdatePatientModal from \"./UpdatePatientModal\";\r\nimport RegisterReservationModal from \"./RegisterReservationModal\";\r\nimport PatientProfile from \"./PatientProfile\";\r\nimport ReceptionHeader from \"../components/ReceptionHeader\";\r\nimport PatientHistory from \"./PatientHistory\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport DoctorSelectorModal from \"./DoctorSelectorModal\";\r\nfunction SearchPatient(props){\r\n    const [searchModalshow, setSearchModalshow] = useState(false);\r\n    const [reservationRegisterhModalshow, setreservationRegisterhModalshow] = useState(false);\r\n    const [patientRegisterhModalshow, setPatientRegisterhModalshow] = useState(false);\r\n    const [patientUpdateModalshow, setPatientUpdateModalshow] = useState(false);\r\n    const [testSelectorModalshow, setTestSelectorModalshow] = useState(false);\r\n    const [doctorSelectorModalshow, setDoctorSelectorModalshow] = useState(false);\r\n    const [loading,setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    // 모달창에서 선택된 환자 상태\r\n    const [selectedPatient, setSelectedPatient] = useState({\r\n      patientid:\"-\",\r\n      patientname:\"-\", \r\n      ssn1:\"-\", \r\n      ssn2:\"-\", \r\n      sex: \"-\",\r\n      age:\"-\",\r\n      phonenumber: \"-\", \r\n      lasttreatment:\"-\",\r\n      registerday:\"-\"\r\n    });\r\n    //모달창 닫는 함수\r\n    const closeModal= (modalname) =>{\r\n    // 모달일때 모달종류에 따라 닫아줌\r\n      if(modalname===\"RegisterPatientModal\"){\r\n        setPatientRegisterhModalshow(false)\r\n      }\r\n      else if(modalname===\"UpdatePatientModal\"){\r\n        setPatientUpdateModalshow(false);\r\n      }\r\n      else if(modalname===\"SearchPatientModal\"){\r\n        setSearchModalshow(false);\r\n      }\r\n      else if(modalname===\"RegisterReservationModal\"){\r\n        setreservationRegisterhModalshow(false)\r\n      }\r\n      else if(modalname===\"TestSelectorModal\"){\r\n        setTestSelectorModalshow(false)\r\n      } else if(modalname===\"DoctorSelectorModal\"){\r\n        setDoctorSelectorModalshow(false)\r\n      }\r\n    \r\n    }\r\n\r\n   // 환자 프로필에 변수저장 \r\n   const setPatient = (patient)=>{\r\n   \r\n     if(patient){\r\n      const tmpPatient = {\r\n        patientid:patient.patientid,\r\n        patientname:patient.patientname, \r\n        ssn1:patient.ssn1, \r\n        ssn2:patient.ssn2, \r\n        sex: patient.sex,\r\n        age:patient.age,\r\n        phonenumber: patient.phonenumber, \r\n        registerday: patient.registerday,\r\n        lasttreatment: patient.lasttreatment?patient.lasttreatment:\"-\"\r\n      }\r\n      setSelectedPatient(tmpPatient)\r\n     }\r\n  }\r\n  //로딩 스피너 끄고 키는 함수\r\n  const ControlLoading=(bool)=>{\r\n    setLoading(bool)\r\n  }\r\n   \r\n    return(\r\n   <div className=\"pl-3 pr-3 pb-3 border border-dark\" style={{height:\"96vh\", backgroundColor:\"white\"}} >\r\n        <ReceptionHeader headertitle=\"환자정보\" iclassName=\"bi bi-person-square \" color=\"#9ACAA1\">\r\n                <button  style={{marginRight:\"10px\"}} className=\"btn btn-dark btn-sm\" onClick={()=>{setSearchModalshow(true)}}>환자검색</button>\r\n                 <button disabled={selectedPatient.patientname!==\"-\"?false:true} style={{marginRight:\"10px\"}} className=\"btn btn-dark btn-sm\" onClick={()=>{setreservationRegisterhModalshow(true)}}>예약</button>\r\n                 <button style={{marginRight:\"10px\"}} className=\"btn btn-dark btn-sm\" onClick={()=>{setPatientRegisterhModalshow(true)}}>신규등록</button>\r\n               <button disabled={selectedPatient.patientname!==\"-\"?false:true} style={{marginRight:\"10px\"}} className=\"btn btn-dark btn-sm\" onClick={()=>{setPatientUpdateModalshow(true)}}>환자수정</button>\r\n                <button disabled={selectedPatient.patientname!==\"-\"?false:true} style={{marginRight:\"10px\"}} className=\"btn btn-dark btn-sm\" onClick={()=>{setTestSelectorModalshow(true)}}>검사접수</button>\r\n                 <button disabled={selectedPatient.patientname!==\"-\"?false:true} style={{marginRight:\"10px\"}} className=\"btn btn-dark btn-sm\" onClick={()=>{setDoctorSelectorModalshow(true)}}>진료접수</button>\r\n        </ReceptionHeader>\r\n        <PatientProfile  selectedPatient={selectedPatient}/>\r\n        <PatientHistory selectedPatient={selectedPatient}/> \r\n        \r\n      <Modal backdrop=\"static\" size=\"lg\" show={searchModalshow}  onHide={()=>{setSearchModalshow(false)}}>\r\n        <Modal.Header style={{backgroundColor:\"rgb(27, 41, 109)\"}}  closeButton>\r\n          <Modal.Title  style={{color:\"white\"}}>환자검색</Modal.Title>\r\n          {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n         \r\n        </Modal.Header>\r\n        <Modal.Body><SearchPatientModal controlLoading={ControlLoading} closeModal={closeModal} setSelectedPatient={setPatient}/></Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal  backdrop=\"static\" size=\"lg\" show={reservationRegisterhModalshow} onHide={()=>{setreservationRegisterhModalshow(false)}}>\r\n        <Modal.Header style={{backgroundColor:\"rgb(27, 41, 109)\"}}  closeButton>\r\n          <Modal.Title  style={{color:\"white\"}}>예약등록</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><RegisterReservationModal closeModal={closeModal} selectedPatient={selectedPatient}/></Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal  backdrop=\"static\"  show={patientRegisterhModalshow} onHide={()=>{setPatientRegisterhModalshow(false)}}>\r\n        <Modal.Header style={{backgroundColor:\"rgb(27, 41, 109)\"}}  closeButton>\r\n          <Modal.Title  style={{color:\"white\"}}>신규등록</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><RegisterPatientModal closeModal={closeModal} setSelectedPatient={setPatient}/></Modal.Body>\r\n      </Modal>\r\n      <Modal  backdrop=\"static\"  show={patientUpdateModalshow} onHide={()=>{setPatientUpdateModalshow(false)}}>\r\n        <Modal.Header style={{backgroundColor:\"rgb(27, 41, 109)\"}} closeButton>\r\n          <Modal.Title  style={{color:\"white\"}}>환자수정</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><UpdatePatientModal closeModal={closeModal} selectedPatient={selectedPatient} setSelectedPatient={setPatient}/></Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal size=\"lg\"  backdrop=\"static\" show={testSelectorModalshow} onHide={()=>{setTestSelectorModalshow(false)}}>\r\n        <Modal.Header style={{backgroundColor:\"rgb(27, 41, 109)\"}} closeButton>\r\n          <Modal.Title style={{color:\"white\"}}>검사선택</Modal.Title>\r\n          {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n          </Modal.Header>\r\n        <Modal.Body><TestSelectorModal controlLoading={ControlLoading} closeModal={closeModal} selectedPatient={selectedPatient}/></Modal.Body>\r\n      </Modal>\r\n      <Modal  backdrop=\"static\" show={doctorSelectorModalshow} onHide={()=>{setDoctorSelectorModalshow(false)}}>\r\n        <Modal.Header style={{backgroundColor:\"rgb(27, 41, 109)\"}} closeButton>\r\n          <Modal.Title  style={{color:\"white\"}}>의사선택</Modal.Title>\r\n          {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n           </Modal.Header>\r\n        <Modal.Body><DoctorSelectorModal controlLoading={ControlLoading} closeModal={closeModal} selectedPatient={selectedPatient}/></Modal.Body>\r\n      </Modal>\r\n        \r\n    </div>\r\n\r\n        \r\n            \r\n    )\r\n}\r\n\r\nexport default SearchPatient;","const initialState = {\r\n  patient: { \r\n    patientname:\"환자이름\", \r\n    ssn1:\"-\", \r\n    ssn2:\"-\", \r\n    sex: \"성별\",\r\n    age:\"-\",\r\n    phonenumber: \"-\", \r\n  }\r\n}\r\n\r\n//액션 타입 선언\r\nconst SET_PATIENT=\"patient/setPatient\";\r\n\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetPatient = (patient) => {\r\n  return {type:SET_PATIENT, patient};\r\n} \r\n\r\n//리듀스 선언\r\nconst patientReducer = (state = initialState, action) => {\r\n  if(action.type === SET_PATIENT) {\r\n    return {...state, patient:action.patient};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\n\r\nexport default patientReducer;","import { useState } from \"react\";\r\nimport { ToggleButton } from \"react-bootstrap\";\r\nimport { ButtonGroup } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Item from \"views/components/Item\";\r\nimport {createSetPatient} from\"redux/patient-reducer\"\r\nimport moment from 'moment';\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nfunction TestReception(props){\r\n    const [listtype, setListtype] = useState(\"all\");\r\n    const [selectedTestReception,setSelectedTestReception] = useState()\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setListtype(event.target.value);\r\n      }\r\n      const click = (item) =>{\r\n        dispatch(createSetPatient({patientid:item.patientid}))\r\n        setSelectedTestReception(item)\r\n    }\r\n    //검사접수삭제\r\n    const deleteReceptionTest = () =>{\r\n        if(selectedTestReception){\r\n            props.deleteTestReception(selectedTestReception.testreceptionid)\r\n            setSelectedTestReception(null)\r\n        }\r\n       \r\n    }\r\n    const testProperty = [\"testreceptionid\",\"patientname\",\"status\",\"testdate\",]\r\n    \r\n    return(\r\n        <div className=\"pl-3 pr-3 pb-3\" style={{backgroundColor:\"white\"}}>\r\n        <div className=\"mt-3 d-flex justify-content-between\">\r\n            <ButtonGroup toggle>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"all\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"all\"} value=\"all\" onChange={handleChange}><div className=\"ml-5 mr-5\">전체</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"대기중\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"대기중\"} value=\"대기중\" onChange={handleChange}><div className=\"ml-5 mr-5\">대기중</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"진행중\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"진행중\"} value=\"진행중\" onChange={handleChange}><div className=\"ml-5 mr-5\">진행중</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"검사완료\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"검사완료\"} value=\"검사완료\" onChange={handleChange}><div className=\"ml-5 mr-5\">검사완료</div></ToggleButton>\r\n            </ButtonGroup>\r\n            <div>\r\n                {props.isDrawer===false&&<button style={{marginRight:\"10px\"}} onClick={deleteReceptionTest} disabled={selectedTestReception==null || selectedTestReception.status!==\"대기중\"}  className=\"btn btn-dark btn-sm\">취소</button>}\r\n            </div>\r\n        </div>\r\n        <div className=\"rounded-lg justify-content-center\">\r\n            <div className=\"d-flex justify-content-between text-center  \" style={{marginTop:\"10px\",marginBottom:\"10px\",color:\"white\", backgroundColor:\"#1B296D\", paddingTop:\"5px\",paddingBottom:\"5px\"}}>\r\n                <div style={{width:\"20%\"}}>순번</div>\r\n                <div style={{width:\"20%\"}}>검사ID</div>\r\n                <div style={{width:\"20%\"}}>환자</div>\r\n                <div style={{width:\"20%\"}}>접수상태</div>\r\n                <div style={{width:\"20%\"}}>접수시간</div>\r\n            </div>\r\n            <div className=\" justify-content-center\" style={{height:\"calc(40vh - 200px)\"}} >\r\n               \r\n            {props.testList?\r\n            <AutoSizer disableHeight>\r\n                        {({width, height}) => {\r\n                            let result = props.testList.filter((item)=>listtype===\"all\"||item.status===listtype) \r\n                            return(\r\n                            <List width={width} height={Math.round(window.innerHeight / (100 / 40))-200}\r\n                                    list={result}\r\n                                    rowCount={result.length}\r\n                                    rowHeight={50}\r\n                                    rowRenderer={({index, key, style}) => {\r\n                                        const item2 = {...result[index],testdate:moment(result[index].testdate).format(\"HH:mm\")}\r\n                                        return (\r\n                                            <div key={key}>\r\n                                            <Item onClick={click} item ={item2} property={testProperty} order={index}/>\r\n                                            </div>   \r\n                                        );\r\n                                        }}\r\n                                    overscanRowCount={5}/>\r\n                            )\r\n                        }}\r\n            </AutoSizer>\r\n            :\r\n            null\r\n            }\r\n\r\n\r\n                 {/* {props.testList&&props.testList.map((item,index)=>{\r\n                     const item2 = {...item,testdate:moment(item.testdate).format(\"HH:mm\")}\r\n                      if(listtype===\"all\"||item.status===listtype){\r\n                     return(\r\n                                    <div key={index}>\r\n                                            <Item onClick={click} item ={item2} property={testProperty} order={index}/>\r\n                                    </div>                         \r\n                 )\r\n                }})}  */}\r\n            </div>\r\n        </div>\r\n                    \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default TestReception;","import {  useState } from \"react\";\r\nimport { ToggleButton } from \"react-bootstrap\";\r\nimport { ButtonGroup } from \"react-bootstrap\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport Item from \"views/components/Item\";\r\nimport {createSetPatient} from\"redux/patient-reducer\"\r\nimport moment from 'moment';\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nfunction TreatmentReception(props){\r\n    const [listtype, setListtype] = useState(\"all\");\r\n    const [selectedTreatmetReception,setSelectedTreatmetReception] = useState()\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setListtype(event.target.value);\r\n      }\r\n      const click = (item) =>{\r\n        dispatch(createSetPatient({patientid:item.patientid}))\r\n        setSelectedTreatmetReception(item)\r\n    }\r\n    //진료접수삭제\r\n    const deleteReceptionTreatment = () =>{\r\n        if(selectedTreatmetReception){\r\n            props.deleteTreatmentReception(selectedTreatmetReception.treatmentid)\r\n            setSelectedTreatmetReception(null)\r\n        }\r\n    }\r\n    \r\n    const treatmentProperty = [\"patientname\",\"username\",\"userroom\",\"status\",\"treatmentdate\"]  \r\n    return(\r\n        <div className=\"pl-3 pr-3 pb-3\" style={{ backgroundColor:\"white\"}}>\r\n        <div className=\"mt-3 d-flex justify-content-between\">\r\n            <ButtonGroup toggle>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"all\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"all\"} value=\"all\" onChange={handleChange}><div className=\"ml-5 mr-5\">전체</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"진료 대기\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"진료 대기\"} value=\"진료 대기\" onChange={handleChange}><div className=\"ml-5 mr-5\">진료 대기</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"진료중\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"진료중\"} value=\"진료중\" onChange={handleChange}><div className=\"ml-5 mr-5\">진료중</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"진료 완료\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"진료 완료\"} value=\"진료 완료\" onChange={handleChange}><div className=\"ml-5 mr-5\">진료 완료</div></ToggleButton>\r\n            </ButtonGroup>\r\n            <div>\r\n                {props.isDrawer===false&&<button style={{marginRight:\"10px\"}} onClick={deleteReceptionTreatment} disabled={selectedTreatmetReception==null || selectedTreatmetReception.status!==\"진료 대기\"} className=\"btn btn-dark btn-sm\">취소</button>}\r\n            </div>\r\n        </div>\r\n        <div className=\"rounded-lg justify-content-center\">\r\n            <div className=\"d-flex justify-content-between text-center \" style={{marginTop:\"10px\",marginBottom:\"10px\",color:\"white\", backgroundColor:\"#1B296D\", paddingTop:\"5px\",paddingBottom:\"5px\"}}>\r\n                <div style={{width:\"20%\"}}>순번</div>\r\n                <div style={{width:\"20%\"}}>환자</div>\r\n                <div style={{width:\"20%\"}}>진료자</div>\r\n                <div style={{width:\"20%\"}}>진료실</div>\r\n                <div style={{width:\"20%\"}}>접수상태</div>\r\n                <div style={{width:\"20%\"}}>접수시간</div>\r\n        \r\n        \r\n            </div>\r\n            <div className=\"justify-content-center\" style={{height:\"calc(40vh - 200px)\"}} >\r\n            {props.treatmentList?\r\n            <AutoSizer disableHeight>\r\n                        {({width, height}) => {\r\n                            let result = props.treatmentList.filter((item)=>listtype===\"all\"||item.status===listtype) \r\n                            return(\r\n                            <List width={width} height={Math.round(window.innerHeight / (100 / 40))-200}\r\n                                    list={result}\r\n                                    rowCount={result.length}\r\n                                    rowHeight={50}\r\n                                    rowRenderer={({index, key, style}) => {\r\n                                        const item2 = {...result[index],treatmentdate:moment(result[index].treatmentdate).format(\"HH:mm\")}\r\n                                        return (\r\n                                            <div key={key} style={style}>\r\n                                            <Item onClick={click} item ={item2} property={treatmentProperty} order={index}/>\r\n                                            </div>   \r\n                                        );\r\n                                        }}\r\n                                    overscanRowCount={5}/>\r\n                            )\r\n                        }}\r\n            </AutoSizer>\r\n            :\r\n            null\r\n            }\r\n            \r\n\r\n\r\n                 {/* {props.treatmentList&&props.treatmentList.map((item,index)=>{\r\n                      const item2 = {...item,treatmentdate:moment(item.treatmentdate).format(\"HH:mm\")}\r\n                      if(listtype===\"all\"||item.status===listtype){\r\n                     return(\r\n                                    <div key={index}>\r\n                                        \r\n                                        \r\n                                            <Item onClick={click} item ={item2} property={treatmentProperty} order={index}/>\r\n                                    </div>                         \r\n                 )\r\n                }})}  */}\r\n            </div>\r\n        </div>\r\n                    \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default TreatmentReception;","const initialState = {\r\n  toast: {}\r\n}\r\n\r\n//액션 타입 선언\r\nconst SET_TOAST=\"toast/setToast\";\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetToast = (toast) => {\r\n  return {type:SET_TOAST, toast};\r\n} \r\n\r\n//리듀스 선언\r\nconst realtimeReducer = (state = initialState, action) => {\r\n  if(action.type === SET_TOAST) {\r\n    return {...state, toast:action.toast};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\n\r\nexport default realtimeReducer;","import { useEffect, useState } from \"react\";\r\nimport ReceptionHeader from \"../components/ReceptionHeader\";\r\nimport TestReception from \"./TestReception\";\r\nimport TreatmentReception from \"./TreatmentReception\";\r\nimport { Col, Row, Toast } from \"react-bootstrap\";\r\nimport {useDispatch, useSelector } from \"react-redux\";\r\nimport { GetTreatmentList,GetTestReceptionList,DeleteReceptionTreatment,DeleteReceptionTest } from \"apis/Reception\";\r\nimport { sendRedisMessage } from \"apis/Redis\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { createSetToast } from \"redux/toast-reducer\";\r\nimport { createSetTreatmentReception } from \"redux/reception-reducer\";\r\n\r\nfunction PatientReception(props){\r\n   const [select, setSelect] = useState(\"treatmentreception\");\r\n   const onChangeSelect=(event)=>{\r\n       setSelect(event.target.value)\r\n       \r\n    }\r\n    const treatmentReception = useSelector((state)=>(state.receptionReducer.treatmentreception)) \r\n    const testReception = useSelector((state)=>(state.receptionReducer.testreception))\r\n    const [treatementsData, setTreatmentsData] = useState()\r\n    const [testReceptionsData, setTestReceptionsData] = useState()\r\n    const [loading,setLoading] = useState(false);\r\n    const [showToast,setShowToast] = useState({onoff:false, patientname:\"\", status:\"\"}); \r\n    const toggleShowToast = () => {setShowToast((prev)=>({...prev,onoff:!prev.onoff}))}\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        GetTreatmentList().then((result)=>{\r\n            const userlist = result.data.userlist;\r\n            \r\n            const patientlist = result.data.patientlist;\r\n            const treatmentlist = result.data.treatmentlist.map((item, index)=>{\r\n                return {...item, patientname:patientlist[index].patientname,username:userlist[index].username,userroom:userlist[index].userroom }\r\n            })\r\n            setTreatmentsData(treatmentlist);\r\n            setLoading(false)\r\n            console.log(treatmentReception)\r\n            //진료접수가 완료되면 토스트    \r\n            if((treatmentReception.status===\"완료\") || (treatmentReception.status===\"진행\") ){\r\n                var patientname = treatmentlist.filter((item)=>{return item.patientid===treatmentReception.patientid})[0].patientname\r\n                setShowToast((prev)=>({status:treatmentReception.status,patientname,onoff:true}))\r\n                dispatch(createSetTreatmentReception({status:\"\",patientname,onoff:false}))\r\n            }\r\n        })\r\n    },[treatmentReception])\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        GetTestReceptionList().then((result)=>{\r\n            const patientlist = result.data.patientlist;\r\n            const testlist = result.data.testlist.map((item, index)=>{\r\n                return {...item, patientname:patientlist[index].patientname }\r\n            })\r\n            setTestReceptionsData(testlist);\r\n            setLoading(false)\r\n        })\r\n    },[testReception])\r\n    //진료접수삭제\r\n    const deleteTreatmentsData=(treatment_id)=>{\r\n        let modify = []\r\n        let selectedtreatment= null\r\n        for(var i=0; i<treatementsData.length; i++){\r\n            if(treatementsData[i].treatmentid!==treatment_id){\r\n                modify.push(treatementsData[i]);\r\n            }else{\r\n                selectedtreatment = treatementsData[i]\r\n            }\r\n        }\r\n        //DB에서 삭제\r\n        DeleteReceptionTreatment(treatment_id).then(()=>{\r\n            setTreatmentsData(modify)\r\n            sendRedisMessage({type:\"treatment\", patientid:selectedtreatment.patientid , status:\"취소\"})\r\n            \r\n        })\r\n        \r\n        \r\n    }\r\n    //검사접수 삭제\r\n    const deleteTestsData=(testreception_id)=>{\r\n        let modify = []\r\n        for(var i=0; i<testReceptionsData.length; i++){\r\n            if(testReceptionsData[i].testreceptionid!==testreception_id){\r\n                modify.push(testReceptionsData[i]);\r\n            }\r\n        }\r\n        //DB에서 삭제\r\n        DeleteReceptionTest(testreception_id).then(()=>{\r\n            setTestReceptionsData(modify)\r\n            sendRedisMessage({type:\"test\"})\r\n        })\r\n        \r\n        \r\n    }\r\n    return(\r\n        <div className=\"pl-3 pr-3 pb-3 border border-dark\" style={{height:\"calc(45vh - 10px)\", backgroundColor:\"white\"}}>    \r\n            <ReceptionHeader headertitle=\"당일 접수목록\" iclassName=\"bi bi-droplet \" color=\"#E89677\">\r\n            {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n             <select onChange={onChangeSelect} className=\"ml-2\" name=\"reception\" >\r\n                    <option value=\"treatmentreception\">진료접수</option>\r\n                    <option value=\"testreception\">검사접수</option>\r\n                </select>\r\n            </ReceptionHeader> \r\n          \r\n            {select===\"treatmentreception\"?<TreatmentReception isDrawer={false} deleteTreatmentReception={deleteTreatmentsData} treatmentList={treatementsData}/>:<TestReception isDrawer={false} deleteTestReception={deleteTestsData} testList={testReceptionsData}/>}\r\n\r\n\r\n            <div style={{position: \"fixed\", bottom: \"130px\", right: \"40px\",zIndex:\"1000\"}}>\r\n          <Row>\r\n            <Col style={{width:\"400px\"}}>\r\n              <Toast onClose={toggleShowToast} show={showToast.onoff} delay={5000} autohide >\r\n                <Toast.Header style={{backgroundColor:\"#E89677\"}}>\r\n                  <strong className=\"mr-auto\" style={{color:\"white\"}}>진료메시지</strong>\r\n                </Toast.Header>\r\n                <Toast.Body>{showToast.patientname}님의 진료가 {showToast.status}되었습니다.  </Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientReception;","import Reservation from \"./Reservation\";\r\nimport SearchPatient from\"./SearchPatient\";\r\nimport \"./font.css\"\r\nimport PatientReception from \"./PatientReception\";\r\n\r\n\r\nfunction Reception(props){\r\n\r\n    return( \r\n    <>\r\n    <div className=\"container-fluid  d-flex p-0 \" style={{minWidth:\"1200px\", fontFamily:\"Noto Sans KR\"}}>\r\n    <div className=\" col-6 \" style={{height:\"100vh\"}}>\r\n            <div className=\"p-2\" >\r\n                <SearchPatient />\r\n            </div>           \r\n    </div>\r\n    <div className=\" col-6 \" style={{height:\"100vh\"}}>\r\n            <div className=\"row-6 p-2\">\r\n                <Reservation/>         \r\n            </div>\r\n            <div className=\"row-6 p-2 \">\r\n                <PatientReception/>\r\n            </div>\r\n    </div>\r\n        \r\n    </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Reception;","function ButtonHeader(props) {\r\n  return (\r\n    <>\r\n    <style>\r\n    </style>\r\n      <div className=\"row pb-1\" style={{height:\"50px\"}}>\r\n        <div className=\"col-10 row\"><div className=\"p-2 ml-3 mr-2 text-center\" style={{ backgroundColor:props.color, width:\"40px\", color:\"#FFFFFF\"}}><i className={props.iclassName}></i></div><div className=\"d-flex align-items-center\">{props.headertitle}</div></div>\r\n        <div className=\"col-2 d-flex align-items-center justify-content-end mr-2\"><i onClick={props.onclick} className={`${props.btnicon}`} style={{cursor:\"pointer\", fontSize: \"1.5rem\", marginTop:\"10px\", }}></i></div>\r\n      </div>    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default ButtonHeader;","import { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction DiagnosesItem(props) {\r\n  \r\n  return (\r\n    <>\r\n    <div tabIndex=\"-1\" onClick={(event)=>{if(props.onClick)props.onClick(props.item); }} className={\"test ml-2 mr-2 mb-2 pt-2 pb-2 d-flex align-items-center border border-dark\"} style={{borderRadius:\"7px\",fontSize: \"13px\" }}>\r\n        <div className={\"col text-center\"}>{props.item.diagnosesdataid}</div>\r\n        <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{props.item.diagnosesdataname}</Tooltip>}>\r\n          <div className={\"col text-center border-left\"} style={{whiteSpace:\"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.diagnosesdataname}</div>\r\n        </OverlayTrigger>\r\n        <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{props.item.diagnosesdataename}</Tooltip>}>\r\n          <div className={\"col text-center border-left\"} style={{whiteSpace:\"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.diagnosesdataename}</div>\r\n        </OverlayTrigger>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DiagnosesItem;\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction PrescriptionDiagnosesItem(props) {\r\n\r\n  return (\r\n    <div className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n      <div style={{width:\"25%\"}}>{props.item.diagnosesdataid}</div>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.diagnosesdataname}</Tooltip>}>\r\n        <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.diagnosesdataname}</div>\r\n      </OverlayTrigger>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.diagnosesdataename}</Tooltip>}>\r\n        <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.diagnosesdataename}</div>\r\n      </OverlayTrigger>\r\n      <div style={{width:\"25%\"}}><button className=\"btn btn-success btn-sm\" onClick={() => {props.addItem(props.item)}}>추가</button></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PrescriptionDiagnosesItem);","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Modal, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport Swal from \"sweetalert2\";\r\nimport PrescriptionDiagnosesItem from \"./PrescriptionDiagnosesItem\";\r\n\r\nfunction PrescriptionDiagnosesModal(props) {\r\n\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [prescriptionItems, setPrescriptionItems] = useState([]);\r\n  const [searchList, setSearchList] = useState([]);\r\n  const [searchType, setSearchType] = useState(\"dataid\");\r\n\r\n  const handleSearchName = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(props.show === true){\r\n      setPrescriptionItems(props.itemList);\r\n      setSearchList(props.staticItemList);\r\n      setSearchName(\"\");\r\n    }\r\n  },[props]);\r\n\r\n  const prescribe = useCallback((items) => {\r\n    props.prescribe(items);\r\n    props.handleClose();\r\n  }, [props]);\r\n\r\n  const addItem = useCallback((item) => {\r\n      setPrescriptionItems((prevItems) => {\r\n        const compare = prevItems.findIndex((obj) => obj.diagnosesdataid === item.diagnosesdataid);\r\n        if(compare >= 0){\r\n          Swal.fire({\r\n            text:\"이미 처방 받았습니다.\",\r\n            width: \"430px\",\r\n            imageUrl:\"/exclamation.png\",\r\n            imageWidth: 150,\r\n            confirmButtonText:\"확인\",\r\n            confirmButtonColor:\"#3E5799\"\r\n          });\r\n          return prevItems;\r\n        } else {\r\n          const newItem = {\r\n            ...item,\r\n            treatmentid:props.treatment.treatmentid\r\n          }\r\n          const newItems = prevItems.concat(newItem);\r\n          return newItems;\r\n        }\r\n      });\r\n  },[props.treatment]);\r\n\r\n  const removeItem = useCallback((item) => {\r\n    setPrescriptionItems((prevItems) => {\r\n      const newItems = prevItems.filter(prevItem => prevItem.diagnosesdataid !== item.diagnosesdataid);\r\n      return newItems;\r\n    })\r\n  }, [])\r\n\r\n  const selectType = useCallback((event) => {\r\n    setSearchType(event.target.value);\r\n  }, []);\r\n\r\n  const search = useCallback((search, searchType) => {\r\n    let newItems = [];\r\n    search = search.toUpperCase();\r\n    setSearchList(() => {\r\n      if(searchType === \"dataid\") {\r\n        newItems = props.staticItemList.filter(diagnosis => (diagnosis.diagnosesdataid.toUpperCase()).indexOf(search) !== -1)\r\n      } else if(searchType === \"kname\") {\r\n        newItems = props.staticItemList.filter(diagnosis => diagnosis.diagnosesdataname.indexOf(search) !== -1)\r\n      } else if(searchType === \"ename\") {\r\n        newItems = props.staticItemList.filter(diagnosis => (diagnosis.diagnosesdataename.toUpperCase()).indexOf(search) !== -1)\r\n      }\r\n      return newItems;\r\n    })\r\n\r\n  },[props.staticItemList]);\r\n\r\n  const rowRenderer = ({index, key, style}) => {\r\n    return (\r\n      <div key={key} style={style}>\r\n        <PrescriptionDiagnosesItem item={searchList[index]} addItem={addItem}></PrescriptionDiagnosesItem>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <Modal animation={false} show={props.show} onHide={props.handleClose} size=\"xl\" centered>\r\n      <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"}}>\r\n        <Modal.Title style={{color:\"#FFFFFF\"}}>상병 목록</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body >\r\n        <div className=\"input-group d-flex pb-2 justify-content-end border-bottom\">\r\n          <div className=\"d-flex\">\r\n          <select className=\"custom-select\" defaultValue=\"dataid\" style={{width:\"110px\"}} onChange={selectType}>\r\n            <option value=\"dataid\" selected={searchType ===\"dataid\"}>질병코드</option>\r\n            <option value=\"kname\" selected={searchType ===\"kname\"}>질병명(한글)</option>\r\n            <option value=\"ename\" selected={searchType ===\"ename\"}>질병명(영어)</option>\r\n          </select>\r\n            <input type=\"text\" onChange={handleSearchName}/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={ () => search(searchName ,searchType)}>검색</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{height:\"500px\"}} className=\"d-flex\">\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\"}}>\r\n            <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n              <div style={{width:\"25%\"}}>질병코드</div>\r\n              <div style={{width:\"25%\"}}>질병명(한글)</div>\r\n              <div style={{width:\"25%\"}}>질병명(영어)</div>\r\n              <div style={{width:\"25%\"}}></div>\r\n            </div>\r\n            <div className=\"overflow-auto border\" style={{height:\"450px\"}}>\r\n            {prescriptionItems != null &&\r\n            prescriptionItems.map ((item, index) => {\r\n              return (\r\n                <div key={item.diagnosesdataid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n                  <div style={{width:\"25%\"}}>{item.diagnosesdataid}</div>\r\n                  <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{item.diagnosesdataname}</Tooltip>}>\r\n                    <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{item.diagnosesdataname}</div>\r\n                  </OverlayTrigger>\r\n                  <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{item.diagnosesdataename}</Tooltip>}>\r\n                    <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{item.diagnosesdataename}</div>\r\n                  </OverlayTrigger>\r\n                  <div style={{width:\"25%\"}}><button className=\"btn btn-danger btn-sm\" onClick={() => {removeItem(item)}}>제거</button></div>\r\n                </div>\r\n              );\r\n            })} \r\n            </div>\r\n          </div> \r\n\r\n          <div className=\"col-1 d-flex align-items-center justify-content-center\">\r\n            <i className=\"bi bi-arrow-left-square\" style={{fontSize:\"30px\"}}></i>\r\n          </div>\r\n\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\"}}>\r\n            <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n              <div style={{width:\"25%\"}}>질병코드</div>\r\n              <div style={{width:\"25%\"}}>질병명(한글)</div>\r\n              <div style={{width:\"25%\"}}>질병명(영어)</div>\r\n              <div style={{width:\"25%\"}}></div>\r\n            </div>\r\n            <div className=\"border\" style={{height:\"450px\"}}>\r\n              {searchList.length === 0 ? \r\n              <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                <i className=\"bi bi-x-octagon mr-2\"></i>  검색 결과가 없습니다.\r\n              </div>\r\n              :\r\n              <AutoSizer>\r\n                {\r\n                  ({width, height}) => {\r\n                    return(\r\n                      <List width={width} height={height}\r\n                        rowCount={searchList.length}\r\n                        rowHeight={50}\r\n                        rowRenderer={rowRenderer}\r\n                        overscanRowCount={5}\r\n                      />\r\n                    )\r\n                  }\r\n                }\r\n              </AutoSizer>\r\n              }\r\n            </div>\r\n          </div> \r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" size=\"sm\" onClick={props.handleClose}>\r\n          닫기\r\n        </Button>\r\n        <Button variant=\"outline-primary\" size=\"sm\" onClick={() => { prescribe(prescriptionItems) } }>\r\n          선택 완료\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PrescriptionDiagnosesModal;","import { useState } from \"react\";\r\nimport ButtonHeader from \"./components/ButtonHeader\";\r\nimport DiagnosesItem from \"./components/Diagnoses/DiagnosesItem\";\r\nimport PrescriptionDiagnosesModal from \"./components/Diagnoses/PrescriptionDiagnosesModal\";\r\n\r\n\r\nfunction DiagnosisList(props) {\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const info = () => {\r\n    alert(\"진료중인 진료를 선택해주세요.\");\r\n  }\r\n  const prescribeDiagnoses =  (prescriptionItems) => {\r\n    props.prescribeDiagnoses(prescriptionItems);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ButtonHeader headertitle=\"상병 목록\" iclassName=\"bi bi-check2-square\" color=\"#D27E7B\" btnicon=\"bi bi-plus-square\" onclick={props.treatment.status===\"진료중\"? handleShow : info}/>\r\n      <PrescriptionDiagnosesModal show={show} treatment={props.treatment} handleClose={handleClose} staticItemList={props.staticDignoses} itemList={props.treatmentDiagnoses} prescribe={prescribeDiagnoses}></PrescriptionDiagnosesModal>\r\n      <div className=\"overflow-auto p-3\" style={{height:\"calc(100% - 50px\"}}>\r\n\r\n      \r\n      {\r\n        props.treatment.treatmentid == null ? \r\n        <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n          <div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"2px\"}}><div><i class=\"bi bi-folder-check\" style={{fontSize:\"100px\"}}></i></div><div style={{fontSize:\"16px\"}}>진료를 선택해주세요.</div></div>\r\n        </div>\r\n        :\r\n        (\r\n          props.loading === true ? \r\n          <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n          :\r\n          (\r\n            props.treatmentDiagnoses.length !==0 ? \r\n            props.treatmentDiagnoses.map (diagnosis => {\r\n              return (\r\n                <DiagnosesItem key={diagnosis.diagnosesdataid} item={diagnosis}></DiagnosesItem>\r\n              );\r\n            })\r\n            :\r\n            <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n              <div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"2px\"}}><div><i class=\"bi bi-plus-square\" style={{fontSize:\"100px\"}}></i></div><div style={{fontSize:\"16px\"}}>처방 받은 내역이 없습니다.</div></div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n      </div>\r\n\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default DiagnosisList;","import React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction PrescriptionDrugItem(props) {\r\n\r\n  const handleChange = (event) => {\r\n    props.onChangeQuantity(event, props.quantityArr);\r\n  }\r\n\r\n  return (\r\n    <div key={props.item.drugid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n      <div style={{width:\"25%\"}}>{props.item.drugid}</div>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.drugname}</Tooltip>}>\r\n        <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.drugname}</div>\r\n      </OverlayTrigger>\r\n      <div className=\"d-flex\" style={{width:\"25%\"}}>\r\n        <div style={{width:\"60%\", marginRight:\"3px\"}}>\r\n          <input min={1} type=\"number\" name={props.item.drugid} value={props.quantityArr[props.item.drugid] || 1} onChange={handleChange} className=\"form-control\"></input>\r\n        </div>\r\n        <div style={{width:\"40%\"}}>{props.item.drugunit}</div>\r\n      </div>\r\n      <div style={{width:\"25%\"}}><button className=\"btn btn-success btn-sm\" onClick={() => {props.addItem(props.item, props.quantityArr[props.item.drugid], props.quantityArr)}}>추가</button></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PrescriptionDrugItem);","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Modal, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport Swal from \"sweetalert2\";\r\nimport PrescriptionDrugsItem from \"./PrescriptionDrugItem\"\r\n\r\nfunction PrescriptionDrugsModal(props) {\r\n\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [searchList, setSearchList] = useState([]);\r\n  const [searchType, setSearchType] = useState(\"drugid\");\r\n\r\n  const [quantityArr, setQuantityArr] = useState({});\r\n  const [prescriptionItems, setPrescriptionItems] = useState([]);\r\n  \r\n  const handleSearchName = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n  \r\n  const onChangeQuantity = useCallback((e, quantityArr) => {\r\n    setQuantityArr({\r\n      ...quantityArr,\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(props.show === true){\r\n      setPrescriptionItems(props.itemList);\r\n      setQuantityArr({});\r\n      setSearchName(\"\");\r\n      setSearchList(props.staticItemList);\r\n    }\r\n  },[props]);\r\n\r\n  const prescribe = useCallback((items) => {\r\n    props.prescribe(items);\r\n    props.handleClose();\r\n  }, [props]);\r\n\r\n\r\n  const addItem = useCallback((item, quantity=1, quantityArr) => {\r\n    if(quantity <=0){\r\n      quantity = 1;\r\n    }\r\n    setPrescriptionItems((prevItems) => {\r\n      const compare = prevItems.findIndex((obj) => obj.drugid === item.drugid);\r\n      if(compare >= 0){\r\n        Swal.fire({\r\n          text:\"이미 처방 받았습니다.\",\r\n          width: \"430px\",\r\n          imageUrl:\"/exclamation.png\",\r\n          imageWidth: 150,\r\n          confirmButtonText:\"확인\",\r\n          confirmButtonColor:\"#3E5799\"\r\n        });\r\n        return prevItems;\r\n      } else {\r\n        const newItem = {\r\n          ...item,\r\n          quantity:quantity,\r\n          treatmentid:props.treatment.treatmentid\r\n        }\r\n        const newItems = prevItems.concat(newItem);\r\n        setQuantityArr({\r\n          ...quantityArr,\r\n          [item.drugid] : 0\r\n        })\r\n        return newItems;\r\n      }\r\n    });\r\n\r\n  }, [props.treatment]);\r\n\r\n  const removeItem = useCallback((item) => {\r\n    setPrescriptionItems(prevItems => {\r\n      const newItems = prevItems.filter(prevItem => prevItem.drugid != item.drugid);\r\n      return newItems;\r\n    })\r\n  }, []);\r\n\r\n  const selectType = useCallback((event) => {\r\n    setSearchType(event.target.value);\r\n  }, []);\r\n\r\n  const search = useCallback((search, searchType) => {\r\n    let newItems = [];\r\n    search = search.toUpperCase();\r\n    setSearchList(() => {\r\n      if(searchType === \"drugid\") {\r\n        newItems = props.staticItemList.filter(drug => (drug.drugid.toUpperCase()).indexOf(search) !== -1)\r\n      } else if(searchType === \"drugname\") {\r\n        newItems = props.staticItemList.filter(drug => (drug.drugname.toUpperCase()).indexOf(search) !== -1)\r\n      } \r\n      return newItems;\r\n    })\r\n\r\n  },[props.staticItemList]);\r\n\r\n  const rowRenderer = ({index, key, style}) => {\r\n    return (\r\n      <div key={key} style={style}>\r\n        <PrescriptionDrugsItem item={searchList[index]} addItem={addItem} quantityArr={quantityArr} onChangeQuantity={onChangeQuantity}></PrescriptionDrugsItem>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal animation={false} show={props.show} onHide={props.handleClose} size=\"xl\" centered>\r\n      <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"} }>\r\n        <Modal.Title style={{color:\"#FFFFFF\"}}>약 처방</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n\r\n        <div className=\"input-group d-flex pb-2 justify-content-end border-bottom\">\r\n          <div className=\"d-flex\">\r\n            <select className=\"custom-select\" style={{width:\"110px\"}} onChange={selectType}>\r\n              <option value=\"drugid\" selected={searchType ===\"drugid\"}>약품코드</option>\r\n              <option value=\"drugname\" selected={searchType ===\"drugname\"}>약품명</option>\r\n            </select>\r\n            <input type=\"text\" onChange={handleSearchName}/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={ () => search(searchName, searchType)}>검색</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{height:\"500px\"}} className=\"d-flex\">\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\"}}>\r\n            <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n              <div style={{width:\"25%\"}}>약품코드</div>\r\n              <div style={{width:\"25%\"}}>약품명</div>\r\n              <div style={{width:\"25%\"}}>수량</div>\r\n              <div style={{width:\"25%\"}}></div>\r\n            </div>\r\n            <div className=\"overflow-auto border\" style={{height:\"450px\"}}>\r\n            {prescriptionItems != null &&\r\n            prescriptionItems.map ((item, index) => {\r\n              return (\r\n                <div key={item.drugid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n                  <div style={{width:\"25%\"}}>{item.drugid}</div>\r\n                  <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{item.drugname}</Tooltip>}>\r\n                    <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{item.drugname}</div>\r\n                  </OverlayTrigger>\r\n                  <div style={{width:\"25%\"}}>{item.quantity} {item.drugunit}</div>\r\n                  <div style={{width:\"25%\"}}><button className=\"btn btn-danger btn-sm\" onClick={() => {removeItem(item)}}>제거</button></div>\r\n                </div>\r\n              );\r\n            })} \r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 d-flex align-items-center justify-content-center\">\r\n            <i className=\"bi bi-arrow-left-square\" style={{fontSize:\"30px\"}}></i>\r\n          </div>\r\n\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\"}}>\r\n            <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n              <div style={{width:\"25%\"}}>약품코드</div>\r\n              <div style={{width:\"25%\"}}>약품명</div>\r\n              <div style={{width:\"25%\"}}>수량</div>\r\n              <div style={{width:\"25%\"}}></div>\r\n            </div>\r\n            <div className=\"border\" style={{height:\"450px\"}}>\r\n              {searchList.length === 0 ? \r\n              <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                <i className=\"bi bi-x-octagon mr-2\"></i>  검색 결과가 없습니다.\r\n              </div>\r\n              :\r\n              <AutoSizer>\r\n                {\r\n                  ({width, height}) => {\r\n                    return (\r\n                      <List width={width} height={height}\r\n                        rowCount={searchList.length}\r\n                        rowHeight={50}\r\n                        rowRenderer={rowRenderer}\r\n                        overscanRowCount={5}\r\n                      />\r\n                    )\r\n                  }\r\n                }\r\n              </AutoSizer>\r\n              }\r\n            </div>\r\n          </div> \r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" size=\"sm\" onClick={props.handleClose}>\r\n          닫기\r\n        </Button>\r\n        <Button variant=\"outline-success\" size=\"sm\" onClick={() => { prescribe(prescriptionItems) } }>\r\n          선택 완료\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PrescriptionDrugsModal;","import { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction DrugsItem(props) {\r\n  \r\n  return (\r\n    <>\r\n    <div tabIndex=\"-1\" onClick={(event)=>{if(props.onClick)props.onClick(props.item); }} className={\"test ml-2 mr-2 mb-2 pt-2 pb-2 d-flex align-items-center border border-dark \"} style={{borderRadius:\"7px\",fontSize: \"13px\" }}>\r\n        <div className={\"col text-center\"}>{props.item.drugid}</div>\r\n        <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{props.item.drugname}</Tooltip>}>\r\n          <div className={\"col text-center border-left\"} style={{whiteSpace:\"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.drugname}</div>\r\n        </OverlayTrigger>\r\n        <div className={\"col text-center border-left\"} style={{whiteSpace:\"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.drugtype}</div>\r\n        <div className={\"col text-center border-left\"} style={{whiteSpace:\"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.quantity} {props.item.drugunit}</div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DrugsItem;\r\n\r\n\r\n\r\n\r\n","\r\nimport { useState } from \"react\";\r\n\r\nimport PrescriptionModal from \"./components/Drugs/PrescriptionDrugsModal\"\r\nimport ButtonHeader from \"./components/ButtonHeader\";\r\nimport DrugsItem from \"./components/Drugs/DrugsItem\";\r\n\r\nfunction DrugList(props) {\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  const info = () => {\r\n    alert(\"진료중인 진료를 선택해주세요.\");\r\n  }\r\n\r\n  const prescribeDrugs = (prescriptionItems) => {\r\n    props.prescribeDrugs(prescriptionItems);\r\n  }\r\n  return (\r\n    <>\r\n    <ButtonHeader headertitle=\"처방약 목록\" iclassName=\"bi bi-bag-plus\" color=\"#FFCD82\" btnicon=\"bi bi-plus-square\" onclick={props.treatment.status===\"진료중\"? handleShow : info}/>\r\n    <PrescriptionModal show={show} treatment={props.treatment} handleClose={handleClose} staticItemList={props.staticDrugs} itemList={props.treatmentDrugs} prescribe={prescribeDrugs}></PrescriptionModal>\r\n    <div className=\"overflow-auto p-3\" style={{height:\"calc(100% - 50px\"}}>\r\n      {\r\n        props.treatment.treatmentid == null ? \r\n        <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n          <div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"2px\"}}><div><i class=\"bi bi-folder-check\" style={{fontSize:\"100px\"}}></i></div><div style={{fontSize:\"16px\"}}>진료를 선택해주세요.</div></div>\r\n        </div>\r\n        :\r\n        ( \r\n          props.loading === true ? \r\n          <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n          :\r\n          ( \r\n            props.treatmentDrugs.length !== 0 ?\r\n          \r\n            props.treatmentDrugs !=null &&\r\n            props.treatmentDrugs.map (drug => {\r\n              return (\r\n                <DrugsItem key={drug.drugid} item={drug}></DrugsItem>\r\n              );\r\n            })\r\n            :\r\n            <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n              <div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"2px\"}}><div><i class=\"bi bi-plus-square\" style={{fontSize:\"100px\"}}></i></div><div style={{fontSize:\"16px\"}}>처방 받은 내역이 없습니다.</div></div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    </div>\r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default DrugList;","import { Badge } from \"react-bootstrap\";\r\n\r\nfunction TreatmentItem(props) {\r\n\r\n  return (\r\n    <>\r\n\r\n    <div onClick={(event)=>{if(props.onClick)props.onClick(props.item);}}\r\n        className={\"test ml-2 mr-2 mb-2 pt-2 pb-2 d-flex align-items-center border border-dark\"} \r\n        style={{fontWeight: props.selected===1 ? \"bold\" : null, backgroundColor: props.selected===1 ? \"#3E5799\" : null, cursor:\"pointer\",borderRadius:\"7px\",fontSize: \"13px\" }}>\r\n      {props.property.map((prop,index)=>{\r\n        return(\r\n          <div key={index}  className={index===0?\"col pl-0 pr-0  text-center\":\"col pl-0 pr-0 text-center border-left\"} \r\n          style={{color: props.item[prop]===\"진료 대기\" ? \"green\" : ((props.item[prop]===\"진료 완료\") ? \"red\": (props.item[prop]===\"진료중\"? (props.selected===1 ? \"yellow\": \"blue\") : (props.selected===1 ? \"white\": \"black\")))}}>\r\n            {props.item[prop]}\r\n            {props.item.status === \"진료 대기\" && index === props.property.length - 1 ? <Badge variant=\"success\" className=\"ml-1\">new</Badge> : null}\r\n          </div>\r\n        )\r\n      })}\r\n\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TreatmentItem;\r\n\r\n\r\n\r\n\r\n","import { useCallback, useEffect } from \"react\";\r\nimport TreatmentItem from \"./components/TreatmentItem\";\r\nimport moment from 'moment';\r\nfunction PatientTreatment(props) {\r\n\r\n  const selectTreatment = useCallback((treatment) => {\r\n    props.selectTreatment(treatment);\r\n  }, [props])\r\n\r\n  useEffect(() => {\r\n  }, [props.treatment])\r\n  return (\r\n    <>\r\n      <div className=\"d-flex row pb-1\" style={{height:\"50px\"}}><div className=\"p-2 ml-3 mr-2 text-center\" style={{ backgroundColor:\"#887BD2\", width:\"40px\", color:\"#FFFFFF\"}}><i className=\"bi bi-calendar2-check\"></i></div><div className=\"d-flex align-items-center\">진료 내역</div></div>\r\n      <div className=\"d-flex align-items-center pb-1 justify-content-center\" style={{height:\"50px\", width:\"100%\"}}>\r\n        현재 선택한 진료: {props.treatment.treatmentid}  {props.treatment.treatmentdate} </div>\r\n      {\r\n      props.selectedPatient.patientid != null ? \r\n      <>\r\n        <div className=\"overflow-auto p-3\" style={{height:\"calc(100% - 100px)\"}}>\r\n          {\r\n            props.loading === true ? \r\n            <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n              <div className=\"spinner-border text-primary\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            </div>\r\n            :\r\n            (\r\n              (props.patientTreatments == null || props.patientTreatments.length === 0) ?  \r\n              <div className=\"overflow-auto p-3 border-top justify-content-center d-flex align-items-center\" style={{height:\"100%\"}}>\r\n                <span><div style={{textAlign:\"center\", color:\"#999999\"}}><div><i class=\"bi bi-clipboard-x\" style={{fontSize:\"120px\"}}></i></div><div style={{fontSize:\"16px\"}}>선택한 환자의 진료내역이 없습니다.</div></div></span>\r\n              </div>\r\n              : \r\n              props.patientTreatments.map (treatment => {\r\n                let selected = 0;\r\n                if(treatment.treatmentid === props.treatment.treatmentid){\r\n                  selected = 1;\r\n                } \r\n                return (\r\n                  <TreatmentItem key={treatment.treatmentid} selected={selected} item={{...treatment, treatmentdate: moment(treatment.treatmentdate).format(\"YYYY-MM-DD\")}} property={[\"treatmentid\", \"treatmentdate\", \"status\"]} onClick={selectTreatment}></TreatmentItem>\r\n                );\r\n              })\r\n            )\r\n          }\r\n        </div>\r\n      </>\r\n      :\r\n      <div className=\"overflow-auto p-3 border-top justify-content-center d-flex align-items-center\" style={{height:\"calc(100% - 100px)\"}}>\r\n        <span><div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"2px\"}}><div><i class=\"bi bi-person-x\" style={{fontSize:\"100px\"}}></i></div><div style={{fontSize:\"20px\"}}>환자를 선택해주세요</div></div></span>\r\n      </div>\r\n      }\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PatientTreatment;\r\n\r\n\r\n\r\n\r\n// selectedTreatment.treatmentid === treatment.treatmentid ?  {cursor:\"pointer\", backgroundColor:\"#38B2AC\"} : ","import axios from \"axios\";\r\n\r\n//treatment관련\r\nexport function getAllTreatments(patientid){\r\n    const result = axios.get(\"treatment/treatments/\"+patientid);\r\n    return result;\r\n}\r\n\r\n//처방하기\r\nexport function prescribeTreatment(prescription) {\r\n  const result = axios.post(\"treatment/prescribetreatment\", prescription);\r\n  return result;\r\n}\r\n\r\n//진료 상태 변경\r\nexport function updateTreatment(treatment) {\r\n  const result = axios.put(\"/treatment/updatetreatment\", treatment);\r\n  return result;\r\n}\r\n\r\n//약 목록 가져오기\r\nexport function getStaticDrugs() {\r\n  const result = axios.get(\"treatment/staticdrugs\");\r\n  return result;\r\n}\r\n\r\n//질병 목록 가져오기\r\nexport function getStaticDiagnoses() {\r\n  const result = axios.get(\"treatment/staticdiagnoses\");\r\n  return result;\r\n}\r\n\r\n//검사 목록 가져오기\r\nexport function getStaticTests() {\r\n  const result = axios.get(\"treatment/statictests\");\r\n  return result;\r\n}\r\n\r\n//처방 목록 가져오기\r\nexport function getPrescriptionList(treatmentid) {\r\n  const result = axios.get(\"treatment/getprescription/\" + treatmentid);\r\n  return result;\r\n}\r\n\r\n//실시간을 위해 테스트 리스트 가져오기\r\nexport function getTestList(treatmentid) {\r\n  const result = axios.get(\"treatment/gettestlist/\" + treatmentid);\r\n  return result;\r\n}\r\n\r\n//환자 목록 가져오기\r\nexport function getPatientList() {\r\n  const result = axios.get(\"treatment/getpatientlist\");\r\n  return result;\r\n}\r\n\r\n//드로워에서 환자 클릭시 환장 정보 가져오기\r\nexport function getPatient(patientid) {\r\n  const result = axios.get(\"treatment/getpatient/\"+patientid);\r\n  return result;\r\n}\r\n\r\nexport function getTestImgs(treatmentid, testdataid) {\r\n  const result = axios.get(\"treatment/getimgList\", {params: {treatmentid, testdataid}});\r\n  return result;\r\n}","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nfunction ImgDetailModal(props) {\r\n  return (\r\n    <Modal animation={false} show={props.show} onHide={props.closeImgModal} size=\"xl\" centered>\r\n      <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"}}>\r\n        <Modal.Title style={{color:\"#FFFFFF\"}}>사진 상세</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body >\r\n        {props.selectedImg.imgid != null ? \r\n        <a href={`http://kosa3.iptime.org:50006/treatment/imgdownload/${props.selectedImg.imgid}`}>\r\n          <img width={\"100%\"} height={\"100%\"} alt=\"xray\"  src={`http://kosa3.iptime.org:50006/treatment/imgdownload/${props.selectedImg.imgid}`}></img>\r\n        </a>\r\n        :\r\n        null\r\n        }\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" size=\"sm\" onClick={props.closeImgModal}>\r\n          닫기\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ImgDetailModal;","import { useEffect, useState } from \"react\";\r\nimport { Accordion, Alert, Badge, Button, Card, Carousel } from \"react-bootstrap\";\r\nimport { getTestImgs } from \"apis/Treatment\"\r\nimport ImgDetailModal from \"./ImgDetailModal\";\r\n\r\nfunction PackageImgTest(props) {\r\n\r\n  const [imgList, setImgList] = useState([]);\r\n  const [selectedImg, setSelectedImg] = useState({});\r\n  const [imgShow, setImgShow] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const test = props.groupTest.tests[0];\r\n    if(test.result != null && test.result === \"첨부완료\"){\r\n      work(test.treatmentid, test.testdataid);\r\n    } \r\n  },[props.groupTest])\r\n\r\n  const work = async(treatmentid, testdataid) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await getTestImgs(treatmentid, testdataid);\r\n      setImgList(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n   \r\n  }\r\n\r\n  const showImgModal = (img) => {\r\n    setSelectedImg(img);\r\n    setImgShow(true);\r\n  }\r\n\r\n  const closeImgModal = () => {\r\n    setSelectedImg({});\r\n    setImgShow(false)\r\n\r\n  };\r\n  return (\r\n    <>\r\n      <Accordion className=\"mb-3\">\r\n        <Card>\r\n          <Accordion.Toggle as={Alert} variant=\"dark\" className=\"mb-0\" eventKey=\"0\">\r\n          <span style={{fontWeight:\"bold\"}}>\r\n          {props.groupTest.groupname}&nbsp;&nbsp;</span>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body>\r\n              {props.groupTest.tests.map(test => {\r\n                return (\r\n                  <Accordion key={test.testdataid} className=\"mb-3\" defaultActiveKey={\"0\"}>\r\n                    <Card border=\"secondary\">\r\n                      <Card.Header>\r\n                        <Accordion.Toggle block as={Button} size=\"sm\" variant=\"outline-light\" eventKey=\"0\">\r\n                          <span style={{fontSize:\"14px\", fontWeight:\"bold\", color:\"black\"}}>{test.testdataname}\t&nbsp;&nbsp; {props.groupTest.tests[0].result ===\"첨부완료\" ? <Badge variant=\"primary\">입력완료</Badge> : <Badge variant=\"danger\">미입력</Badge>}\r\n                          </span>\r\n                        </Accordion.Toggle>\r\n                      </Card.Header>\r\n                      <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                        {props.groupTest.tests[0].result ===\"첨부완료\" ?\r\n                          <Carousel interval={null} prevIcon={<span className=\"carousel-control-prev-icon bg-dark\"/>} nextIcon={<span className=\"carousel-control-next-icon bg-dark\"/>}>\r\n                            {\r\n                            loading ===true ? \r\n                            <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n                              <div className=\"spinner-border text-primary\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                              </div>\r\n                            </div>\r\n                            :\r\n                            imgList != null &&\r\n                            imgList.map((img) => {\r\n                              return(\r\n                                <Carousel.Item key={img.imgid}>\r\n                                  <img\r\n                                    className=\"d-block\"\r\n                                    src={`http://kosa3.iptime.org:50006/treatment/imgdownload/${img.imgid}`}\r\n                                    width=\"100%\"\r\n                                    height=\"536px\"\r\n                                    onClick={() => { showImgModal(img) }}\r\n                                    style={{cursor:\"pointer\"}}\r\n                                    alt=\"xray\"\r\n                                  />\r\n                                </Carousel.Item>\r\n                              )\r\n                            })}\r\n                          </Carousel>\r\n                          :\r\n                          \"결과 미입력\"\r\n                        }\r\n                        </Card.Body>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                  </Accordion>\r\n                );\r\n              })}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n      <ImgDetailModal show={imgShow} closeImgModal={closeImgModal} selectedImg={selectedImg}></ImgDetailModal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PackageImgTest;","\r\nimport { Accordion, Badge, Button, Card, Table } from \"react-bootstrap\";\r\n\r\nfunction Test(props) {\r\n  return (\r\n    <Accordion className=\"mb-3\" defaultActiveKey={\"0\"}>\r\n    <Card border=\"secondary\">\r\n      <Card.Header>\r\n        <Accordion.Toggle block as={Button} size=\"sm\" variant=\"outline-light\" eventKey=\"0\">\r\n          <span style={{fontSize:\"14px\", fontWeight:\"bold\", color:\"black\"}}>{props.test.testdataid}\t&nbsp;&nbsp;{props.test.testname}\r\n            &nbsp;&nbsp;<span style={{color:props.test.testcontainer===\"EDTA\"? \"purple\" : \"red\", marginRight:\"8px\"}}>{props.test.testcontainer}</span>\r\n           {(props.test.result != null && props.test.result !==\"\") ? <Badge variant=\"primary\">입력완료</Badge> : <Badge variant=\"danger\">미입력</Badge>} \r\n          </span>\r\n        </Accordion.Toggle>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"0\">\r\n        <Card.Body>\r\n          {(props.test.result != null && props.test.result !==\"\") ? \r\n            <Table striped hover className=\"text-center table-bordered\">\r\n              <thead></thead>\r\n              <tbody>\r\n                <tr>\r\n                  <th>하한치</th>\r\n                  <th>검사결과</th>\r\n                  <th>상한치</th>\r\n                </tr>\r\n                <tr>\r\n                  <td>{props.test.min}</td>\r\n                  <td className={(props.test.result < props.test.min || props.test.result > props.test.max) ? \"table-danger\" : \"table-primary\"}>{props.test.result == null ? 0 : props.test.result}&nbsp;&nbsp;{props.test.testunit}</td>\r\n                  <td>{props.test.max}</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n            : \r\n            \"결과 미입력\"}\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default Test;","import { Accordion, Alert, Card } from \"react-bootstrap\";\r\nimport Test from \"../Test\";\r\n\r\nfunction PackageTest(props) {\r\n  return (\r\n    <Accordion className=\"mb-3\">\r\n      <Card >\r\n        <Accordion.Toggle as={Alert} variant=\"dark\" className=\"mb-0\" eventKey=\"0\">\r\n        <span style={{fontWeight:\"bold\"}}>\r\n        {props.groupTest.groupcode}&nbsp;&nbsp;{props.groupTest.groupname}</span>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"0\">\r\n          <Card.Body>\r\n            {props.groupTest.tests.map(test => {\r\n              return (\r\n                <Test key={test.testdataid} test={test}/>\r\n              );\r\n            })}\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default PackageTest;","import React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction PrescriptionPackageItem(props) {\r\n  return (\r\n    <div key={props.item.groupcode} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n      <div style={{width:\"40%\"}}>{props.item.groupcode}</div>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.groupname}</Tooltip>}>\r\n        <div style={{width:\"40%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.groupname}</div>\r\n      </OverlayTrigger>\r\n      <div style={{width:\"20%\"}}><button className=\"btn btn-success btn-sm\" onClick={() => {props.addPackage(props.item)}}>추가</button></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PrescriptionPackageItem);","import React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction PrescriptionTestItem(props) {\r\n  return (\r\n    <div key={props.item.testdataid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n      <div style={{width:\"20%\"}}>{props.item.groupcode}</div>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.groupname}</Tooltip>}>\r\n        <div style={{width:\"20%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.groupname}</div>\r\n      </OverlayTrigger>\r\n      <div style={{width:\"20%\"}}>{props.item.testdataid}</div>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.testdataname}</Tooltip>}>\r\n        <div style={{width:\"20%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.testdataname}</div>\r\n      </OverlayTrigger>\r\n      <div style={{width:\"20%\"}}><button className=\"btn btn-success btn-sm\" onClick={() => {props.addItem(props.item)}}>추가</button></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PrescriptionTestItem);","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Modal, Nav, OverlayTrigger, Tab, Tooltip } from \"react-bootstrap\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport Swal from \"sweetalert2\";\r\nimport PrescriptionPackageItem from \"./PrescriptionPackageItem\";\r\nimport PrescriptionTestItem from \"./PrescriptionTestItem\";\r\n\r\nfunction PrescriptionTestsModal(props) {\r\n\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [searchType, setSearchType] = useState(\"groupcode\");\r\n  const [eventKey, setEventKey] = useState(\"test\")\r\n\r\n  const [prescriptionItems, setPrescriptionItems] = useState([]);\r\n  const [groupTests, setGroupTests] = useState([]);\r\n  const [searchGroupTests, setSearchGroupTests] = useState([]);\r\n  const [searchList, setSearchList] = useState([]);\r\n\r\n  const handleSearchName = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(props.show === true){\r\n      setPrescriptionItems(props.itemList);\r\n      setSearchName(\"\");\r\n      setSearchList(props.staticItemList);\r\n      setSearchGroupTests(groupTests);\r\n    }\r\n  },[props, groupTests]);\r\n\r\n  useEffect(() => {\r\n    const groupList = [];\r\n    props.staticItemList.reduce((gt, t) => {\r\n      if(!gt[t.groupcode]){\r\n        gt[t.groupcode] = {};\r\n        gt[t.groupcode].groupcode = t.groupcode;\r\n        gt[t.groupcode].groupname = t.groupname;\r\n        gt[t.groupcode].tests = [];\r\n        gt[t.groupcode].tests.push(t);\r\n        groupList.push(gt[t.groupcode]);\r\n      } else {\r\n        gt[t.groupcode].tests.push(t);\r\n      }\r\n      return gt;\r\n    }, {});\r\n    setGroupTests(groupList);\r\n    setSearchGroupTests(groupList);\r\n  }, [props.staticItemList])\r\n\r\n  const prescribe = useCallback((items) => {\r\n    props.prescribe(items);\r\n    props.handleClose();\r\n  },[props]);\r\n\r\n  const addItem = useCallback((item) => {  \r\n      setPrescriptionItems((prevItems) => {\r\n        const compare = prevItems.findIndex((obj) => obj.testdataid === item.testdataid);\r\n        if(compare >= 0){\r\n          Swal.fire({\r\n            text:\"이미 처방 받았습니다.\",\r\n            width: \"430px\",\r\n            imageUrl:\"/exclamation.png\",\r\n            imageWidth: 150,\r\n            confirmButtonText:\"확인\",\r\n            confirmButtonColor:\"#3E5799\"\r\n          });\r\n          return prevItems;\r\n        } else {\r\n          const newItems = prevItems.concat(item);\r\n          return newItems;\r\n        }\r\n      });\r\n\r\n  },[])\r\n\r\n  const addPackage = useCallback((item) => {\r\n    setPrescriptionItems((prevItems) => {\r\n      let newItems = prevItems.filter(prevItem => prevItem.groupcode !== item.groupcode);\r\n      newItems = newItems.concat(item.tests);\r\n      return newItems;\r\n    })\r\n  },[]);\r\n\r\n  const removeItem = useCallback((item) => {\r\n    setPrescriptionItems((prevItems) => {\r\n      const newItems = prevItems.filter(prevItem => prevItem.testdataid !== item.testdataid);\r\n      return newItems;\r\n    })\r\n  }, [])\r\n  \r\n  const search = useCallback((search, searchType, eventKey) => {\r\n    let newTests = [];\r\n    search = search.toUpperCase();\r\n    if(eventKey === \"test\"){\r\n\r\n      setSearchList(() => {\r\n        if(searchType === \"dataid\") {\r\n          newTests = props.staticItemList.filter(test => (test.testdataid.toUpperCase()).indexOf(search) !== -1);\r\n        } else if (searchType === \"dataname\") {\r\n          newTests = props.staticItemList.filter(test => (test.testdataname.toUpperCase()).indexOf(search) !== -1);\r\n        } else if (searchType === \"groupcode\") {\r\n          newTests = props.staticItemList.filter(test => (test.groupcode.toUpperCase()).indexOf(search) !== -1);\r\n        } else if (searchType === \"groupname\") {\r\n          newTests = props.staticItemList.filter(test => (test.groupname.toUpperCase()).indexOf(search) !== -1);\r\n        } \r\n        return newTests;\r\n      });\r\n    } else if(eventKey === \"package\") {\r\n\r\n      setSearchGroupTests(() => {\r\n        if (searchType === \"groupcode\") {\r\n          newTests = groupTests.filter(test => (test.groupcode.toUpperCase()).indexOf(search) !== -1);\r\n        } else if (searchType === \"groupname\") {\r\n          newTests = groupTests.filter(test => (test.groupname.toUpperCase()).indexOf(search) !== -1);\r\n        }\r\n        return newTests;\r\n      })\r\n    }\r\n\r\n  }, [props.staticItemList, groupTests]);\r\n\r\n  const selectType = useCallback((event) => {\r\n    setSearchType(event.target.value);\r\n  }, []);\r\n\r\n  const selectNav = useCallback((key) => {\r\n    setEventKey(key);\r\n\r\n    setSearchType(\"groupcode\");\r\n    setSearchName(\"\");\r\n\r\n    setSearchList(props.staticItemList);\r\n    setSearchGroupTests(groupTests);\r\n  }, [props.staticItemList, groupTests]);\r\n\r\n  const rowRenderer = ({index, key, style}) => {\r\n    return (\r\n      <div key={key} style={style}>\r\n        <PrescriptionTestItem item={searchList[index]} addItem={addItem}></PrescriptionTestItem>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const rowRendererPackage = ({index, key, style}) => {\r\n    return (\r\n      <div key={key} style={style}>\r\n        <PrescriptionPackageItem item={searchGroupTests[index]} addPackage={addPackage}></PrescriptionPackageItem>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal animation={false} show={props.show} onHide={props.handleClose} size=\"xl\" centered>\r\n      <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"} }>\r\n        <Modal.Title style={{color:\"#FFFFFF\"}}>검사 처방</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body >\r\n        <div className=\"input-group d-flex pb-2 mb-1 justify-content-end border-bottom\">\r\n          <div className=\"d-flex\">\r\n          <select className=\"custom-select\" style={{width:\"110px\"}} onChange={selectType}>\r\n            <option value=\"groupcode\" selected={searchType ===\"groupcode\"}>묶음코드</option>\r\n            <option value=\"groupname\" selected={searchType ===\"groupname\"}>묶음명</option>\r\n            {eventKey !== \"package\"? \r\n              <>\r\n                <option value=\"dataid\" selected={searchType ===\"dataid\"}>처방코드</option>\r\n                <option value=\"dataname\" selected={searchType ===\"dataname\"}>처방명</option>\r\n              </>\r\n              :\r\n              null\r\n            }\r\n          </select>\r\n            <input type=\"text\" value={searchName} onChange={handleSearchName}/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={ () => search(searchName, searchType, eventKey, )}>검색</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{height:\"550px\"}} className=\"d-flex\">\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\", marginTop:\"50px\"}}>\r\n            <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n              <div style={{width:\"20%\"}}>묶음코드</div>\r\n              <div style={{width:\"20%\"}}>묶음명</div>\r\n              <div style={{width:\"20%\"}}>처방코드</div>\r\n              <div style={{width:\"20%\"}}>처방명</div>\r\n              <div style={{width:\"20%\"}}></div>\r\n            </div>\r\n            <div className=\"overflow-auto border\" style={{height:\"460px\"}}>\r\n            {prescriptionItems != null &&\r\n            prescriptionItems.map ((item, index) => {\r\n              return (\r\n                <div key={item.testdataid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n                  <div style={{width:\"20%\"}}>{item.groupcode}</div>\r\n                  <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{item.groupname}</Tooltip>}>\r\n                    <div style={{width:\"20%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{item.groupname}</div>\r\n                  </OverlayTrigger>\r\n                  <div style={{width:\"20%\"}}>{item.testdataid}</div>\r\n                  <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{item.testdataname}</Tooltip>}>\r\n                    <div style={{width:\"20%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{item.testdataname}</div>\r\n                  </OverlayTrigger>\r\n                  <div style={{width:\"20%\"}}><button className=\"btn btn-danger btn-sm\" onClick={() => {removeItem(item)}}>제거</button></div>\r\n                </div>\r\n              );\r\n            })} \r\n            </div>\r\n          </div> \r\n\r\n          <div className=\"col-1 d-flex align-items-center justify-content-center\">\r\n            <i className=\"bi bi-arrow-left-square\" style={{fontSize:\"30px\"}}></i>\r\n          </div>\r\n\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\"}}>\r\n            <div style={{height:\"550px\"}}>\r\n              <Tab.Container defaultActiveKey={eventKey}>\r\n                <Nav fill variant=\"tabs\" onSelect={selectNav} >\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"test\">개별 처방</Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"package\">묶음 처방</Nav.Link>\r\n                  </Nav.Item>\r\n                </Nav>\r\n                <Tab.Content  style={{height:\"500px\"}}>\r\n                  <Tab.Pane eventKey= \"test\" className=\"pt-1\">\r\n                  <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n                    <div style={{width:\"20%\"}}>묶음코드</div>\r\n                    <div style={{width:\"20%\"}}>묶음명</div>\r\n                    <div style={{width:\"20%\"}}>처방코드</div>\r\n                    <div style={{width:\"20%\"}}>처방명</div>\r\n                    <div style={{width:\"20%\"}}></div>\r\n                  </div>\r\n                  <div className=\"border\" style={{height:\"460px\"}}>\r\n                    {searchList.length === 0 ? \r\n                      <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                        <i className=\"bi bi-x-octagon mr-2\"></i>  검색 결과가 없습니다.\r\n                      </div>\r\n                      :\r\n                      <AutoSizer>\r\n                        {\r\n                          ({width, height}) => {\r\n                            return (\r\n                              <List width={width} height={height}\r\n                                rowCount={searchList.length}\r\n                                rowHeight={50}\r\n                                rowRenderer={rowRenderer}\r\n                                overscanRowCount={5}\r\n                              />\r\n                            )\r\n                          }\r\n                        }\r\n                      </AutoSizer>\r\n                    }\r\n                  </div>\r\n                  </Tab.Pane>\r\n\r\n                  <Tab.Pane eventKey=\"package\" className=\"pt-1\">\r\n                    <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n                      <div style={{width:\"40%\"}}>묶음코드</div>\r\n                      <div style={{width:\"40%\"}}>묶음명</div>\r\n                      <div style={{width:\"20%\"}}></div>\r\n                    </div>\r\n                    <div className=\"border\" style={{height:\"460px\"}}>\r\n                    {searchGroupTests.length === 0 ? \r\n                      <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                        <i className=\"bi bi-x-octagon mr-2\"></i>  검색 결과가 없습니다.\r\n                      </div>\r\n                      :\r\n                      <AutoSizer>\r\n                        {\r\n                          ({width, height}) => {\r\n                            return (\r\n                              <List width={width} height={height}\r\n                                rowCount={searchGroupTests.length}\r\n                                rowHeight={50}\r\n                                rowRenderer={rowRendererPackage}\r\n                                overscanRowCount={5}\r\n                              />\r\n                            )\r\n                          }\r\n                        }\r\n                      </AutoSizer>\r\n                    }\r\n                    </div>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </Tab.Container>\r\n            </div>\r\n          </div> \r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" size=\"sm\" onClick={props.handleClose}>\r\n          닫기\r\n        </Button>\r\n        <Button variant=\"outline-primary\" size=\"sm\" onClick={() => { prescribe(prescriptionItems) } }>\r\n          선택 완료\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PrescriptionTestsModal;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Col, Row, Toast } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ButtonHeader from \"./components/ButtonHeader\";\r\nimport PackageImgTest from \"./components/Tests/PackageImgTest\";\r\nimport PackageTest from \"./components/Tests/PackageTest\";\r\nimport PrescriptionTestsModal from \"./components/Tests/PrescriptionTestsModal\";\r\nimport {createSetTreatmentReception } from \"redux/reception-reducer\";\r\n\r\nfunction TestList(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [groupTests, setGroupTests] = useState({});\r\n\r\n  const [receptionToast, setReceptionToast] = useState(false);\r\n  const receptionToastShow = () => setReceptionToast(true);\r\n  const receptionToastClose = () => setReceptionToast(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const treatmentReception = useSelector((state)=>(state.receptionReducer.treatmentreception)) \r\n\r\n  const info = () => {\r\n    alert(\"진료중인 진료를 선택해주세요.\");\r\n  }\r\n\r\n  const toastClose = () => {\r\n    props.closeShow();\r\n  }\r\n\r\n  const prescribeTests = (prescriptionItems) => {\r\n    props.prescribeTests(prescriptionItems);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const group = props.treatmentTests.reduce((gt, t) => {\r\n      if(!gt[t.groupcode]){\r\n        gt[t.groupcode] = {};\r\n        gt[t.groupcode].groupcode = t.groupcode;\r\n        gt[t.groupcode].groupname = t.groupname;\r\n        gt[t.groupcode].testtype = t.testtype;\r\n        gt[t.groupcode].tests = [];\r\n        gt[t.groupcode].tests.push(t);\r\n      } else {\r\n        gt[t.groupcode].tests.push(t);\r\n      }\r\n      return gt;\r\n    }, {});\r\n    setGroupTests(group);\r\n  }, [props.treatmentTests])\r\n\r\n  useEffect(() => {\r\n    if(treatmentReception.status === \"접수\"){\r\n      receptionToastShow();\r\n      dispatch(createSetTreatmentReception({patientid:treatmentReception.patientid, status:\"\"}));\r\n    }\r\n  }, [treatmentReception])\r\n\r\n  return (\r\n    <>\r\n      <ButtonHeader headertitle=\"검사 목록\" iclassName=\"bi bi-droplet\" color=\"#E89677\" btnicon=\"bi bi-plus-square\" onclick={props.treatment.status===\"진료중\"? handleShow : info}/>\r\n      <PrescriptionTestsModal show={show} handleClose={handleClose} staticItemList={props.staticTests} itemList={props.treatmentTests} prescribe={prescribeTests}></PrescriptionTestsModal>\r\n      <div className=\"overflow-auto p-3\" style={{height:\"calc(100% - 50px)\"}}>\r\n        {\r\n          props.treatment.treatmentid == null ? \r\n          <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n            <div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"2px\"}}><div><i class=\"bi bi-folder-check\" style={{fontSize:\"170px\"}}></i></div><div style={{fontSize:\"19px\"}}>진료를 선택해주세요.</div></div>\r\n          </div>\r\n          :\r\n          (\r\n            props.loading === true ? \r\n            <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n              <div className=\"spinner-border text-primary\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            </div>\r\n            :\r\n            (\r\n              props.treatmentTests.length !== 0 ?\r\n              Object.values(groupTests).map(groupTest => {\r\n                return (\r\n                  groupTest.testtype === \"진단검사\" ?\r\n                  <PackageTest key={groupTest.groupcode} groupTest={groupTest}/>\r\n                  :\r\n                  <PackageImgTest key={groupTest.groupcode} groupTest={groupTest}></PackageImgTest>\r\n                );\r\n              })\r\n              :\r\n              <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                <div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"2px\"}}><div><i class=\"bi bi-plus-square\" style={{fontSize:\"140px\"}}></i></div><div style={{fontSize:\"16px\"}}>처방 받은 내역이 없습니다.</div></div>\r\n              </div>\r\n            )\r\n          )\r\n        }\r\n        <div style={{position: \"absolute\", bottom: \"40px\", right: \"30px\", zIndex:\"1000\"}}>\r\n          <Row>\r\n            <Col style={{width:\"400px\"}}>\r\n              <Toast onClose={toastClose} show={props.toastShow} delay={5000} autohide>\r\n                <Toast.Header style={{backgroundColor:\"#1B296D\"}}>\r\n                  <strong className=\"mr-auto\" style={{color:\"white\"}}>Message</strong>\r\n                  <small>complete</small>\r\n                </Toast.Header>\r\n                <Toast.Body style={{backgroundColor:\"white\"}}>진료 완료!</Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <div style={{position: \"absolute\", bottom: \"40px\", right: \"30px\", zIndex:\"990\"}}>\r\n          <Row>\r\n            <Col style={{width:\"400px\"}}>\r\n              <Toast onClose={receptionToastClose} show={receptionToast} delay={4000} autohide>\r\n                <Toast.Header style={{backgroundColor:\"green\"}}>\r\n                  <strong className=\"mr-auto\" style={{color:\"white\"}}>Message</strong>\r\n                </Toast.Header>\r\n                <Toast.Body>진료가 접수 되었습니다.</Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n  \r\n}\r\n\r\nexport default TestList;","import { useEffect, useState } from \"react\";\r\n\r\nfunction TreatmentMemo(props) {\r\n\r\n  const handlechange = (event) => {\r\n    props.setMemo(event.target.value);\r\n  }\r\n\r\n  return (\r\n  <>\r\n    <div className=\"d-flex row pb-1\" style={{height:\"50px\"}}><div className=\"p-2 ml-3 mr-2 text-center\" style={{ backgroundColor:\"#887BD2\", width:\"40px\", color:\"#FFFFFF\"}}><i className=\"bi bi-clipboard-plus\"></i></div><div className=\"d-flex align-items-center\">진료 메모</div></div>\r\n    <div className=\"p-3\" style={{height:\"calc(100% - 50px)\"}}>\r\n      <textarea value={props.treatment.status === \"진료중\" ? \r\n      props.memo\r\n      : \r\n      (props.treatment.memo == null ? \"\" : props.treatment.memo)} onChange={props.treatment.status !== \"진료중\" ? null : handlechange} readOnly={props.treatment.status !== \"진료중\"? true : false} className=\"h-100 w-100 \" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"15px\", height:\"50px\", outline:0}} >\r\n      </textarea>\r\n      {/* treatmentstate가 진료중이면 가능 완료이면 readonly*/}\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default TreatmentMemo;","\r\n\r\nfunction PatientItem(props) {\r\n\r\n  return (\r\n    <>\r\n\r\n<div onClick={(event)=>{if(props.onClick)props.onClick(props.item); }} className={\"ml-2 mr-2 pt-2 pb-2 d-flex align-items-center border-bottom\"} \r\n      style={props.selected === props.item.patientid ? \r\n              {backgroundColor: \"#3E5799\", color:\"white\", fontWeight:\"bold\", height:\"50px\", fontSize: \"13px\"}\r\n              :\r\n              {height:\"50px\", fontSize: \"13px\"}}>\r\n\r\n      {props.property.map((prop,index)=>{\r\n        return(\r\n          <div key={index}  className=\"col pl-0 pr-0  text-center\">\r\n            {props.item[prop]}\r\n          </div>\r\n        )\r\n      })}\r\n\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PatientItem;\r\n\r\n\r\n\r\n\r\n","import { getPatientList } from \"apis/Treatment\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport Item from \"views/components/Item\";\r\nimport PatientItem from \"./PatientItem\";\r\nfunction SearchPatient(props) {\r\n  const property = [\"patientid\", \"patientname\", \"age\", \"sex\", \"phonenumber\", \"lasttreatment\", \"registerday\"];\r\n\r\n  const [checkedPatient, setCheckedPatient] = useState({\r\n    patientname:\"환자이름\", \r\n    ssn1:\"\", \r\n    ssn2:\"\", \r\n    sex: \"성별\",\r\n    age:\"-\",\r\n    phonenumber: \"-\", \r\n  });\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [patientList, setPatientList] = useState([]);\r\n  const [searchList, setSearchList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const work = async() => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await getPatientList();\r\n        setPatientList(response.data);\r\n        setSearchList(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    work();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setCheckedPatient({\r\n      patientname:\"환자이름\", \r\n      ssn1:\"\", \r\n      ssn2:\"\", \r\n      sex: \"성별\",\r\n      age:\"-\",\r\n      phonenumber: \"-\", \r\n    })\r\n    setSearchList(patientList);\r\n    setSearchName(\"\");\r\n  }, [props.show, patientList])\r\n\r\n  const checkPatient = (patient) => {\r\n    setCheckedPatient(patient);\r\n  }\r\n\r\n  const selectedComplete = (patient) => {\r\n    props.selectPatient(patient); \r\n    props.handleClose();\r\n  }\r\n\r\n  const handleSearchName = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n\r\n  const search = useCallback((name, patientList) => {\r\n    setSearchList(() => {\r\n      const newPatient = patientList.filter(patient => patient.patientname.indexOf(name) !== -1);\r\n      return newPatient;\r\n    })\r\n  }, []);//useCallback로 받으면 () =>      ()괄호안에 매개변수를 받아야함\r\n\r\n  const rowRenderer = ({index, key, style}) => {\r\n    return (\r\n      <div key={key} style={style}>\r\n        <PatientItem item={searchList[index]} property={property} onClick={checkPatient} selected={checkedPatient.patientid}></PatientItem>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={props.show} onHide={props.handleClose} size=\"lg\">\r\n        <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"}}>\r\n          <Modal.Title style={{color:\"#FFFFFF\"}}>환자 검색</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"input-group mb-3\">\r\n            <input type=\"search\" value={searchName} onChange={handleSearchName} style={{width:\"300px\"}}/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={ () => search(searchName, patientList)}>검색</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <div style={{fontWeight:\"bold\"}}>현재 선택한 환자:  </div>\r\n            {checkedPatient.patientname}\r\n          </div>\r\n          <div style={{height:\"400px\"}} className=\"overflow-auto pt-1\">\r\n            {\r\n              loading === true ? \r\n              <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n                <div class=\"spinner-border text-primary\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n              </div>\r\n              :\r\n              <AutoSizer>\r\n                {\r\n                  ({width, height}) => {\r\n                    return (\r\n                      <List width={width} height={height}\r\n                        rowCount={searchList.length}\r\n                        rowHeight={50}\r\n                        rowRenderer={rowRenderer}\r\n                        overscanRowCount={5}\r\n                      />\r\n                    )\r\n                  }\r\n                }\r\n              </AutoSizer>\r\n              // searchList.map ( patient => {\r\n              //   return (\r\n              //     <Item key={patient.patientid}  item={patient} property={property} onClick={checkPatient}></Item>\r\n              //   );\r\n              // })\r\n            }\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" size=\"sm\" onClick={props.handleClose}>\r\n            닫기\r\n          </Button>\r\n          <Button variant=\"outline-success\" size=\"sm\" onClick={() => { selectedComplete(checkedPatient) } }>\r\n            선택 완료\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchPatient;\r\n\r\n","import { useState } from \"react\";\r\nimport SearchPatient from \"./SearchPatient\";\r\n\r\n\r\nfunction PatientProfile(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const selectPatient = (patient) => {\r\n    props.selectPatient(patient);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"h-100 pl-3 pr-3 d-flex align-items-center\" style={{backgroundColor:\"#15367B\", marginRight:\"15px\", marginLeft:\"15px\"}}>\r\n        {/* 8vh */}\r\n        <div className=\"d-flex col\">\r\n          <div className=\"col-2 pl-0 pr-0 d-flex align-items-center text-center\" >\r\n            <div className=\"col-4 pl-0 pr-0\" style={{fontWeight:\"bold\", color:\"#FBFBFB\"}}>이름</div>\r\n            <div className=\"text-center pl-0 pr-0 pt-1 pb-1 ml-0 mr-0 col-8\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"7px\", fontSize:\"14px\", backgroundColor:\"#FFFFFF\"}}>{props.selectedPatient.patientname}</div>\r\n          </div>\r\n          <div className=\"col-2 pl-3 pr-0 d-flex align-items-center text-center\">\r\n            <div className=\"col-4 pl-0 pr-0\" style={{fontWeight:\"bold\", color:\"#FBFBFB\"}}>나이</div>\r\n            <div className=\"text-center pl-0 pr-0 pt-1 pb-1 ml-0 mr-0 col-8\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"7px\", fontSize:\"14px\", backgroundColor:\"#FFFFFF\"}}>{props.selectedPatient.age}세</div>\r\n          </div>\r\n          <div className=\"col-2 pl-3 pr-0 d-flex align-items-center text-center\">\r\n            <div className=\"col-4 pl-0 pr-0\" style={{fontWeight:\"bold\", color:\"#FBFBFB\"}}>성별</div>\r\n            <div className=\"text-center pl-0 pr-0 pt-1 pb-1 ml-0 mr-0 col-8\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"7px\", fontSize:\"14px\", backgroundColor:\"#FFFFFF\"}}>{props.selectedPatient.sex}</div>\r\n          </div>\r\n          <div className=\"col-4 pl-3 pr-0 d-flex align-items-center text-center\">\r\n            <div className=\"col-3 pl-0 pr-0\" style={{fontWeight:\"bold\", color:\"#FBFBFB\"}}>주민등록번호</div>\r\n            <div className=\"text-center pt-1 pb-1 pl-0 pr-0 ml-0 mr-0 col-6\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"7px\", fontSize:\"14px\", backgroundColor:\"#FFFFFF\"}}>{props.selectedPatient.ssn1} - {props.selectedPatient.ssn2}</div>\r\n          </div>\r\n          <div className=\"col-2 pl-3 pr-0  text-right\">\r\n              <button className=\"btn btn-light btn-sm\" style={{fontWeight:\"bold\", fontSize:\"15px\"}} onClick={handleShow}>환자 검색</button>\r\n              <button className={`btn btn-primary btn-sm ml-2 mr-5`} disabled={props.treatment.status === \"진료중\"? false : true} onClick={props.saveTreatment}>저장</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <SearchPatient show={show} handleClose={handleClose} selectPatient={selectPatient}></SearchPatient>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PatientProfile;","import DiagnosisList from \"./DiagnosisList\";\r\nimport DrugList from \"./DrugList\";\r\nimport PatientTreatment from \"./PatientTreatment\";\r\nimport TestList from \"./TestList\";\r\nimport TreatmentMemo from \"./TreatmentMemo\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PatientProfile from \"./components/PatientProfile\";\r\nimport { getPatient, getStaticDiagnoses, getStaticDrugs, getPrescriptionList, prescribeTreatment, getAllTreatments, getStaticTests, getTestList, updateTreatment } from \"apis/Treatment\";\r\nimport { sendRedisMessage } from \"apis/Redis\";\r\nimport { Col, Row, Toast } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\n\r\n\r\nfunction Treatment(props) {\r\n\r\n  const globalPatient = useSelector((state) => {\r\n    return state.patientReducer.patient;\r\n  })\r\n  const globalUserid = useSelector((state) => {return state.authReducer.userid});\r\n\r\n  const [patient, setPatient] = useState({\r\n\r\n    patientname:\"환자이름\", \r\n    ssn1:\"\", \r\n    ssn2:\"\", \r\n    sex: \"성별\",\r\n    age:\"-\",\r\n    phonenumber: \"-\", \r\n  });\r\n  \r\n  const selectPatient = useCallback((patient) => {\r\n    setPatient(patient);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(globalPatient.patientid != null){\r\n      const response = getPatient(globalPatient.patientid);\r\n      response.then((response) => {\r\n        setPatient(response.data);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      })\r\n      \r\n    }\r\n  }, [globalPatient]) \r\n\r\n  const [treatment, setTreatment] = useState({})\r\n  const [patientTreatments, setPatientTreatments] = useState([]);\r\n  const [treatmentDrugs, setTreatmentDrugs] = useState([]);\r\n  const [treatmentDiagnoses, setTreatmentDiagnoses] = useState([]);\r\n  const [treatmentTests, setTreatmentTests] = useState([]);\r\n  const [memo, setMemo] = useState(\"\");\r\n\r\n  const [staticDrugs, setStaticDrugs] = useState([]);\r\n  const [staticDignoses, setStaticDignoses] = useState([]);\r\n  const [staticTests, setStaticTests] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [prescribeLoading, setPrescribeLoading] = useState(false);\r\n  const [treatmentsLoading, setTreatmentLoading] = useState(false);\r\n\r\n  //진료 선택\r\n  const selectTreatment = useCallback(async(treatment) => {\r\n    if(treatment.status === \"진료 대기\"){\r\n      if(treatment.userid === globalUserid){\r\n        const start = await Swal.fire({\r\n          text: \"진료를 시작하시겠습니까?\",\r\n          width: \"430px\",\r\n          confirmButtonText: \"진료시작\",\r\n          confirmButtonColor:\"#3E5799\",\r\n          denyButtonText:\"취소\",\r\n          showDenyButton:true,\r\n          imageUrl:\"/question-mark.png\",\r\n          imageWidth: 150,\r\n        })\r\n\r\n        if(start.isConfirmed === true){\r\n          try {\r\n            const response = await updateTreatment({...treatment, treatmentdate: null});\r\n            if(response.data === \"success\") {\r\n              console.log(response.data);\r\n              const message = {\r\n                type:\"treatment\",\r\n                patientid:treatment.patientid,\r\n                status:\"진행\"\r\n              };\r\n              sendRedisMessage(message);//진료가 완료 되었다는 사실을 접수처에 알림\r\n              setTreatment({\r\n                ...treatment,\r\n                status:\"진료중\"\r\n              });\r\n\r\n              setPatientTreatments((prevList) => {\r\n                const newTreatments = prevList.map((prevtreatment) => {\r\n                  if(prevtreatment.treatmentid === treatment.treatmentid) {\r\n                    return {...prevtreatment, status:\"진료중\"}\r\n                  } else {\r\n                    return prevtreatment;\r\n                  }\r\n                })\r\n                return newTreatments;\r\n              })\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n      } else {\r\n        Swal.fire({\r\n          text:`담당 의사만 해당 진료를 진행할 수 있습니다. \r\n          담당의사: ${treatment.userid}`,\r\n          width: \"430px\",\r\n          imageUrl:\"/clear.svg\",\r\n          imageWidth: 150,\r\n          confirmButtonText:\"확인\",\r\n          confirmButtonColor:\"#3E5799\"\r\n        });\r\n      \r\n      }\r\n    } else {\r\n      setTreatment(treatment);\r\n    }\r\n\r\n  }, [globalUserid])\r\n\r\n  //선택한 진료 변경시 그 진료가 처방받은 약, 상병, 테스트 가져오기\r\n  useEffect(() => {\r\n    if(treatment.status===\"진료 완료\"){\r\n      const work = async() => {\r\n        try {\r\n          setPrescribeLoading(true);\r\n          const response = await getPrescriptionList(treatment.treatmentid);\r\n          setTreatmentDrugs(() => response.data.drugsList);\r\n          setTreatmentDiagnoses(() => response.data.diagnosesList);\r\n          setTreatmentTests(() => response.data.testsList);\r\n        } catch (error) {\r\n          console.log(error);\r\n        } finally {\r\n          setPrescribeLoading(false);\r\n        }\r\n\r\n      }\r\n      work();\r\n    }\r\n    return (() => {\r\n      setTreatmentDrugs([]);\r\n      setTreatmentDiagnoses([]);\r\n      setTreatmentTests([]);\r\n      setMemo(\"\");\r\n      })\r\n  }, [treatment]);\r\n\r\n  //정적 데이터 불러오기\r\n  useEffect(() => {\r\n    const work = async() => {\r\n      try {\r\n        const drugResponse = await getStaticDrugs();\r\n        const diagnosesResponse = await getStaticDiagnoses();\r\n        const testResponse = await getStaticTests();\r\n        setStaticDrugs(drugResponse.data);\r\n        setStaticDignoses(diagnosesResponse.data);\r\n        setStaticTests(testResponse.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    work();\r\n  },[])\r\n\r\n\r\n  const testResult = useSelector((state) => {\r\n    return state.receptionReducer.testresult;\r\n  })\r\n\r\n  //testResult가 바뀔 때 \r\n  useEffect(() => {\r\n    if(testResult.treatmentid != null && testResult.treatmentid === treatment.treatmentid){\r\n      const response = getTestList(treatment.treatmentid);\r\n      response.then((response) => {\r\n        setTreatmentTests(response.data);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      })\r\n    }\r\n  }, [testResult]);\r\n\r\n  // 환자가 바뀔때\r\n  useEffect(() => {\r\n    const work = async() => {\r\n      try {\r\n        setTreatmentLoading(true);\r\n        const response = await getAllTreatments(patient.patientid);\r\n        if(response.data){\r\n          setPatientTreatments(() => {\r\n            return response.data\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setTreatmentLoading(false);\r\n      }\r\n    }\r\n    work();\r\n    setMemo(\"\");\r\n    setTreatment({});\r\n  }, [patient])\r\n\r\n  //약 처방 함수\r\n  const prescribeDrugs = useCallback((prescriptionItems) => {\r\n    setTreatmentDrugs(prescriptionItems) \r\n  }, []);\r\n \r\n\r\n   //증상 처방 함수\r\n  const prescribeDiagnoses = useCallback((prescriptionItems) => {\r\n    setTreatmentDiagnoses(prescriptionItems)\r\n  },[]);\r\n\r\n\r\n  //검사 처방 함수\r\n  const prescribeTests = useCallback((prescriptionItems) => {\r\n    setTreatmentTests(prescriptionItems);\r\n  }, [])\r\n\r\n  const prescribeList = async() => {\r\n    try {\r\n      let prescription = {};\r\n\r\n      let newTreatment = {\r\n        ...treatment,\r\n        treatmentdate:null,\r\n        memo:memo\r\n      }\r\n\r\n      prescription.treatmentDrugs = [...treatmentDrugs];\r\n      prescription.treatmentDiagnoses = [...treatmentDiagnoses];\r\n\r\n      prescription.treatmentTests = [...treatmentTests];\r\n      prescription.treatment = newTreatment;\r\n      prescription.userid = globalUserid;\r\n      prescription.patientid = patient.patientid;\r\n      const response = await prescribeTreatment(prescription);\r\n      if(response.data === \"success\"){\r\n        const response = await getAllTreatments(patient.patientid);\r\n\r\n        if(response.data){\r\n          setMemo(\"\");\r\n          setPatientTreatments(response.data);\r\n          const message = {\r\n            type:\"treatment\",\r\n            patientid:patient.patientid,\r\n            status:\"완료\"\r\n          };\r\n          newTreatment.status = \"진료 완료\"\r\n          newTreatment.treatmentdate = treatment.treatmentdate;\r\n          sendRedisMessage(message);//진료가 완료 되었다는 사실을 접수처에 알림\r\n          setTreatment(newTreatment);\r\n        }\r\n        \r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const saveTreatment = async() => {\r\n    const start = await Swal.fire({\r\n      text: \"처방을 완료 하시겠습니까?\",\r\n      width: \"430px\",\r\n      confirmButtonText: \"완료\",\r\n      confirmButtonColor:\"#3E5799\",\r\n      denyButtonText:\"취소\",\r\n      showDenyButton:true,\r\n      imageUrl:\"/question-mark.png\",\r\n      imageWidth: 150,\r\n    })\r\n    if(start.isConfirmed === true){\r\n      prescribeList();\r\n      setShow(true);\r\n    }\r\n  }\r\n  const closeShow = () => {\r\n    setShow(false)\r\n  }\r\n  return (\r\n    <>        \r\n      <div style={{height:\"5vh\", marginBottom:\"2vh\",  marginTop:\"1vh\"}}>\r\n        <PatientProfile selectedPatient={patient} treatment={treatment} selectPatient={selectPatient} saveTreatment={saveTreatment} ></PatientProfile>\r\n      </div>\r\n      <div className=\"row ml-0 mr-0\" style={{heighn:\"92vh\"}}>\r\n        <div className=\"col-3 h-100 border-right\">\r\n          <div className=\"pl-3 pr-3 pt-0 pb-1 border border-dark\" style={{height:\"46vh\", marginBottom:\"2vh\", backgroundColor:\"#FFFFFF\"}}>\r\n            <PatientTreatment loading={treatmentsLoading} selectedPatient={patient} treatment={treatment} selectTreatment={selectTreatment} patientTreatments={patientTreatments}/>\r\n          </div>\r\n          <div className=\"pl-3 pr-3 pt-0 pb-1 border border-dark\" style={{height:\"42vh\",marginBottom:\"2vh\", backgroundColor:\"#FFFFFF\"}}>\r\n            <TreatmentMemo treatment={treatment} setMemo={setMemo} memo={memo}/>\r\n          </div> \r\n        </div>\r\n        <div className=\"col-4 h-100 border-right\">\r\n          <div className=\"pl-3 pr-3 pb-3 pt-0 border border-dark\" style={{height:\"46vh\", backgroundColor:\"#FFFFFF\", marginBottom:\"2vh\"}}>\r\n            <DiagnosisList loading={prescribeLoading} treatment={treatment} treatmentDiagnoses={treatmentDiagnoses}\r\n                  staticDignoses={staticDignoses} prescribeDiagnoses={prescribeDiagnoses}/>\r\n          </div>\r\n          <div className=\"pl-3 pr-3 pt-0 pb-1 border border-dark\" style={{height:\"42vh\",marginBottom:\"2vh\",  backgroundColor:\"#FFFFFF\"}}>\r\n            <DrugList loading={prescribeLoading} treatment={treatment} treatmentDrugs={treatmentDrugs} \r\n                  staticDrugs={staticDrugs} prescribeDrugs={prescribeDrugs}/>\r\n          </div>             \r\n        </div>\r\n        <div className=\"col-5 h-100\">\r\n          <div className=\"pl-3 pr-3 pb-3 pt-0 border border-dark\" style={{height:\"90vh\",marginBottom:\"2vh\", backgroundColor:\"#FFFFFF\"}}>\r\n            <TestList loading={prescribeLoading} treatment={treatment} treatmentTests = {treatmentTests}\r\n                  staticTests={staticTests} prescribeTests={prescribeTests} closeShow={closeShow} toastShow={show}></TestList>\r\n          </div>                \r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Treatment;","import { useState, forwardRef } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"views/style/datepicker.css\";\r\nimport { registerLocale } from \"react-datepicker\";  // 한국어적용\r\nimport ko from 'date-fns/locale/ko'; // 한국어적용\r\n\r\nregisterLocale(\"ko\", ko) // 한국어적용\r\n\r\nfunction PeriodSearch(props) {\r\n  const [start, setStart] = useState(new Date());\r\n  const [end, setEnd] = useState(new Date());\r\n  const [btnClicked, setBtnClicked] = useState(\"당일\");\r\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\r\n    <div className=\"example-custom-input\" onClick={onClick} ref={ref}>\r\n      <div className=\"mr-1\">\r\n      <i className=\"bi bi-calendar-day mr-3\"></i>              \r\n      {value}\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  const dateSubmit = () => {\r\n    props.getpatient(start, end) //mysql between 이상~초과 여서 인식불가. 1일 추가해줘야함\r\n    props.setStartdate(start)\r\n    props.setEnddate(end)\r\n  }\r\n\r\n  const handleBtnClicked = (e) => {\r\n    const { value } = e.target;\r\n    setBtnClicked(value);\r\n    const currentDate = new Date(); \r\n    // 오늘 날짜\r\n    if (value === \"당일\") {\r\n      setStart(new Date());\r\n      setEnd(new Date());\r\n    }\r\n    // 3일 전부터 오늘까지의 기간\r\n    if (value === \"3일\") {\r\n      let threeDaysAgo = new Date(\r\n        currentDate.getTime() - 3 * 24 * 60 * 60 * 1000\r\n      );\r\n      setStart(threeDaysAgo);\r\n      setEnd(new Date());\r\n    }\r\n    // 1주일 전부터 오늘까지의 기간\r\n    if (value === \"1주일\") {\r\n      let weekAgo = new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n      setStart(weekAgo);\r\n      setEnd(new Date());\r\n    }\r\n    // 1개월 전부터 오늘까지의 기간\r\n    if (value === \"1개월\") {\r\n      let oneMonthAgo = new Date(\r\n        new Date().getFullYear(),\r\n        new Date().getMonth() - 1,\r\n        new Date().getDate()\r\n      );\r\n      setStart(oneMonthAgo);\r\n      setEnd(new Date());\r\n    }\r\n    // 3개월 전부터 오늘까지의 기간\r\n    if (value === \"3개월\") {\r\n      let threeMonthAgo = new Date(\r\n        new Date().getFullYear(),\r\n        new Date().getMonth() - 3,\r\n        new Date().getDate()\r\n      );\r\n      setStart(threeMonthAgo);\r\n      setEnd(new Date());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n            <div className=\"mt-3 mb-3\" style={{backgroundColor: \"#EDECEA\"}}>\r\n              <div className=\"ml-3 pt-2\">\r\n                <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" value=\"당일\" onClick={ handleBtnClicked }>당일</button>\r\n                <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" value=\"3일\" onClick={ handleBtnClicked }>3일</button>\r\n                <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" value=\"1주일\" onClick={ handleBtnClicked }>1주일</button>\r\n                <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" value=\"1개월\" onClick={ handleBtnClicked }>1개월</button>\r\n                <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" value=\"1개월\" onClick={ handleBtnClicked }>3개월</button>\r\n              </div>\r\n              <div className=\"row ml-3 mt-3 mb-2 pb-2\">\r\n              <div className=\"row ml-1\">\r\n                <div className=\"mr-4\">\r\n                  <div>From: </div>\r\n                <DatePicker\r\n                  selected={start}\r\n                  onChange={(date) => setStart(date)}\r\n                  customInput={<ExampleCustomInput />}\r\n                  dateFormat=\"yyyy-MM-dd\"\r\n                  locale={ko}\r\n                />\r\n                </div>\r\n              </div>\r\n              <div className=\"row ml-3\">\r\n                <div className=\"mr-4\">\r\n                <div>To: </div>\r\n                <div className=\"row ml-0\">\r\n                <DatePicker\r\n                  selected={end}\r\n                  onChange={(date) => setEnd(date)}\r\n                  customInput={<ExampleCustomInput />}\r\n                  dateFormat=\"yyyy-MM-dd\"\r\n                  locale={ko}\r\n                />\r\n                </div>\r\n                </div>\r\n              </div>\r\n              </div>\r\n              <button className=\"btn btn-dark btn-block\" onClick={ dateSubmit }>Submit</button>\r\n            </div>\r\n          </div>\r\n  );\r\n}\r\nexport default PeriodSearch;","import React from 'react';\r\nimport { useBarcode } from 'react-barcodes';\r\nimport moment from 'moment';\r\n\r\nfunction Print({selectpatientinfo, grouplist}) {\r\n  const { inputRef } = useBarcode({\r\n    value: selectpatientinfo.patientid+\"_\"+selectpatientinfo.testreceptionid+moment().format('YYYYMMDD'),\r\n    options: {\r\n      background: '#ffffff',\r\n    }\r\n  });\r\n\r\n  return (\r\n    <img ref={inputRef} />\r\n  );\r\n}\r\nexport default Print;","import axios from \"axios\";\r\n\r\nexport function testlistByDate(startdate, enddate) {\r\n  const promise = axios.get(\"test/patientbytestdate\", {params:{startdate, enddate}})\r\n  return promise\r\n}\r\nexport function testlistByPatientid(patientid) {\r\n  const promise = axios.get(\"test/testreceptionbypatientid\", {params: {patientid}})\r\n  return promise\r\n}\r\n\r\nexport function testlistByReceptionid(testreceptionid) {\r\n  const promise = axios.get(\"test/testlistbyreceptionid\", {params: {testreceptionid}})\r\n  return promise\r\n}\r\n\r\nexport function createXray(multipartFormData) {\r\n  console.log(multipartFormData)\r\n  return axios.post(\"test/xray\", multipartFormData); \r\n}\r\n\r\nexport function insertResult(test){\r\n  console.log(test)\r\n  const promise = axios.put(\"test/result\", test) \r\n  return promise;\r\n}\r\n\r\nexport function resultStatus(testreceptionid) {\r\n  const promise = axios.put(\"test/resultstatus/\"+testreceptionid)\r\n  return promise\r\n}\r\n\r\nexport function startTests(checkedList) {\r\n  //console.log(checkedList)\r\n  const tests = [];\r\n  JSON.stringify(checkedList, (key, val) => {\r\n    if (key === 'tests') {\r\n      tests.push(val);\r\n    }\r\n    return val;\r\n  });\r\n  const promise = axios.put(\"test/starttest\", tests);\r\n  \r\n  return promise;\r\n}\r\n\r\nexport function startPatient(testreceptionid) {\r\n  console.log(testreceptionid)\r\n  const promise = axios.put(\"test/teststartpatient/\"+testreceptionid)\r\n  return promise\r\n}\r\n\r\nexport function cancelTests(checkedList) {\r\n  console.log(checkedList)\r\n  const tests = [];\r\n  JSON.stringify(checkedList, (key, val) => {\r\n    if (key === 'tests') {\r\n      tests.push(val);\r\n    }\r\n    return val;\r\n  });\r\n  const promise = axios.put(\"test/canceltest\", tests);\r\n  \r\n  return promise;\r\n}\r\n\r\nexport function cancelPatient(testreceptionid) {\r\n  console.log(testreceptionid)\r\n  const promise = axios.put(\"test/testcancelpatient/\"+testreceptionid)\r\n  return promise\r\n}\r\n\r\nexport function finishTests(checkedList) {\r\n  console.log(checkedList)\r\n  const tests = [];\r\n  JSON.stringify(checkedList, (key, val) => {\r\n    if (key === 'tests') {\r\n      tests.push(val);\r\n    }\r\n    return val;\r\n  });\r\n  const promise = axios.put(\"test/finishtest\", tests);\r\n  console.log(promise)\r\n  return promise;\r\n}\r\n\r\nexport function finishPatient(testreceptionid) {\r\n  console.log(testreceptionid)\r\n  const promise = axios.put(\"test/testfinishpatient/\"+testreceptionid)\r\n  return promise\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Badge, Button, Modal, Accordion, Card  } from \"react-bootstrap\";\r\nimport xlsx from 'xlsx';\r\nimport React from 'react';\r\nimport Print from \"./Print\";\r\nimport \"./scrollbar.css\";\r\nimport { startTests, cancelTests, finishTests, startPatient, cancelPatient, finishPatient, insertResult, resultStatus } from \"apis/test\";\r\nimport { sendRedisMessage } from \"apis/Redis\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction TestGroup(props) {\r\n  const [open, setOpen] = useState(false); //모달 열림/닫힘 상태\r\n  const [groupList, setGroupList] = useState({}); //제일 바깥\r\n  const [excel, setExcel] = useState([]);\r\n  const [resultlist, setResultlist] = useState({}); \r\n\r\n  const globalUsername = useSelector((state) => {\r\n    return state.authReducer.username;\r\n  });\r\n  \r\n  useEffect(()=>{ \r\n    group();\r\n    setResultlist({})\r\n  }, [props.testdatas, props.selectpatientinfo.testreceptionid])\r\n\r\n  const group = () => {\r\n    setExcel(props.testdatas)\r\n    console.log(excel)\r\n    const group = [];\r\n        for(var i=0; i<props.testdatas.length; i++){\r\n          group.push(props.testdatas[i].groupcode)    \r\n        }\r\n\r\n        const set = new Set(group)\r\n        const title = [...set]; //묶음 코드 중복 제거\r\n\r\n        let obj = {};//나중에 groupList가 데이터 가공후 리스트에 추가\r\n        for(var i=0; i<title.length; i++){\r\n            for(var j=0; j<props.testdatas.length; j++){\r\n              if(title[i] === props.testdatas[j].groupcode) {\r\n                if(obj[title[i]]){ //그룹코드이름으로 된 속성이 있을 때\r\n                  obj[title[i]].tests.push(props.testdatas[j]);\r\n                } else {\r\n                  obj[title[i]]={}; //묶음코드 하나하나 객체\r\n                  obj[title[i]].groupcode=props.testdatas[j].groupcode;\r\n                  obj[title[i]].groupname=props.testdatas[j].groupname;\r\n                  obj[title[i]].status=props.testdatas[j].status;\r\n                  obj[title[i]].chkresult=false;\r\n                  obj[title[i]].ischeck=false;\r\n                  if(props.testdatas[j].status === \"검사완료\") {\r\n                    obj[title[i]].saveBtn=false;\r\n                    obj[title[i]].label = \"danger\";\r\n                    obj[title[i]].tcolor = \"red\";\r\n                  } else if (props.testdatas[j].status === \"진행중\") {\r\n                    obj[title[i]].saveBtn=true;\r\n                    obj[title[i]].label = \"primary\";\r\n                    obj[title[i]].tcolor = \"blue\";\r\n                  } else {\r\n                    obj[title[i]].saveBtn=true;\r\n                    obj[title[i]].label = \"success\";\r\n                    obj[title[i]].tcolor = \"black\";\r\n                  };\r\n                  obj[title[i]].tests=[];\r\n                  obj[title[i]].tests.push(props.testdatas[j]);\r\n                }\r\n              }\r\n          }\r\n        }\r\n        setGroupList(obj);\r\n  }\r\n\r\n  const handleExcel =() => { //엑셀 버튼 클릭 시, 동작하는 함수\r\n    const ws = xlsx.utils.json_to_sheet(excel); //안에 배열의 객체 넣으면 그대로 출력\r\n    const wb = xlsx.utils.book_new();\r\n    xlsx.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n    xlsx.writeFile(wb, \"환자차트번호:\"+props.selectpatientinfo.patientid+\"_\"+props.selectpatientinfo.testdate+\".xlsx\");\r\n  }\r\n\r\n  const changeHandler = (e, groupcode) => { //체크버튼 선택 시, ischeck 변경해줌 \r\n    const modify = Object.values(groupList).map((group)=>{\r\n      if(group.groupcode===groupcode){\r\n        group.ischeck = e.target.checked\r\n      }\r\n      return group;\r\n    })\r\n    setGroupList(modify)\r\n  }\r\n\r\n  const handleStart = async(groupList) => {\r\n    let checkedList = [];\r\n    let flag = 0;\r\n \r\n    const newGroupList = Object.values(groupList).map ((group) => {\r\n\r\n      if(group.ischeck === true){\r\n        group.ischeck = false;\r\n        if(group.status === \"대기중\"){\r\n          checkedList.push(group);\r\n        } else {\r\n          alert(\"검사가 이미 진행중이거나 완료 되었습니다.\")\r\n          flag = 1;\r\n        }\r\n      }\r\n    \r\n      return group;\r\n    });\r\n\r\n    if(flag === 0){\r\n      try {\r\n        startTests(checkedList).then(()=>{props.gettest(props.selectpatientinfo.testreceptionid); group()});\r\n        startPatient(props.selectpatientinfo.testreceptionid).then(()=>{ \r\n          props.getpatient(props.startdate, props.enddate)\r\n          sendRedisMessage({type:\"test\"})\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n\r\n    }\r\n    \r\n    setGroupList(newGroupList);\r\n\r\n  }\r\n\r\n  \r\n  const handlePrint = async(groupList) => { \r\n    let checkedList = [];\r\n    let flag = 0;\r\n \r\n    const newGroupList = Object.values(groupList).map ((group) => {\r\n      if(group.ischeck === true){\r\n        setOpen(true);\r\n        group.ischeck = false;\r\n        if(group.status === \"대기중\"){\r\n          checkedList.push(group);\r\n        } else {\r\n          alert(\"검사가 이미 진행중이거나 완료 되었습니다.\")\r\n          setOpen(false);\r\n          flag = 1;\r\n        }\r\n      }\r\n      return group;\r\n    });\r\n\r\n    if(flag === 0){\r\n      try {\r\n        startTests(checkedList).then(()=>{props.gettest(props.selectpatientinfo.testreceptionid); group()});\r\n        startPatient(props.selectpatientinfo.testreceptionid).then(()=>{\r\n          props.getpatient(props.startdate, props.enddate)\r\n          sendRedisMessage({type:\"test\"})\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    setGroupList(newGroupList);\r\n  }\r\n  const handleExit = () => setOpen(false); //바코드 모달 닫힘\r\n\r\n  const handleCancel = async(groupList) => { \r\n    let checkedList = [];\r\n    let flag = 0;\r\n    \r\n    const newGroupList = Object.values(groupList).map ((group) => {\r\n      if(group.ischeck === true){\r\n        group.ischeck = false;\r\n        if(group.status === \"진행중\"){\r\n          checkedList.push(group);\r\n        } else {\r\n          if(group.status === \"대기중\") {\r\n            alert(\"검사가 대기중입니다..\")\r\n          } else {\r\n            alert(\"검사가 이미 완료되었습니다.\")\r\n          }\r\n          flag = 1;\r\n        }\r\n      }\r\n      return group;\r\n    });\r\n    if(flag === 0){\r\n      try {\r\n        cancelTests(checkedList).then(()=>{props.gettest(props.selectpatientinfo.testreceptionid); group()})\r\n        let count = 0;\r\n        if(groupList.length > 0) {\r\n          for(let i=0; i<groupList.length; i++){\r\n          if(groupList[i].status === \"대기중\"){\r\n            count++;\r\n          }\r\n        }\r\n\r\n        if(checkedList.length === 1 ) {\r\n          if(count === groupList.length-1) {\r\n            cancelPatient(props.selectpatientinfo.testreceptionid).then(()=>{\r\n              props.getpatient(props.startdate, props.enddate)\r\n              sendRedisMessage({type:\"test\"})\r\n            }) \r\n          }\r\n        } else {\r\n          if(count === groupList.length-checkedList.length) {\r\n            cancelPatient(props.selectpatientinfo.testreceptionid).then(()=>{\r\n              props.getpatient(props.startdate, props.enddate)\r\n              sendRedisMessage({type:\"test\"})\r\n            }) \r\n          }\r\n        }\r\n      }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n     \r\n    }\r\n    setGroupList(newGroupList);\r\n  }\r\n\r\n  const handleFinish = async(groupList) => { \r\n    let checkedList = [];\r\n    let flag = 0;\r\n    \r\n    const newGroupList = Object.values(groupList).map ((group) => {\r\n      if(group.ischeck === true){\r\n        group.ischeck = false;\r\n        if(group.status === \"진행중\"){\r\n          checkedList.push(group);\r\n        } else {\r\n          if(group.status === \"대기중\") {\r\n            alert(\"검사를 먼저 시작해주세요\")\r\n          } else {\r\n            alert(\"검사가 이미 완료되었습니다.\")\r\n          }\r\n          flag = 1;\r\n        }\r\n      }\r\n      return group;\r\n    });\r\n    if(flag === 0){\r\n      try {\r\n        finishTests(checkedList).then(()=>{props.gettest(props.selectpatientinfo.testreceptionid); group()})\r\n        let count = 0;\r\n        if(groupList.length > 0) {\r\n          for(let i=0; i<groupList.length; i++){\r\n          if(groupList[i].status === \"검사완료\"){\r\n            count++;\r\n          }\r\n        }\r\n\r\n        if(checkedList.length === 1 ) {\r\n          if(count === groupList.length-1) {\r\n            finishPatient(props.selectpatientinfo.testreceptionid).then(()=>{\r\n              props.getpatient(props.startdate, props.enddate)\r\n              sendRedisMessage({type:\"test\"})\r\n            })\r\n          }\r\n        } else {\r\n          if(count === groupList.length-checkedList.length) {\r\n            finishPatient(props.selectpatientinfo.testreceptionid).then(()=>{\r\n              props.getpatient(props.startdate, props.enddate)\r\n              sendRedisMessage({type:\"test\"})\r\n            })\r\n          }\r\n        }\r\n        } \r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    setGroupList(newGroupList);\r\n  }\r\nconsole.log(groupList)\r\n  const handleAdd = async(event, test) => {\r\n    event.preventDefault();\r\n    test.result = resultlist[test.testdataid]\r\n    insertResult(test).then(()=>{\r\n      setResultlist({...resultlist});//이전에 입력한 결과값 초기화 \r\n      group();\r\n\r\n      let count = 0;\r\n      if(props.testdatas.length > 0) {\r\n        for(let i=0; i<props.testdatas.length; i++){\r\n        if(props.testdatas[i].result !== null || props.testdatas[i].result === \"\"){\r\n          count++;\r\n        }\r\n      }\r\n        if(count === props.testdatas.length) {\r\n          resultStatus(props.selectpatientinfo.testreceptionid).then(()=>{\r\n            props.getpatient(props.startdate, props.enddate)})\r\n        }\r\n      }\r\n    });\r\n    sendRedisMessage({type:\"testresult\", treatmentid:test.treatmentid})//----------------redis 메세지\r\n    //다시 검사리스트 가져오기\r\n  }\r\n \r\n  const handleChange = (event, index, test) => { //사용자 입력시 상태 변경을 위해\r\n    setResultlist({\r\n      ...resultlist,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n    <div>\r\n      <div className=\"mt-2 text-right\">\r\n        <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" onClick={ () => { handleStart(groupList) }} value=\"검사시작\">검사시작</button>\r\n        <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" onClick={ () => {handlePrint(groupList) }} value=\"바코드출력\">바코드출력</button>\r\n        <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" onClick={ () => {handleCancel(groupList) }} value=\"접수취소\">접수취소</button>\r\n        <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" onClick={ handleExcel}>엑셀저장</button>\r\n        <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" onClick={ () => {handleFinish(groupList) }} value=\"검사완료\">검사완료</button>\r\n      </div> \r\n      <div className=\"row p-0 pl-4\">\r\n        <div className=\"row pl-2\">접수번호: <div style={{fontWeight:\"bold\"}}>{props.selectpatientinfo.testreceptionid}</div></div>\r\n        <div className=\"row pl-5\">검사담당자: <div style={{fontWeight:\"bold\"}}>{globalUsername}</div></div>\r\n      </div>\r\n      <div className=\"overflow-auto\" id=\"style-7\" style={{height:\"700px\"}}>\r\n        <Accordion defaultActiveKey=\"0\">\r\n        {groupList !=={} &&\r\n        Object.values(groupList).map((group, index)=> {\r\n          return (\r\n            <Card key={group.groupcode}>\r\n            <Card.Header className=\"row p-0 pl-4\" style={{backgroundColor:\"#D5D5D5\", height:\"50px\", alignItems:\"center\"}}>\r\n            <input className=\"mr-2\" type=\"checkbox\"  onChange={e => {changeHandler(e, group.groupcode)}} checked={group.ischeck}/>\r\n              <Accordion.Toggle as={Card.Header} eventKey={index.toString()}>\r\n                {/* checked: 체크박스 체크 유무 */}\r\n                <div className=\"row\">그룹코드:<div style={{fontSize:\"16px\", fontWeight:\"bold\", paddingLeft:\"8px\"}}> {group.groupcode} [{group.groupname}]</div> <Badge className=\"ml-3 pt-2\" variant={group.label}  style={{fontSize:\"12px\"}}>{group.status}</Badge></div>\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey={index.toString()}>\r\n              <Card.Body>\r\n                <div className=\"pt-2 pb-2 d-flex align-items-center\" style={{fontSize:\"14.5px\", borderBottom:\"1px solid #a6a6a6\"}}>\r\n                  <div className=\"col-2 p-0 text-center\">처방코드</div>\r\n                  <div className=\"col-3 p-0 text-center\">검사명</div>\r\n                  <div className=\"col-1 p-0 text-center\">용기</div>\r\n                  <div className=\"col-2 p-0 text-center\">상태</div>\r\n                  <div className=\"col-4 p-0 text-center\">결과값</div>\r\n                </div>\r\n                {group.tests.map((test, index) => {\r\n                  return (\r\n                    <div key={test.testdataid} className=\"pt-2 pb-2 d-flex align-items-center\" style={{height:\"55px\", fontSize:\"14.5px\", borderBottom:\"1px solid #a6a6a6\", backgroundColor:test.result === null ? \"\" : \"#faf4c0\"}}>\r\n                      <div className=\"col-2 p-0 text-center\" style={{fontWeight:\"bold\"}}>{test.testdataid}</div>\r\n                      <div className=\"col-3 p-0 text-center\">{test.testdataname}</div>\r\n                      <div className=\"col-1 p-0 pl-2 text-center\" style={{ color:test.testcontainer == \"EDTA\"?\"orange\":\"purple\", fontWeight:\"bold\", fontSize:\"14px\"}}>{test.testcontainer}</div>\r\n                      <div className=\"col-2 p-0 text-center\" style={{color:group.tcolor, fontWeight:\"bold\"}}>{test.status}</div>\r\n                      {test.testdataid === \"xray\"?\r\n                      <div style={{marginLeft:\"80px\"}}>{test.result}</div>:\r\n                      <div className=\"col-4 p-0 pl-2 text-center\" style={{display:\"inline-flex\"}}>\r\n                      <form onSubmit={ event => {handleAdd(event, test)}}>\r\n                        {group.saveBtn?\"\":<div style={{float:\"left\", width:\"60%\"}}><input type=\"text\" className=\"form-control\" name={test.testdataid} value={test.result == resultlist.result ? (resultlist[test.testdataid] || \"\") : test.result} onChange={e => {handleChange(e, index, test)}}/></div>}\r\n                        {group.saveBtn?\"\":<div style={{float:\"right\"}}><input type=\"submit\" className=\"btn btn-primary btn-sm mr-2\"  disabled={group.saveBtn} value=\"추가\"/></div>}\r\n                      </form>\r\n                    </div>\r\n                      }\r\n                    </div>\r\n                  )\r\n                })}\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          )\r\n        })}\r\n        </Accordion>\r\n      </div>\r\n    </div>\r\n\r\n    <Modal show={open} onHide={handleExit} animation={false}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>바코드 생성</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n      <Print selectpatientinfo={props.selectpatientinfo} grouplist={groupList} />\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleExit}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\r\n  </>\r\n  );\r\n}\r\nexport default TestGroup;","import { Carousel } from \"react-bootstrap\";\r\n\r\nfunction Banner() {\r\n  return (\r\n    <Carousel>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src=\"/1.png\"\r\n          alt=\"Second slide\"\r\n          height=\"210px\"\r\n          border=\"1px solid gray\"\r\n        />\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src=\"/process.png\"\r\n          alt=\"Second slide\"\r\n          height=\"210px\"\r\n          border=\"1px solid gray\"\r\n        />\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src=\"/2.png\"\r\n          alt=\"First slide\"\r\n          height=\"210px\"\r\n          border=\"1px solid gray\"\r\n        />\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  );\r\n}\r\nexport default Banner;","import { sendRedisMessage } from \"apis/Redis\";\r\nimport { createXray, resultStatus } from \"apis/test\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport Banner from \"./Banner\";\r\n\r\nfunction TestResult(props) { \r\n  const [show, setShow] = useState(false);\r\n  const [treatmentid, setTreatmentid] = useState();\r\n  \r\n  useEffect(()=>{ \r\n    group();\r\n    \r\n  }, [props.testdatas])\r\n\r\n  const group = () => {\r\n    let flag = 0;\r\n    for(let i=0; i<props.testdatas.length; i++){ //전체 testdata 리스트의 testdataid 조회\r\n      if(props.testdatas[i]){ \r\n        if(props.testdatas[i].testdataid === \"xray\") {\r\n          setTreatmentid(props.testdatas[i].treatmentid);\r\n          flag = 1;\r\n        } \r\n     }\r\n    } \r\n    if(flag === 1 ) {\r\n      setShow(true); //testdataid가 xray일 경우에만 보이기\r\n    } else {\r\n      setShow(false)\r\n    }\r\n  }\r\n\r\n  const [testimg, setTestimg] = useState({\r\n    treatmentid:\"\",\r\n    testdataid:\"\"\r\n  }); \r\n\r\n  const inputFile = useRef();\r\n\r\n  const handleAdd = async(event) => {\r\n    event.preventDefault(); //고유 동작을 중단\r\n    try{\r\n      const formData = new FormData(); //multipart로 만드는법\r\n      formData.append(\"treatmentid\", treatmentid);\r\n      formData.append(\"testdataid\", \"xray\");\r\n      formData.append(\"battach\", inputFile.current.files[0]);\r\n      createXray(formData).then(()=>{\r\n        props.gettest(props.selectpatientinfo.testreceptionid);\r\n        sendRedisMessage({type:\"testresult\", treatmentid:treatmentid})//----------------redis 메세지\r\n        alert(\"사진첨부 완료\")\r\n\r\n        inputFile.current.value = ''; //저장후 값 클리어\r\n        let count = 0;\r\n        console.log(props.testdatas)\r\n        if(props.testdatas.length > 0) {\r\n          for(let i=0; i<props.testdatas.length; i++){\r\n            console.log(props.testdatas[i].result)\r\n          if(props.testdatas[i].result !== null || props.testdatas[i].result === \"\"){\r\n            count++;\r\n            console.log(count)\r\n          }\r\n        }\r\n        if(count+1 === props.testdatas.length) {\r\n          console.log(\"전체 입력완료\")\r\n          resultStatus(props.selectpatientinfo.testreceptionid).then(()=>{\r\n            props.getpatient(props.startdate, props.enddate)\r\n          })\r\n        }\r\n      }\r\n      });\r\n    }catch(error){\r\n      console.log(error);\r\n    }\r\n    \r\n  }\r\n\r\n  const handleChange = (event) => { //사용자 입력시 상태 변경을 위해\r\n    setTestimg({\r\n      ...testimg,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div style={{marginBottom:\"220px\", height:\"67%\"}}>\r\n    {show ?\r\n    <div className=\"card\">\r\n      <div className=\"card-header\" style={{fontWeight:\"bold\"}}>\r\n        X-RAY 결과 입력창\r\n      </div>\r\n      <div className=\"card-body mt-4\">\r\n        <div>\r\n          <div>접수번호: {props.selectpatientinfo.testreceptionid}</div>\r\n        </div>\r\n        <hr/>\r\n        <form onSubmit={handleAdd}>\r\n          <div className=\"form-group row\">\r\n            <label htmlFor=\"treatmentid\" className=\"col-sm-3 col-form-label\">treatmentid</label>\r\n            <div className=\"col-sm-8\">\r\n              <input type=\"text\" className=\"form-control\" name=\"treatmentid\" value={treatmentid}/>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label htmlFor=\"testdataid\" className=\"col-sm-3 col-form-label\">testdataid</label>\r\n            <div className=\"col-sm-8\">\r\n              <input type=\"text\" className=\"form-control\" name=\"testdataid\" value=\"xray\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n              <label htmlFor=\"battach\" className=\"col-sm-3 col-form-label\">사진첨부</label>\r\n              <div className=\"col-sm-8\">\r\n                <input id=\"battach\" name=\"battach\" type=\"file\" className=\"form-control-file\" ref={inputFile}/>\r\n              </div>\r\n          </div> \r\n          <div className=\"form-group row\">\r\n            <div className=\"col-sm-12 mt-3 d-flex justify-content-center\">\r\n              <input type=\"submit\" className=\"btn btn-dark btn-m mr-2 btn-block\" value=\"추가\"/>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    :<div style={{textAlign:\"center\", color:\"#999999\", paddingTop:\"35px\"}}><div><i className=\"bi bi-cloud-arrow-up\" style={{fontSize:\"180px\"}}></i></div><div style={{fontSize:\"40px\"}}>검사 없음</div></div>}\r\n   </div>\r\n    <div style={{height:\"15%\"}}>\r\n      <div style={{fontSize:\"22px\", fontWeight:\"bold\", marginBottom:\"5px\"}}><i className=\"bi bi-exclamation-octagon-fill\" style={{color:\"orange\"}}></i> 검사실 주의사항</div>\r\n      <div style={{border:\"1px solid black\"}}><Banner/></div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TestResult;","import { Nav, Row, Tab, Badge } from \"react-bootstrap\";\r\nimport moment from 'moment';\r\nimport { useEffect } from \"react\";\r\n\r\nfunction PatientList(props) {\r\n  return (\r\n    <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"wait\">\r\n          <Nav fill variant=\"tabs\" className=\"flex-column mb-2\">\r\n            <Row className=\"ml-0 mr-0\">\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"total\">전체<diV>{props.patients.length}</diV></Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"wait\">대기<diV>{props.waitings.length}</diV></Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"progress\">진행중<diV>{props.progresss.length}</diV></Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"complete\">완료<diV>{props.completes.length}</diV></Nav.Link>\r\n              </Nav.Item>\r\n            </Row>\r\n          </Nav>\r\n          \r\n          <div className=\"pt-2 pb-2 d-flex align-items-center\" style={{ backgroundColor:\"#1B296D\", color:\"#F9F7F9\", fontSize:\"14.5px\"}}>\r\n            <div className=\"col-2 p-0 text-center\">환자번호</div>\r\n            <div className=\"col-3 p-0 text-center\">생년월일</div>\r\n            <div className=\"col-2 p-0 text-center\">이름</div>\r\n            <div className=\"col-3 p-0 text-center\">검사날짜</div>\r\n            <div className=\"col-2 p-0 text-center\">상태</div>\r\n          </div>\r\n\r\n          <Tab.Content className=\"overflow-auto\" id=\"style-7\" style={{height:\"550px\"}}>\r\n            {props.patients.length === 0? \r\n            <Tab.Pane eventKey= \"total\" className=\"pt-1\">\r\n              <div style={{textAlign:\"center\", color:\"#999999\"}}><div><i className=\"bi bi-person-x\" style={{fontSize:\"180px\"}}></i></div><div style={{fontSize:\"30px\"}}>해당되는 환자가 없습니다.</div></div>\r\n            </Tab.Pane>\r\n            :\r\n              <Tab.Pane eventKey= \"total\">\r\n              {props.patients.map((item, index)=>{return(\r\n                <div key={item.testreceptionid} id={item.testreceptionid} className=\"pt-2 pb-2 d-flex align-items-center\" onClick={ e => {props.ClickPatient(e, item, index) }} style={{ fontSize:\"15px\", borderBottom:\"1px solid #a6a6a6\", backgroundColor: props.select === item.testreceptionid ? \"#E0ECF8\" : \"\"}}>\r\n                  <div className=\"col-2 p-0 text-center\">{item.patientid}</div>\r\n                  <div className=\"col-3 p-0 text-center\">{item.ssn1}</div>\r\n                  <div className=\"col-2 p-0 text-center\" style={{fontWeight:\"bold\"}}>{item.patientname}</div>\r\n                  <div className=\"col-3 p-0 text-center\">{moment(item.testdate).format('YYYY-MM-DD')}</div>\r\n                  <div className=\"col-2 p-0 text-center\" style={{fontSize:\"17px\"}}><Badge variant={(item.resultstatus == \"입력완료\")?\"info\":\"warning\"}>{item.resultstatus}</Badge></div>\r\n                </div>\r\n              )})}\r\n              </Tab.Pane>}\r\n\r\n              {props.waitings.length === 0? \r\n            <Tab.Pane eventKey= \"wait\" className=\"pt-1\">\r\n              <div style={{textAlign:\"center\", color:\"#999999\"}}><div><i className=\"bi bi-person-x\" style={{fontSize:\"180px\"}}></i></div><div style={{fontSize:\"30px\"}}>대기중인 환자가 없습니다.</div></div>\r\n            </Tab.Pane>\r\n            :\r\n              <Tab.Pane eventKey= \"wait\">\r\n              {props.waitings.map((item, index)=>{return(\r\n                  <div key={item.testreceptionid} id={item.testreceptionid} className=\"pt-1 pb-1 d-flex align-items-center\" onClick={ e => {props.ClickPatient(e, item) }} style={{ fontSize:\"15px\", borderBottom:\"1px solid #a6a6a6\", backgroundColor: props.select === item.testreceptionid ? \"#E0ECF8\" : \"\"}} >\r\n                  <div className=\"col-2 p-0 text-center\">{item.patientid}</div>\r\n                  <div className=\"col-3 p-0 text-center\">{item.ssn1}</div>\r\n                  <div className=\"col-2 p-0 text-center\" style={{fontWeight:\"bold\"}}>{item.patientname}</div>\r\n                  <div className=\"col-3 p-0 text-center\">{moment(item.testdate).format('YYYY-MM-DD')}</div>\r\n                  <div className=\"col-2 p-0 text-center\" style={{fontSize:\"15px\"}}><Badge className=\"mr-1\" variant=\"success\">{item.status}</Badge><Badge variant={(item.resultstatus == \"입력완료\")?\"info\":\"warning\"}>{item.resultstatus}</Badge></div>\r\n                  </div>\r\n              )})}\r\n              </Tab.Pane>}\r\n\r\n              {props.progresss.length === 0? \r\n            <Tab.Pane eventKey= \"progress\" className=\"pt-1\">\r\n              <div style={{textAlign:\"center\", color:\"#999999\"}}><div><i className=\"bi bi-person-x\" style={{fontSize:\"180px\"}}></i></div><div style={{fontSize:\"30px\"}}>진행중인 환자가 없습니다</div></div>\r\n            </Tab.Pane>\r\n            :\r\n              <Tab.Pane eventKey= \"progress\">\r\n              {props.progresss.map((item, index)=>{return(\r\n                <div key={item.testreceptionid} id={item.testreceptionid} className=\"pt-1 pb-1 d-flex align-items-center\" onClick={ e => {props.ClickPatient(e, item) }} style={{ fontSize:\"15px\", borderBottom:\"1px solid #a6a6a6\", backgroundColor: props.select === item.testreceptionid ? \"#E0ECF8\" : \"\"}}>\r\n                <div className=\"col-2 p-0 text-center\">{item.patientid}</div>\r\n                <div className=\"col-3 p-0 text-center\">{item.ssn1}</div>\r\n                <div className=\"col-2 p-0 text-center\" style={{fontWeight:\"bold\"}}>{item.patientname}</div>\r\n                <div className=\"col-3 p-0 text-center\">{moment(item.testdate).format('YYYY-MM-DD')}</div>\r\n                <div className=\"col-2 p-0 text-center\" style={{fontSize:\"15px\"}}><Badge className=\"mr-1\" variant=\"primary\">{item.status}</Badge><Badge variant={(item.resultstatus == \"입력완료\")?\"info\":\"warning\"}>{item.resultstatus}</Badge></div>\r\n              </div>\r\n              )})}\r\n              </Tab.Pane>}\r\n\r\n              {props.completes.length === 0? \r\n            <Tab.Pane eventKey= \"complete\" className=\"pt-1\">\r\n              <div style={{textAlign:\"center\", color:\"#999999\"}}><div><i className=\"bi bi-person-x\" style={{fontSize:\"180px\"}}></i></div><div style={{fontSize:\"30px\"}}>완료된 환자가 없습니다.</div></div>\r\n            </Tab.Pane>\r\n            :\r\n              <Tab.Pane eventKey= \"complete\">\r\n              {props.completes.map((item, index)=>{return(\r\n                <div key={item.testreceptionid} id={item.testreceptionid} className=\"pt-1 pb-1 d-flex align-items-center\" onClick={ e => {props.ClickPatient(e, item) }} style={{ fontSize:\"15px\", borderBottom:\"1px solid #a6a6a6\", backgroundColor: props.select === item.testreceptionid ? \"#E0ECF8\" : \"\"}}>\r\n                <div className=\"col-2 p-0 text-center\">{item.patientid}</div>\r\n                <div className=\"col-3 p-0 text-center\">{item.ssn1}</div>\r\n                <div className=\"col-2 p-0 text-center\" style={{fontWeight:\"bold\"}}>{item.patientname}</div>\r\n                <div className=\"col-3 p-0 text-center\">{moment(item.testdate).format('YYYY-MM-DD')}</div>\r\n                <div className=\"col-2 p-0 text-center\" style={{fontSize:\"15px\"}}><Badge className=\"mr-1\" variant=\"danger\">{item.status}</Badge><Badge variant={(item.resultstatus == \"입력완료\")?\"info\":\"warning\"}>{item.resultstatus}</Badge></div>\r\n              </div>\r\n              )})}\r\n              </Tab.Pane>}\r\n            </Tab.Content>\r\n          </Tab.Container>\r\n  );\r\n}\r\nexport default PatientList;","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PeriodSearch from \"./PeriodSearch\";\r\nimport TestGroup from \"./TestGroup\";\r\nimport TestResult from \"./TestResult\";\r\nimport { testlistByDate, testlistByReceptionid } from \"apis/test\";\r\nimport moment from 'moment';\r\nimport PatientList from \"./PatientList\";\r\n\r\nfunction TestPage(props) {  \r\n  const [patients, setPatient] = useState([]) //전체 환자\r\n  const [waitings, setWaiting] = useState([]) //대기 환자\r\n  const [progresss, setProgress] = useState([]) //진행 환자\r\n  const [completes, setComplete] = useState([]) //완료 환자\r\n\r\n  const [selectpatientinfo, setSelectpatientinfo] = useState({}) //클릭한 검사접수번호의 환자의 정보\r\n \r\n  const [groupshow, setGroupShow] = useState(false) //testgroup 보여주는 show\r\n \r\n  const [startdate, setStartdate] = useState(new Date());\r\n  const [enddate, setEnddate] = useState(new Date());\r\n\r\n  const [testdatas, setTestdatas] = useState([]);\r\n\r\n  const testReception = useSelector((state)=>(state.receptionReducer.testreception)) //--------------redis\r\n  \r\n  useEffect(()=>{ //맨처음 기본설정 당일, testReception 바뀔때마다 랜더링\r\n    getpatient(moment(startdate).format('YYYY-MM-DD'), moment(enddate).format('YYYY-MM-DD'))\r\n  },[testReception]);\r\n  \r\n  const getpatient = async(startdate, enddate) => { //함수로 만든이유는 나중에 클릭할때도 사용\r\n    try { \r\n      const response = await testlistByDate(moment(startdate).format('YYYY-MM-DD'), moment(new Date(enddate).getTime() + 1 * 24 * 60 * 60 * 1000).format('YYYY-MM-DD'));\r\n      const patient = response.data;\r\n      setPatient(response.data);\r\n      const waiting = patient.filter(patient => patient.status === \"대기중\");\r\n      setWaiting(waiting)\r\n      const progress = patient.filter(patient => patient.status === \"진행중\");\r\n      setProgress(progress)\r\n      const complete = patient.filter(patient => patient.status === \"검사완료\");\r\n      setComplete(complete)\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  const gettest = (testreceptionid) => { //testreceptionid로 test 리스트를 가져옴\r\n    if(selectpatientinfo.testreceptionid != null){\r\n      testlistByReceptionid(selectpatientinfo.testreceptionid).then((response)=>{\r\n      setTestdatas(response.data); //가져온 리스트 상태 저장\r\n      })\r\n   }\r\n  }\r\n\r\n  const [select, setSelect] = useState()\r\n  const ClickPatient = async(e, item, index) => {\r\n    setSelectpatientinfo(item) //클릭한 환자 검사 접수 저장\r\n    setSelect(item.testreceptionid)\r\n    //document.getElementById(item.testreceptionid).style.backgroundColor = \"red\";\r\n    setGroupShow(true) //클릭시 show\r\n  }\r\n  \r\n  useEffect(()=>{ //환자접수 id가 바뀔때마다 가져와지는 데이터들이 다름\r\n    gettest();\r\n\r\n  }, [selectpatientinfo.testreceptionid])\r\n\r\n  return (\r\n    <div className=\"vh-100\" style={{minWidth:\"1000px\"}}>\r\n      <div className=\"row m-0\">\r\n      <div className=\"col-3 pt-3\" style={{borderRight:\"1px solid #dadada\"}}>\r\n          <div className=\"row pl-3 ml-0\" style={{backgroundColor: \"#ffffff\", width:\"85%\"}}><div className=\"pr-3 pl-3 pt-2 pb-2\" style={{ backgroundColor:\"#FF8C64\"}}><i className=\"bi bi-calendar4-week\" style={{ fontSize:\"22px\"}}></i></div><div className=\"ml-4\" style={{fontWeight:\"bold\", paddingTop:\"12px\"}}>검사 대기 목록</div></div>\r\n          <div style={{height:\"88vh\"}}>\r\n          <PeriodSearch getpatient={getpatient} setStartdate={setStartdate} setEnddate={setEnddate}/>\r\n          <PatientList getpatient={getpatient} select={select} patients={patients} waitings={waitings} progresss={progresss} completes={completes} ClickPatient={ClickPatient}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-5 pt-3\">\r\n          <div className=\"d-flex pl-3 ml-0 mb-3 p-0\" style={{backgroundColor: \"#ffffff\", width:\"85%\"}}><div className=\"pr-3 pl-3 pt-2 pb-2\" style={{ backgroundColor:\"#F2E18D\"}}><i className=\"bi bi-droplet\" style={{ fontSize:\"22px\"}}></i></div><div className=\"ml-4\" style={{fontWeight:\"bold\", paddingTop:\"12px\"}}>검사 처방 목록</div></div>\r\n\r\n          <div className=\"d-flex align-items-center pl-3 pr-3\" style={{ backgroundColor:\"#ffffff\", boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"15px\", fontSize:\"14.5px\", height:\"40px\"}}>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center\">차트번호 :</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center border-right\" style={{fontWeight:\"bold\"}}>{selectpatientinfo.patientid}</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center\">생년월일 :</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center border-right\" style={{fontWeight:\"bold\"}}>{selectpatientinfo.ssn1}</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center\">성별 :</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center border-right\" style={{fontWeight:\"bold\"}}>{selectpatientinfo.sex}</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center\">이름 :</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center\" style={{fontWeight:\"bold\"}}>{selectpatientinfo.patientname}</div>\r\n          </div>\r\n          <div className=\"d-flex pt-3\">\r\n            <div style={{width:\"96%\", marginLeft:\"2%\"}}>{groupshow?<TestGroup startdate={startdate} enddate={enddate} getpatient={getpatient} selectpatientinfo={selectpatientinfo} testdatas={testdatas} gettest={gettest} setTestdatas={setTestdatas}/>\r\n            :<div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"90px\"}}><div><i className=\"bi bi-clipboard-plus\" style={{fontSize:\"180px\"}}></i></div><div style={{fontSize:\"35px\"}}>환자를 선택해주세요</div></div>}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-4 pt-3\" style={{borderLeft:\"1px solid #dadada\"}}>\r\n          <div className=\"row pl-3 10vh ml-0\" style={{backgroundColor: \"#ffffff\", width:\"85%\"}}>\r\n            <div className=\"pr-3 pl-3 pt-2 pb-2\" style={{ backgroundColor:\"#3EB2A2\"}}>\r\n              <i className=\"bi bi-display\" style={{ fontSize:\"22px\"}}></i>\r\n            </div>\r\n            <div className=\"ml-4\" style={{fontWeight:\"bold\", paddingTop:\"12px\"}}>X-RAY 결과 입력</div>\r\n          </div>\r\n\r\n          <div className=\"row\" style={{height:\"2%\"}}></div>\r\n          <div style={{height:\"65%\"}}>\r\n            <TestResult selectpatientinfo={selectpatientinfo} testdatas={testdatas} gettest={gettest} startdate={startdate} enddate={enddate} getpatient={getpatient}/>\r\n          </div>\r\n          <div style={{height:\"10%\"}}></div>\r\n        </div>\r\n\r\n      </div> \r\n    </div>\r\n  );\r\n}\r\nexport default TestPage;","import { join } from \"apis/User\";\r\nimport { useState } from \"react\";\r\nimport { Button, Form, Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst errorMsg = {\r\n  password_empty : '비밀번호를 입력해주세요.',\r\n  userid_empty : '아이디를 입력해주세요.',\r\n  err_confirmPassword: '비밀번호확인을 다시 입력해주세요.',\r\n  err_userid: '이미 존재하는 userID 입니다.'\r\n}\r\n\r\nfunction JoinForm(props) { \r\n  const globalcode = useSelector((state) => {return state.authReducer.codenumber});\r\n  const [validated, setValidated] = useState(false);\r\n  const [errorMessage, setErrorMesssage] = useState(errorMsg.password_empty);\r\n  const [errorMessageID, setErrorMesssageID] = useState(errorMsg.userid_empty);\r\n  const [isInvalid, setIsInvalid] = useState(false);\r\n  const [isInvalidID, setIsInvalidID] = useState(false);\r\n  const [isNurse, setIsNurse] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    userid:\"nurse3\",\r\n    userpassword:\"12345\",\r\n    confirmpassword:\"12345\",\r\n    username:\"이원근\",\r\n    phonenumber:\"01012346654\",\r\n    userroom:\"\",\r\n    sex:\"남자\",\r\n    role_authority:\"ROLE_NURSE\",\r\n    codenumber:globalcode\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    if(event.target.value === \"ROLE_NURSE\"){\r\n      setIsNurse(true);\r\n      setFormData((prevData) => {\r\n        return {\r\n          ...prevData,\r\n          userroom:\"\"\r\n        }\r\n      })\r\n      console.log(formData);\r\n    } else {\r\n      setIsNurse(false);\r\n    }\r\n    setFormData((prevData) => {\r\n      return {\r\n        ...prevData,\r\n        [event.target.name]:event.target.value\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    setLoading(true);\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (form.checkValidity() === false) {//빈칸이 있을경우\r\n      setValidated(true);\r\n      setLoading(false);\r\n      setErrorMesssage(errorMsg.password_empty);\r\n      setErrorMesssageID(errorMsg.userid_empty);\r\n    } else { //빈칸이 없을경우\r\n      if(formData.userpassword !== formData.confirmpassword){//비밀번호, 비밀번호 확인이 다르면\r\n        setIsInvalidID(false);\r\n        setErrorMesssageID(errorMsg.userid_empty);\r\n        setIsInvalid(true);\r\n        setErrorMesssage(errorMsg.err_confirmPassword);\r\n        setFormData({\r\n          ...formData,\r\n          confirmpassword:\"\"\r\n        })\r\n        setLoading(false);\r\n      } else {\r\n        const response = join(formData);\r\n        response\r\n        .then((response) => {\r\n          const state = response.data.state\r\n          if(state === \"success\"){\r\n            props.toastShow(\"직원 등록이 완료되었습니다.\");\r\n            setFormData({\r\n              userid:\"\",\r\n              userpassword:\"\",\r\n              confirmpassword:\"\", \r\n              username:\"\",\r\n              phonenumber:\"\",\r\n              userroom:\"\",\r\n              sex:\"남자\",\r\n              role_authority:\"ROLE_DOCTOR\"\r\n            });\r\n            setIsInvalidID(false);\r\n            setErrorMesssageID(errorMsg.userid_empty);\r\n            setIsInvalid(false);\r\n            setValidated(false);\r\n            setErrorMesssage(errorMsg.password_empty);\r\n            props.getUsers();\r\n          } else if(state === \"failure\"){\r\n            setIsInvalidID(true);\r\n            setErrorMesssageID(errorMsg.err_userid);\r\n            setIsInvalid(false);\r\n            setErrorMesssage(errorMsg.password_empty);\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error);\r\n        }).finally(() => {\r\n          setLoading(false);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>아이디</Form.Label>\r\n        <Form.Control required name=\"userid\" type=\"text\" placeholder=\"User ID\" value={formData.userid} onChange={handleChange} isInvalid={isInvalidID}/>\r\n        <Form.Control.Feedback type=\"invalid\">{errorMessageID}</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>비밀번호</Form.Label>\r\n        <Form.Control required name=\"userpassword\" type=\"password\" placeholder=\"Password\" value={formData.userpassword} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">비밀번호를 입력해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>비밀번호 확인</Form.Label>\r\n        <Form.Control required name=\"confirmpassword\" type=\"password\" placeholder=\"Confirm Password\" value={formData.confirmpassword} onChange={handleChange} isInvalid={isInvalid}/>\r\n        <Form.Control.Feedback type=\"invalid\">{errorMessage}</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>이름</Form.Label>\r\n        <Form.Control required name=\"username\" type=\"text\" placeholder=\"User Name\" value={formData.username} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">이름을 입력해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>전화번호</Form.Label>\r\n        <Form.Control required name=\"phonenumber\" type=\"test\" placeholder=\"Phone Number\" value={formData.phonenumber} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">전화번호를 입력해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <div>\r\n          <Form.Label>성별</Form.Label>\r\n        </div>\r\n        <Form.Check required checked={formData.sex === \"남자\"} inline label=\"남자\" name=\"sex\" type={\"radio\"} value=\"남자\" feedback={\"성별을 선택해주세요.\"} onChange={handleChange}/>\r\n        <Form.Check required checked={formData.sex === \"여자\"} inline label=\"여자\" name=\"sex\" type={\"radio\"} value=\"여자\" feedback={\"성별을 선택해주세요.\"} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">성별을 선택해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <div>\r\n          <Form.Label>직책</Form.Label>\r\n        </div>\r\n        <Form.Check checked={formData.role_authority === \"ROLE_DOCTOR\"} required inline label=\"의사\" name=\"role_authority\" value=\"ROLE_DOCTOR\" type={\"radio\"} feedback={\"직책을 선택해주세요.\"} onChange={handleChange}/>\r\n        <Form.Check checked={formData.role_authority === \"ROLE_NURSE\"} required inline label=\"간호사\" name=\"role_authority\" value=\"ROLE_NURSE\" type={\"radio\"} feedback={\"직책을 선택해주세요.\"} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">직책을 선택해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>진료실</Form.Label>\r\n        <Form.Control required name=\"userroom\" type=\"text\" placeholder=\"Treatment Room\" value={formData.userroom} onChange={handleChange} readOnly={isNurse}/>\r\n        <Form.Control.Feedback type=\"invalid\">진료실을 입력해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n\r\n      <div className=\"text-right\">\r\n        <Button className=\"w-100\" type=\"submit\" variant=\"dark\">\r\n          {loading === true ? <Spinner className=\"mr-1\" as=\"span\" animation=\"border\" size=\"sm\" role=\"status\"/> : null}\r\n            직원 등록</Button>\r\n      </div>\r\n    </Form>\r\n\r\n  );\r\n}\r\n\r\nexport default JoinForm;","import axios from \"axios\";\r\n\r\nexport function join(user) {\r\n    const promise = axios.post(\"/user/join\", user);\r\n    return promise;\r\n}\r\n\r\nexport function getUserList() {\r\n    const promise = axios.get(\"/user/userlist\");\r\n    return promise;\r\n}\r\n\r\nexport function updateForm(user) {\r\n    const promise = axios.post(\"/user/update\", user);\r\n    return promise;\r\n}\r\n\r\nexport function deleteUser(userid) {\r\n    const promise = axios.delete(\"/user/delete/\" + userid);\r\n    return promise;\r\n}\r\n\r\nexport function disableUser(userid) {\r\n    const promise = axios.put(\"/user/disable/\" + userid);\r\n    return promise;\r\n}\r\n\r\nexport function enableUser(userid) {\r\n    const promise = axios.put(\"/user/enable/\" + userid);\r\n    return promise;\r\n}\r\n\r\n ","import { useEffect, useState } from \"react\";\r\nimport { Button, Form, Spinner } from \"react-bootstrap\";\r\nimport { updateForm, deleteUser, disableUser, enableUser } from \"apis/User\";\r\n\r\nconst errorMsg = {\r\n  password_empty : '비밀번호를 입력해주세요.',\r\n  userid_empty : '아이디를 입력해주세요.',\r\n  err_confirmPassword: '비밀번호확인을 다시 입력해주세요.',\r\n  fail_update:\"수정을 실패하였습니다.\"\r\n}\r\n\r\nfunction UpdateForm(props) {\r\n \r\n  const [validated, setValidated] = useState(false);\r\n  const [errorMessage, setErrorMesssage] = useState(errorMsg.password_empty);\r\n  const [isInvalid, setIsInvalid] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]:event.target.value\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFormData({\r\n      ...props.updateUser,\r\n      userpassword:\"\",\r\n      confirmpassword:\"\"\r\n    })\r\n  }, [props.updateUser]);\r\n\r\n  const handleSubmit = (event) => {\r\n    setLoading(true);\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (form.checkValidity() === false) {//빈칸이 있을경우\r\n      setValidated(true);\r\n      setLoading(false);\r\n      setErrorMesssage(errorMsg.password_empty);\r\n    } else { //빈칸이 없을경우\r\n      if(formData.userpassword !== formData.confirmpassword){//비밀번호, 비밀번호 확인이 다르면\r\n        setIsInvalid(true);\r\n        setErrorMesssage(errorMsg.err_confirmPassword);\r\n        setFormData({\r\n          ...formData,\r\n          confirmpassword:\"\"\r\n        })\r\n        setLoading(false);\r\n      } else {\r\n        \r\n        const response = updateForm(formData);\r\n        response.then((response) => {\r\n          if(response.data.state === \"success\") {\r\n            setIsInvalid(false);\r\n            props.setIsUpdate(false);\r\n            props.updateShow(\"수정이 완료 되었습니다.\");\r\n          } else {\r\n            setIsInvalid(true);\r\n            setErrorMesssage(errorMsg.fail_update);\r\n          }\r\n        }).catch((error) => {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n        }).finally(() => {\r\n          setLoading(false);\r\n\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteUserFun = () => {\r\n\r\n    if(window.confirm(\"직원을 삭제하시겠습니까?\") === true){\r\n      setLoading(true);\r\n      const response = deleteUser(formData.userid);\r\n      response.then((response) => {\r\n        if(response.data.state === \"success\"){\r\n          setIsInvalid(false);\r\n          setLoading(false);\r\n          props.setIsUpdate(false);\r\n          props.updateShow(\"삭제가 완료되었습니다.\");\r\n          props.getUsers();\r\n        } else {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n        }\r\n      }).catch((error) => {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  const disableUserFun = () => {\r\n    if(window.confirm(\"직원을 비활성화 시키겠습니까?\") === true){\r\n      setLoading(true);\r\n      const response = disableUser(formData.userid);\r\n      response.then((response) => {\r\n        if(response.data.state === \"success\"){\r\n          setIsInvalid(false);\r\n          setLoading(false);\r\n          props.setIsUpdate(false);\r\n          props.updateShow(\"직원이 비활성화 되었습니다.\");\r\n          props.getUsers();\r\n        } else {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n        }\r\n      }).catch((error) => {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n      })\r\n    }\r\n  }\r\n\r\n  const enableUserFun = () => {\r\n    if(window.confirm(\"직원을 활성화 시키겠습니까?\") === true){\r\n      setLoading(true);\r\n      const response = enableUser(formData.userid);\r\n      response.then((response) => {\r\n        if(response.data.state === \"success\"){\r\n          setIsInvalid(false);\r\n          setLoading(false);\r\n          props.setIsUpdate(false);\r\n          props.updateShow(\"직원이 활성화 되었습니다.\");\r\n          props.getUsers();\r\n        } else {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n        }\r\n      }).catch((error) => {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>아이디</Form.Label>\r\n        <Form.Control required name=\"userid\" type=\"text\" placeholder=\"User ID\" value={formData.userid || \"\"} readOnly/>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>비밀번호</Form.Label>\r\n        <Form.Control required name=\"userpassword\" type=\"password\" placeholder=\"Password\" value={formData.userpassword || \"\"} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">비밀번호를 입력해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>비밀번호 확인</Form.Label>\r\n        <Form.Control required name=\"confirmpassword\" type=\"password\" placeholder=\"Confirm Password\" value={formData.confirmpassword || \"\"} onChange={handleChange} isInvalid={isInvalid}/>\r\n        <Form.Control.Feedback type=\"invalid\">{errorMessage}</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>이름</Form.Label>\r\n        <Form.Control required name=\"username\" type=\"text\" placeholder=\"User Name\" value={formData.username || \"\"} readOnly/>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>전화번호</Form.Label>\r\n        <Form.Control name=\"phonenumber\" type=\"test\" placeholder=\"Phone Number\" value={formData.phonenumber || \"\"} readOnly/>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <div>\r\n          <Form.Label>성별</Form.Label>\r\n        </div>\r\n        <Form.Check checked={formData.sex === \"남자\"} inline label=\"남자\" name=\"sex\" type={\"radio\"} value=\"남자\" feedback={\"성별을 선택해주세요.\"} readOnly/>\r\n        <Form.Check checked={formData.sex === \"여자\"} inline label=\"여자\" name=\"sex\" type={\"radio\"} value=\"여자\" feedback={\"성별을 선택해주세요.\"} readOnly/>\r\n        <Form.Control.Feedback type=\"invalid\">성별을 선택해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <div>\r\n          <Form.Label>직책</Form.Label>\r\n        </div>\r\n        <Form.Check checked={formData.role_authority === \"ROLE_DOCTOR\"} required inline label=\"의사\" name=\"role_authority\" value=\"ROLE_DOCTOR\" type={\"radio\"} feedback={\"직책을 선택해주세요.\"} readOnly/>\r\n        <Form.Check checked={formData.role_authority === \"ROLE_NURSE\"} required inline label=\"간호사\" name=\"role_authority\" value=\"ROLE_NURSE\" type={\"radio\"} feedback={\"직책을 선택해주세요.\"} readOnly/>\r\n        <Form.Control.Feedback type=\"invalid\">직책을 선택해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>진료실</Form.Label>\r\n        <Form.Control name=\"userroom\" type=\"text\" placeholder=\"Treatment Room\" value={formData.userroom || \"\"} onChange={handleChange} readOnly/>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>상태</Form.Label>\r\n        <Form.Control type=\"text\" value={formData.userenabled ===1 ? \"활성화\" : \"비활성화\"} readOnly/>\r\n      </Form.Group>\r\n\r\n      <div className=\"text-right\">\r\n        {formData.userenabled === 1 ? \r\n        <Button className=\"w-25 mr-3\" type=\"submit\" variant=\"dark\">\r\n        {loading === true ? <Spinner className=\"mr-2\" as=\"span\" animation=\"border\" size=\"sm\" role=\"status\"/> : null}\r\n          수정 완료</Button>\r\n        : \r\n        <Button className=\"w-25 mr-3\" variant=\"primary\" type=\"button\" onClick={enableUserFun}>\r\n        {loading === true ? <Spinner className=\"mr-2\" as=\"span\" animation=\"border\" size=\"sm\" role=\"status\"/> : null}\r\n          활성화</Button>\r\n        }\r\n\r\n\r\n        {formData.userenabled === 1 ? \r\n        <Button className=\"w-25\" variant=\"danger\" type=\"button\" onClick={disableUserFun}>\r\n        {loading === true ? <Spinner className=\"mr-2\" as=\"span\" animation=\"border\" size=\"sm\" role=\"status\"/> : null}\r\n          비활성화</Button>\r\n        :\r\n        null\r\n        }\r\n        \r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default UpdateForm;","import { getUserList } from \"apis/User\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Col, Row, Toast } from \"react-bootstrap\";\r\nimport JoinForm from \"./JoinForm\";\r\nimport UpdateForm from \"./UpdateForm\";\r\nfunction Members(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [toastMessage, setToastMessage] = useState(\"\");\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [userList, setUserList] = useState([]);\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const getUsers = async() => {\r\n    const response = await getUserList();\r\n    setUserList(response.data);\r\n  }\r\n\r\n  const [updateUser, setUpdateUser] = useState({});\r\n\r\n  const update = (selectUser) => {\r\n    setUpdateUser(selectUser);\r\n    setIsUpdate(true);\r\n  }\r\n\r\n  const completeUpdate = (message) => {\r\n    setToastMessage(message);\r\n    setShow(true);\r\n  }\r\n\r\n  const closeShow = () => {\r\n    setShow(false)\r\n    setToastMessage(\"\"); \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row ml-0 mr-0\" style={{height:\"100vh\"}}>\r\n        <div className=\"col h-100\">\r\n          <div className=\"border border-dark pl-3 pr-3\" style={{height:\"96vh\", marginBottom:\"2vh\",  marginTop:\"2vh\" , backgroundColor:\"#FFFFFF\"}}>\r\n            <div className=\"d-flex row pb-1\" style={{height:\"50px\"}}><div className=\"p-2 ml-3 mr-2 text-center\" style={{ backgroundColor:\"#887BD2\", width:\"40px\", color:\"#FFFFFF\"}}><i className=\"bi bi-person-lines-fill\"></i></div><div className=\"d-flex align-items-center\">직원 목록</div></div>\r\n            <div className=\"p-4\" style={{height:\"calc(100% - 50px)\"}}>\r\n              <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n                <div style={{width:\"10%\"}}></div>\r\n                <div style={{width:\"12%\"}}>직원 아이디</div>\r\n                <div style={{width:\"15%\"}}>직원명</div>\r\n                <div style={{width:\"18%\"}}>전화번호</div>\r\n                <div style={{width:\"10%\"}}>진료실</div>\r\n                <div style={{width:\"15%\"}}>직책</div>\r\n                <div style={{width:\"10%\"}}>상태</div>\r\n                <div style={{width:\"10%\"}}></div>\r\n              </div>\r\n              <div className=\"overflow-auto border\" style={{height:\"calc(100% - 40px\"}}>\r\n                {userList != null &&\r\n                userList.map((user) => {\r\n                  return (\r\n                    <div key={user.userid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"60px\", fontWeight:\"bold\"}}>\r\n                      <div style={{width:\"10%\"}}>\r\n                        {user.sex === \"남자\" ? \r\n                          <img src=\"/doctor2.png\" alt=\"man\" width=\"30\" height=\"30\"/> :\r\n                          <img src=\"/doctor3.png\" alt=\"woman\" width=\"30\" height=\"30\"/>\r\n                        }  \r\n                      </div>\r\n                      <div style={{width:\"12%\"}}>{user.userid}</div>\r\n                      <div style={{width:\"15%\"}}>{user.username}</div>\r\n                      <div style={{width:\"18%\"}}>{user.phonenumber}</div>\r\n                      <div style={{width:\"10%\"}}>{user.userroom}</div>\r\n                      <div style={{width:\"15%\"}}>\r\n                        {user.role_authority === \"ROLE_DOCTOR\" ? \"의사\" : ( user.role_authority === \"ROLE_NURSE\" ? \"간호사\" : \"병원장\")}\r\n                      </div>\r\n                      <div style={{width:\"10%\"}}>\r\n                        {user.userenabled === 1 ? \"활성화\" : \"비활성화\"}\r\n                      </div>\r\n                      <div style={{width:\"10%\"}}><button className=\"btn btn-sm btn-outline-secondary\" onClick={() => {update(user)}}>수정</button></div>\r\n                    </div>\r\n                  )\r\n                })\r\n                }\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col h-100\">\r\n          <div className=\"border border-dark pl-3 pr-3\" style={{height:\"96vh\", marginBottom:\"2vh\",  marginTop:\"2vh\" , backgroundColor:\"#FFFFFF\"}}>\r\n            <div className=\"d-flex row pb-1\" style={{height:\"50px\"}}><div className=\"p-2 ml-3 mr-2 text-center\" style={{ backgroundColor:\"#887BD2\", width:\"40px\", color:\"#FFFFFF\"}}><i className=\"bi bi-person-plus-fill\"></i></div><div className=\"d-flex align-items-center\">\r\n                {isUpdate == false ? \"직원 등록\" : \"직원 수정\"}</div></div>\r\n            <div className=\"pt-4\" style={{height:\"calc(100% - 50px)\"}}>\r\n              {isUpdate == false ? \r\n              <JoinForm toastShow={completeUpdate} getUsers={getUsers}/> \r\n              : \r\n              <UpdateForm updateUser={updateUser} getUsers={getUsers} setIsUpdate={setIsUpdate} updateShow={completeUpdate}></UpdateForm> }\r\n                \r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{position: \"absolute\", bottom: \"40px\", right: \"30px\"}}>\r\n          <Row>\r\n            <Col style={{width:\"400px\"}}>\r\n              <Toast onClose={closeShow} show={show} delay={3000} autohide>\r\n                <Toast.Header style={{backgroundColor:\"#1B296D\"}}>\r\n                  <strong className=\"mr-auto\" style={{color:\"white\"}}>Message</strong>\r\n                  <small>complete</small>\r\n                </Toast.Header>\r\n                <Toast.Body>{toastMessage}</Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Members;","import { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"views/Home\";\r\nimport Reception from \"views/Reception\";\r\nimport Treatment from \"views/Treatment\";\r\nimport Test from \"views/Test\";\r\nimport Members from \"views/Members\";\r\n\r\n\r\n//jsconfig로 하면 src가 기본 경로로 되어있음\r\n\r\nfunction AppRoute(props) {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${props.match.url}/home`} exact component={Home}/>\r\n      <Route path={`${props.match.url}/reception`} exact component={Reception}/>\r\n      <Route path={`${props.match.url}/treatment`} exact component={Treatment}/>\r\n      <Route path={`${props.match.url}/test`} exact component={Test}/>\r\n      <Route path={`${props.match.url}/members`} exact component={Members}/>\r\n      <Redirect to={`${props.match.url}/home`} />\r\n      {/* 어느 누구도 해당하지 않으면 home으로 감  */}\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default AppRoute;\r\n","import { GetUserData } from \"apis/Reception\";\r\nimport { loadChatting, saveChatting, clearChatting } from \"apis/Redis\";\r\nimport {  useEffect, useRef, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { createSetToast } from \"redux/toast-reducer\";\r\nimport ReceptionHeader from \"views/Reception/components/ReceptionHeader\";\r\n\r\n// const initChatArray=  () =>{ \r\n//     const chatArray=[];\r\n//     for(var i=0; i<5; i++){\r\n//         const chatObj = {username:\"user\"+i, message:\"messageasdfdsafd\"+i, dateTime:new Date(),isMe:i%2===0, enabled:true}\r\n//         chatArray.push(chatObj)\r\n//     }\r\n//     return chatArray;\r\n// }\r\n\r\n// const initConnectionArray=  () =>{ \r\n//     const connectionArray=[];\r\n//     for(var i=0; i<10; i++){\r\n//         const connectionObj = {userid:\"userid\"+i,username:\"name\"+i,userrole:\"role\"+i,status:\"connect\"}\r\n//         connectionArray.push(connectionObj)\r\n//     }\r\n//     return connectionArray;\r\n// }\r\n\r\n\r\n//나중에 로그아웃때 넘길 chatArray 값\r\nlet chatarray = [];\r\nfunction Chatting(props){\r\n    const [test, setTest] = useState(\"test!!\")\r\n    const [chatArray, setChatArray] = useState([]);\r\n    const [connectionList,setConnectionList] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const globalUid= useSelector((state)=>(state.authReducer.userid))\r\n    const [userInfo, setUserInfo] = useState({})\r\n    const scrollRef = useRef();\r\n    const [websocket, setWebsocket] = useState();\r\n    const [brb, setBRB] = useState(false);\r\n    const dispatch = useDispatch();\r\n    // 채팅칠때 스크롤 내리기\r\n    useEffect(()=>{\r\n        if(scrollRef.current){\r\n            scrollRef.current.scrollIntoView({ behavior: 'smooth'});\r\n        }\r\n        //나중에 로그아웃때 넘길 chatArray 값 저장\r\n        chatarray = chatArray;\r\n    },[chatArray])\r\n\r\n    window.onbeforeunload = function(e) {\r\n         saveChatting(globalUid,chatArray).then((result)=>{\r\n             console.log(\"!!! save!!\")\r\n             console.log(result.data)\r\n     })\r\n      };\r\n    useEffect(()=>{\r\n        // let webSocket = new  WebSocket('ws://localhost:8080/websocket/chatting')\r\n        let webSocket = new WebSocket(\"ws://kosa3.iptime.org:50006/websocket/chatting\")\r\n      \r\n        webSocket.onopen = () =>{\r\n            console.log(\"open!!!\")\r\n            //Back-end에서 이전 채팅기록 가져오기\r\n            loadChatting(globalUid).then((result)=>{\r\n                console.log(\"load!!\")\r\n                if(result.data===\"\"){\r\n                    result.data = [];\r\n                }\r\n                    setChatArray(result.data )\r\n            })\r\n\r\n            console.log(\"sendHELLO!\" + globalUid)\r\n            //유저정보 불러오기\r\n            GetUserData(globalUid).then((result)=>{\r\n                //유저 role 한글로 바꿔주기\r\n                if(result.data.role_authority===\"ROLE_DOCTOR\")result.data.role_authority=\"의사\"\r\n                else if(result.data.role_authority===\"ROLE_NURSE\")result.data.role_authority=\"간호사\"\r\n                else if(result.data.role_authority===\"ROLE_ADMIN\")result.data.role_authority=\"병원장\"\r\n                setUserInfo(result.data)\r\n                //접속되면 처음 내 정보를 서버에 보내줌\r\n                webSocket.send(JSON.stringify({\r\n                    header:\"HELLO\",\r\n                    from:globalUid,\r\n                    connectioninfo:{userid:globalUid,username:result.data.username,userrole:result.data.role_authority,status:\"접속중\"},\r\n                    message:\"\"\r\n                }))\r\n            })\r\n            \r\n        }\r\n        webSocket.onclose=()=>{\r\n            console.log(\"sendBYE!\")\r\n        }\r\n        webSocket.onmessage = (event) =>{\r\n           \r\n            \r\n            var data = JSON.parse(event.data);\r\n            console.log(\"receive\" + data.header)\r\n            //접속 패킷 받았을때\r\n            if(data.header===\"HELLO\"){\r\n                //동기화할 유저정보 리스트\r\n                setConnectionList(data.connectionlist)\r\n            }\r\n            //자리 비움패킷 받았을때\r\n            else if(data.header===\"BRB\"){\r\n                //동기화할 유저정보 리스트\r\n                setConnectionList(data.connectionlist)\r\n            }\r\n            //접속종료패킷 받았을때\r\n            else if(data.header===\"BYE\"){\r\n                //동기화할 유저정보 리스트\r\n                console.log(\"byte!!\")\r\n                console.log(chatArray)\r\n                setConnectionList(data.connectionlist)\r\n            }\r\n            //채팅 패킷 받았을때\r\n            else if(data.header===\"CHATTING\"){\r\n                if(data.from!==globalUid){\r\n                    dispatch(createSetToast({message:data.name+\"님으로 부터 메시지 도착\"}))\r\n                }\r\n                setChatArray((prev)=>{\r\n                    const chatObj = {name:data.name, from:data.from,role:data.role,message:data.message, dateTime:data.dateTime,isMe:data.from===globalUid, enabled:true}\r\n\r\n                return prev.concat(chatObj) \r\n                })\r\n            }\r\n        }\r\n        setWebsocket(webSocket)\r\n\r\n        return()=>{\r\n            console.log(\"로그아웃??\")\r\n        saveChatting(globalUid,chatarray).then((result)=>{\r\n            console.log(\"!!! save!!\")\r\n            webSocket.close();\r\n        })}\r\n\r\n    },[])\r\n\r\n    const onChangeMessage = (event) =>{\r\n        setMessage(event.target.value);\r\n    } \r\n    const onKeyPress =(e)=>{\r\n        if(e.key===\"Enter\"){\r\n            sendMsg(e);\r\n        }\r\n    }\r\n    const sendMsg = (event) =>{\r\n        if(message===\"\")return;\r\n        //만약 자리비움 상태에서 채팅보냈으면 접속중으로 바꿔주기\r\n        if(brb){\r\n            BRB();\r\n        }\r\n      websocket.send(JSON.stringify({\r\n        header:\"CHATTING\",\r\n        from:globalUid,\r\n\r\n        name:userInfo.username,\r\n\r\n        role:userInfo.role_authority,\r\n        dateTime:new Date().toLocaleString(),\r\n        message:message\r\n    }))\r\n    setMessage(\"\");\r\n    }\r\n    //채팅 내역 초기화\r\n    const clear = () =>{\r\n        setChatArray([]);\r\n        clearChatting(globalUid).then((result)=>{\r\n            console.log(\"!!! clear\")\r\n    })\r\n    }\r\n    //자리비움, 온라인 onoff\r\n    const BRB = () =>{\r\n      setBRB(!brb)\r\n      websocket.send(JSON.stringify({\r\n        header:\"BRB\",\r\n        from:globalUid,\r\n        connectioninfo:{userid:globalUid,username:userInfo.username,userrole:userInfo.role_authority,status:brb?\"접속중\":\"자리비움\"},\r\n        message:\"\"\r\n    }))\r\n    }\r\n    return(\r\n    <>\r\n    <ReceptionHeader  headertitle=\"메신저\" iclassName=\" bi bi-chat-dots-fill \" color=\"#ffc107\">\r\n        <span className=\"mr-5\">\r\n        아이디 : {globalUid} , 이름 : {userInfo.username}({userInfo.role_authority}) \r\n        </span>\r\n        <button className=\"btn  btn-sm align-self-end mr-4\" style={{backgroundColor:brb?\"green\":\"red\" ,color:\"white\"}} onClick={BRB}>{brb?\"접속하기\":\"자리비우기\"}</button>\r\n\r\n        <button className=\"btn  btn-sm align-self-end mr-4\" style={{backgroundColor:\"#ffc107\" ,color:\"white\"}} onClick={clear}>내역삭제</button>\r\n    </ReceptionHeader>\r\n\r\n    <div className=\"row mt-2\">\r\n        \r\n        <div className=\"col-6 pr-0\">\r\n            <div className=\"pl-2 pr-2 pb-3 border-bottom border-left border-top border-dark\" style={{height:\"100%\"}}>\r\n\r\n                   <label>접속직원리스트</label>\r\n                    <div  className=\"overflow-auto mb-2 border border-dark  justify-content-center\" style={{height:\"95%\"}}>\r\n                        {connectionList&&connectionList.map((item,index)=>{\r\n                        return(\r\n                            <div className=\"row m-0 border-bottom text-center\" key={index} style={{fontSize:\"1em\"}}>\r\n                                <div className=\"col-3 p-0 border-right\">\r\n                                {item.userid}\r\n                                </div>\r\n                                <div className=\"col-3 p-0 border-right\">\r\n                                {item.username}\r\n                                </div>\r\n                                <div className=\"col-3 p-0 border-right\">\r\n                                {item.userrole}\r\n                                </div>\r\n                                <div className=\"col-3 p-0\" style={{backgroundColor:item.status===\"자리비움\"?\"red\":\"green\" ,color:\"white\"}}>\r\n                                {item.status}\r\n                                </div>\r\n                            </div>                         \r\n                            )\r\n                        })}  \r\n                    </div>\r\n                    {/* <label>네트워크 상태</label>\r\n                    <div  className=\"overflow-auto border border-dark\" style={{height:\"45%\"}}>\r\n                    \r\n                    </div> */}\r\n\r\n            </div>\r\n        </div>\r\n        <div className=\"col-6 pl-0\">\r\n            <div className=\"pl-1 pr-1 pb-3 border border-dark\" style={{height:\"100%\"}}>\r\n                <div  className=\"overflow-auto mt-3\" style={{height:\"calc(92vh - 136px)\"}}>\r\n                \r\n                <div  className=\" d-flex flex-column justify-content-end bg-dark pl-3 pr-3\" style={{minHeight:\"calc(92vh - 136px)\"}}>\r\n                    {chatArray&&chatArray.map((chat,index)=>{return(\r\n                        <div ref={scrollRef} key={index}  className={chat.isMe?\"row p-1 justify-content-end\":\"row  p-1  justify-content-start\"}>\r\n                            <div style={{ maxWidth:\"70%\"}}>\r\n                                <div style={{color:\"white\"}}>\r\n                                    {chat.name}({chat.role})\r\n                                </div>\r\n                                <div className=\"border \" style={ {backgroundColor:chat.isMe?\"yellow\":\"gray\",wordBreak:\"break-all\" }}>\r\n                                    {chat.message}\r\n                                </div>\r\n                                <div style={{fontSize:\"0.5em\",color:\"white\"}}>\r\n                                {chat.dateTime.toLocaleString()}\r\n                                </div>\r\n                            </div>\r\n                        </div>)\r\n                    })}\r\n                </div>\r\n                </div>\r\n                <div className=\"align-items-end d-flex\" >\r\n                    <input type=\"text\" className=\"col-10 form-control\" name=\"message\" onKeyPress={onKeyPress} value={message} onChange={onChangeMessage} />\r\n                    <button className=\"col-2 btn btn-warning btn-sm p-0\"style={{height:\"2.5rem\", fontSize:\"0.9rem\"}}  onClick={sendMsg}>보내기</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n    );\r\n}\r\nexport default Chatting;","import { useEffect, useState } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport TestReception from \"views/Reception/PatientReception/TestReception\";\r\nimport TreatmentReception from \"views/Reception/PatientReception/TreatmentReception\";\r\nimport { GetTestReceptionList, GetTreatmentList } from \"apis/Reception\";\r\nimport Chatting from \"./Messenger/Chatting\";\r\nimport ReceptionHeader from \"views/Reception/components/ReceptionHeader\";\r\nimport { ButtonGroup, Spinner, ToggleButton } from \"react-bootstrap\";\r\n\r\nfunction DrawerReceptions(props){\r\n    const treatmentReception = useSelector((state)=>(state.receptionReducer.treatmentreception)) \r\n    const testReception = useSelector((state)=>(state.receptionReducer.testreception))\r\n\r\n    const [treatementsData, setTreatmentsData] = useState()\r\n    const [testReceptionsData, setTestReceptionsData] = useState()\r\n    const [loading,setLoading] = useState(false);\r\n    \r\n    const [listtype, setListtype] = useState(\"접수목록\");\r\n\r\n    const handleChange = (event) => {\r\n        setListtype(event.target.value);\r\n      }\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        GetTreatmentList().then((result)=>{\r\n             \r\n            const userlist = result.data.userlist;\r\n            \r\n            const patientlist = result.data.patientlist;\r\n            const treatmentlist = result.data.treatmentlist.map((item, index)=>{\r\n                return {...item, patientname:patientlist[index].patientname,username:userlist[index].username,userroom:userlist[index].userroom }\r\n            })\r\n            setTreatmentsData(treatmentlist);\r\n            setLoading(false)\r\n        })\r\n    },[treatmentReception])\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        GetTestReceptionList().then((result)=>{\r\n            console.log(result.data)\r\n            const patientlist = result.data.patientlist;\r\n            const testlist = result.data.testlist.map((item, index)=>{\r\n                return {...item, patientname:patientlist[index].patientname }\r\n            })\r\n            setTestReceptionsData(testlist);\r\n            setLoading(false)\r\n        })\r\n    },[testReception])\r\n\r\n    return(\r\n        <>\r\n         <ButtonGroup toggle>\r\n                 <ToggleButton type=\"radio\" style={{color:\"white\"}}  variant= {`${listtype === \"접수목록\" ? \"success\" : \"\" }`} name=\"type\"  checked={listtype===\"접수목록\"} value=\"접수목록\" onChange={handleChange}><div className=\"ml-5 mr-5\">접수목록(당일)</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" style={{color:\"white\"}} variant={`${listtype === \"메신저\" ? \"success\" : \"\" }`} name=\"type\"  checked={listtype===\"메신저\"} value=\"메신저\" onChange={handleChange}><div className=\"ml-5 mr-5\">메신저</div></ToggleButton>\r\n        </ButtonGroup>\r\n        <div className=\"bg-white row p-2\" style={{height:\"calc(100vh-38px)\"}}>\r\n            \r\n            \r\n        <div className=\"col\" style={{height:\"calc(92vh-38px)\", backgroundColor:\"white\",display:listtype===\"접수목록\"?\"block\": \"none\"}}>\r\n            <div className=\"pl-3 pr-1  border border-dark\" style={{height:\"calc(48vh - 25px)\"}}>   \r\n            <ReceptionHeader  headertitle=\"진료접수\" iclassName=\" bi bi-clipboard-check \" color=\"#e89677\">\r\n            {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n            </ReceptionHeader>\r\n           \r\n            <TreatmentReception isDrawer={true} treatmentList={treatementsData}/> \r\n            </div>\r\n            <div className=\"mt-3 pl-3 pr-1  border border-dark\" style={{height:\"calc(48vh - 25px)\"}}>    \r\n            <ReceptionHeader  headertitle=\"검사접수\" iclassName=\" bi bi-clipboard-check \" color=\"#e89677\">\r\n            {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n            </ReceptionHeader>\r\n           \r\n            <TestReception isDrawer={true}  testList={testReceptionsData}/>\r\n            </div>\r\n        </div>\r\n        \r\n        <div className=\"col\"style={{height:\"calc(92vh-38px)\", backgroundColor:\"white\",display:listtype===\"메신저\"?\"block\": \"none\"}}>\r\n                <Chatting/>\r\n        </div>\r\n            \r\n            \r\n            \r\n           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DrawerReceptions;","import \"../style/menu.css\"\r\nimport {slide as Menu}  from \"react-burger-menu\";\r\nimport DrawerReceptions from \"./DrawerReceptions\";\r\nimport { Col, Row, Toast } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Menus(props){\r\n  \r\n  const toast = useSelector((state)=>(state.toastReducer.toast))\r\n  const [showToast,setShowToast] = useState(false); \r\n  const toggleShowToast = () => {setShowToast(!showToast);}\r\n  //리덕스 올때마다 토스트 켜줌\r\n  useEffect(()=>{\r\n    if(toast.message){\r\n      setShowToast(true)\r\n    }\r\n  },[toast])\r\n\r\n  return (\r\n  <>\r\n <Menu right  customBurgerIcon={<img src=\"/menu.svg\" />} width={\"41%\"}>\r\n     <DrawerReceptions/>\r\n  </Menu>\r\n  <div style={{position: \"fixed\", bottom: \"30px\", right: \"40px\",zIndex:\"1000\"}}>\r\n          <Row>\r\n            <Col style={{width:\"400px\"}}>\r\n              <Toast onClose={toggleShowToast} show={showToast} delay={5000} autohide>\r\n                <Toast.Header style={{backgroundColor:\"#ffc107\"}}>\r\n                  <strong className=\"mr-auto\" style={{color:\"white\"}}>메신저</strong>\r\n                </Toast.Header>\r\n                <Toast.Body>{toast.message}</Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n  </>\r\n  );\r\n}\r\nexport default Menus;","import { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createSetTestReception, createSetTestResult, createSetTreatmentReception } from \"redux/reception-reducer\";\r\n\r\nconst Redis = () => {\r\n  //-------------------------------------------------------------  \r\n  //상태 선언\r\n  //-------------------------------------------------------------\r\n  const [connected, setConnected] = useState(false);\r\n  //로그인 될때마다 토픽을 바꿔줘야함\r\n  const [subTopic, setSubTopic] = useState(\"/reception\");\r\n  const [pubMessage, setPubMessage] = useState({\r\n    topic: \"/reception\",\r\n    content: \"Hello\"\r\n  });\r\n  const [contents, setContents] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  //상태 변경 내용 출력\r\n  useEffect(() => {\r\n    console.group(\"상태 변경\");\r\n      console.log(\"connected: \", connected);\r\n      console.log(\"subTopic: \", subTopic);\r\n      console.log(\"pubMessage: \", pubMessage);\r\n      console.log(\"contents: \", contents);\r\n    console.groupEnd();\r\n  }); \r\n\r\n  //-------------------------------------------------------------\r\n  //버튼 이벤트 처리\r\n  //-------------------------------------------------------------\r\n  let ws = useRef(null);\r\n  const connectWebSocket = () => {\r\n \r\n    ws.current = new WebSocket(\"ws://kosa3.iptime.org:50006/websocket/redis\");\r\n    // ws.current = new WebSocket(\"ws://localhost:8080/websocket/redis\");\r\n\r\n    ws.current.onopen = () => {\r\n      console.log(\"접속 성공\");\r\n      setConnected(true);\r\n      sendSubTopic();\r\n    };\r\n    \r\n    ws.current.onclose = () => {\r\n      console.log(\"접속 끊김\");\r\n      setConnected(false);\r\n    };\r\n    \r\n    ws.current.onmessage = (event) => { \r\n      console.log(\"메시지 수신\");\r\n      var strJson = event.data;\r\n      var message = JSON.parse(JSON.parse(strJson));\r\n      // 여기서 각 topic에 따라 dispatch!!\r\n      //{type: , treatmentid: , newDate()}\r\n      if(message.type===\"treatment\"){\r\n        console.log(message);\r\n        dispatch(createSetTreatmentReception({patientid:message.patientid, status:message.status}))\r\n      }else if(message.type===\"test\"){\r\n        dispatch(createSetTestReception(new Date()))\r\n      }else if(message.type===\"testresult\"){\r\n        dispatch(createSetTestResult({treatmentid:message.treatmentid}))\r\n      }\r\n\r\n      setContents((contents) => {\r\n        return contents.concat(message.topic + \": \" + message.content);\r\n      });\r\n    } \r\n  };\r\n\r\n  const disconnectWebSocket = () => {\r\n    ws.current.close();\r\n  };\r\n\r\n  const sendSubTopic = () => {\r\n    var json = {topic:subTopic};\t\t\r\n    var strJson = JSON.stringify(json);\r\n    ws.current.send(strJson);\r\n  }\r\n\r\n  //-------------------------------------------------------------\r\n  //마운트 및 언마운트에 실행할 내용\r\n  //-------------------------------------------------------------\r\n  useEffect(() => {\r\n    connectWebSocket();\r\n    return (() => {\r\n      disconnectWebSocket();\r\n    });\r\n  }, []);\r\n\r\n  //-------------------------------------------------------------\r\n  //렌더링 내용\r\n  //-------------------------------------------------------------\r\n  return (\r\n    <>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Redis;\r\n\r\n","import AppMenu from \"AppMenu\";\r\nimport AppRoute from \"AppRoute\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Menus from \"views/components/Menu\";\r\nimport Home from \"views/Home\";\r\nimport Reception from \"views/Reception\";\r\nimport Treatment from \"views/Treatment\";\r\nimport Test from \"views/Test\";\r\nimport Members from \"views/Members\";\r\nimport Redis from \"views/components/Redis\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Main(props) {\r\n  \r\n  const globalUserid = useSelector((state) => {return state.authReducer.userid});\r\n   //유저 아이디가 없다면 다시 로그인 페이지로 이동\r\n   if(globalUserid == null || globalUserid === \"\") {\r\n    return <Redirect to=\"/\"></Redirect>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menus ></Menus>\r\n      <div className=\"flex-grow-1 container-fluid pl-0 pr-0\">\r\n        <div className=\"row h-100 mr-0 ml-0\">\r\n          <div className=\"col-1 pl-0 border-right align-items-end\" style={{position:\"relative\", backgroundColor:\"#FFFFFF\"}}>\r\n            <AppMenu/>\r\n          </div>\r\n          <Redis/>\r\n          <div className=\"col-11 pl-0 pr-0\" >\r\n          <Switch>\r\n            <Route path=\"/main/home\" component={Home}/>\r\n            <Route path=\"/main/reception\" component={Reception}/>\r\n            <Route path=\"/main/treatment\" component={Treatment}/>\r\n            <Route path=\"/main/test\" component={Test}/>\r\n            <Route path=\"/main/members\" component={Members}/>\r\n            <Redirect to=\"/main/home\"/>\r\n          {/* 어느 누구도 해당하지 않으면 home으로 감  */}\r\n          </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;","let lastBno = 3;\r\n\r\nlet data = [\r\n  {\r\n    bno:4, \r\n    btitle:\"Ver. 1.1.5\", \r\n    bcontent:\"직원등록 기능이 추가 되었습니다.\", \r\n    bwriter:\"관리자\", \r\n    bdate:\"2021-06-30\", \r\n    bhitcount:15\r\n  },\r\n  {\r\n    bno:3, \r\n    btitle:\"Ver. 1.1.4\", \r\n    bcontent:\"실시간 기능이 추가 되었습니다.\", \r\n    bwriter:\"관리자\", \r\n    bdate:\"2021-06-20\", \r\n    bhitcount:18\r\n  },\r\n\r\n  {\r\n    bno:2, \r\n    btitle:\"Ver. 1.1.3\", \r\n    bcontent:\"사진추가 기능이 추가 되었습니다.\", \r\n    bwriter:\"관리자\", \r\n    bdate:\"2021-06-12\", \r\n    bhitcount:15\r\n  },\r\n\r\n\r\n  {\r\n    bno:1, \r\n    btitle:\"Ver. 1.1.2\", \r\n    bcontent:\"채팅 기능이 추가 되었습니다.\", \r\n    bwriter:\"관리자\", \r\n    bdate:\"2021-05-20\", \r\n    bhitcount:12\r\n  },\r\n\r\n];\r\n\r\n\r\nexport function getBoardList() {\r\n  return data;\r\n}\r\n\r\nexport function getBoard(bno) {\r\n  const newBoard = data.find(board => {\r\n    return board.bno === bno\r\n  });\r\n  return newBoard;\r\n}","import { Button, Form, Modal } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getBoard } from \"./data/Data\";\r\nfunction HospitalNoticeDetail(props){\r\n  \r\n  return(\r\n    <>\r\n      <Modal animation={false} show={props.show} onHide={props.handleClose} size=\"lg\" centered>\r\n        <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"} }>\r\n          <Modal.Title style={{color:\"#FFFFFF\"}}><h5>NOTICE DETAIL</h5></Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body >\r\n          <div className=\"overflow-auto border\" style={{height:\"718px\"}}>\r\n            <div className=\"mr-4 ml-4 d-flex align-items-center pt-3\" style={{height:\"50px\"}}><h4>{props.board.btitle}</h4></div>\r\n            <div className=\"ml-4 mr-4 border-bottom pb-3\" style={{color:\"#A8A8A8\",height:\"40px\"}}>{props.board.bdate}</div>\r\n            <div className=\"p-3\" style={{height:\"580px\"}}>\r\n              {props.board.bcontent}\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" size=\"sm\" onClick={props.handleClose}>\r\n            닫기\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HospitalNoticeDetail;","import { Form, Modal } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button } from 'react-bootstrap';\r\nimport Item from \"views/components/Item\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getBoardList } from \"./data/Data\";\r\nimport HospitalNoticeDetail from \"./HospitalNoticeDetail\";\r\nfunction HospitalNotice(props){\r\n  const [show, setShow] = useState(false);\r\n  const [selectedNotice, setSelectedNotice] = useState([]);\r\n  //공지사항을 가져올 list \r\n  const [board, setBoard] = useState({});\r\n\r\n\r\n  useEffect(() => {\r\n    setSelectedNotice(getBoardList());\r\n  }, [])\r\n\r\n  const handleShow = (board) => {\r\n    setShow(true);\r\n    setBoard(board);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  }\r\n\r\nreturn(\r\n  <>\r\n  <h5>NOTICE <img src=\"/pencil.png\" width=\"25\"height=\"25\"/></h5> \r\n  <div className=\"overflow-auto mt-3\" style={{height:\"345px\"}}>\r\n    <table className=\"table table-hover mb-0\" style={{backgroundColor:\"#f6f6f6\"}}>\r\n      <thead className=\"card-header text-center\">\r\n        <tr>\r\n          <th width=\"90px\"></th>\r\n          <th width=\"153px\">작성자</th>\r\n          <th width=\"170px\">제목</th>\r\n          <th width=\"170px\">날짜</th>\r\n        </tr>\r\n      </thead>\r\n    </table>\r\n    {selectedNotice.length != 0 &&\r\n    selectedNotice.map((board, index) => {\r\n      return (\r\n        <div key={board.bno} onClick={() => {handleShow(board)}} className=\"border-bottom d-flex text-center\" style={{heght:\"40px\", cursor:\"pointer\"}}>\r\n          <div style={{width:\"90px\", fontWeight:\"bold\", padding:\"12px\"}}>{board.bno}</div>\r\n          <div style={{width:\"153px\", padding:\"12px\"}}>{board.bwriter}</div>\r\n          <div style={{width:\"170px\", padding:\"12px\"}}>{board.btitle}</div>\r\n          <div style={{width:\"170px\", padding:\"12px\"}}>{board.bdate}</div>\r\n        </div>\r\n      )\r\n    })\r\n    }\r\n  </div>\r\n\r\n  <HospitalNoticeDetail board={board} show={show} handleClose={handleClose}></HospitalNoticeDetail>\r\n  </>\r\n)\r\n}\r\n\r\nexport default HospitalNotice;","import { LoginApi, LoginCode } from \"apis/Auth\";\r\nimport { addAuthHeader } from \"apis/axiosConfig\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {  Link, Redirect, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { createSetAuthTokenAction, createSetCodeNumberAction, createSetRoleAuthority, createSetUseridAction, createSetUserName } from \"redux/auth-rducer\";\r\nimport Treatment from \"views/Treatment\";\r\nimport HospitalNotice from \"./HospitalNotice\";\r\nimport HospitalNoticeDetail from \"./HospitalNoticeDetail\";\r\n\r\nconst errorMsg = {\r\n  code_empty : '병원코드를 입력해주세요.',\r\n  userid_empty : '직원아이디를 입력해주세요.',\r\n  password_empty : '비밀번호를 입력해주세요.',\r\n  err_login:\"아이디 비밀번호를 다시 한번 확인해주세요.\",\r\n  err_nullAuth:\"해당 병원에 없는 계정입니다.\"\r\n}\r\n\r\nfunction Hospital(props) {\r\n\r\n  const globalUserid = useSelector((state) => {return state.authReducer.userid});\r\n  const dispatch = useDispatch();\r\n\r\n  const [errorMessageCode, setErrorMessageCode] = useState(errorMsg.code_empty);\r\n  const [errorMessageUserid, setErrorMessageUserid] = useState(errorMsg.userid_empty);\r\n  const [errorMessagePassword, setErrorPassword] = useState(errorMsg.password_empty);\r\n\r\n  const [isInvalidCode, setIsInvalidCode] = useState(false);\r\n  const [isInvalidUserid, setIsInvalidUserid] = useState(false);\r\n  const [isInvalidPassword, setIsInvalidPassword] = useState(false);\r\n\r\n  const [validated, setValidated] = useState(false);\r\n  \r\n  const [loginForm, setLoginFoem] = useState({\r\n    codenumber:\"\",\r\n    userid:\"\",\r\n    userpassword:\"\"\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    setLoginFoem({\r\n      ...loginForm,\r\n      [event.target.name]:event.target.value\r\n    })\r\n  }\r\n  //만약 로그인이 되어 있다면 홈으로 이동\r\n  if(globalUserid != null && globalUserid !== \"\") {\r\n    return <Redirect to=\"/main/home\"></Redirect>\r\n    // history.push('/main');\r\n  } \r\n\r\n  const handleLogin = (event) => {\r\n\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (form.checkValidity() === false) {//빈칸이 있을경우\r\n      setErrorMessageCode(errorMsg.code_empty);\r\n      setErrorMessageUserid(errorMsg.userid_empty);\r\n      setErrorPassword(errorMsg.password_empty);\r\n      setValidated(true);\r\n    } else {\r\n      const response = LoginApi(loginForm);\r\n\r\n      response\r\n        .then((response) => {\r\n          if(response.data.state === \"success\"){\r\n\r\n              //로그인 성공시 redux에 저장\r\n            dispatch(createSetUseridAction(response.data.userid));\r\n            dispatch(createSetAuthTokenAction(response.data.authToken));\r\n            dispatch(createSetRoleAuthority(response.data.role_authority));\r\n            dispatch(createSetCodeNumberAction(response.data.codenumber));\r\n            dispatch(createSetUserName(response.data.username));\r\n\r\n            //요청 헤더에 추가\r\n            addAuthHeader(response.data.authToken);\r\n\r\n            //로그인 성공시 sessionStorage에 저장\r\n            sessionStorage.setItem(\"userid\", response.data.userid);\r\n            sessionStorage.setItem(\"authToken\", response.data.authToken);\r\n            sessionStorage.setItem(\"role_authority\", response.data.role_authority);\r\n            sessionStorage.setItem(\"codenumber\", response.data.codenumber); \r\n            sessionStorage.setItem(\"username\", response.data.username);\r\n\r\n          } else if(response.data.state === \"err_nullAuth\") {// 해당 병원에 계정이 없을경우\r\n            setIsInvalidCode(false);\r\n            setIsInvalidUserid(true);\r\n            setIsInvalidPassword(false);\r\n\r\n            setErrorMessageCode(errorMsg.code_empty);\r\n            setErrorMessageUserid(errorMsg.err_nullAuth);\r\n            setErrorPassword(errorMsg.password_empty);\r\n          }\r\n\r\n        }).catch((error) =>{\r\n          console.log(error.response);\r\n          if(error.response.status === 401) {\r\n            setErrorMessageUserid(\"\");\r\n            setErrorPassword(errorMsg.err_login);\r\n            setIsInvalidUserid(true);\r\n            setIsInvalidPassword(true);\r\n          }\r\n        })\r\n\r\n    }\r\n\r\n  }\r\n \r\n  \r\n  return (\r\n    <div style={{height:\"100vh\", backgroundImage:'url(/assets/docc.jpg)', backgroundRepeat:\"no-repeat\"}}>\r\n      <div className=\"d-flex\">\r\n            <div className=\"card\" style={{width:\"50%\", height:\"30%\", marginLeft:\"25%\", marginTop:\"12%\"}}>\r\n              <div className=\"card-header\" style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\", fontWeight:\"bold\", fontSize:\"24px\"}}>LOGIN</div>\r\n                <div className=\"card-body row mt-4 ml-2\" style={{height:\"410px\"}}>\r\n                  <div className=\"col-5\" style={{height:\"390px\"}}>\r\n                  <Form noValidate validated={validated} onSubmit={handleLogin}>\r\n\r\n                      <Form.Group controlId=\"formBasicID\">\r\n                        <Form.Label><div style={{fontWeight:\"bold\"}}>Hospital Code</div></Form.Label>\r\n                        <Form.Control required type=\"text\" name=\"codenumber\" placeholder=\"병원코드(숫자)를 입력하세요.\" value={loginForm.codenumber} onChange={handleChange} isInvalid={isInvalidCode}/>\r\n                        <Form.Control.Feedback type=\"invalid\">{errorMessageCode}</Form.Control.Feedback>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"formBasicID\">\r\n                        <Form.Label><div style={{fontWeight:\"bold\"}}>UserID</div></Form.Label>\r\n                        <Form.Control required type=\"text\" name=\"userid\" placeholder=\"직원 ID를 입력하세요.\" value={loginForm.userid} onChange={handleChange} isInvalid={isInvalidUserid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">{errorMessageUserid}</Form.Control.Feedback>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label><div style={{fontWeight:\"bold\"}}>Password</div></Form.Label>\r\n                        <Form.Control required type=\"password\" autoComplete=\"off\" name=\"userpassword\" placeholder=\"비밀번호를 입력하세요.\" value={loginForm.userpassword} onChange={handleChange} isInvalid={isInvalidPassword}/>\r\n                        <Form.Control.Feedback type=\"invalid\">{errorMessagePassword}</Form.Control.Feedback>\r\n                      </Form.Group>\r\n                      <div className=\"text-center mt-4\">\r\n                        <Button variant=\"dark\" block type=\"submit\">\r\n                          로그인\r\n                        </Button>\r\n                      </div>\r\n                    </Form>\r\n                  </div>\r\n                  <div className=\"ml-4 mr-4\" style={{borderLeft:\"1px solid #dddddd\", height:\"340px\"}}></div>\r\n                  <div className=\"col-6\">\r\n                    <HospitalNotice></HospitalNotice>\r\n                  </div>\r\n\r\n                </div>\r\n            </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Hospital;","import axios from \"axios\";\r\nexport function LoginApi(user){\r\n    const result = axios.post(\"/auth/login\",user);\r\n    return result;\r\n}\r\n\r\nexport function LogoutApi(){\r\n    axios.get(\"/Auth/logout\")\r\n}\r\n\r\nexport function test(){\r\n    axios.get(\"/Auth/test\", {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n}\r\n\r\nexport function test2(){\r\n    axios.get(\"/Auth/test2\", {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n}","\r\nimport { AppContextProvider } from \"AppContext\";\r\nimport Main from \"Main\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Hospital from \"views/hospital\";\r\nimport './App.css';\r\nimport axiosConfig from \"apis/axiosConfig\"\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"d-flex flex-column vh-100\" style={{width:\"1920px\", backgroundColor:\"#F9F7F9\"}}>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Hospital}/>\r\n        <AppContextProvider>\r\n        <Route path=\"/main\" component={Main}/>\r\n        </AppContextProvider>\r\n \r\n        <Redirect to=\"/\"/>\r\n        {/* 어느 누구도 해당하지 않으면 home으로 감  */}\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n//  <div className=\"col-1 pl-0 border-right border-gray align-items-end text-bottom\" style={{position:\"relative\", backgroundColor:\"#FFFFFF\"}}>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n  treatment: { \r\n  }\r\n}\r\n\r\n//액션 타입 선언\r\nconst SET_TREATMENT=\"treatment/setTreatment\";\r\n\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetTreatment = (treatment) => {\r\n  return {type:SET_TREATMENT, treatment};\r\n} \r\n\r\n//리듀스 선언\r\nconst treatmentReducer = (state = initialState, action) => {\r\n  if(action.type === SET_TREATMENT) {\r\n    return {...state, treatment:action.treatment};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\n\r\nexport default treatmentReducer;","const initialState = {\r\n  realtime: {}\r\n}\r\n\r\n//액션 타입 선언\r\nconst SET_REALTIME=\"realtime/setRealTime\";\r\nconst SET_=\"realtime/setRealTime\";\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetRealTime = (realtime) => {\r\n  return {type:SET_REALTIME, realtime};\r\n} \r\n\r\n//리듀스 선언\r\nconst realtimeReducer = (state = initialState, action) => {\r\n  if(action.type === SET_REALTIME) {\r\n    return {...state, realtime:action.realtime};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\n\r\nexport default realtimeReducer;","\r\nconst initState = {\r\n    websocket:null,\r\n}\r\nconst SET_WEBSOCKET = \"websocket/set_websocket\"\r\nexport const CreateSetWebSocket =(websocket) =>{\r\n    return({\r\n        type:SET_WEBSOCKET,\r\n        websocket\r\n    })\r\n}\r\nconst websocketReducer=(state = initState,action)=> {\r\n    switch(action.type){\r\n        case SET_WEBSOCKET:\r\n            return{\r\n                ...state,\r\n                websocket:action.websocket\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default websocketReducer;","import { combineReducers } from \"redux\";\r\nimport patientReducer from \"./patient-reducer\"\r\nimport treatmentReducer from \"./treatment-reducer\"\r\nimport reservationReducer from \"./reservation-reducer\"\r\nimport receptionReducer from \"./reception-reducer\"\r\nimport authReducer from \"./auth-rducer\"\r\nimport realtimeReducer from \"./realtime-reducer\"\r\nimport websocketReducer from \"./websocket-reducer\"\r\nimport toastReducer from \"./toast-reducer\"\r\nconst rootReducer = combineReducers({\r\n  patientReducer,\r\n  treatmentReducer,\r\n  reservationReducer,\r\n  receptionReducer,\r\n  authReducer,\r\n  websocketReducer,\r\n  realtimeReducer,\r\n  toastReducer\r\n\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport { createStore } from 'redux';\r\nimport rootReducer from 'redux/root-reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from 'react-redux';\r\nimport { createSetAuthTokenAction, createSetCodeNumberAction, createSetRoleAuthority, createSetUseridAction, createSetUserName } from 'redux/auth-rducer';\r\nimport { addAuthHeader } from 'apis/axiosConfig';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\n//Redux에 인증 정보 설정\r\nstore.dispatch(createSetCodeNumberAction(sessionStorage.getItem(\"codenumber\") || \"\"));\r\nstore.dispatch(createSetUseridAction(sessionStorage.getItem(\"userid\") || \"\"));\r\nstore.dispatch(createSetAuthTokenAction(sessionStorage.getItem(\"authToken\") || \"\"));\r\nstore.dispatch(createSetRoleAuthority(sessionStorage.getItem(\"role_authority\") || \"\"));\r\nstore.dispatch(createSetUserName(sessionStorage.getItem(\"username\") || \"\"));\r\n\r\n//Axios에 인증 헤더 추가\r\naddAuthHeader(sessionStorage.getItem(\"authToken\"));\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["AppContext.js","apis/axiosConfig.js","redux/auth-rducer.js","AppMenu.js","apis/Main.js","views/Home/Notice/NoticeDetail.js","views/Home/Notice/NoticeAdd.js","views/Home/Notice/index.js","views/Home/User/index.js","views/Home/Photo/index.js","views/Home/Calendar/index.js","views/Home/Weekly/WeeklyForm/index.js","views/Home/Weekly/index.js","views/Home/index.js","views/Reception/SearchPatient/Calendar.js","views/components/Item.js","views/Reception/components/ReceptionHeader.js","apis/Reception.js","views/Reception/Reservation/ReservationUpdateModal.js","apis/Redis.js","views/Reception/BackEnd/index.js","redux/reception-reducer.js","views/Reception/SearchPatient/DoctorSelectorModal.js","views/Reception/SearchPatient/TestSelectorModal.js","views/Reception/Reservation/index.js","views/Reception/SearchPatient/SearchPatientModal.js","views/Reception/SearchPatient/RegisterPatientModal.js","views/Reception/SearchPatient/UpdatePatientModal.js","redux/reservation-reducer.js","views/Reception/SearchPatient/RegisterReservationModal.js","views/Reception/SearchPatient/PatientProfile.js","views/Reception/SearchPatient/PatientHistory.js","views/Reception/SearchPatient/index.js","redux/patient-reducer.js","views/Reception/PatientReception/TestReception.js","views/Reception/PatientReception/TreatmentReception.js","views/Reception/PatientReception/index.js","views/Reception/index.js","views/Treatment/components/ButtonHeader.js","views/Treatment/components/Diagnoses/DiagnosesItem.js","views/Treatment/components/Diagnoses/PrescriptionDiagnosesItem.js","views/Treatment/components/Diagnoses/PrescriptionDiagnosesModal.js","views/Treatment/DiagnosisList.js","views/Treatment/components/Drugs/PrescriptionDrugItem.js","views/Treatment/components/Drugs/PrescriptionDrugsModal.js","views/Treatment/components/Drugs/DrugsItem.js","views/Treatment/DrugList.js","views/Treatment/components/TreatmentItem.js","views/Treatment/PatientTreatment.js","apis/Treatment.js","views/Treatment/components/Tests/ImgDetailModal.js","views/Treatment/components/Tests/PackageImgTest.js","views/Treatment/components/Test.js","views/Treatment/components/Tests/PackageTest.js","views/Treatment/components/Tests/PrescriptionPackageItem.js","views/Treatment/components/Tests/PrescriptionTestItem.js","views/Treatment/components/Tests/PrescriptionTestsModal.js","views/Treatment/TestList.js","views/Treatment/TreatmentMemo.js","views/Treatment/components/SearchPatient.js","views/Treatment/components/PatientProfile.js","views/Treatment/index.js","views/Test/PeriodSearch.js","views/Test/Print.js","apis/test.js","views/Test/TestGroup.js","views/Test/TestResult.js","views/Test/index.js","views/Members/JoinForm.js","apis/User.js","views/Members/UpdateForm.js","views/Members/index.js","AppRoute.js","redux/toast-reducer.js","views/components/Messenger/Chatting/index.js","views/components/DrawerReceptions.js","views/components/Menu.js","views/components/Redis/index.js","Main.js","views/hospital/data/Data.js","views/hospital/HospitalNoticeDetail.js","views/hospital/HospitalNotice.js","views/hospital/index.js","apis/Auth.js","App.js","reportWebVitals.js","redux/treatment-reducer.js","redux/realtime-reducer.js","redux/websocket-reducer.js","redux/root-reducer.js","index.js"],"names":["AppContext","React","createContext","websocket","AppContextProvider","props","value","Provider","children","addAuthHeader","authToken","axios","defaults","headers","common","baseURL","initState","userid","role_authority","codenumber","SET_USERID","SET_AuthToken","SET_CodeNumber","SET_Authority","createSetUseridAction","type","createSetAuthTokenAction","createSetCodeNumberAction","createSetRoleAuthority","authority","authReducer","state","action","AppMenu","dispatch","useDispatch","globalUserRole","useSelector","style","backgroundColor","height","marginRight","marginTop","className","to","exact","activeStyle","color","Button","marginLeft","variant","onClick","sessionStorage","removeItem","noticeUpdate","newBoard","post","NoticeDetail","console","log","Modal","show","onHide","handleClose","Header","closeButton","Title","board","title","Body","content","Footer","event","deleteNoticeState","noticeid","alert","NoticeAdd","globalUserid","useState","setBoard","handleChange","target","name","handleAdd","a","preventDefault","date","Date","handleClose1","work","Form","onSubmit","src","width","Group","controlId","Label","Control","onChange","as","rows","Notice","setShow","show1","setShow1","selectedNotice","setSelectedNotice","get","response","data","useEffect","float","id","scope","length","map","index","handleShow","delete","deleteNotice","then","User","UserList","setUserList","class","userroom","username","phonenumber","sex","Photo","setIndex","Carousel","activeIndex","onSelect","selectedIndex","e","Item","with","alt","Calendar","startDate","setStartDate","selected","inline","WeeklyForm","Weekly","ExampleCustomInput","forwardRef","ref","customInput","Table","bordered","Home","CalcCitem","month","lastDay","getDate","ItemBoard","i","j","push","getMonth","setMonth","DayIndex","CalcDayIndex","dayIndex","setDayIndex","slideIndex","setSlideIndex","CItem","setCItem","day","selectDate","getFullYear","setSelectDate","toLocaleDateString","today","tmpSlideindex","parseInt","week","ChangeMonth","dir","newMonth","margin","border","fontWeight","interval","prevIcon","nextIcon","indicators","citem","padding","onChangeDaySelect","borderRadius","textAlign","getDay","item","property","order","itemArray","setItemArray","itemarray","ip","jsx","tabIndex","fontSize","memo","ReceptionHeader","iclassName","headertitle","GetTreatmentListBypatientid","patientid","GetTreatmentList","GetTestReceptionList","UpdateReservationModal","reservationType","setReservationType","handleReservation","patient","setPatient","selectedReservation","params","result","reservationdate","patientname","age","ssn1","ssn2","showTimeSelect","timeFormat","popperPlacement","minDate","minTime","maxTime","dateFormat","newDateOptions","hour","minute","origin","toLocaleString","setMinutes","getMinutes","getTime","getReservationDate","newreservation","reservation","put","UpdateReservation","closeModal","BASE_URL","sendRedisMessage","JSON","stringify","topic","saveChatting","chatArray","chatArrayst","initialState","testreception","treatmentreception","testresult","SET_TESTRECEPTION","SET_TREATMENTRECEPTION","SET_TESTRESULT","receptionReducer","patientslist","TR","registerday","lasttreatment","userslist","userpassword","userenabled","treatmentslist","treatmentid","treatmentdate","status","drugslist","drugid","description","reservationslist","reservationid","testList","testreceptionslist","testreceptionid","testdate","testslist","groupcode","groupname","testdataid","DoctorSelectorModal","doctorList","setDoctorList","selectedDoctor","setselectedDoctor","usertype","controlLoading","overflow","checked","disabled","treatment","newTreatment","selectedPatient","CancelReservation","moment","format","TestSelectorModal","setTestList","entry","Object","entries","modify","ischeck","handleTestList","testdataname","filter","test","testdataidlist","testdataArray","receptiontestarg","testreceptionarg","Reservation","reservationUpdateModalshow","setReservationUpdateModalshow","doctorSelectorModalshow","setDoctorSelectorModalshow","reservationList","setReservationList","reservationReducer","setSelectedReservation","testSelectorModalshow","setTestSelectorModalshow","loading","setLoading","click","focusItem","modalname","newreservationlist","concat","sort","r1","r2","Number","ControlLoading","bool","findIndex","tmplist","splice","marginBottom","rdate","item2","reservationuidate","backdrop","size","ReservationUpdateModal","Spinner","animation","role","SearchPatientModal","selectname","keyword","setKeyword","select","setSelect","patientList","setPatientList","setSelectedPatient","disableHeight","tmp","toString","indexOf","list","rowCount","rowHeight","rowRenderer","key","overscanRowCount","RegisterPatientModal","useForm","register","handleSubmit","errors","RegisterPatient","required","pattern","UpdatePatient","defaultValue","SET_RESERVATION","RegisterReservationModal","testlist","createSetReservation","PatientProfile","minWidth","boxShadow","paddingLeft","PatientHistory","selectedTreatment","setSelectedTreatment","treatmentData","setTreatmentData","testData","setTestData","drugsData","setDrugsData","diagnosesData","setDiagnosesData","treatmentReception","userlist","treatmentlist","treatmentdetail","useCallback","treatmentProperty","borderBottom","Math","round","window","innerHeight","diagnosesdataid","diagnosesdataname","drugname","SearchPatient","searchModalshow","setSearchModalshow","reservationRegisterhModalshow","setreservationRegisterhModalshow","patientRegisterhModalshow","setPatientRegisterhModalshow","patientUpdateModalshow","setPatientUpdateModalshow","tmpPatient","UpdatePatientModal","SET_PATIENT","createSetPatient","patientReducer","TestReception","listtype","setListtype","selectedTestReception","setSelectedTestReception","testProperty","ButtonGroup","toggle","ToggleButton","isDrawer","deleteTestReception","TreatmentReception","selectedTreatmetReception","setSelectedTreatmetReception","deleteTreatmentReception","treatmentList","PatientReception","testReception","treatementsData","setTreatmentsData","testReceptionsData","setTestReceptionsData","patientlist","treatment_id","selectedtreatment","testreception_id","Reception","fontFamily","ButtonHeader","onclick","btnicon","cursor","DiagnosesItem","OverlayTrigger","placement","overlay","Tooltip","whiteSpace","textOverflow","diagnosesdataename","PrescriptionDiagnosesItem","addItem","PrescriptionDiagnosesModal","searchName","setSearchName","prescriptionItems","setPrescriptionItems","searchList","setSearchList","searchType","setSearchType","itemList","staticItemList","prescribe","items","prevItems","obj","newItem","prevItem","selectType","search","newItems","toUpperCase","diagnosis","centered","DiagnosisList","staticDignoses","treatmentDiagnoses","prescribeDiagnoses","PrescriptionDrugItem","min","quantityArr","onChangeQuantity","drugunit","PrescriptionDrugsModal","setQuantityArr","quantity","drug","DrugsItem","drugtype","DrugList","staticDrugs","treatmentDrugs","prescribeDrugs","TreatmentItem","prop","Badge","PatientTreatment","selectTreatment","patientTreatments","getAllTreatments","prescribeTreatment","prescription","getTestImgs","ImgDetailModal","closeImgModal","selectedImg","imgid","href","PackageImgTest","imgList","setImgList","setSelectedImg","imgShow","setImgShow","groupTest","tests","Accordion","Card","Toggle","Alert","eventKey","Collapse","defaultActiveKey","block","img","showImgModal","Test","testname","testcontainer","striped","hover","max","testunit","PackageTest","PrescriptionPackageItem","addPackage","PrescriptionTestItem","PrescriptionTestsModal","setEventKey","groupTests","setGroupTests","searchGroupTests","setSearchGroupTests","groupList","reduce","gt","t","newTests","selectNav","rowRendererPackage","Tab","Container","Nav","fill","Link","Content","Pane","TestList","receptionToast","setReceptionToast","group","treatmentTests","testtype","staticTests","prescribeTests","values","position","bottom","right","zIndex","Row","Col","Toast","onClose","closeShow","toastShow","delay","autohide","TreatmentMemo","setMemo","readOnly","outline","checkedPatient","setCheckedPatient","checkPatient","selectPatient","saveTreatment","Treatment","globalPatient","catch","error","setTreatment","setPatientTreatments","setTreatmentDrugs","setTreatmentDiagnoses","setTreatmentTests","setStaticDrugs","setStaticDignoses","setStaticTests","prescribeLoading","setPrescribeLoading","treatmentsLoading","setTreatmentLoading","drugResponse","diagnosesResponse","testResponse","drugsList","diagnosesList","testsList","testResult","prescribeList","time","message","confirm","heighn","registerLocale","ko","PeriodSearch","change","startdate","enddate","endDate","setEndDate","setBtnClicked","handleBtnClicked","currentDate","threeDaysAgo","weekAgo","oneMonthAgo","threeMonthAgo","locale","Print","selectpatientinfo","inputRef","grouplist","useBarcode","options","background","testlistByDate","insertResult","resultStatus","startTests","checkedList","val","startPatient","cancelTests","finishTests","promise","finishPatient","TestGroup","open","setOpen","setGroupList","excel","setExcel","resultlist","setResultlist","testdatas","set","Set","chkresult","saveBtn","label","handleStart","flag","newGroupList","gettest","getpatient","handlePrint","handleExit","handleCancel","handleFinish","count","ws","xlsx","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","alignItems","changeHandler","display","TestResult","setTreatmentid","inputFile","useRef","formData","FormData","append","current","files","multipartFormData","htmlFor","TestPage","patients","waitings","setWaiting","progresss","setProgress","completes","setComplete","setSelectpatientinfo","groupshow","setGroupShow","setStartdate","setEnddate","setTestdatas","waiting","progress","complete","testlistByReceptionid","ClickPatient","borderRight","resultstatus","borderLeft","errorMsg","JoinForm","globalcode","validated","setValidated","errorMessage","setErrorMesssage","errorMessageID","setErrorMesssageID","isInvalid","setIsInvalid","isInvalidID","setIsInvalidID","isNurse","setIsNurse","confirmpassword","setFormData","prevData","noValidate","user","form","currentTarget","stopPropagation","checkValidity","getUsers","finally","placeholder","Feedback","Check","feedback","UpdateForm","updateUser","setIsUpdate","updateShow","Members","toastMessage","setToastMessage","isUpdate","userList","setUpdateUser","completeUpdate","AppRoute","toast","SET_TOAST","realtimeReducer","chatarray","Chatting","setChatArray","connectionList","setConnectionList","setMessage","globalUid","userInfo","setUserInfo","scrollRef","setWebsocket","brb","setBRB","scrollIntoView","behavior","onbeforeunload","webSocket","WebSocket","onopen","GetUserData","send","header","from","connectioninfo","userrole","onclose","onmessage","parse","connectionlist","prev","chatObj","dateTime","isMe","enabled","close","sendMsg","BRB","minHeight","chat","maxWidth","wordBreak","onKeyPress","DrawerReceptions","Menus","toastReducer","showToast","setShowToast","customBurgerIcon","Redis","connected","setConnected","subTopic","pubMessage","contents","setContents","groupEnd","connectWebSocket","sendSubTopic","strJson","json","Main","Menu","path","match","url","component","bno","btitle","bcontent","bwriter","bdate","bhitcount","HospitalNoticeDetail","HospitalNotice","heght","Hospital","errorMessageCode","setErrorMessageCode","errorMessageUserid","setErrorMessageUserid","errorMessagePassword","setErrorPassword","isInvalidCode","setIsInvalidCode","isInvalidUserid","setIsInvalidUserid","isInvalidPassword","setIsInvalidPassword","loginForm","setLoginFoem","setItem","autoComplete","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_TREATMENT","treatmentReducer","realtime","SET_REALTIME","SET_WEBSOCKET","websocketReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","getItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77fdc190.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AppContext = React.createContext({\r\n    websocket:null\r\n})\r\n\r\nexport function AppContextProvider(props){\r\n    const websocket = null;\r\n    const value = {\r\n        websocket:websocket\r\n    }\r\n    \r\n    return(\r\n        <AppContext.Provider value={value}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    ) \r\n}\r\n\r\nexport default AppContext;","import axios from \"axios\";\r\n axios.defaults.baseURL = \"http://kosa3.iptime.org:50006/\";\r\n// axios.defaults.baseURL = \"http://localhost:8080/\";\r\nexport function addAuthHeader(authToken){\r\n    axios.defaults.headers.common[\"authToken\"] = authToken; \r\n  }\r\n  \r\n  export function removeAuthHeader(){\r\n    delete axios.defaults.headers.common[\"authToken\"]; \r\n  }","\r\nconst initState = {\r\n    userid:\"\",\r\n    role_authority:\"\",\r\n    authToken:\"\",\r\n    codenumber:\"\"\r\n}\r\nconst SET_USERID = \"auth/set_userid\"\r\nconst SET_AuthToken = \"auth/set_authtoken\"\r\nconst SET_CodeNumber = \"auth/set_codenumber\"\r\nconst SET_Authority = \"auth/set_role_authority\"\r\nexport const createSetUseridAction = (userid) => {\r\n    return { type:SET_USERID, userid}\r\n}\r\nexport const createSetAuthTokenAction = (authToken) => {\r\n    return {type:SET_AuthToken, authToken}\r\n}\r\n\r\nexport const createSetCodeNumberAction = (codenumber) => {\r\n    return {type:SET_CodeNumber, codenumber}\r\n}\r\n\r\nexport const createSetRoleAuthority = (authority) => {\r\n    return {type:SET_Authority, authority}\r\n}\r\nconst authReducer=(state = initState,action)=> {\r\n    switch(action.type){\r\n        case SET_USERID:\r\n            return {\r\n                ...state,\r\n                userid:action.userid\r\n            }\r\n        case SET_AuthToken:\r\n            return {\r\n                ...state,\r\n                authToken:action.authToken\r\n            }\r\n        case SET_CodeNumber:\r\n            return {\r\n                ...state,\r\n                codenumber:action.codenumber\r\n            }\r\n        case SET_Authority:\r\n            return {\r\n                ...state,\r\n                role_authority:action.authority\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;","\r\nimport { removeAuthHeader } from \"apis/axiosConfig\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { createSetAuthTokenAction, createSetCodeNumberAction, createSetRoleAuthority, createSetUseridAction } from \"redux/auth-rducer\";\r\n\r\n\r\nfunction AppMenu() {\r\n    const dispatch = useDispatch();\r\n\r\n    const globalUserRole = useSelector((state) => { return state.authReducer.role_authority });\r\n\r\n    const logout = () => {\r\n      //Redux를 이용\r\n      dispatch(createSetUseridAction(\"\"));\r\n      dispatch(createSetAuthTokenAction(\"\"));\r\n      dispatch(createSetCodeNumberAction(\"\"));\r\n      dispatch(createSetRoleAuthority(\"\"));\r\n\r\n      //요청헤더에 authToken제거\r\n      removeAuthHeader();\r\n\r\n      //SessionStorage에 인증 내용 제거\r\n      sessionStorage.removeItem(\"userid\");\r\n      sessionStorage.removeItem(\"authToken\");    \r\n      sessionStorage.removeItem(\"codenumber\");\r\n      sessionStorage.removeItem(\"role_authority\");\r\n    }\r\n\r\n    return (\r\n    <>\r\n    <div style={{backgroundColor:\"#1B296D\", height:\"58vh\", marginRight:\"-15px\"}}>\r\n    </div>\r\n    <div style={{marginTop:\"3vh\"}}>\r\n      <ul className=\"nav flex-column\" >\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"/main/home\" exact className=\"nav-link pt-2 pb-2 mt-3 mb-3\" activeStyle={{color:\"#FFFFFF\", backgroundColor:\"#2F4273\"}} style={{color:\"black\"}}>\r\n            <div className=\"row\">\r\n              <div className=\"col-5 text-right\"><i className=\"bi bi-house-door\"></i></div>\r\n              <div className=\"col-7 pl-0\">Home</div>\r\n            </div>\r\n          </NavLink>\r\n          {/* Link는 이걸 클릭하면 이동한다 라는 뜻 */}\r\n          {globalUserRole === \"ROLE_DOCTOR\" ? \r\n            null \r\n          : \r\n            <NavLink to=\"/main/reception\" className=\"nav-link pt-2 pb-2 mt-3 mb-3\" style={{color:\"black\"}} activeStyle={{color:\"#FFFFFF\", backgroundColor:\"#2F4273\"}}>\r\n            <div className=\"row\">\r\n                <div className=\"col-5 text-right\"><i className=\"bi bi-receipt\"></i></div>\r\n                <div className=\"col-7 pl-0\">Reception</div>\r\n              </div>\r\n            </NavLink>\r\n          }\r\n          {globalUserRole === \"ROLE_NURSE\" ? \r\n            null \r\n          :\r\n            <>\r\n              <NavLink to=\"/main/treatment\" className=\"nav-link pt-2 pb-2 mt-3 mb-3\" style={{color:\"black\"}} activeStyle={{color:\"#FFFFFF\", backgroundColor:\"#2F4273\"}}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 text-right\"><i className=\"bi bi-calendar-plus\"></i></div>\r\n                  <div className=\"col-7 pl-0\">Treatment</div>\r\n                </div>\r\n              </NavLink>\r\n              <NavLink to=\"/main/test\" className=\"nav-link pt-2 pb-2 mt-3 mb-3\" style={{color:\"black\"}} activeStyle={{color:\"#FFFFFF\", backgroundColor:\"#2F4273\"}}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 text-right\"><i className=\"bi bi-eyedropper\"></i></div>\r\n                  <div className=\"col-7 pl-0\">Test</div>\r\n                </div>\r\n              </NavLink>\r\n            </>\r\n          }\r\n          {globalUserRole === \"ROLE_ADMIN\" \r\n          ? \r\n            <NavLink to=\"/main/members\" className=\"nav-link pt-2 pb-2 mt-3 mb-3\" style={{color:\"black\"}} activeStyle={{color:\"#FFFFFF\", backgroundColor:\"#2F4273\"}}>\r\n              <div className=\"row\">\r\n                <div className=\"col-5 text-right\"><i className=\"bi bi-file-person\"></i></div>\r\n                <div className=\"col-7 pl-0\">Members</div>\r\n              </div>\r\n            </NavLink>\r\n          :\r\n            null\r\n          }\r\n\r\n          <Button style={{marginTop:\"20px\", marginLeft:\"35px\"}} variant=\"outline-dark\" onClick={logout}>로그아웃</Button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    </>\r\n    );\r\n}\r\n\r\n\r\nexport default AppMenu;","import axios from \"axios\";\r\n\r\n//공지사항 가져오기\r\nexport function getNoticeList() {\r\n    const promise = axios.get(\"/main/NoticeList\");\r\n    return promise;\r\n}\r\n\r\n//공지사항 추가\r\nexport function noticeUpdate(newBoard){\r\n    const promise = axios.post(\"/main/noticeUpdate\", newBoard);\r\n    return promise;\r\n}\r\n\r\n//공지사항 삭제하기\r\nexport function deleteNotice(noticeid){\r\n    const promise = axios.delete(\"/main/delete/\" + noticeid);\r\n    return promise;\r\n}\r\n\r\n//유저정보 가져오기\r\nexport function getUserList() {\r\n    const promise = axios.get(\"/main/userList\");\r\n    return promise;\r\n}","import { deleteNotice } from \"apis/Main\";\r\nimport { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nfunction NoticeDetail(props) {\r\n  console.log(props) \r\n\r\n  const handleRemove =(event) =>{\r\n    props.deleteNoticeState(props.board.noticeid);\r\n    props.handleClose();\r\n    alert('공지사항을 삭제 하였습니다!');\r\n  };\r\n\r\n  return(\r\n    <>\r\n    <Modal show={props.show} onHide={props.handleClose}>\r\n    <Modal.Header closeButton style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>\r\n          <Modal.Title><strong>{props.board.title}</strong></Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{props.board.content}</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={props.handleClose}>\r\n              CLOSE\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={handleRemove}>\r\n              DELETE\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NoticeDetail;\r\n","import { noticeUpdate } from \"apis/Main\";\r\nimport { useState } from \"react\";\r\nimport { Modal, Form, Button } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction NoticeAdd(props) {\r\n\r\n  const globalUserid = useSelector((state) => {\r\n    return state.authReducer.userid;\r\n  });//리덕스에 있는 userid 사용\r\n  console.log(globalUserid);\r\n\r\n  const [board, setBoard] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setBoard({\r\n      ...board,\r\n      [event.target.name]: event.target.value //이벤트 받아오기\r\n    });\r\n  };\r\n\r\n  const handleAdd = async(event) => {\r\n    event.preventDefault(); //form 안에 submit 역할을 하는 버튼을 눌렀어도 새로 실행하지 않게\r\n    const newBoard = {...board};\r\n    newBoard.userid = globalUserid;\r\n    newBoard.date = new Date();\r\n    await noticeUpdate(newBoard);\r\n    props.handleClose1();\r\n    props.work();\r\n    alert('공지사항을 등록 하였습니다!');\r\n  };\r\n\r\n  return(\r\n    <>\r\n    <Modal show={props.show} onHide={props.handleClose1}>\r\n              <Form className=\"text-center\" onSubmit={handleAdd}> \r\n                <h4>NOTICE<img src=\"/pencil.png\"width=\"25\"height=\"25\"/></h4>\r\n                <hr></hr>\r\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                  <Form.Label><strong>제목</strong></Form.Label>\r\n                  <Form.Control type=\"text\" name=\"title\" value={board.title} onChange={handleChange}/>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                  <Form.Label><strong>내용</strong></Form.Label>\r\n                  <Form.Control as=\"textarea\" rows={3} name=\"content\" value={board.content} onChange={handleChange}/>\r\n                </Form.Group>\r\n              </Form>\r\n              <Modal.Footer>\r\n              <Button type=\"submit\" variant=\"primary\" onClick={handleAdd}>\r\n                  ADD\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={props.handleClose1}>\r\n                  CLOSE\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NoticeAdd;","import { Form, Modal } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button } from 'react-bootstrap';\r\nimport \"./scrollbar1.css\"\r\nimport NoticeDetail from \"./NoticeDetail\";\r\nimport NoticeAdd from \"./NoticeAdd\";\r\nimport { deleteNotice, getNoticeList } from \"apis/Main\";\r\nfunction Notice(props){\r\n  const [a, setA] = useState(1);//상태데이터 선언 문법\r\n  //자바에서 int a = 1;와 같음\r\n  //setA(바꿔주고싶은값)\r\n  //a = 2;(자바) setA(2)\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [show1, setShow1] = useState(false);\r\n  const [selectedNotice, setSelectedNotice] = useState([]);\r\n  //공지사항을 가져올 list \r\n  const [board, setBoard] = useState({});\r\n  \r\n  const work = async() => {\r\n    const response = await getNoticeList(); //백이랑 통신\r\n    console.log(response.data);\r\n    setSelectedNotice(response.data);\r\n  }\r\n\r\n  const deleteNoticeState=(noticeid)=>{\r\n    //boardlist에서 해당 noticeid의 notice 삭제 \r\n    deleteNotice(noticeid).then((response)=>{\r\n      console.log(noticeid)\r\n      console.log(response.data);\r\n      setSelectedNotice(response.data);\r\n    });\r\n   \r\n  }\r\n\r\n  useEffect(() => {\r\n    work();\r\n  }, [])\r\n\r\n  const handleShow =(board) => {\r\n    setShow(true);\r\n    setBoard(board);\r\n  }\r\n  \r\n  const handleClose = () => {\r\n    setShow(false);\r\n  }\r\n  \r\n\r\n  const handleClose1 = () => setShow1(false);\r\n  const handleShow1 = () => setShow1(true);\r\n\r\nreturn(\r\n  <>\r\n  <h5>NOTICE <img src=\"/pencil.png\"width=\"25\"height=\"25\"/>\r\n      <Button variant=\"outline-primary\" style={{float: \"right\"}} onClick={handleShow1}>\r\n      <img src=\"/pen.png\"width=\"25\"height=\"25\"/></Button>\r\n    </h5> \r\n    <NoticeAdd show={show1} handleClose1={handleClose1} work={work}></NoticeAdd>\r\n  <div className=\"scrollbar\" id=\"style-7\">\r\n    <div className=\"force-overflow-auto\">\r\n   <table className=\"table table-hover\">\r\n     <thead className=\"card-header\" style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>\r\n       <tr>\r\n         <th scope=\"col\">#</th>\r\n         <th scope=\"col\">작성자</th>\r\n         <th scope=\"col\">제목</th>\r\n         <th scope=\"col\">날짜</th>\r\n       </tr>\r\n     </thead>\r\n     <tbody>\r\n       {console.log(selectedNotice)}\r\n       {selectedNotice.length != 0 &&\r\n       selectedNotice.map((board,index) => {\r\n         return(\r\n           <tr key={board.noticeid} onClick={()=>{handleShow(board);}} /*onClick={handleShow(board)}*/ >\r\n             <th style={{width:\"100px\"}}>{index}</th>\r\n             <th style={{width:\"200px\"}}>{board.userid}</th>\r\n             <th>{board.title}</th>\r\n             <th style={{width:\"200px\"}}>{board.date}</th>\r\n           </tr>\r\n         )\r\n       })}\r\n     </tbody>\r\n    </table>\r\n    </div>\r\n    </div>\r\n      \r\n    <NoticeDetail deleteNoticeState={deleteNoticeState} board={board} show={show} handleClose={handleClose}></NoticeDetail>\r\n  </>\r\n)\r\n}\r\n\r\nexport default Notice;","import { useEffect, useState } from \"react\";\r\nimport { getUserList } from \"apis/Main\";\r\n\r\nfunction User(props){\r\n\r\n  const [UserList, setUserList] = useState([]);\r\n  const [board, setBoard] = useState({});\r\n\r\n  const work = async() => {\r\n    const response = await getUserList();    \r\n    setUserList(response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    work();\r\n  },[])\r\n  \r\n  return(    \r\n    <>\r\n    <div className=\"scrollbar\" id=\"style-7\">\r\n      <div className=\"force-overflow-auto\">\r\n      <table className=\"table table-hover\">\r\n        <thead className=\"card-header\" style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>\r\n        <tr class=\"text-center\">\r\n          <th scope=\"col\">Room</th>\r\n          <th scope=\"col\">DOCTOR</th>\r\n          <th scope=\"col\">PHONE</th>\r\n          <th scope=\"col\">SEX</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n          {UserList.length != 0 &&\r\n          UserList.map((board) => {\r\n            return(\r\n                <tr>\r\n                  <th style={{width:\"100px\"}}>{board.userroom}</th>\r\n                  <th style={{width:\"100px\"}}>{board.username}</th>\r\n                  <th style={{width:\"200px\"}}>{board.phonenumber}</th>\r\n                  <th>{board.sex}</th>\r\n                </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n   </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default User;","import { useState } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\n\r\nfunction Photo(props){\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  return(\r\n    <Carousel activeIndex={index} onSelect={handleSelect}>\r\n      <Carousel.Item>\r\n        <img src=\"/doctor.JPG\" with=\"360\" height=\"280\"  className=\"d-block w-100\" alt=\"First slide\"/>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img src=\"/mask.JPG\" with=\"360\" height=\"280\" className=\"d-block w-100\" alt=\"Second slide\"/>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img src=\"/mask2.JPG\" with=\"360\" height=\"280\" className=\"d-block w-100\" alt=\"Third slide\"/>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default Photo;","import { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./datepickerHome.css\";\r\n\r\nfunction Calendar(props) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  return (\r\n    <>\r\n    <div className=\"text-center\">\r\n      <DatePicker\r\n      selected={startDate}\r\n      onChange={(date) => setStartDate(date)}\r\n      inline\r\n      />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calendar;","import React, { useState } from \"react\";\r\nimport { Form, Modal, Button } from \"react-bootstrap\";\r\n\r\nfunction WeeklyForm(props){\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n    <div onClick = {handleShow}>&nbsp;</div>\r\n    <Modal show={show} onHide={handleClose}>\r\n              <Form>\r\n                <h4 className=\"text-center\">WEEKLY <img src=\"/weekly.png\"width=\"25\"height=\"25\"/></h4>\r\n                <hr></hr>\r\n                <Form.Group className=\"mb-3, text-center\" controlId=\"exampleForm.ControlTextarea1\">\r\n                  <Form.Label><strong>내용</strong></Form.Label>\r\n                  <Form.Control as=\"textarea\" rows={3} />\r\n                </Form.Group>\r\n              </Form>\r\n              <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={handleClose}>\r\n                  ADD\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={handleClose}>\r\n                  CLOSE\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            </>\r\n  );\r\n};\r\n\r\nexport default WeeklyForm;","import { forwardRef, useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport WeeklyForm from \"./WeeklyForm\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./scrollbar.css\";\r\nimport \"./boxstyle.css\";\r\n\r\nfunction Weekly(props) {\r\n  // // test\r\n  // const click = (item) =>{\r\n  //   window.open(\"/home\",\"test\",\"width=500,height=600\");\r\n  // }\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\r\n    <button className=\"example-custom-input\" onClick={onClick} ref={ref}>\r\n      {value}\r\n    </button>\r\n  ));\r\n  return(\r\n    <>\r\n    <h5>WEEKLY <img src=\"/weekly.png\"width=\"30\"height=\"30\"/>\r\n    <div className=\"text-center\">\r\n    <DatePicker\r\n      selected={startDate}\r\n      onChange={(date) => setStartDate(date)}\r\n      customInput={<ExampleCustomInput />}\r\n    />\r\n    </div>\r\n    </h5>\r\n    <div className=\"scrollbar\" id=\"style-7\">\r\n      <div className=\"force-overflow-auto\">\r\n      <Table bordered>\r\n  <thead>\r\n    <tr className=\"text-center\" style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>\r\n      <th><img src=\"/speed.png\"width=\"20\"height=\"20\"/></th>\r\n      <th>월요일</th>\r\n      <th>화요일</th>\r\n      <th>수요일</th>\r\n      <th>목요일</th>\r\n      <th>금요일</th>\r\n      <th>토요일</th>\r\n      <th>일요일</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr className=\"text-center\">\r\n      <td style={{height:\"500px\"}}><WeeklyForm/></td>\r\n      <td style={{width:\"150px\"}}>\r\n        <div className=\"banner1\">신용권 원장님<div style={{float: \"inline-end\"}}><hr></hr>휴식 시간 오전 09:00 ~ 오전11:00</div></div>\r\n      </td>\r\n      <td style={{width:\"150px\"}}>\r\n      <WeeklyForm/>\r\n      </td>\r\n      <td style={{width:\"150px\"}}>\r\n      <div className=\"banner2\">홍미경 원장님<div style={{float: \"inline-end\"}}><hr></hr>휴식 시간 오전 09:00 ~ 오전11:00</div></div>\r\n      <div className=\"banner1\">신용권 원장님<div style={{float: \"inline-end\"}}><hr></hr>외근 시간 오후 13:00 ~ 오후15:00</div></div>\r\n      </td>\r\n      <td style={{width:\"150px\"}}>\r\n      <WeeklyForm/>\r\n      </td>\r\n      <td style={{width:\"150px\"}}>\r\n      <div className=\"banner3\">최은지 원장님<div style={{float: \"inline-end\"}}><hr></hr>휴식 시간 오전 09:00 ~ 오전11:00</div></div>\r\n      </td>\r\n      <td style={{width:\"150px\"}}>\r\n      <WeeklyForm/>\r\n      </td>\r\n      <td style={{width:\"150px\"}}>\r\n      <div className=\"banner2\">홍미경 원장님<div style={{float: \"inline-end\"}}><hr></hr>근무시간 오후13:00 ~ 오후18:00</div></div>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</Table>\r\n</div>\r\n</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Weekly;","import Notice from \"./Notice\";\r\nimport User from \"./User\";\r\nimport Photo from \"./Photo\";\r\nimport Calendar from \"./Calendar\";\r\nimport Weekly from \"./Weekly\";\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"container-fluid row vh-100 p-3\">\r\n   <div className=\"col-8\">\r\n      <div className=\"col card p-3\" style={{height:\"30vh\"}}>\r\n      <Notice/>\r\n      </div>\r\n      <div className=\"p-2\"></div>\r\n      <div className=\"col card p-3\"style={{height:\"65vh\"}}>\r\n      <Weekly/>\r\n      </div>\r\n   </div>\r\n   <div className=\"col-4\">\r\n   <div className=\"col card p-1\" style={{height:\"30vh\"}}>\r\n      <Calendar/>\r\n      </div>\r\n      <div className=\"p-2\"></div>\r\n      <div className=\"col card\"style={{height:\"30vh\"}}>\r\n      <User/>\r\n      </div>\r\n      <div className=\"p-2\"></div>\r\n      <div className=\"col card\"style={{height:\"33.7vh\"}}>\r\n      <Photo/>\r\n      </div>\r\n   </div>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import { Carousel, Pagination } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\n//현재 DayIndex 구하기\r\nconst CalcDayIndex =(month) =>{\r\n    let today = new Date().getDate();\r\n    \r\n    let DayIndex = (today%7) -1\r\n    if(DayIndex<0){\r\n        DayIndex = DayIndex+7\r\n    }\r\n    return DayIndex;\r\n}\r\n\r\n// 달에 따른 슬라이드 배열 넣기\r\nconst CalcCitem = (month) =>{ \r\n    let lastDay = null;\r\n    // 해당 달의 마지막 날\r\n    lastDay = new Date(2021,month,0).getDate();\r\n    \r\n    let ItemBoard =[];\r\n    // 마지막 슬라이드를 제외하고 각 슬라이드의 배열에 들어갈 숫자넣기 \r\n    for(var i=1; i<=4; i++){\r\n        let Item = [];\r\n        for(var j=7*(i-1)+1; j<=7*i; j++){\r\n            Item.push(j);\r\n        }\r\n        ItemBoard.push(Item)\r\n    }\r\n    let Item = [];\r\n    // 마지막 슬라이드에 넣을것(해당 달의 마지막날 까지 배열에 추가)\r\n    for(var j=29; j<=lastDay; j++){\r\n        Item.push(j)\r\n    }\r\n    // 해당 슬라이드에 아무것도 없을때 슬라이드 안나오게\r\n    if(Item.length>0)\r\n    ItemBoard.push(Item);\r\n    return ItemBoard;\r\n}\r\nfunction Calendar(props){\r\n    // 현재 달 상태\r\n    const [month,setMonth] = useState(new Date().getMonth()+1)\r\n    // 현재 day index 상태\r\n    const [dayIndex, setDayIndex] = useState(()=>(CalcDayIndex(new Date().getMonth()+1)))\r\n    // 현재 슬라이드 인덱스\r\n    const [slideIndex, setSlideIndex] = useState(0);\r\n    // 현재 슬라이드 배열\r\n    const [CItem, setCItem] = useState(()=>(CalcCitem(month)));\r\n\r\n    //일자 선택 함수\r\n    const onChangeDaySelect =(index,e) =>{\r\n        setDayIndex(index);\r\n      \r\n    }\r\n    // 최종 결과 date set하는곳\r\n    useEffect(()=>{\r\n        const day = CItem[slideIndex][dayIndex];\r\n        const selectDate = new Date(new Date().getFullYear()+\"-\"+month+\"-\"+day)\r\n        props.setSelectDate(selectDate.toLocaleDateString()) \r\n\r\n    },[dayIndex,slideIndex,month])\r\n\r\n    // 현재 슬라이드 이동 함수\r\n  const handleSelect = (selectedIndex,e) => {\r\n    setSlideIndex(selectedIndex);\r\n  };\r\n\r\n  //현재 날짜의 슬라이드로 이동 초기화\r\n  useEffect(()=>{\r\n    const today = new Date().getDate()\r\n    let tmpSlideindex =parseInt(today/7)\r\n    if(today%7===0){\r\n        tmpSlideindex = parseInt(today/7)-1;\r\n    } \r\n    setSlideIndex(tmpSlideindex);\r\n  },[])\r\n\r\n  //달이 바뀔때 해당 달의 날짜배열 상태 변경\r\n  useEffect(()=>{\r\n   setCItem(CalcCitem(month)); \r\n  },[month])\r\n\r\n  //날짜에 따른 요일 매핑\r\n  var week = ['일', '월', '화', '수', '목', '금', '토']; \r\n\r\n  // 달 바꾸기(버튼에 따른 달 숫자 변경)\r\n    const ChangeMonth = (dir) =>{\r\n        let newMonth = month;\r\n        if(dir && newMonth<12){\r\n            newMonth++\r\n            setMonth(newMonth)\r\n        }else if(!dir && newMonth>1){\r\n            newMonth-- \r\n            setMonth(newMonth)\r\n        }\r\n    }\r\n  \r\n \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"d-flex flex-row\" style={{margin:\"10px 0px\"}}>\r\n                <button className=\"carousel-control-prev-icon bg-info\" style={{border:\"none\"}} onClick={()=>{ChangeMonth(false)}}/>\r\n                <label style={{fontWeight:\"bold\", margin:\"0px 10px\"}}>{month}월</label>\r\n                <button className=\"carousel-control-next-icon  bg-info \"style={{border:\"none\"}} onClick={()=>{ChangeMonth(true)}}/>\r\n            </div>\r\n            <Carousel interval={null}  variant=\"dark\"  prevIcon = {<span className=\"carousel-control-prev-icon bg-info\" />} nextIcon={<span className=\"carousel-control-next-icon  bg-info \" />} indicators={false} activeIndex={slideIndex} onSelect={handleSelect}>\r\n                {\r\n                    CItem.map((citem,index)=>{\r\n                        return(\r\n                            <Carousel.Item key={index}>\r\n                                    <div  className={index<4?\"row d-flex justify-content-between\":\"row d-flex\"}  style={{padding:\"0px 130px\"}}>\r\n                                \r\n                                 {citem.map((day,index)=>{return(\r\n                                       <button key={index} onClick={()=>{onChangeDaySelect(index)}} style={{backgroundColor:dayIndex!==index?\"white\":\"#F6FCFA\",border:dayIndex!==index?\"none\":\"2px solid skyblue\", borderRadius:\"15px\",marginLeft:\"5px\", width:\"50px\", textAlign:\"center\"}}>\r\n                                        {day}<br/>\r\n                                       {week[new Date(new Date().getFullYear()+\"-\"+month+\"-\"+day).getDay()]}\r\n                                        </button>       \r\n                                )\r\n                                })}\r\n                               </div>\r\n                            </Carousel.Item>\r\n                        )\r\n                    })\r\n                }\r\n \r\n            </Carousel>\r\n            \r\n        </div>\r\n\r\n        \r\n            \r\n    )\r\n}\r\n\r\nexport default Calendar;","import React from \"react\";\r\nimport { useEffect,  useState } from \"react\";\r\n\r\nfunction Item(props) {\r\n\r\n  const item = props.item\r\n  const property = props.property\r\n  const order = props.order\r\n  const [itemArray, setItemArray] = useState([]);\r\n  useEffect(()=>{\r\n    let itemarray = [];\r\n    if(order!=null){\r\n      itemarray.push(order)\r\n    }\r\n    if(property==null){\r\n      for(var ip in item){\r\n        itemarray.push(item[ip])\r\n      }\r\n    }\r\n    else{\r\n      for(var i=0; i<property.length; i++){\r\n        itemarray.push(item[property[i]]); \r\n       }\r\n    }\r\n      setItemArray(itemarray);\r\n},[item])\r\n  \r\n  return (\r\n    <>\r\n     <style jsx=\"true\">{`\r\n     \r\n        .test:focus {\r\n          background: #B3E283;\r\n          color:black;\r\n        }\r\n        \r\n      `}</style>\r\n    <div tabIndex=\"-1\" onClick={(event)=>{if(props.onClick)props.onClick(item); }} className={\"test ml-2 mr-2 mb-2 pt-2 pb-2 d-flex align-items-center border-bottom  \"} style={{ fontSize: \"13px\" }}>\r\n    {itemArray.map((item,index)=>{\r\n      return(\r\n        <div key={index}  className=\"col pl-0 pr-0 text-center\">\r\n          {item}\r\n        </div>\r\n      )\r\n    })}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Item);\r\n\r\n\r\n\r\n\r\n","function ReceptionHeader(props) {\r\n  return (\r\n    <>\r\n      <div className=\" d-flex justify-content-between \" style={{height:\"46px\"}}>\r\n        <div className=\"d-flex \" style={{height:\"46px\"}}>\r\n        <div className=\"col-auto justify-content-start  text-center p-0 pt-2\" style={{ backgroundColor:props.color, width:\"40px\", color:\"#FFFFFF\"}}>\r\n          <i className={props.iclassName}></i>\r\n        </div>\r\n        <div className=\"p-2 col align-self-center\">{props.headertitle}</div>\r\n        </div>\r\n        <div className=\"align-self-center\"> \r\n        {props.children}\r\n        </div>\r\n        \r\n    \r\n      </div>    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReceptionHeader;","import axios from \"axios\";\r\n\r\n//예약정보 가져오기\r\nexport function GetReservationList(){\r\n    const result = axios.get(\"reception/reservationlist\");\r\n    return result;\r\n}\r\n//예약정보 등록하기\r\nexport function RegisterReservation(reservation, testlist){\r\n    const result = axios.post(\"reception/registerreservation\",[reservation,testlist],{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n    return result;\r\n}\r\n//예약정보 삭제하기\r\nexport function RemoveReservation(reservationid){\r\n    const result = axios.delete(\"reception/removereservation\", {\r\n        data: { \r\n          reservationid \r\n        }\r\n      });\r\n    return result;\r\n}\r\n//예약정보 수정하기\r\nexport function UpdateReservation(reservation){\r\n    let result = axios.put(\"reception/updatereservation\",reservation);\r\n    return result;\r\n}\r\n//특정 환자정보가져오기\r\nexport function getPatient(patientid) {\r\n    const result = axios.get(\"reception/getpatient\",{\r\n        params:{    \r\n            patientid\r\n        }\r\n    });\r\n    return result;\r\n  }\r\n//환자정보가져오기\r\nexport function GetPatientList(){\r\n    const result = axios.get(\"reception/patientlist\");\r\n    return result;\r\n}\r\n//환자등록하기\r\nexport function RegisterPatient(patient){\r\n    const result = axios.post(\"reception/registerpatient\",patient,{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n    return result;\r\n}\r\n//환자수정하기\r\nexport function UpdatePatient(patient){\r\n    const result = axios.put(\"reception/updatepatient\",patient,{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n    return result;\r\n}\r\n\r\n//환자의 진료정보 가져오기\r\nexport function GetTreatmentListBypatientid(patientid){\r\n    const result = axios.get(\"reception/treatments/\"+patientid);\r\n    return result;\r\n}\r\n\r\n//환자의 진료상세정보 가져오기\r\nexport function GetTreatmentDetail(treatmentid){\r\n    const result = axios.get(\"reception/treatmentdetail\",{\r\n        params:{    \r\n            treatmentid\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\n//처방받은 검사데이터 가져오기\r\nexport function PrescriptionTest(patientid){\r\n    const result = axios.get(\"reception/prescriptiontest\",{\r\n        params:{    \r\n            patientid\r\n        }\r\n    });\r\n    return result;\r\n}\r\n//검사 접수하기\r\nexport function ReceptionTest(receptiontestarg){\r\n    const result = axios.post(\"reception/receptiontest\",receptiontestarg,{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n    return result;\r\n}\r\n// 진료접수하기\r\nexport function ReceptionTreatment(treatment){\r\n    const result = axios.post(\"reception/receptiontreatment\",treatment,{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n    return result;\r\n}\r\n\r\n//검사접수 삭제하기\r\nexport function DeleteReceptionTest(testreceptionid){\r\n    const result = axios.delete(\"reception/removetestreception\", {\r\n        data: { \r\n            testreceptionid\r\n        }\r\n      });\r\n    return result;\r\n}\r\n\r\n\r\n//진료접수 삭제하기\r\nexport function DeleteReceptionTreatment(treatmentid){\r\n    const result = axios.delete(\"reception/removereceptiontreatment\", {\r\n        data: { \r\n            treatmentid \r\n        }\r\n      });\r\n    return result;\r\n}\r\n\r\n//그날의 진료접수정보 가져오기\r\nexport function GetTreatmentList(){\r\n    const result = axios.get(\"reception/treatmentlist\");\r\n    return result;\r\n}\r\n//그날의 검사접수정보 가져오기\r\nexport function GetTestReceptionList(){\r\n    const result = axios.get(\"reception/testreceptionlist\");\r\n    return result;\r\n}\r\n\r\n//임직원 정보 가져오기(usertype)\r\nexport function GetUsersData(usertype){\r\n    const result = axios.get(\"user/userlist\",{\r\n        params:{    \r\n            usertype\r\n        }\r\n    });\r\n    return result;\r\n}\r\n//임직원 정보 가져오기(userid)\r\nexport function GetUserData(userid){\r\n    const result = axios.get(\"reception/getuser/\"+userid);\r\n    return result;\r\n}\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport ReactDatePicker, {} from \"react-datepicker\";\r\nimport \"../SearchPatient/datepickerReservation.css\";\r\nimport { getPatient, UpdateReservation } from \"apis/Reception\";\r\n\r\n\r\nfunction UpdateReservationModal(props){\r\n    //예약 리스트\r\n    //const [reservationList, setReservationList] = useState([]);\r\n    //선택된 날짜 상태\r\n    const [startDate, setStartDate] = useState(new Date())\r\n\r\n    //예약된 시간상태\r\n    //const [reservatedTimes,setReservatedTimes] = useState([]); \r\n\r\n    //진료인지 날짜인지 예약 타입상태 -> true이면 진료, false이면 예약\r\n    const [reservationType, setReservationType] = useState(true)\r\n    //예약상태 결정하는 함수\r\n    const handleReservation = (type) =>{\r\n        setReservationType(type)\r\n    }\r\n    //const dispatch = useDispatch();\r\n    //선택된 검사리스트 (초기값으로 DB에서 불러온 처방검사리스트 들어감)\r\n    //const [testList,setTestList] = useState([]);\r\n    //선택된 환자\r\n    const [patient, setPatient] = useState();\r\n\r\n\r\n    //처방된 검사 선택\r\n    // const handleTestList = (event, index) =>{\r\n    //     const modify = testList.map((item,i)=>{\r\n    //         if(i===index){\r\n    //             item.ischeck = event.target.checked\r\n    //         }\r\n    //         return item;\r\n    //     })\r\n    //     setTestList(modify);\r\n    // }\r\n\r\n    // const GetTimeIndex=(date)=>{\r\n    //     let hour = date.getHours()*10\r\n    //     let minute = date.getMinutes()\r\n    //     if(minute===0){\r\n    //         minute = 0;\r\n    //     }else if(minute===30){\r\n    //         minute = 5;\r\n    //     }\r\n    //     const Index = (hour+minute)/5-18\r\n    //     return Index\r\n    // }\r\n    // const GetTime=(Index)=>{\r\n    //     let num = (Index+18)*5\r\n    //     let hour = num/10\r\n    //     let minute = num%10===5?30:0\r\n    //     const date = new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate(),hour,minute)\r\n    //     return date;\r\n    // }\r\n    useEffect(()=>{\r\n        if(props.selectedReservation){\r\n            getPatient(props.selectedReservation.patientid).then((result)=>{\r\n                console.log(result.data)\r\n                setPatient(result.data)\r\n            })\r\n        }\r\n        \r\n    },[props.selectedReservation])\r\n    useEffect(()=>{\r\n        // var reservationlist = getAllReservationsData();\r\n        // setReservationList(reservationlist)\r\n        //var testlist = getAllTestsGroupData(props.selectedReservation.patientid);\r\n        //setTestList(testlist);\r\n        //선택된 예약정보 가져오기 타입, 시간\r\n        setReservationType(props.selectedReservation.type===\"진료\"?true:false)\r\n        setStartDate(new Date(props.selectedReservation.reservationdate))\r\n        //console.log(GetTime(GetTimeIndex(new Date(new Date().getFullYear(),new Date().getMonth(),29,15,30))))\r\n        //  let Times=new Array(18);\r\n        //     Times[GetTimeIndex(new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),13,0))] = true;\r\n        //     Times[GetTimeIndex(new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),13,30))] = true;\r\n        //     for(var i=0; i<reservationlist.length; i++){\r\n        //         if(reservationlist[i].reservationdate){\r\n        //             Times[GetTimeIndex(reservationlist[i].reservationdate)] = true;\r\n        //         }\r\n        //     }\r\n         \r\n        \r\n            //처음 들어갈시간 넣기\r\n        //  setStartDate(props.selectedReservation.rdate);\r\n\r\n        //  let excludeTime = new Array(12)\r\n        //  for(var i=0; i<12; i++){\r\n        //      var lastday = new Date(new Date().getFullYear(),i+1,0).getDate();\r\n        //     excludeTime[i] = new Array(lastday)\r\n        //     for(var j=0; j<lastday; j++){\r\n        //         excludeTime[i][j] = new Array();\r\n        //     }\r\n        //  }\r\n         //exclude에 들어갈 월별 시간 구하기\r\n        \r\n        //     for(var i=0; i<reservationlist.length; i++){\r\n        //         //수정된 예약의 시간은 다시선택할수있게함\r\n        //         if(reservationlist[i].reservationid===props.selectedReservation.reservationid){\r\n        //             continue;\r\n        //         }\r\n        //         var month = reservationlist[i].reservationdate.getMonth()+1\r\n        //         var day = reservationlist[i].reservationdate.getDate()\r\n        //         excludeTime[month-1][day-1].push(reservationlist[i].reservationdate)\r\n        //         console.log(month + \",\"+day+\",\"+reservationlist[i].reservationdate)\r\n        //      }\r\n         \r\n         \r\n        // console.log(excludeTime)\r\n        // setReservatedTimes(excludeTime)  \r\n      \r\n      \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n    },[startDate])\r\n    const getReservationDate= () =>{\r\n        var newDateOptions = {\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour:\"2-digit\",\r\n            minute:\"2-digit\"\r\n        }\r\n        const origin = startDate.toLocaleString(\"ko-kr\",newDateOptions);\r\n        let date = new Date(startDate);\r\n        date.setMinutes(date.getMinutes()+30)\r\n        if(startDate.getTime()){\r\n            \r\n            return origin+\" ~ \"+date.toLocaleString(\"ko-kr\",newDateOptions)\r\n        }else{\r\n            return \"시간을 선택해 주세요\"\r\n        }\r\n       \r\n    }\r\n    \r\n    //예약 수정함수\r\n    const UpdateReservationClickBtn=()=>{\r\n        let newreservation;\r\n        //reservationType이 true가 진료 / false가 검사\r\n       \r\n            newreservation = {...props.selectedReservation,reservationdate:startDate.getTime(),type:reservationType?\"진료\":\"검사\"};\r\n            //DB에 새로운 예약정보로 업데이트 \r\n            UpdateReservation(newreservation).then((result)=>{\r\n                //부모함수 불러서 ui변경\r\n                props.UpdateReservation(newreservation)\r\n                //모달 닫기\r\n                props.closeModal(\"ReservationUpdateModal\")\r\n            })\r\n           \r\n        \r\n      \r\n            //DB에 해당 patient, startDate, testList로 해당 시간에 검사예약\r\n            // const checkedtestlist = testList.filter((test)=>(test.ischeck===true))\r\n            //이 안에는 검사리스트도 같이 있음\r\n            // newreservation = UpdateReservation({reservationdate:startDate,patientid:props.selectedPatient.patientid,status:\"대기\",type:\"검사\" }, checkedtestlist)\r\n        \r\n \r\n    }\r\n    return(\r\n        <div className=\"conatainer\" style={{height:\"60vh\"}}>\r\n            <div style={{height:\"15%\"}}>\r\n               <div className=\"row d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\"}}>\r\n                    <div style={{width:\"10%\"}}>ID</div>\r\n                    <div style={{width:\"15%\"}}>이름</div>\r\n                    <div style={{width:\"10%\"}}>성별</div>\r\n                    <div style={{width:\"10%\"}}>나이</div>\r\n                    <div style={{width:\"30%\"}}>주민번호</div>\r\n                    <div style={{width:\"25%\"}}>Phone</div>\r\n                </div>\r\n                \r\n                <div className=\"row d-flex justify-content-between text-center  \" style={{borderRadius:\"15px\"}}>\r\n                    <div style={{width:\"10%\"}}>{patient&&patient.patientid}</div>\r\n                    <div style={{width:\"15%\"}}>{patient&&patient.patientname}</div>\r\n                    <div style={{width:\"10%\"}}>{patient&&patient.sex}</div>\r\n                    <div style={{width:\"10%\"}}>{patient&&patient.age}</div>\r\n                    <div style={{width:\"30%\"}}>{patient&&(patient.ssn1 + \" - \" + patient.ssn2)}</div>\r\n                    <div style={{width:\"25%\"}}>{patient&&patient.phonenumber}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\" style={{height:\"80%\"}}>\r\n                    <div className=\"col-6 text-center\" style={{margin:\"10px\",marginTop:\"5%\", height:\"100%\"}} >\r\n                        <ReactDatePicker \r\n                        selected={startDate}\r\n                        onChange={(date) => setStartDate(date)}\r\n                        showTimeSelect\r\n                        timeFormat=\"HH:mm\"\r\n                        popperPlacement=\"bottom\" \r\n                        minDate={new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate())}\r\n                        minTime={new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),9,0)}\r\n                        maxTime={new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),17,30)}\r\n                        //excludeTimes={reservatedTimes.length>1&&reservatedTimes[startDate.getMonth()][startDate.getDate()-1]}\r\n                        inline\r\n                        dateFormat=\"yyyy-MM-dd hh:mm\"\r\n                        />\r\n                        <div className=\"border text-center\" style={{borderRadius:\"15px\"}}> \r\n                            예약날짜<br/>{getReservationDate()}\r\n                    </div>\r\n                    </div>                \r\n                    <div className=\"col-5 \" style={{margin:\"10px\", height:\"80%\", padding:\"0px\" ,marginTop:\"5%\"  }}>\r\n                        <button onClick={()=>{handleReservation(true)}} style={{backgroundColor:reservationType? \"#ffcd82\":\"white\",border:\"2px solid #ffcd82\",borderRadius:\"15px\",width:\"47%\",height:\"70%\", fontSize:\"2em\"}} className=\"  mr-1 \">진료</button>\r\n                        <button onClick={()=>{handleReservation(false)}}  style={{backgroundColor:!reservationType? \"#ffcd82\":\"white\",border:\"2px solid #ffcd82\",borderRadius:\"15px\",width:\"47%\",height:\"70%\", fontSize:\"2em\"}} className=\" \">검사</button>   \r\n             \r\n                        {/* {!reservationType&&\r\n                            testList&&testList.map((item,index)=>{return(\r\n                                <div key={index}>\r\n                                <input type=\"checkbox\" onChange={(e)=>{handleTestList(e,index)}} value={testList[index].ischeck}/>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.groupcode}</label>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.groupname}</label>\r\n                                </div>\r\n                            )})\r\n                        } */}\r\n\r\n                        <button className=\"btn btn-outline-dark btn-sm\" style={{borderRadius:\"15px\",  marginTop:\"10px\", width:\"100%\", fontSize:\"1.5em\"}} /*disabled={reservationType===false&&(testList==null || (testList.filter((item)=>(item.ischeck===true)).length<1)) }*/  onClick={UpdateReservationClickBtn}>예약수정</button>\r\n             \r\n                    </div>                   \r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n\r\nexport default UpdateReservationModal;","import axios from \"axios\";\r\n// const BASE_URL = \"http://localhost:8080/\";\r\nconst BASE_URL =\"http://kosa3.iptime.org:50006/\";\r\nexport function sendRedisMessage(content) {\r\n    content =JSON.stringify(content)\r\n    return axios.get(BASE_URL+\"reception/sendRedisMessage\", {params:{topic:\"/reception\", content}});\r\n  }\r\n\r\n  export function clearChatting(userid) {\r\n    return axios.get(BASE_URL+\"reception/clearchatting/\"+userid);\r\n  }\r\n\r\nexport function saveChatting(userid,chatArray) {\r\n  var chatArrayst = JSON.stringify(chatArray)\r\n  return axios.post(BASE_URL+\"reception/savechatting\",{userid,chatArray:chatArrayst},{\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }});\r\n}\r\n\r\nexport function loadChatting(userid) {\r\n  return axios.get(BASE_URL+\"reception/loadchatting/\"+userid);\r\n}","\r\n\r\n\r\n\r\n//환자 정보\r\nlet patientslist=[];\r\nfor(var i=1; i<10; i++){\r\n    const TR = {patientid:\"patientid\"+i, patientname:\"name\"+i, sex:i%2?\"남자\":\"여자\",age:i,ssn1:\"950328\",ssn2:\"111111\"\r\n    ,phonenumber:\"01024967236\",registerday:new Date().toLocaleDateString(),lasttreatment:new Date().toLocaleDateString() } \r\n    patientslist.push(TR);\r\n}\r\n//전체 환자 가져오기\r\nexport function getAllPatientsData(){\r\n    return patientslist;\r\n}\r\n//특정 환자 가져오기\r\nexport function getPatientData(patient_id){\r\n    return patientslist.filter((item)=>{return item.patientid===patient_id})[0]\r\n    \r\n}\r\n//환자 등록\r\nexport function insertPatientData(patient){\r\n    const i = patientslist.length+1;\r\n    patientslist.push({patientid:\"patientid\"+i, patientname:patient.patientname, sex:patient.sex,\r\n    age:patient.age,ssn1:patient.ssn1,ssn2:patient.ssn2\r\n    ,phonenumber:patient.phonenumber,registerday:new Date().toLocaleDateString(),lasttreatment:\"-\"})\r\n    return \"patient\"+i;\r\n}\r\n//환자 수정\r\nexport function updatePatientData(patient){\r\n    var index = patientslist.findIndex((item)=>(item.patientid===patient.patientid))\r\n    patientslist.splice(index,1,{patientid:index,...patient})\r\n}\r\n\r\n\r\n\r\n//병원임직원정보\r\nlet userslist=[];\r\nfor(var i=1; i<3; i++){\r\n    const TR = {userid:\"userid\"+i, username:\"name\"+i,userroom:\"room\"+i,role_authority:\"role_doctor\",userpassword:\"12345\",phonenumber:\"01024967236\",userenabled:\"1\" } \r\n    userslist.push(TR);\r\n}\r\n//의사리스트 불러오기\r\nexport function getAllDoctorData(){\r\n    const doctorlist = userslist.filter((item)=>(item.role_authority===\"role_doctor\"))\r\n    return doctorlist;\r\n}\r\n\r\n\r\n//진료정보\r\nlet treatmentslist=[];\r\nfor(var i=1; i<1; i++){\r\n    const TR = {treatmentid:\"treatmentid\"+i, memo:\"memo\"+i,treatmentdate:new Date().toLocaleDateString(),patientid:\"patientid\"+i,userid:\"userid\"+i,status:\"대기\" } \r\n    treatmentslist.push(TR);\r\n}\r\n//진료정보 가져오기\r\nexport function getAllTreatmentsData(){\r\n    return treatmentslist;\r\n}\r\n//진료접수 가능한지 확인 \r\nexport function isReceptionTreatment(patient_id){\r\n    return treatmentslist.filter((item)=>(item.patientid===patient_id &&item.status===\"대기\" )).length<1?true:false\r\n}\r\n//접수된 진료 삭제하기\r\nexport function DeleteReceptionTreatment(treatment_id){\r\n    const index = treatmentslist.findIndex((item)=>(item.treatmentid===treatment_id))\r\n    if(index>=0){\r\n        treatmentslist.splice(index,1)\r\n    }\r\n}\r\n\r\n//진료생성하기\r\nexport function ReceptionTreatment(patient_id, user_id){\r\n    const tid = treatmentslist.length+1\r\n    const newTreatment = {treatmentid:\"treatmentid\"+tid, memo:\"\",treatmentdate:new Date().toLocaleDateString(),patientid:patient_id,userid:user_id,status:\"대기\" }\r\n    treatmentslist.push(newTreatment)\r\n    return newTreatment;\r\n}\r\n\r\n\r\n//약데이터\r\nlet drugslist=[];\r\nfor(var i=1; i<10; i++){\r\n    const TR = {treatmentid:\"treatmentid\"+i,drugid:\"drugid\"+i,description:\"description\"+i } \r\n    drugslist.push(TR);\r\n}\r\ndrugslist.push({treatmentid:\"treatmentid\"+1,drugid:\"drugid\"+2,description:\"description\"+1 });\r\n//해당 진료의 처방된 약데이터 가져오기\r\nexport function getDrugsData(treatment_id){\r\n    var prescriptionlist = drugslist.filter((drugs)=>(drugs.treatmentid===treatment_id))\r\n    return prescriptionlist;\r\n}\r\n\r\n\r\n//예약정보\r\nlet reservationslist=[];\r\nfor(var i=1; i<1; i++){\r\n    const TR = {reservationid:\"reservationid\"+i,\r\n     reservationdate:new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate(),8+i,0),\r\n    patientid:\"patientid\"+i,status:\"대기\",type:i%2===0?\"진료\":\"검사\",testList:[] } \r\n    reservationslist.push(TR);\r\n}\r\n//예약 가져오기\r\nexport function getAllReservationsData(){   \r\n    const newreservationlist = reservationslist.map((item)=>(item))\r\n    return newreservationlist;\r\n}\r\n//특정 예약 가져오기\r\nexport function getReservationData(reservation_id){\r\n    return reservationslist.filter((item)=>{return item.reservationid===reservation_id})[0]\r\n    \r\n}\r\n//예약 취소\r\nexport function cancelReservationData(reservation_id){\r\n    const index = reservationslist.findIndex((item)=>(item.reservationid===reservation_id))\r\n    if(index>=0){\r\n        reservationslist.splice(index,1);\r\n    }\r\n   \r\n}\r\n\r\n\r\n//예약 등록\r\nexport function insertReservationData(reservation,selectedtestlist){\r\n    const i = reservationslist.length+1;\r\n    reservationslist.push({reservationid:\"reservationid\"+i, reservationdate:reservation.reservationdate\r\n    ,patientid:reservation.patientid,status:reservation.status,type:reservation.type } )\r\n    if(reservation.type===\"검사\"){\r\n        // 예약타입이 검사일때 검사테이블 돌면서 선택된 그룹코드들과 같은 검사들의 예약id에 해당 예약id 넣어줌+ 환자아이디 같아야하고 해당 검사의 상태가 접수대기 여야함\r\n        for(var c=0; c<testslist.length; c++){\r\n            for(var j=0; j<selectedtestlist.length; j++){\r\n                if(selectedtestlist[j].groupcode===testslist[c].groupcode && reservation.patientid===testslist[c].patientid && testslist[c].status===\"접수대기\" ){\r\n                    testslist[c].reservationid = \"reservationid\"+i;\r\n                }\r\n    \r\n            }\r\n        }\r\n    }\r\n    return \"reservationid\"+i;\r\n}\r\n//예약 수정\r\nexport function updateReservationData(reservation){\r\n    var index = reservationslist.findIndex((item)=>(item.reservationid===reservation.reservationid))\r\n    reservationslist.splice(index,1,{reservationid:index,...reservation})\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//검사 접수 정보\r\nlet testreceptionslist=[];\r\nfor(var i=1; i<1; i++){\r\n    const TR = {testreceptionid:\"testreceptionid\"+i, testdate:new Date().toLocaleDateString(),patientid:\"patientid\"+i,status:\"대기\"} \r\n    testreceptionslist.push(TR);\r\n}\r\n//검사 접수 가져오기\r\nexport function getAllTestsReceptionData(){\r\n    return testreceptionslist;\r\n}\r\n//접수된 검사 삭제하기\r\nexport function DeleteReceptionTest(testreception_id){\r\n    //접수된 검사테이블 상태 변경\r\n    for(var i=0; i<testslist.length; i++){\r\n        if(testslist[i].testreceptionid===testreception_id){\r\n            testslist[i].testreceptionid = \"\"\r\n            testslist[i].status = \"접수대기\"\r\n        }\r\n    }\r\n    const index = testreceptionslist.findIndex((item)=>(item.testreceptionid===testreception_id))\r\n    if(index>=0){\r\n        testreceptionslist.splice(index,1)\r\n    }\r\n}\r\n//검사접수하기\r\nexport function ReceptionTest(patient_id,grouplist){\r\n    //검사접수데이터 만들기\r\n    const trid = testreceptionslist.length+1;\r\n    const tmpTestReceptiondata = {testreceptionid:\"testreceptionid\"+trid, testdate:new Date().toLocaleDateString(),patientid:patient_id,status:\"대기\"}\r\n    testreceptionslist.push(tmpTestReceptiondata)\r\n    //testReceptionid 채우기\r\n    for(var i=0; i< testslist.length; i++){\r\n        for(var j=0; j< grouplist.length; j++){\r\n            if(grouplist[j].ischeck===true&&testslist[i].groupcode ===grouplist[j].groupcode &&testslist[i].patientid ===patient_id  ){\r\n                testslist[i].testreceptionid = \"testreceptionid\"+trid\r\n                testslist[i].status = \"접수완료\"\r\n            }\r\n        }    \r\n        \r\n    } \r\n    return {...tmpTestReceptiondata};\r\n}\r\n\r\n\r\n\r\n\r\n//검사 정보\r\nlet testslist=[];\r\nfor(var i=1; i<4; i++){\r\n    const TR = {groupcode:\"groupcode\"+i,groupname:\"groupname\"+i,result:\"result\"+i,status:\"접수대기\",testreceptionid:\"\",testdataid:\"testdata\"+i,reservationid:0,treatmentid:\"treatmentid\"+i,patientid:\"patientid\"+i,userid:\"userid\"+i} \r\n    testslist.push(TR);\r\n}\r\nconst TR = {groupcode:\"groupcode\"+1,groupname:\"groupname\"+1,result:\"result\"+1,status:\"접수대기\",testreceptionid:\"\",testdataid:\"testdata\"+1,reservationid:0,treatmentid:\"treatmentid\"+1,patientid:\"patientid\"+1,userid:\"userid\"+1} \r\ntestslist.push(TR);\r\n\r\n//특정 환자가 처방받은 검사중  특정 예약의 검사 체크해서 가져오기\r\nexport function getCheckedTestsGroupData(patient_id, reservation_id){\r\n    testslist.sort(function(a, b) {\r\n        if(a.groupcode<b.groupcode){\r\n            return -1;\r\n        }\r\n        else if(a.groupcode>b.groupcode){\r\n            return 1;\r\n        }else{\r\n            return 0;    \r\n        }\r\n    });\r\n    //중복되는 그룹코드 제거하여 그룹코드와 그룹이름 객체배열 반환\r\n    var grouplist=[]\r\n    const testslist2 = testslist.filter((test)=>(test.patientid===patient_id))\r\n    if(testslist2.length===0){return null}\r\n    var tmp =testslist2[0].reservationid===reservation_id? {groupcode:testslist2[0].groupcode, groupname:testslist2[0].groupname,ischeck:true}:{groupcode:testslist2[0].groupcode, groupname:testslist2[0].groupname,ischeck:false}\r\n    grouplist.push(tmp);\r\n    for(var i=1; i<testslist2.length; i++){\r\n        if(testslist2[i].groupcode!==tmp.groupcode){\r\n            var tmps =testslist2[i].reservationid===reservation_id? {groupcode:testslist2[i].groupcode, groupname:testslist2[i].groupname,ischeck:true}: {groupcode:testslist2[i].groupcode, groupname:testslist2[i].groupname,ischeck:false}\r\n            grouplist.push(tmps)\r\n        }\r\n    }\r\n \r\n   return grouplist;\r\n    \r\n}\r\n\r\n\r\n//특정 환자의 처방검사 그룹가져오기\r\nexport function getAllTestsGroupData(patient_id){\r\n   testslist.sort(function(a, b) {\r\n        if(a.groupcode<b.groupcode){\r\n            return -1;\r\n        }\r\n        else if(a.groupcode>b.groupcode){\r\n            return 1;\r\n        }else{\r\n            return 0;    \r\n        }\r\n    });\r\n    //중복되는 그룹코드 제거하여 그룹코드와 그룹이름 객체배열 반환  \r\n    var grouplist=[]\r\n    const testslist2 = testslist.filter((test)=>(test.patientid===patient_id && test.status===\"접수대기\"))\r\n    if(testslist2.length===0){return null}\r\n    var tmp = {groupcode:testslist2[0].groupcode, groupname:testslist2[0].groupname,treatmentid:testslist2[0].treatmentid };\r\n    grouplist.push(tmp);\r\n    for(var i=1; i<testslist2.length; i++){\r\n        if(testslist2[i].groupcode!==tmp.groupcode){\r\n            var tmps = {groupcode:testslist2[i].groupcode, groupname:testslist2[i].groupname,treatmentid:testslist2[i].treatmentid}\r\n            grouplist.push(tmps)\r\n        }\r\n    }\r\n    return grouplist;\r\n}\r\n\r\n\r\n","const initialState = {\r\n    testreception: {},\r\n    treatmentreception:{},\r\n    testresult:{}\r\n  }\r\n  \r\n  //액션 타입 선언\r\n  const SET_TESTRECEPTION=\"reception/setTestReception\";\r\n  const SET_TREATMENTRECEPTION=\"reception/setTreatmentReception\";\r\n  const SET_TESTRESULT=\"reception/setTestResult\";\r\n  \r\n  \r\n  //액션 생성 함수 선언\r\n  export const createSetTestReception = (testreception) => {\r\n    return {type:SET_TESTRECEPTION, testreception};\r\n  } \r\n\r\n  export const createSetTreatmentReception = (treatmentreception) => {\r\n    return {type:SET_TREATMENTRECEPTION, treatmentreception};\r\n  } \r\n  export const createSetTestResult = (testresult) => {\r\n    return {type:SET_TESTRESULT, testresult};\r\n  } \r\n  \r\n  //리듀스 선언\r\n  const receptionReducer = (state = initialState, action) => {\r\n    if(action.type === SET_TESTRECEPTION) {\r\n      return {...state, testreception:action.testreception};\r\n    }else if(action.type === SET_TREATMENTRECEPTION) {\r\n      return {...state, treatmentreception:action.treatmentreception};\r\n    }else if(action.type === SET_TESTRESULT){\r\n      return {...state, testresult:action.testresult};\r\n    }else {\r\n      return state;\r\n    }\r\n  }\r\n  \r\n  \r\n  export default receptionReducer;","import { GetUsersData } from \"apis/Reception\";\r\nimport { sendRedisMessage } from \"apis/Redis\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createSetTreatmentReception } from \"redux/reception-reducer\";\r\nimport {isReceptionTreatment} from \"views/Reception/BackEnd/index\"\r\nimport { ReceptionTreatment} from \"apis/Reception\";\r\nimport moment from 'moment';\r\nfunction DoctorSelectorModal(props){\r\n    //의사리스트\r\n    const [doctorList,setDoctorList] = useState([]);\r\n    //의사 선택\r\n    const [selectedDoctor, setselectedDoctor] = useState();\r\n    const handleInputChange = (event,doctor) => {\r\n      setselectedDoctor(doctor);\r\n    };\r\n    const dispatch = useDispatch();\r\n    // 진료접수 가능한지 여부\r\n    const[disable,setDisable]  = useState(false)\r\n    //처음 컴포넌트 시작시 의사 목록 불러오기\r\n    useEffect(()=>{\r\n        props.controlLoading(true);\r\n        GetUsersData(\"의사\").then((result)=>{\r\n            setDoctorList(result.data);\r\n            //진료접수 가능한지 여부 체크\r\n            //setDisable(isReceptionTreatment(props.selectedPatient.patientid))\r\n            props.controlLoading(false);\r\n        })\r\n    },[])\r\n    \r\n   \r\n\r\n   //진료접수\r\n   const ResisterTreatment = () =>{\r\n    let treatmentdate = new Date().getTime()\r\n    const newTreatment = {memo:\"\",treatmentdate:treatmentdate,patientid:props.selectedPatient.patientid,userid:selectedDoctor.userid,status:\"진료 대기\" }\r\n    //만약 예약된거라면 예약에서 지우기\r\n    if(props.CancelReservation){\r\n        props.CancelReservation()\r\n    }\r\n    \r\n    //DB에 진료생성\r\n    ReceptionTreatment(newTreatment).then((result)=>{\r\n       console.log(moment(treatmentdate).format(\"HH:mm\"));\r\n        //redux에 접수된 진료넘기기\r\n        //dispatch(createSetTreatmentReception(result.data))\r\n        //실시간으로 데이터 넘기기\r\n\r\n        sendRedisMessage({type:\"treatment\",patientid:props.selectedPatient.patientid, status:\"접수\"})\r\n\r\n        props.closeModal(\"DoctorSelectorModal\")\r\n    })\r\n   \r\n    // if(props.modifyReservationList){\r\n    //     props.modifyReservationList()\r\n    // }\r\n    \r\n\r\n}\r\n\r\n    return(\r\n    <div className=\"conatainer\" style={{height:\"400px\"}}>\r\n      <div className=\"col border\" style={{overflow:\"auto\" ,borderRadius:\"15px\",  marginTop:\"15px\", height:\"70%\"}}> \r\n                        {doctorList&&doctorList.map((item,index)=>{return(\r\n                                <div key={index}>\r\n                                <input type=\"radio\" onChange={(e)=>{handleInputChange(e,item)}} checked={selectedDoctor&&item.userid===selectedDoctor.userid} value={item.userid}/>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.userid}</label>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.username}</label>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.userroom}</label>\r\n                                </div>\r\n                            )})\r\n                        }\r\n        </div>\r\n        <div className=\"col d-flex justify-content-end\" style={{borderRadius:\"15px\",  marginTop:\"10px\"}}> \r\n            <button disabled={selectedDoctor?false:true} className=\"btn btn-outline-dark btn-sm\" onClick={ResisterTreatment}>진료접수</button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DoctorSelectorModal;","import { PrescriptionTest ,ReceptionTest} from \"apis/Reception\";\r\nimport { sendRedisMessage } from \"apis/Redis\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction TestSelectorModal(props){\r\n    //처방된 검사리스트\r\n    const [testList,setTestList] = useState([]);\r\n\r\n\r\n    //처음 컴포넌트 시작시 처방검사 목록 불러오기\r\n    useEffect(()=>{\r\n        props.controlLoading(true);\r\n        PrescriptionTest(props.selectedPatient.patientid).then((result)=>{\r\n           var entry = Object.entries(result.data)\r\n           for(var en of entry){\r\n               en[\"ischeck\"] = false\r\n           }\r\n\r\n            setTestList(entry);\r\n            props.controlLoading(false);\r\n        })\r\n    },[])\r\n    //처방된 검사 선택\r\n    const handleTestList = (event, index) =>{\r\n   \r\n        const modify = testList.map((item,i)=>{\r\n            if(i===index){\r\n                item.ischeck = event.target.checked\r\n            }\r\n            return item;\r\n        })\r\n        setTestList(modify);\r\n    }\r\n\r\n    const ResisterTest = () =>{\r\n        //만약 예약된거라면 예약에서 지우기\r\n        if(props.CancelReservation){\r\n            props.CancelReservation()\r\n        }\r\n        //DB에 검사 생성\r\n        let testdataidlist=[]\r\n        for(var testdataArray of testList){\r\n            if(testdataArray.ischeck){\r\n                for(var data of testdataArray[1]){\r\n                    testdataidlist.push(data.testdataid);\r\n                }\r\n            }\r\n        }\r\n        const testreceptionarg = {patientid:props.selectedPatient.patientid, testdataidlist}\r\n        ReceptionTest(testreceptionarg).then((result)=>{\r\n            console.log(result.data)\r\n            //redux에 접수된 검사넘기기\r\n            //dispatch(createSetTestReception(result.data))\r\n            sendRedisMessage({type:\"test\"})\r\n            props.closeModal(\"TestSelectorModal\")\r\n        })\r\n       \r\n    }\r\n    return(\r\n    <div className=\"conatainer\" style={{height:\"400px\"}}>\r\n      <div className=\"col border\" style={{overflow:\"auto\" ,borderRadius:\"15px\",  marginTop:\"15px\", height:\"70%\"}}> \r\n                        {/* testList => {groupcode1:[testdata1, testdata2],groupcode2:[testdata3, testdata4]... } */}\r\n                        {testList&&testList.map((item,index)=>{\r\n                            \r\n                            return(\r\n                                <div key={index}>\r\n                                <input type=\"checkbox\" onChange={(e)=>{handleTestList(e,index)}} value={testList[index].ischeck}/>\r\n                                <span style={{marginLeft:\"5px\"}}>그룹코드 : {item[0]}</span>\r\n                                {<span> 검사 : </span>}\r\n                                {item[1].map((data,index)=>{\r\n                                    return(<span>{data.testdataname} / </span>)\r\n                                })}\r\n                                </div>\r\n                            )})\r\n                        }\r\n        </div>\r\n        <div className=\"col d-flex justify-content-end\" style={{borderRadius:\"15px\",  marginTop:\"10px\"}}> \r\n            <button disabled={testList&&testList.filter((test)=>(test.ischeck===true)).length>0?false:true} className=\"btn btn-outline-dark btn-sm\" onClick={ResisterTest}>검사접수</button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default TestSelectorModal;","import Calendar from \"../SearchPatient/Calendar\"\r\nimport Item from \"views/components/Item\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ReceptionHeader from \"../components/ReceptionHeader\";\r\nimport {useSelector } from \"react-redux\";\r\nimport { Modal,Spinner } from \"react-bootstrap\";\r\nimport ReservationUpdateModal from \"./ReservationUpdateModal\";\r\nimport DoctorSelectorModal from \"../SearchPatient/DoctorSelectorModal\";\r\nimport { GetReservationList,RemoveReservation } from \"apis/Reception\";\r\nimport moment from 'moment';\r\nimport TestSelectorModal from \"../SearchPatient/TestSelectorModal\";\r\nfunction Reservation(props){\r\n    const [reservationUpdateModalshow, setReservationUpdateModalshow] = useState(false);\r\n    const [doctorSelectorModalshow, setDoctorSelectorModalshow] = useState(false);\r\n\r\n\r\n    const property = [\"patientid\",\"patientname\",\"type\",\"reservationuidate\"]\r\n    const [selectDate,setSelectDate] = useState(new Date().toLocaleDateString());\r\n    const [reservationList, setReservationList] = useState([])\r\n    const reservationReducer = useSelector((state)=>(state.reservationReducer))\r\n\r\n    const [selectedReservation, setSelectedReservation] = useState();\r\n    const [testSelectorModalshow, setTestSelectorModalshow] = useState(false);\r\n    const [loading,setLoading] = useState(false);\r\n    const click = (focusItem) =>{\r\n        setSelectedReservation(focusItem)\r\n    }\r\n     //모달창 닫는 함수\r\n     const closeModal= (modalname) =>{\r\n        // 모달일때 모달종류에 따라 닫아줌\r\n          if(modalname===\"ReservationUpdateModal\"){\r\n            setReservationUpdateModalshow(false)\r\n          }else if(modalname===\"TestSelectorModal\"){\r\n            setTestSelectorModalshow(false)\r\n          }else if(modalname===\"DoctorSelectorModal\"){\r\n                setDoctorSelectorModalshow(false)\r\n          }\r\n        }\r\n    //예약정보가져옴\r\n    useEffect(()=>{\r\n      GetReservationList().then((result)=>{\r\n        setReservationList(result.data)\r\n       });\r\n    },[])\r\n    //리듀서로 가져온 예약정보를 ui에 추가해줌 + 예약날짜순 정렬\r\n    useEffect(()=>{\r\n        if(reservationReducer.reservation.reservationid){\r\n            const newreservationlist = reservationList.concat(reservationReducer.reservation)         \r\n            newreservationlist.sort((r1,r2)=>{\r\n                return Number(new Date(r1.reservationdate)) - Number(new Date(r2.reservationdate))\r\n            }) \r\n            setReservationList(newreservationlist)\r\n        }\r\n       \r\n    },[reservationReducer])\r\n\r\n    //로딩 스피너 끄고 키는 함수\r\n  const ControlLoading=(bool)=>{\r\n    setLoading(bool)\r\n  }\r\n\r\n    //자식인 예약수정 컴포넌트에 넘길 예약수정함수(부모의 예약 리스트를 바꿔야하기에 부모컴포넌트에서 수행해줌) \r\nconst UpdateReservation=(newreservation)=>{\r\n    if(selectedReservation){\r\n        //UI에서 해당 예약을 새로운 예약으로 교체\r\n        const index = reservationList.findIndex((item)=>(item.reservationid===selectedReservation.reservationid))\r\n        let tmplist = [...reservationList]\r\n        if(index>=0){\r\n            tmplist.splice(index,1,newreservation);\r\n        }\r\n        tmplist.sort((r1,r2)=>{\r\n            return Number(new Date(r1.reservationdate)) - Number(new Date(r2.reservationdate))\r\n        }) \r\n        setReservationList(tmplist)\r\n    }\r\n    \r\n}\r\n\r\n//예약 취소\r\nconst CancelReservation=()=>{\r\n    if(selectedReservation){\r\n        //DB변경\r\n        RemoveReservation(selectedReservation.reservationid).then((result)=>{\r\n            //ui변경\r\n            const index = reservationList.findIndex((item)=>(item.reservationid===selectedReservation.reservationid))\r\n            let tmplist = [...reservationList]\r\n            if(index>=0){\r\n                tmplist.splice(index,1);\r\n            }\r\n            tmplist.sort((r1,r2)=>{\r\n                return Number(new Date(r1.reservationdate)) - Number(new Date(r2.reservationdate))\r\n            }) \r\n            setReservationList(tmplist)\r\n        })\r\n            \r\n        \r\n    }\r\n    \r\n\r\n}\r\n\r\n    //검사접수하기\r\n    const ResisterTest = () =>{\r\n      //모달창 open\r\n      setTestSelectorModalshow(true)\r\n        \r\n    }\r\n\r\n  //진료접수시 상태변경함수\r\n  // const modifyReservationList = () =>{\r\n  //   const modify = reservationList.map((item)=>{\r\n        \r\n  //     if(item.reservationid===selectedReservation.reservationid){\r\n  //         item.status=\"접수완료\"\r\n  //     }\r\n  //     return item;      \r\n      \r\n  //   })\r\n  //   //상태변경된 예약 수정\r\n  //   setReservationList(modify)\r\n  // }\r\n    //진료접수하기\r\n    const ResisterTreatment = () =>{\r\n             //모달창 open\r\n             setDoctorSelectorModalshow(true)\r\n    }\r\n\r\n\r\n    return(\r\n    <div className=\"pl-3 pr-3 pb-3 border border-dark\" style={{height:\"50vh\", backgroundColor:\"white\"}}>\r\n        <ReceptionHeader headertitle=\"예약\" iclassName=\"bi bi-calendar-event \" color=\"#ffcd82\">\r\n            <button style={{margin:\"0px 10px\"}} disabled={!(selectedReservation)}onClick={()=>{setReservationUpdateModalshow(true)}} className=\"btn btn-outline-dark btn-sm\">예약수정</button>\r\n            <button style={{margin:\"0px 10px\"}} disabled={!(selectedReservation&&selectedReservation.type===\"검사\" &&selectedReservation.status===\"대기\" )} onClick={ResisterTest} className=\"btn btn-outline-dark btn-sm\">검사접수</button>\r\n            <button style={{margin:\"0px 10px\"}} disabled={!(selectedReservation&&selectedReservation.type===\"진료\"&&selectedReservation.status===\"대기\" )} onClick={ResisterTreatment} className=\"btn btn-outline-dark btn-sm\">진료접수</button>\r\n            <button style={{margin:\"0px 10px\"}} disabled={!(selectedReservation)}onClick={CancelReservation} className=\"btn btn-outline-dark btn-sm\">예약취소</button>\r\n        </ReceptionHeader>\r\n        <Calendar setSelectDate = {(date)=>{setSelectDate(date)}}/>\r\n        <div className=\"rounded-lg justify-content-center\">\r\n            <div className=\"d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\",marginTop:\"10px\",marginBottom:\"10px\"}}>\r\n                <div style={{width:\"20%\"}}>순번</div>\r\n                <div style={{width:\"20%\"}}>환자ID</div>\r\n                <div style={{width:\"20%\"}}>이름</div>\r\n                <div style={{width:\"20%\"}}>예약타입</div>\r\n                <div style={{width:\"20%\"}}>예약시간</div>\r\n            </div>\r\n            <div className=\"overflow-auto  justify-content-center\" style={{height:\"calc(50vh - 230px)\"}} >\r\n                 {reservationList&&reservationList.map((item,index)=>{\r\n                     \r\n                     \r\n                     let rdate = new Date(item.reservationdate).toLocaleDateString() \r\n                     const item2 = {...item, reservationuidate:moment(item.reservationdate).format(\"HH:mm\")}\r\n                     if(rdate===selectDate){\r\n                        return(\r\n                            <div key={index}>\r\n                                    <Item onClick={click} item ={item2} property={property} order={index}/>\r\n                            </div>                         \r\n                            )\r\n                        }\r\n                     })} \r\n            </div>\r\n        </div>\r\n        <Modal backdrop=\"static\" size=\"lg\" show={reservationUpdateModalshow}  onHide={()=>{setReservationUpdateModalshow(false)}}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>예약수정</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><ReservationUpdateModal closeModal={closeModal} selectedReservation={selectedReservation} UpdateReservation={UpdateReservation}/></Modal.Body>\r\n        </Modal>\r\n        <Modal  backdrop=\"static\" show={testSelectorModalshow} onHide={()=>{setTestSelectorModalshow(false)}}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>검사선택</Modal.Title>\r\n          {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n        </Modal.Header>\r\n        <Modal.Body><TestSelectorModal CancelReservation={CancelReservation} controlLoading={ControlLoading} closeModal={closeModal} selectedPatient={selectedReservation}/></Modal.Body>\r\n      </Modal>\r\n        <Modal  backdrop=\"static\" show={doctorSelectorModalshow} onHide={()=>{setDoctorSelectorModalshow(false)}}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>의사선택</Modal.Title>\r\n          {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n        </Modal.Header>\r\n        <Modal.Body><DoctorSelectorModal CancelReservation={CancelReservation} controlLoading={ControlLoading} closeModal={closeModal} selectedPatient={selectedReservation}/></Modal.Body>\r\n      </Modal>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Reservation;","import { useEffect, useState } from \"react\";\r\nimport Item from \"views/components/Item\";\r\nimport {GetPatientList} from \"apis/Reception\"\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nfunction SearchPatientModal(props){\r\n    const property = [\"patientid\",\"patientname\",\"ssn1\",\"lasttreatment\",\"registerday\"]\r\n    const selectname = [\"ID\",\"이름\",\"생년월일\",\"최종진료일\",\"등록일\"]\r\n    const [keyword, setKeyword] = useState(\"\");\r\n    const [select, setSelect] = useState(property[0]);\r\n    //원본 list\r\n    const [patientList,setPatientList] = useState([]);\r\n    let focusItem;\r\n    //처음 컴포넌트 시작시 목록 불러옴\r\n    useEffect(()=>{\r\n        //스피너 on\r\n        props.controlLoading(true);\r\n        //DB 불러옴\r\n        GetPatientList().then((result)=>{\r\n            //DB불러온거 상태저장\r\n            setPatientList(result.data)\r\n            //스피너 off\r\n            props.controlLoading(false);\r\n        })\r\n        //모달 닫을때 호출\r\n        return(()=>{\r\n        })\r\n},[])\r\n\r\n    // keyword 적을때 불리는 함수\r\n    const ChangeKeyword = (event) =>{\r\n        setKeyword(event.target.value)\r\n    }\r\n    // Select 바꿀때 불리는 함수\r\n    const ChangeSelect = (event)=>{\r\n        setSelect(event.target.value);\r\n    }\r\n    // 선택 버튼 누를떄 불리는 함수\r\n    const SelectPatient = () =>{\r\n        //선택된 환자상태에 저장\r\n       props.setSelectedPatient(focusItem)\r\n       //모달 닫기\r\n       props.closeModal(\"SearchPatientModal\")\r\n       \r\n    }\r\n    // 환자 div 포커스 선택\r\n    const click = (item) =>{\r\n        focusItem = item; \r\n    }\r\n    return(\r\n    <div className=\"conatainer\" style={{height:\"400px\"}}>\r\n          \r\n        <div className=\"d-flex justify-content-between\">\r\n            <div >\r\n                <label style={{marginRight:\"10px\"}}>검색</label>\r\n                <select onChange={ChangeSelect} style={{marginRight:\"10px\"}}>\r\n                    {property.map((item,index)=>{return(\r\n                        <option key={index} value={item}>{selectname[index]}</option>\r\n                    )\r\n                    })}\r\n                </select>\r\n                <input style={{marginRight:\"10px\"}} onChange={ChangeKeyword} value={keyword} />\r\n              </div>\r\n\r\n            <div >\r\n                  <button className=\"btn btn-outline-dark btn-sm\" onClick={SelectPatient}>선택</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"rounded-lg justify-content-center\">\r\n            <div className=\"d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\",marginTop:\"10px\",marginBottom:\"10px\"}}>\r\n                <div style={{width:\"20%\"}}>순번</div>\r\n                <div style={{width:\"20%\"}}>ID</div>\r\n                <div style={{width:\"20%\"}}>이름</div>\r\n                <div style={{width:\"20%\"}}>생년월일</div>\r\n                <div style={{width:\"20%\"}}>최종진료일</div>\r\n                <div style={{width:\"20%\"}}>등록일</div>\r\n            </div>\r\n            \r\n            <div className=\" justify-content-center\" style={{height:\"300px\"}} >\r\n            {/* Autosize최적화 */}\r\n            <AutoSizer disableHeight>\r\n            {({width, height}) => {\r\n                \r\n                let tmp = patientList.filter((item)=>{\r\n                    if(item[select]!=null){\r\n                        return item[select].toString().indexOf(keyword)!=-1    \r\n                    }else{\r\n                        var empty=\"\"\r\n                        return empty.indexOf(keyword)!=-1\r\n                    }\r\n                    \r\n                })\r\n                return(\r\n                <List width={width} height={300}\r\n                        list={tmp}\r\n                        rowCount={tmp.length}\r\n                        rowHeight={50}\r\n                        rowRenderer={({index, key, style}) => {\r\n                            return (\r\n                                <div key={key} style={style}>\r\n                                <Item onClick={click} item ={tmp[index]} property={property} order={index}/>\r\n                                </div>   \r\n                            );\r\n                            }}\r\n                        overscanRowCount={5}/>\r\n                )\r\n            }}\r\n            </AutoSizer>\r\n\r\n\r\n                   {/* {patientList.map((item,index)=>{\r\n                     if(item[select].toString().indexOf(keyword)!=-1){\r\n                        return(\r\n                            <div key={index}>\r\n                                    <Item onClick={click} item ={item} property={property} order={index}/>\r\n                            </div>                         \r\n                            )    \r\n                     }\r\n                         \r\n                     })}   */}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SearchPatientModal;","import { RegisterPatient } from \"apis/Reception\";\r\nimport { useForm } from \"react-hook-form\";\r\nfunction RegisterPatientModal(props){\r\n    const { register, handleSubmit,  errors } = useForm();\r\n  \r\n    const onSubmit=(patient)=>{\r\n        //상태가 아닌 고정값 지정\r\n        patient[\"registerday\"] = new Date()\r\n        patient[\"codenumber\"]=1\r\n        patient[\"enabled\"]=1\r\n        //DB에 저장\r\n       RegisterPatient(patient).then((result)=>{\r\n        patient[\"patientid\"] = result.data\r\n        patient[\"lasttreatment\"] = \"-\"\r\n        patient[\"registerday\"] = patient[\"registerday\"].toLocaleDateString()\r\n        // 해당 상태 부모로 빼고 모달 닫기\r\n        props.setSelectedPatient(patient)\r\n        props.closeModal(\"RegisterPatientModal\")\r\n        })\r\n       \r\n    }\r\n\r\n    return(\r\n        <>\r\n      <div>\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"mb-2\">\r\n        <label>이름 : </label>\r\n        <input className=\"ml-2\" name=\"patientname\" ref={register({ required: true })} />\r\n        {errors.patientname && <div style={{color:\"red\"}}>이름을 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>성별 : </label>\r\n      <select className=\"ml-2\" name=\"sex\" ref={register({ required: true })}>\r\n        <option value=\"남자\">남자</option>\r\n        <option value=\"여자\">여자</option>\r\n      </select>\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>나이 : </label>\r\n      <input className=\"ml-2\" name=\"age\" type=\"number\" ref={register({ required: true })} />\r\n      {errors.age && <div style={{color:\"red\"}}>나이를 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>주민등록번호 : </label>\r\n <br/>\r\n      <input className=\"mr-2\" name=\"ssn1\" type=\"number\" ref={register({required: true, pattern: /[0-9]{6}/})} />\r\n\r\n  \r\n      -\r\n   \r\n      <input className=\"ml-2\" name=\"ssn2\" type=\"number\" ref={register({required: true, pattern: /[0-9]{7}/})} />\r\n      {(errors.ssn2?.type === \"required\" || errors.ssn1?.type === \"required\")  && <div style={{color:\"red\"}}>주민번호를 입력해 주세요</div>}\r\n      {(errors.ssn2?.type === \"pattern\" ||errors.ssn1?.type === \"pattern\")  && <div style={{color:\"red\"}}>주민번호 13자리를 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>핸드폰번호 : </label>\r\n      <input className=\"ml-2\" name=\"phonenumber\" type=\"number\" ref={register({ required: true })} />\r\n      {errors.phonenumber && <div style={{color:\"red\"}}>핸드폰 번호를 입력해 주세요</div>}\r\n      </div>\r\n\r\n      \r\n\r\n\r\n      <div className=\"d-flex justify-content-end\">\r\n      <input  type=\"submit\" />\r\n      </div>\r\n\r\n    </form>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterPatientModal;","import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {UpdatePatient} from \"apis/Reception\"\r\nfunction RegisterPatientModal(props){\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n  \r\n    const onSubmit=(patient)=>{\r\n        patient[\"patientid\"] = props.selectedPatient.patientid\r\n        patient[\"lasttreatment\"] = props.selectedPatient.lasttreatment===\"-\"?null:props.selectedPatient.lasttreatment\r\n        //등록일은 수정한 날짜로 갱신\r\n        patient[\"registerday\"] = new Date()\r\n\r\n        //DB에 저장\r\n        UpdatePatient(patient).then((result)=>{\r\n          patient[\"registerday\"] =  patient[\"registerday\"].toLocaleDateString()\r\n          // 해당 상태 부모로 빼고 모달 닫기\r\n          props.setSelectedPatient(patient)\r\n          props.closeModal(\"UpdatePatientModal\")        \r\n        })\r\n       \r\n    }\r\n\r\n    return(\r\n        <>\r\n      <div>\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"mb-2\">\r\n        <label>이름 : </label>\r\n        <input className=\"ml-2\" name=\"patientname\" defaultValue={props.selectedPatient.patientname} ref={register({ required: true })} />\r\n        {errors.patientname && <div style={{color:\"red\"}}>이름을 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>성별 : </label>\r\n      <select className=\"ml-2\" name=\"sex\" ref={register({ required: true })} defaultValue={props.selectedPatient.sex}>\r\n        <option  value=\"남자\">남자</option>\r\n        <option value=\"여자\">여자</option>\r\n      </select>\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>나이 : </label>\r\n      <input className=\"ml-2\" name=\"age\" type=\"number\" defaultValue={props.selectedPatient.age} ref={register({ required: true })} />\r\n      {errors.age && <div style={{color:\"red\"}}>나이를 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>주민등록번호 : </label>\r\n <br/>\r\n      <input className=\"mr-2\" name=\"ssn1\" type=\"number\" defaultValue={props.selectedPatient.ssn1}  ref={register({required: true, pattern: /[0-9]{6}/})} />\r\n\r\n  \r\n      -\r\n   \r\n      <input className=\"ml-2\" name=\"ssn2\" type=\"number\" defaultValue={props.selectedPatient.ssn2} ref={register({required: true, pattern: /[0-9]{7}/})} />\r\n      {(errors.ssn2?.type === \"required\" || errors.ssn1?.type === \"required\")  && <div style={{color:\"red\"}}>주민번호를 입력해 주세요</div>}\r\n      {(errors.ssn2?.type === \"pattern\" ||errors.ssn1?.type === \"pattern\")  && <div style={{color:\"red\"}}>주민번호 13자리를 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>핸드폰번호 : </label>\r\n      <input className=\"ml-2\" name=\"phonenumber\" type=\"number\" defaultValue={props.selectedPatient.phonenumber} ref={register({ required: true })} />\r\n      {errors.phonenumber && <div style={{color:\"red\"}}>핸드폰 번호를 입력해 주세요</div>}\r\n      </div>\r\n      <div className=\"d-flex justify-content-end\">\r\n      <input  type=\"submit\" />\r\n      </div>\r\n    </form>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterPatientModal;","const initialState = {\r\n  reservation: {}\r\n}\r\n//액션 타입 선언\r\nconst SET_RESERVATION=\"reservation/setReservation\";\r\n\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetReservation = (reservation) => {\r\n  return {type:SET_RESERVATION, reservation};\r\n} \r\n\r\n//리듀스 선언\r\nconst reservationReducer = (state = initialState, action) => {\r\n  if(action.type === SET_RESERVATION) {\r\n    return {...state, reservation:action.reservation};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\n\r\nexport default reservationReducer;","import { useEffect, useState } from \"react\";\r\nimport ReactDatePicker, {} from \"react-datepicker\";\r\nimport \"./datepickerReservation.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createSetReservation } from \"redux/reservation-reducer\";\r\nimport { RegisterReservation } from \"apis/Reception\";\r\n\r\nfunction RegisterReservationModal(props){\r\n    // //예약 리스트\r\n    // const [reservationList, setReservationList] = useState([]);\r\n    //선택된 날짜 상태\r\n    const [startDate, setStartDate] = useState(new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate(),9,0))\r\n\r\n    // //예약된 시간상태\r\n    // const [reservatedTimes,setReservatedTimes] = useState([]); \r\n\r\n    //진료인지 날짜인지 예약 타입상태 -> true이면 진료, false이면 예약\r\n    const [reservationType, setReservationType] = useState(true)\r\n    //예약상태 결정하는 함수\r\n    const handleReservation = (type) =>{\r\n        setReservationType(type)\r\n    }\r\n    const dispatch = useDispatch();\r\n    ////선택된 검사리스트 (초기값으로 DB에서 불러온 처방검사리스트 들어감)\r\n    // const [testList,setTestList] = useState([]);\r\n    // //처방된 검사 선택\r\n    // const handleTestList = (event, index) =>{\r\n    //     const modify = testList.map((item,i)=>{\r\n    //         if(i===index){\r\n    //             item.ischeck = event.target.checked\r\n    //         }\r\n    //         return item;\r\n    //     })\r\n    //     setTestList(modify);\r\n    // }\r\n\r\n    //날짜를 넣으면 인데스 나옴\r\n    // const GetTimeIndex=(date)=>{\r\n    //     let hour = date.getHours()*10\r\n    //     let minute = date.getMinutes()\r\n    //     if(minute===0){\r\n    //         minute = 0;\r\n    //     }else if(minute===30){\r\n    //         minute = 5;\r\n    //     }\r\n    //     const Index = (hour+minute)/5-18\r\n    //     return Index\r\n    // }\r\n    //인덱스를 넣으면 날짜가 나오는 함수\r\n    // const GetTime=(Index)=>{\r\n    //     let num = (Index+18)*5\r\n    //     let hour = num/10\r\n    //     let minute = num%10===5?30:0\r\n    //     const date = new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate(),hour,minute)\r\n    //     return date;\r\n    // }\r\n    useEffect(()=>{\r\n        //예약정보불러오기\r\n        // var reservationlist = getAllReservationsData();\r\n        // setReservationList(reservationlist)\r\n        // var testlist = getAllTestsGroupData(props.selectedPatient.patientid);\r\n        // setTestList(testlist);\r\n         \r\n       //첫번째로 가능한 예약시간을 구하기위해 datepicker의 Time테이블 형식(30분단위)에 맞춰서 해당 날짜의 1차원배열구성\r\n        // let Times=new Array(18);\r\n        //     Times[GetTimeIndex(new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),13,0))] = true;\r\n        //     Times[GetTimeIndex(new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),13,30))] = true;\r\n        //     for(var i=0; i<reservationlist.length; i++){\r\n        //         if(reservationlist[i].reservationdate){\r\n        //             Times[GetTimeIndex(reservationlist[i].reservationdate)] = true;\r\n        //         }\r\n        //     }\r\n         \r\n        \r\n\r\n         //첫번째 들어갈 시간 구하기\r\n        //  for(var i=0; i<Times.length; i++){\r\n        //      if(!Times[i]){\r\n        //          setStartDate(GetTime(i))\r\n        //          break;\r\n        //      }\r\n        //      //만약 모든 시간이 차있으면 예외처리\r\n        //      if(i===Times.length-1){\r\n                \r\n        //      }\r\n        //  }\r\n\r\n          //예약된 정보를  일,시간,분 3차원배열구성\r\n        //  let excludeTime = new Array(12)\r\n        //  for(var i=0; i<12; i++){\r\n        //      var lastday = new Date(new Date().getFullYear(),i+1,0).getDate();\r\n        //     excludeTime[i] = new Array(lastday)\r\n        //     for(var j=0; j<lastday; j++){\r\n        //         excludeTime[i][j] = new Array();\r\n        //     }\r\n        //  }\r\n        \r\n        //     for(var i=0; i<reservationlist.length; i++){\r\n        //         var month = reservationlist[i].reservationdate.getMonth()+1\r\n        //         var day = reservationlist[i].reservationdate.getDate()\r\n        //         excludeTime[month-1][day-1].push(reservationlist[i].reservationdate)\r\n        //         console.log(month + \",\"+day+\",\"+reservationlist[i].reservationdate)\r\n        //      }\r\n         \r\n         \r\n        // console.log(excludeTime)\r\n        // setReservatedTimes(excludeTime)  \r\n      \r\n      \r\n    },[])\r\n\r\n    //선택된 날짜~ +30분 가져오기\r\n    const getReservationDate= () =>{\r\n        var newDateOptions = {\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour:\"2-digit\",\r\n            minute:\"2-digit\"\r\n        }\r\n        const origin = startDate.toLocaleString(\"ko-kr\",newDateOptions);\r\n        let date = new Date(startDate);\r\n        date.setMinutes(date.getMinutes()+30)\r\n        if(startDate.getTime()){\r\n            \r\n            return origin+\" ~ \"+date.toLocaleString(\"ko-kr\",newDateOptions)\r\n        }else{\r\n            return \"시간을 선택해 주세요\"\r\n        }\r\n       \r\n    }\r\n    \r\n    //예약 등록함수\r\n    const ResisterReservation=()=>{\r\n        //let newreservation;\r\n            //DB에 해당 patient, startDate로 해당 시간에 진료예약\r\n            RegisterReservation({reservationdate:startDate.getTime(),patientid:props.selectedPatient.patientid,patientname:props.selectedPatient.patientname,status:\"대기\",type:reservationType?\"진료\":\"검사\" }).then((result)=>{\r\n                //redux 저장\r\n                dispatch(createSetReservation(result.data))\r\n                //모달 닫기\r\n                props.closeModal(\"RegisterReservationModal\")\r\n            })\r\n    }\r\n    return(\r\n        <div className=\"conatainer\" style={{height:\"60vh\"}}>\r\n            <div style={{height:\"15%\"}}>\r\n               <div className=\"row d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\"}}>\r\n                    <div style={{width:\"10%\"}}>ID</div>\r\n                    <div style={{width:\"10%\"}}>이름</div>\r\n                    <div style={{width:\"10%\"}}>성별</div>\r\n                    <div style={{width:\"10%\"}}>나이</div>\r\n                    <div style={{width:\"35%\"}}>주민번호</div>\r\n                    <div style={{width:\"25%\"}}>Phone</div>\r\n                </div>\r\n                \r\n                <div className=\"row d-flex justify-content-between text-center  \" style={{borderRadius:\"15px\"}}>\r\n                  \r\n                    <div style={{width:\"10%\"}}>{props.selectedPatient.patientid}</div>\r\n                    <div style={{width:\"10%\"}}>{props.selectedPatient.patientname}</div>\r\n                    <div style={{width:\"10%\"}}>{props.selectedPatient.sex}</div>\r\n                    <div style={{width:\"10%\"}}>{props.selectedPatient.age}</div>\r\n                    <div style={{width:\"35%\"}}>{props.selectedPatient.ssn1 + \" - \" + props.selectedPatient.ssn2}</div>\r\n                    <div style={{width:\"25%\"}}>{props.selectedPatient.phonenumber}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\" style={{height:\"80%\"}}>\r\n                <div className=\"col-6 text-center\" style={{margin:\"10px\",marginTop:\"5%\", height:\"100%\"}} >\r\n                    <ReactDatePicker \r\n                    selected={startDate}\r\n                    onChange={(date) => setStartDate(date)}\r\n                    showTimeSelect\r\n                    timeFormat=\"HH:mm\"\r\n                    popperPlacement=\"bottom\" \r\n                    minDate={new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate())}\r\n                    minTime={new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),9,0)}\r\n                    maxTime={new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),17,30)}\r\n                    // excludeTimes={reservatedTimes.length>1&&reservatedTimes[startDate.getMonth()][startDate.getDate()-1]}\r\n                    inline\r\n                    dateFormat=\"yyyy-MM-dd hh:mm\"\r\n                    />\r\n                    <div className=\"border text-center\" style={{borderRadius:\"15px\"}}> \r\n                        예약날짜<br/>{getReservationDate()}\r\n                   </div>\r\n                </div>                \r\n                <div className=\"col-5 \" style={{margin:\"10px\", height:\"80%\", padding:\"0px\" ,marginTop:\"5%\"  }}>\r\n                    <button onClick={()=>{handleReservation(true)}} style={{backgroundColor:reservationType? \"#ffcd82\":\"white\",border:\"2px solid #ffcd82\",borderRadius:\"15px\",width:\"47%\",height:\"70%\", fontSize:\"2em\"}} className=\"  mr-1 \">진료</button>\r\n                        \r\n                        \r\n                    <button onClick={()=>{handleReservation(false)}}  style={{backgroundColor:!reservationType? \"#ffcd82\":\"white\",border:\"2px solid #ffcd82\",borderRadius:\"15px\",width:\"47%\",height:\"70%\", fontSize:\"2em\"}} className=\" \">검사</button>\r\n\r\n                        {/* {!reservationType&&\r\n                            testList&&testList.map((item,index)=>{return(\r\n                                <div key={index}>\r\n                                <input type=\"checkbox\" onChange={(e)=>{handleTestList(e,index)}} value={testList[index].ischeck}/>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.groupcode}</label>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.groupname}</label>\r\n                                </div>\r\n                            )})\r\n                        } */}\r\n                   \r\n                    <button className=\"btn btn-outline-dark btn-sm\" style={{borderRadius:\"15px\",  marginTop:\"10px\", width:\"100%\", fontSize:\"1.5em\"}} /*disabled={reservationType===false&&(testList==null || (testList.filter((item)=>(item.ischeck===true)).length<1)) }*/  onClick={ResisterReservation}>예약등록</button>\r\n                   \r\n                </div>\r\n\r\n            </div>\r\n       \r\n\r\n                      \r\n        </div>\r\n\r\n        )\r\n    }\r\n\r\nexport default RegisterReservationModal;","function PatientProfile(props) {\r\n\r\n    \r\n  return (\r\n    <>\r\n      <div className=\"\" style={{height:\"calc(35vh - 50px)\"}}>\r\n        <div className=\"d-flex ml-0 mr-0\" style={{height:\"25%\", minWidth:\"200px\"}}>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>이름</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.patientname}</div>\r\n          </div>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>나이</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.age}세</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex flex-column justify-content-center\" style={{height:\"25%\"}}>\r\n          <div className=\"mt-2 mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\", paddingLeft:\"15px\"}}><span>주민등록 번호</span></div>\r\n          <div className=\"ml-0 mr-0 row\">\r\n            <div className=\"col \">\r\n              <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.ssn1}</div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center\">-</div>\r\n            <div className=\"col\">\r\n              <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.ssn2}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row ml-0 mr-0\" style={{height:\"25%\"}}>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mt-2 mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>성별</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.sex}</div>\r\n          </div>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mt-2 mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>전화번호</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.phonenumber}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row ml-0 mr-0\" style={{height:\"25%\"}}>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mt-2 mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>등록일</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.registerday}</div>\r\n          </div>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mt-2 mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>최종진료일</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.lasttreatment}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  } \r\n  \r\n  export default PatientProfile;","import { GetTreatmentListBypatientid,GetTreatmentDetail } from \"apis/Reception\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport Item from \"views/components/Item\";\r\nfunction PatientHistory(props) {\r\n  const[selectedTreatment, setSelectedTreatment] = useState();\r\n  const[treatmentData, setTreatmentData] = useState([])\r\n  const[testData, setTestData] = useState([])\r\n  const[drugsData, setDrugsData] = useState([])\r\n  const[diagnosesData, setDiagnosesData] = useState([])\r\n  const [loading,setLoading] = useState(false);\r\n  \r\n  const treatmentReception = useSelector((state)=>(state.receptionReducer.treatmentreception)) \r\n  useEffect(()=>{\r\n    if(props.selectedPatient.patientid ){\r\n        setLoading(true)\r\n        //히스토리 상세기록 초기화해주기\r\n        setSelectedTreatment(null)\r\n        //해당 환자의 진료기록 불러오기\r\n        GetTreatmentListBypatientid(props.selectedPatient.patientid).then((result)=>{\r\n         //userlist도 불러와서 userid에 맞는 username 가져옴\r\n          const userlist = result.data.userlist;\r\n         const treatmentlist = result.data.treatmentlist\r\n         const data = treatmentlist.map((item,index)=>\r\n         {return {...item,patientname:props.selectedPatient.patientname,username:userlist[index].username}})\r\n          setTreatmentData(data)\r\n          setLoading(false)\r\n        })\r\n        \r\n    }\r\n  },[props.selectedPatient])\r\n  useEffect(()=>{\r\n    if(treatmentReception.patientid === props.selectedPatient.patientid ){\r\n        setLoading(true)\r\n        //히스토리 상세기록 초기화해주기\r\n        setSelectedTreatment(null)\r\n        //해당 환자의 진료기록 불러오기\r\n        GetTreatmentListBypatientid(props.selectedPatient.patientid).then((result)=>{\r\n         //userlist도 불러와서 userid에 맞는 username 가져옴\r\n          const userlist = result.data.userlist;\r\n         const treatmentlist = result.data.treatmentlist\r\n         const data = treatmentlist.map((item,index)=>\r\n         {return {...item,patientname:props.selectedPatient.patientname,username:userlist[index].username}})\r\n          setTreatmentData(data)\r\n          setLoading(false)\r\n        })\r\n        \r\n    }\r\n  },[treatmentReception])\r\n  useEffect(()=>{\r\n    if(selectedTreatment){\r\n      setLoading(true)\r\n      GetTreatmentDetail(selectedTreatment.treatmentid).then((result)=>{\r\n        //데이터 배열의 첫번째가 진단, 두번째가 약, 세번째가 테스트 그룹임\r\n        setDiagnosesData(result.data.treatmentdetail[0])\r\n        setDrugsData(result.data.treatmentdetail[1]);\r\n        setTestData(result.data.treatmentdetail[2]);\r\n        setLoading(false)\r\n      })\r\n    }\r\n    \r\n  },[selectedTreatment])\r\n  const click =useCallback( (focusItem) =>{\r\n    setSelectedTreatment(focusItem);\r\n  },[])\r\n\r\n    const treatmentProperty = [\"treatmentid\",\"patientname\",\"username\",\"status\",\"treatmentdate\"]  \r\n  return (\r\n    <>\r\n      <div className=\"p-2 pt-3\" style={{height:\"60vh\"}}>\r\n        <div style={{fontSize:\"20px\", fontWeight:\"bold\", borderBottom:\"1px solid\"}}><label style={{height:\"100%\"}}>환자 히스토리</label> {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}</div>\r\n        <div className=\"mt-3 p-1\">\r\n          <div className=\"rounded-lg justify-content-center\">\r\n            <div className=\"d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\",marginTop:\"10px\",marginBottom:\"10px\"}}>\r\n                <div style={{width:\"20%\"}}>순번</div>\r\n                <div style={{width:\"20%\"}}>진료ID</div>\r\n                <div style={{width:\"20%\"}}>환자</div>\r\n                <div style={{width:\"20%\"}}>진료자</div>\r\n                <div style={{width:\"20%\"}}>접수상태</div>\r\n                <div style={{width:\"20%\"}}>접수시간</div>\r\n            </div>\r\n            <div className=\"  justify-content-center\" style={{height:\"calc(25vh - 70px)\"}} >\r\n            {/* Autosize최적화 */}\r\n            <AutoSizer disableHeight>\r\n                        {({width, height}) => {\r\n                            return(\r\n                            \r\n                            <List width={width} height={Math.round(window.innerHeight / (100 / 25))-70}\r\n                                    list={treatmentData}\r\n                                    rowCount={treatmentData.length}\r\n                                    rowHeight={50}\r\n                                    rowRenderer={({index, key, style}) => {\r\n                                      return (\r\n                                          <div key={key} style={style}>\r\n                                          <Item onClick={click} item ={treatmentData[index]} property={treatmentProperty} order={index}/>\r\n                                          </div>   \r\n                                      );\r\n                                      }}\r\n                                    overscanRowCount={5}/>\r\n                            )\r\n                        }}\r\n              </AutoSizer>\r\n\r\n\r\n\r\n                  {/* {treatmentData.map((item,index)=>{\r\n                    if(item.patientid===props.selectedPatient.patientid){\r\n                      return(\r\n                        <div key={index}>\r\n                                <Item onClick={click} item ={item} property={treatmentProperty} order={index}/>\r\n                        </div>                         \r\n                        )\r\n                    }\r\n                        \r\n                  })}   */}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex border mt-4\" style={{height:\"calc(35vh - 65px)\"}}>\r\n           <div className=\"col-4\">\r\n           진단기록\r\n           <div className=\"overflow-auto  justify-content-center border\" style={{height:\"calc(35vh - 100px)\"}} >\r\n          \r\n                {selectedTreatment&&diagnosesData&&diagnosesData.map((item,index)=>{\r\n                      return(\r\n                          <div className=\"row m-0 border-bottom text-center\" key={index} style={{fontSize:\"0.8em\"}}>\r\n                            <div className=\"col-3 p-0 border-right\">\r\n                            {item.diagnosesdataid}\r\n                            </div>\r\n                            <div className=\"col-9 p-0\">\r\n                            {item.diagnosesdataname}\r\n                            </div>\r\n                           \r\n                          </div>                         \r\n                          )\r\n                      })}  \r\n          </div>\r\n          </div>\r\n           <div className=\"col-4\">\r\n            처방검사\r\n           <div className=\"overflow-auto  justify-content-center border\" style={{height:\"calc(35vh - 100px)\"}} >\r\n                {selectedTreatment&&testData&&testData.map((item,index)=>{\r\n                    return(\r\n                      <div className=\"row m-0 border-bottom text-center\" key={index} style={{fontSize:\"0.8em\"}}>\r\n                      <div className=\"col-3 p-0 border-right\">\r\n                      {item.testdataid}\r\n                      </div>\r\n                      <div className=\"col-9 p-0\">\r\n                      {item.testdataname}\r\n                      </div>\r\n                     \r\n                    </div>                             \r\n                      )\r\n                })}  \r\n          </div>\r\n          </div>\r\n           <div className=\"col-4\">\r\n             처방약\r\n           <div className=\"overflow-auto  justify-content-center border\" style={{height:\"calc(35vh - 100px)\"}} >\r\n                \r\n                {selectedTreatment&&drugsData&&drugsData.map((item,index)=>{\r\n                      return(\r\n                        <div className=\"row m-0 border-bottom text-center\" key={index} style={{fontSize:\"0.8em\"}}>\r\n                          <div className=\"col-3 p-0 border-right\">\r\n                          {item.drugid}\r\n                          </div>\r\n                          <div className=\"col-9 p-0\">\r\n                          {item.drugname}\r\n                          </div>\r\n                         \r\n                        </div>                         \r\n                        )\r\n                      })}  \r\n          </div>\r\n           </div>\r\n\r\n        </div>\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  } \r\n  \r\n  export default PatientHistory;","import { Modal, Spinner } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SearchPatientModal from \"./SearchPatientModal\";\r\nimport TestSelectorModal from \"./TestSelectorModal\";\r\nimport RegisterPatientModal from \"./RegisterPatientModal\";\r\nimport UpdatePatientModal from \"./UpdatePatientModal\";\r\nimport RegisterReservationModal from \"./RegisterReservationModal\";\r\nimport PatientProfile from \"./PatientProfile\";\r\nimport ReceptionHeader from \"../components/ReceptionHeader\";\r\nimport PatientHistory from \"./PatientHistory\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport DoctorSelectorModal from \"./DoctorSelectorModal\";\r\nfunction SearchPatient(props){\r\n    const [searchModalshow, setSearchModalshow] = useState(false);\r\n    const [reservationRegisterhModalshow, setreservationRegisterhModalshow] = useState(false);\r\n    const [patientRegisterhModalshow, setPatientRegisterhModalshow] = useState(false);\r\n    const [patientUpdateModalshow, setPatientUpdateModalshow] = useState(false);\r\n    const [testSelectorModalshow, setTestSelectorModalshow] = useState(false);\r\n    const [doctorSelectorModalshow, setDoctorSelectorModalshow] = useState(false);\r\n    const [loading,setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    // 모달창에서 선택된 환자 상태\r\n    const [selectedPatient, setSelectedPatient] = useState({\r\n      patientname:\"-\", \r\n      ssn1:\"-\", \r\n      ssn2:\"-\", \r\n      sex: \"-\",\r\n      age:\"-\",\r\n      phonenumber: \"-\", \r\n      lasttreatment:\"-\",\r\n      registerday:\"-\"\r\n    });\r\n    //모달창 닫는 함수\r\n    const closeModal= (modalname) =>{\r\n    // 모달일때 모달종류에 따라 닫아줌\r\n      if(modalname===\"RegisterPatientModal\"){\r\n        setPatientRegisterhModalshow(false)\r\n      }\r\n      else if(modalname===\"UpdatePatientModal\"){\r\n        setPatientUpdateModalshow(false);\r\n      }\r\n      else if(modalname===\"SearchPatientModal\"){\r\n        setSearchModalshow(false);\r\n      }\r\n      else if(modalname===\"RegisterReservationModal\"){\r\n        setreservationRegisterhModalshow(false)\r\n      }\r\n      else if(modalname===\"TestSelectorModal\"){\r\n        setTestSelectorModalshow(false)\r\n      } else if(modalname===\"DoctorSelectorModal\"){\r\n        setDoctorSelectorModalshow(false)\r\n      }\r\n    \r\n    }\r\n\r\n   // 환자 프로필에 변수저장 \r\n   const setPatient = (patient)=>{\r\n   \r\n     if(patient){\r\n      const tmpPatient = {\r\n        patientid:patient.patientid,\r\n        patientname:patient.patientname, \r\n        ssn1:patient.ssn1, \r\n        ssn2:patient.ssn2, \r\n        sex: patient.sex,\r\n        age:patient.age,\r\n        phonenumber: patient.phonenumber, \r\n        registerday: patient.registerday,\r\n        lasttreatment: patient.lasttreatment?patient.lasttreatment:\"-\"\r\n      }\r\n      setSelectedPatient(tmpPatient)\r\n     }\r\n  }\r\n  //로딩 스피너 끄고 키는 함수\r\n  const ControlLoading=(bool)=>{\r\n    setLoading(bool)\r\n  }\r\n   \r\n    return(\r\n   <div className=\"pl-3 pr-3 pb-3 border border-dark\" style={{height:\"96vh\", backgroundColor:\"white\"}} >\r\n        <ReceptionHeader headertitle=\"환자정보\" iclassName=\"bi bi-person-square \" color=\"#9ACAA1\">\r\n                <button  style={{marginRight:\"10px\"}} className=\"btn btn-outline-dark btn-sm\" onClick={()=>{setSearchModalshow(true)}}>환자검색</button>\r\n                 <button disabled={selectedPatient.patientname!==\"-\"?false:true} style={{marginRight:\"10px\"}} className=\"btn btn-outline-dark btn-sm\" onClick={()=>{setreservationRegisterhModalshow(true)}}>예약</button>\r\n                 <button style={{marginRight:\"10px\"}} className=\"btn btn-outline-dark btn-sm\" onClick={()=>{setPatientRegisterhModalshow(true)}}>신규등록</button>\r\n               <button disabled={selectedPatient.patientname!==\"-\"?false:true} style={{marginRight:\"10px\"}} className=\"btn btn-outline-dark btn-sm\" onClick={()=>{setPatientUpdateModalshow(true)}}>환자수정</button>\r\n                <button disabled={selectedPatient.patientname!==\"-\"?false:true} style={{marginRight:\"10px\"}} className=\"btn btn-outline-dark btn-sm\" onClick={()=>{setTestSelectorModalshow(true)}}>검사접수</button>\r\n                 <button disabled={selectedPatient.patientname!==\"-\"?false:true} style={{marginRight:\"10px\"}} className=\"btn btn-outline-dark btn-sm\" onClick={()=>{setDoctorSelectorModalshow(true)}}>진료접수</button>\r\n        </ReceptionHeader>\r\n        <PatientProfile className=\"mt-1\" selectedPatient={selectedPatient}/>\r\n        <PatientHistory selectedPatient={selectedPatient}/> \r\n        \r\n      <Modal backdrop=\"static\" size=\"lg\" show={searchModalshow}  onHide={()=>{setSearchModalshow(false)}}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>환자검색</Modal.Title>\r\n          {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n         \r\n        </Modal.Header>\r\n        <Modal.Body><SearchPatientModal controlLoading={ControlLoading} closeModal={closeModal} setSelectedPatient={setPatient}/></Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal  backdrop=\"static\" size=\"lg\" show={reservationRegisterhModalshow} onHide={()=>{setreservationRegisterhModalshow(false)}}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>예약등록</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><RegisterReservationModal closeModal={closeModal} selectedPatient={selectedPatient}/></Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal  backdrop=\"static\"  show={patientRegisterhModalshow} onHide={()=>{setPatientRegisterhModalshow(false)}}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>신규등록</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><RegisterPatientModal closeModal={closeModal} setSelectedPatient={setPatient}/></Modal.Body>\r\n      </Modal>\r\n      <Modal  backdrop=\"static\"  show={patientUpdateModalshow} onHide={()=>{setPatientUpdateModalshow(false)}}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>환자수정</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><UpdatePatientModal closeModal={closeModal} selectedPatient={selectedPatient} setSelectedPatient={setPatient}/></Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal  backdrop=\"static\" show={testSelectorModalshow} onHide={()=>{setTestSelectorModalshow(false)}}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>검사선택</Modal.Title>\r\n          {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n          </Modal.Header>\r\n        <Modal.Body><TestSelectorModal controlLoading={ControlLoading} closeModal={closeModal} selectedPatient={selectedPatient}/></Modal.Body>\r\n      </Modal>\r\n      <Modal  backdrop=\"static\" show={doctorSelectorModalshow} onHide={()=>{setDoctorSelectorModalshow(false)}}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>의사선택</Modal.Title>\r\n          {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n           </Modal.Header>\r\n        <Modal.Body><DoctorSelectorModal controlLoading={ControlLoading} closeModal={closeModal} selectedPatient={selectedPatient}/></Modal.Body>\r\n      </Modal>\r\n        \r\n    </div>\r\n\r\n        \r\n            \r\n    )\r\n}\r\n\r\nexport default SearchPatient;","const initialState = {\r\n  patient: { \r\n    patientname:\"환자이름\", \r\n    ssn1:\"-\", \r\n    ssn2:\"-\", \r\n    sex: \"성별\",\r\n    age:\"-\",\r\n    phonenumber: \"-\", \r\n  }\r\n}\r\n\r\n//액션 타입 선언\r\nconst SET_PATIENT=\"patient/setPatient\";\r\n\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetPatient = (patient) => {\r\n  return {type:SET_PATIENT, patient};\r\n} \r\n\r\n//리듀스 선언\r\nconst patientReducer = (state = initialState, action) => {\r\n  if(action.type === SET_PATIENT) {\r\n    return {...state, patient:action.patient};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\n\r\nexport default patientReducer;","import { useState } from \"react\";\r\nimport { ToggleButton } from \"react-bootstrap\";\r\nimport { ButtonGroup } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Item from \"views/components/Item\";\r\nimport {createSetPatient} from\"redux/patient-reducer\"\r\nimport moment from 'moment';\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nfunction TestReception(props){\r\n    const [listtype, setListtype] = useState(\"all\");\r\n    const [selectedTestReception,setSelectedTestReception] = useState()\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setListtype(event.target.value);\r\n      }\r\n      const click = (item) =>{\r\n        dispatch(createSetPatient({patientid:item.patientid}))\r\n        setSelectedTestReception(item)\r\n    }\r\n    //검사접수삭제\r\n    const deleteReceptionTest = () =>{\r\n        if(selectedTestReception){\r\n            props.deleteTestReception(selectedTestReception.testreceptionid)\r\n        }\r\n       \r\n    }\r\n    const testProperty = [\"testreceptionid\",\"patientname\",\"status\",\"testdate\",]\r\n    \r\n    return(\r\n        <div className=\"pl-3 pr-3 pb-3\" style={{backgroundColor:\"white\"}}>\r\n        <div className=\"mt-3 d-flex justify-content-between\">\r\n            <ButtonGroup toggle>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"all\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"all\"} value=\"all\" onChange={handleChange}><div className=\"ml-5 mr-5\">전체</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"대기중\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"대기중\"} value=\"대기중\" onChange={handleChange}><div className=\"ml-5 mr-5\">대기중</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"진행중\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"진행중\"} value=\"진행중\" onChange={handleChange}><div className=\"ml-5 mr-5\">진행중</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"검사완료\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"검사완료\"} value=\"검사완료\" onChange={handleChange}><div className=\"ml-5 mr-5\">검사완료</div></ToggleButton>\r\n            </ButtonGroup>\r\n            <div>\r\n                {props.isDrawer===false&&<button style={{marginRight:\"10px\"}} onClick={deleteReceptionTest} className=\"btn btn-outline-dark btn-sm\">취소</button>}\r\n            </div>\r\n        </div>\r\n        <div className=\"rounded-lg justify-content-center\">\r\n            <div className=\"d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\",marginTop:\"10px\",marginBottom:\"10px\"}}>\r\n                <div style={{width:\"20%\"}}>순번</div>\r\n                <div style={{width:\"20%\"}}>검사ID</div>\r\n                <div style={{width:\"20%\"}}>환자</div>\r\n                <div style={{width:\"20%\"}}>접수상태</div>\r\n                <div style={{width:\"20%\"}}>접수시간</div>\r\n            </div>\r\n            <div className=\" justify-content-center\" style={{height:\"calc(40vh - 200px)\"}} >\r\n               \r\n            {props.testList?\r\n            <AutoSizer disableHeight>\r\n                        {({width, height}) => {\r\n                            let result = props.testList.filter((item)=>listtype===\"all\"||item.status===listtype) \r\n                            return(\r\n                            <List width={width} height={Math.round(window.innerHeight / (100 / 40))-200}\r\n                                    list={result}\r\n                                    rowCount={result.length}\r\n                                    rowHeight={50}\r\n                                    rowRenderer={({index, key, style}) => {\r\n                                        const item2 = {...result[index],testdate:moment(result[index].testdate).format(\"HH:mm\")}\r\n                                        return (\r\n                                            <div key={key} style={style}>\r\n                                            <Item onClick={click} item ={item2} property={testProperty} order={index}/>\r\n                                            </div>   \r\n                                        );\r\n                                        }}\r\n                                    overscanRowCount={5}/>\r\n                            )\r\n                        }}\r\n            </AutoSizer>\r\n            :\r\n            null\r\n            }\r\n\r\n\r\n                 {/* {props.testList&&props.testList.map((item,index)=>{\r\n                     const item2 = {...item,testdate:moment(item.testdate).format(\"HH:mm\")}\r\n                      if(listtype===\"all\"||item.status===listtype){\r\n                     return(\r\n                                    <div key={index}>\r\n                                            <Item onClick={click} item ={item2} property={testProperty} order={index}/>\r\n                                    </div>                         \r\n                 )\r\n                }})}  */}\r\n            </div>\r\n        </div>\r\n                    \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default TestReception;","import {  useState } from \"react\";\r\nimport { ToggleButton } from \"react-bootstrap\";\r\nimport { ButtonGroup } from \"react-bootstrap\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport Item from \"views/components/Item\";\r\nimport {createSetPatient} from\"redux/patient-reducer\"\r\nimport moment from 'moment';\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nfunction TreatmentReception(props){\r\n    const [listtype, setListtype] = useState(\"all\");\r\n    const [selectedTreatmetReception,setSelectedTreatmetReception] = useState()\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setListtype(event.target.value);\r\n      }\r\n      const click = (item) =>{\r\n        dispatch(createSetPatient({patientid:item.patientid}))\r\n        setSelectedTreatmetReception(item)\r\n    }\r\n    //진료접수삭제\r\n    const deleteReceptionTreatment = () =>{\r\n        if(selectedTreatmetReception){\r\n            props.deleteTreatmentReception(selectedTreatmetReception.treatmentid)\r\n        }\r\n    }\r\n    \r\n    const treatmentProperty = [\"treatmentid\",\"patientname\",\"username\",\"status\",\"treatmentdate\"]  \r\n    return(\r\n        <div className=\"pl-3 pr-3 pb-3\" style={{ backgroundColor:\"white\"}}>\r\n        <div className=\"mt-3 d-flex justify-content-between\">\r\n            <ButtonGroup toggle>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"all\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"all\"} value=\"all\" onChange={handleChange}><div className=\"ml-5 mr-5\">전체</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"진료 대기\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"진료 대기\"} value=\"진료 대기\" onChange={handleChange}><div className=\"ml-5 mr-5\">진료 대기</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"진료 완료\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"진료 완료\"} value=\"진료 완료\" onChange={handleChange}><div className=\"ml-5 mr-5\">진료 완료</div></ToggleButton>\r\n            </ButtonGroup>\r\n            <div>\r\n                {props.isDrawer===false&&<button style={{marginRight:\"10px\"}} onClick={deleteReceptionTreatment} className=\"btn btn-outline-dark btn-sm\">취소</button>}\r\n            </div>\r\n        </div>\r\n        <div className=\"rounded-lg justify-content-center\">\r\n            <div className=\"d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\",marginTop:\"10px\",marginBottom:\"10px\"}}>\r\n                <div style={{width:\"20%\"}}>순번</div>\r\n                <div style={{width:\"20%\"}}>진료ID</div>\r\n                <div style={{width:\"20%\"}}>환자</div>\r\n                <div style={{width:\"20%\"}}>진료자</div>\r\n                <div style={{width:\"20%\"}}>접수상태</div>\r\n                <div style={{width:\"20%\"}}>접수시간</div>\r\n        \r\n        \r\n            </div>\r\n            <div className=\"justify-content-center\" style={{height:\"calc(40vh - 200px)\"}} >\r\n            {props.treatmentList?\r\n            <AutoSizer disableHeight>\r\n                        {({width, height}) => {\r\n                            let result = props.treatmentList.filter((item)=>listtype===\"all\"||item.status===listtype) \r\n                            return(\r\n                            <List width={width} height={Math.round(window.innerHeight / (100 / 40))-200}\r\n                                    list={result}\r\n                                    rowCount={result.length}\r\n                                    rowHeight={50}\r\n                                    rowRenderer={({index, key, style}) => {\r\n                                        const item2 = {...result[index],treatmentdate:moment(result[index].treatmentdate).format(\"HH:mm\")}\r\n                                        return (\r\n                                            <div key={key} style={style}>\r\n                                            <Item onClick={click} item ={item2} property={treatmentProperty} order={index}/>\r\n                                            </div>   \r\n                                        );\r\n                                        }}\r\n                                    overscanRowCount={5}/>\r\n                            )\r\n                        }}\r\n            </AutoSizer>\r\n            :\r\n            null\r\n            }\r\n            \r\n\r\n\r\n                 {/* {props.treatmentList&&props.treatmentList.map((item,index)=>{\r\n                      const item2 = {...item,treatmentdate:moment(item.treatmentdate).format(\"HH:mm\")}\r\n                      if(listtype===\"all\"||item.status===listtype){\r\n                     return(\r\n                                    <div key={index}>\r\n                                        \r\n                                        \r\n                                            <Item onClick={click} item ={item2} property={treatmentProperty} order={index}/>\r\n                                    </div>                         \r\n                 )\r\n                }})}  */}\r\n            </div>\r\n        </div>\r\n                    \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default TreatmentReception;","import { useEffect, useState } from \"react\";\r\nimport ReceptionHeader from \"../components/ReceptionHeader\";\r\nimport TestReception from \"./TestReception\";\r\nimport TreatmentReception from \"./TreatmentReception\";\r\n\r\nimport {useSelector } from \"react-redux\";\r\nimport { GetTreatmentList,GetTestReceptionList,DeleteReceptionTreatment,DeleteReceptionTest } from \"apis/Reception\";\r\nimport { sendRedisMessage } from \"apis/Redis\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction PatientReception(props){\r\n   const [select, setSelect] = useState(\"treatmentreception\");\r\n   const onChangeSelect=(event)=>{\r\n       setSelect(event.target.value)\r\n       \r\n    }\r\n    const treatmentReception = useSelector((state)=>(state.receptionReducer.treatmentreception)) \r\n    const testReception = useSelector((state)=>(state.receptionReducer.testreception))\r\n    const [treatementsData, setTreatmentsData] = useState()\r\n    const [testReceptionsData, setTestReceptionsData] = useState()\r\n    const [loading,setLoading] = useState(false);\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        GetTreatmentList().then((result)=>{\r\n            const userlist = result.data.userlist;\r\n            \r\n            const patientlist = result.data.patientlist;\r\n            const treatmentlist = result.data.treatmentlist.map((item, index)=>{\r\n                return {...item, patientname:patientlist[index].patientname,username:userlist[index].username }\r\n            })\r\n            setTreatmentsData(treatmentlist);\r\n            setLoading(false)\r\n        })\r\n    },[treatmentReception])\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        GetTestReceptionList().then((result)=>{\r\n            const patientlist = result.data.patientlist;\r\n            const testlist = result.data.testlist.map((item, index)=>{\r\n                return {...item, patientname:patientlist[index].patientname }\r\n            })\r\n            setTestReceptionsData(testlist);\r\n            setLoading(false)\r\n        })\r\n    },[testReception])\r\n    //진료접수삭제\r\n    const deleteTreatmentsData=(treatment_id)=>{\r\n        let modify = []\r\n        let selectedtreatment= null\r\n        for(var i=0; i<treatementsData.length; i++){\r\n            if(treatementsData[i].treatmentid!==treatment_id){\r\n                modify.push(treatementsData[i]);\r\n            }else{\r\n                selectedtreatment = treatementsData[i]\r\n            }\r\n        }\r\n        //DB에서 삭제\r\n        DeleteReceptionTreatment(treatment_id).then(()=>{\r\n            setTreatmentsData(modify)\r\n            sendRedisMessage({type:\"treatment\", patientid:selectedtreatment.patientid , status:\"취소\"})\r\n            \r\n        })\r\n        \r\n        \r\n    }\r\n    //검사접수 삭제\r\n    const deleteTestsData=(testreception_id)=>{\r\n        let modify = []\r\n        for(var i=0; i<testReceptionsData.length; i++){\r\n            if(testReceptionsData[i].testreceptionid!==testreception_id){\r\n                modify.push(testReceptionsData[i]);\r\n            }\r\n        }\r\n        //DB에서 삭제\r\n        DeleteReceptionTest(testreception_id).then(()=>{\r\n            setTestReceptionsData(modify)\r\n            sendRedisMessage({type:\"test\"})\r\n        })\r\n        \r\n        \r\n    }\r\n    return(\r\n        <div className=\"pl-3 pr-3 pb-3 border border-dark\" style={{height:\"calc(45vh - 10px)\", backgroundColor:\"white\"}}>    \r\n            <ReceptionHeader headertitle=\"당일 접수목록\" iclassName=\"bi bi-droplet \" color=\"#E89677\">\r\n            {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n             <select onChange={onChangeSelect} className=\"ml-2\" name=\"reception\" >\r\n                    <option value=\"treatmentreception\">진료접수</option>\r\n                    <option value=\"testreception\">검사접수</option>\r\n                </select>\r\n            </ReceptionHeader> \r\n          \r\n            {select===\"treatmentreception\"?<TreatmentReception isDrawer={false} deleteTreatmentReception={deleteTreatmentsData} treatmentList={treatementsData}/>:<TestReception isDrawer={false} deleteTestReception={deleteTestsData} testList={testReceptionsData}/>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientReception;","import Reservation from \"./Reservation\";\r\nimport SearchPatient from\"./SearchPatient\";\r\nimport \"./font.css\"\r\nimport PatientReception from \"./PatientReception\";\r\n\r\n\r\nfunction Reception(props){\r\n\r\n    return( \r\n    <>\r\n    <div className=\"container-fluid  d-flex p-0 \" style={{minWidth:\"1200px\", fontFamily:\"Noto Sans KR\"}}>\r\n    <div className=\" col-6 \" style={{height:\"100vh\"}}>\r\n            <div className=\"p-2\" >\r\n                <SearchPatient />\r\n            </div>           \r\n    </div>\r\n    <div className=\" col-6 \" style={{height:\"100vh\"}}>\r\n            <div className=\"row-6 p-2\">\r\n                <Reservation/>         \r\n            </div>\r\n            <div className=\"row-6 p-2 \">\r\n                <PatientReception/>\r\n            </div>\r\n    </div>\r\n        \r\n    </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Reception;","function ButtonHeader(props) {\r\n  return (\r\n    <>\r\n    <style>\r\n    </style>\r\n      <div className=\"row pb-1\" style={{height:\"50px\"}}>\r\n        <div className=\"col-10 row\"><div className=\"p-2 ml-3 mr-2 text-center\" style={{ backgroundColor:props.color, width:\"40px\", color:\"#FFFFFF\"}}><i className={props.iclassName}></i></div><div className=\"d-flex align-items-center\">{props.headertitle}</div></div>\r\n        <div className=\"col-2 d-flex align-items-center justify-content-end mr-2\"><i onClick={props.onclick} className={`${props.btnicon}`} style={{cursor:\"pointer\", fontSize: \"1.5rem\", marginTop:\"10px\", }}></i></div>\r\n      </div>    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default ButtonHeader;","import { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction DiagnosesItem(props) {\r\n  \r\n  return (\r\n    <>\r\n    <div tabIndex=\"-1\" onClick={(event)=>{if(props.onClick)props.onClick(props.item); }} className={\"test ml-2 mr-2 mb-2 pt-2 pb-2 d-flex align-items-center\"} style={{ boxShadow: \"rgb(0 0 0 / 8%) 0px 0px 5px 2px\",borderRadius:\"7px\",fontSize: \"13px\" }}>\r\n        <div className={\"col text-center\"}>{props.item.diagnosesdataid}</div>\r\n        <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{props.item.diagnosesdataname}</Tooltip>}>\r\n          <div className={\"col text-center border-left\"} style={{whiteSpace:\"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.diagnosesdataname}</div>\r\n        </OverlayTrigger>\r\n        <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{props.item.diagnosesdataename}</Tooltip>}>\r\n          <div className={\"col text-center border-left\"} style={{whiteSpace:\"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.diagnosesdataename}</div>\r\n        </OverlayTrigger>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DiagnosesItem;\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction PrescriptionDiagnosesItem(props) {\r\n\r\n  return (\r\n    <div className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n      <div style={{width:\"25%\"}}>{props.item.diagnosesdataid}</div>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.diagnosesdataname}</Tooltip>}>\r\n        <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.diagnosesdataname}</div>\r\n      </OverlayTrigger>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.diagnosesdataename}</Tooltip>}>\r\n        <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.diagnosesdataename}</div>\r\n      </OverlayTrigger>\r\n      <div style={{width:\"25%\"}}><button className=\"btn btn-success btn-sm\" onClick={() => {props.addItem(props.item)}}>추가</button></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PrescriptionDiagnosesItem);","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Modal, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport PrescriptionDiagnosesItem from \"./PrescriptionDiagnosesItem\";\r\n\r\nfunction PrescriptionDiagnosesModal(props) {\r\n\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [prescriptionItems, setPrescriptionItems] = useState([]);\r\n  const [searchList, setSearchList] = useState([]);\r\n  const [searchType, setSearchType] = useState(\"dataid\");\r\n\r\n  const handleSearchName = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(props.show === true){\r\n      setPrescriptionItems(props.itemList);\r\n      setSearchList(props.staticItemList);\r\n      setSearchName(\"\");\r\n    }\r\n  },[props]);\r\n\r\n  const prescribe = useCallback((items) => {\r\n    props.prescribe(items);\r\n    props.handleClose();\r\n  }, [props]);\r\n\r\n  const addItem = useCallback((item) => {\r\n      setPrescriptionItems((prevItems) => {\r\n        const compare = prevItems.findIndex((obj) => obj.diagnosesdataid === item.diagnosesdataid);\r\n        if(compare >= 0){\r\n          alert(\"이미 처방받았습니다.\");\r\n          return prevItems;\r\n        } else {\r\n          const newItem = {\r\n            ...item,\r\n            treatmentid:props.treatment.treatmentid\r\n          }\r\n          const newItems = prevItems.concat(newItem);\r\n          return newItems;\r\n        }\r\n      });\r\n  },[props.treatment]);\r\n\r\n  const removeItem = useCallback((item) => {\r\n    setPrescriptionItems((prevItems) => {\r\n      const newItems = prevItems.filter(prevItem => prevItem.diagnosesdataid !== item.diagnosesdataid);\r\n      return newItems;\r\n    })\r\n  }, [])\r\n\r\n  const selectType = useCallback((event) => {\r\n    setSearchType(event.target.value);\r\n  }, []);\r\n\r\n  const search = useCallback((search, searchType) => {\r\n    let newItems = [];\r\n    search = search.toUpperCase();\r\n    setSearchList(() => {\r\n      if(searchType === \"dataid\") {\r\n        newItems = props.staticItemList.filter(diagnosis => (diagnosis.diagnosesdataid.toUpperCase()).indexOf(search) !== -1)\r\n      } else if(searchType === \"kname\") {\r\n        newItems = props.staticItemList.filter(diagnosis => diagnosis.diagnosesdataname.indexOf(search) !== -1)\r\n      } else if(searchType === \"ename\") {\r\n        newItems = props.staticItemList.filter(diagnosis => (diagnosis.diagnosesdataename.toUpperCase()).indexOf(search) !== -1)\r\n      }\r\n      return newItems;\r\n    })\r\n\r\n  },[props.staticItemList]);\r\n\r\n  const rowRenderer = ({index, key, style}) => {\r\n    return (\r\n      <div key={key} style={style}>\r\n        <PrescriptionDiagnosesItem item={searchList[index]} addItem={addItem}></PrescriptionDiagnosesItem>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <Modal animation={false} show={props.show} onHide={props.handleClose} size=\"xl\" centered>\r\n      <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"}}>\r\n        <Modal.Title style={{color:\"#FFFFFF\"}}>상병 목록</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body >\r\n        <div className=\"input-group d-flex pb-2 justify-content-end border-bottom\">\r\n          <div className=\"d-flex\">\r\n          <select className=\"custom-select\" style={{width:\"110px\"}} onChange={selectType}>\r\n            <option value=\"dataid\" selected={searchType ===\"dataid\"}>질병코드</option>\r\n            <option value=\"kname\" selected={searchType ===\"kname\"}>질병명(한글)</option>\r\n            <option value=\"ename\" selected={searchType ===\"ename\"}>질병명(영어)</option>\r\n          </select>\r\n            <input type=\"text\" onChange={handleSearchName}/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={ () => search(searchName ,searchType)}>검색</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{height:\"500px\"}} className=\"d-flex\">\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\"}}>\r\n            <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n              <div style={{width:\"25%\"}}>질병코드</div>\r\n              <div style={{width:\"25%\"}}>질병명(한글)</div>\r\n              <div style={{width:\"25%\"}}>질병명(영어)</div>\r\n              <div style={{width:\"25%\"}}></div>\r\n            </div>\r\n            <div className=\"overflow-auto border\" style={{height:\"450px\"}}>\r\n            {prescriptionItems != null &&\r\n            prescriptionItems.map ((item, index) => {\r\n              return (\r\n                <div key={item.diagnosesdataid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n                  <div style={{width:\"25%\"}}>{item.diagnosesdataid}</div>\r\n                  <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{item.diagnosesdataname}</Tooltip>}>\r\n                    <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{item.diagnosesdataname}</div>\r\n                  </OverlayTrigger>\r\n                  <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{item.diagnosesdataename}</Tooltip>}>\r\n                    <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{item.diagnosesdataename}</div>\r\n                  </OverlayTrigger>\r\n                  <div style={{width:\"25%\"}}><button className=\"btn btn-danger btn-sm\" onClick={() => {removeItem(item)}}>제거</button></div>\r\n                </div>\r\n              );\r\n            })} \r\n            </div>\r\n          </div> \r\n\r\n          <div className=\"col-1 d-flex align-items-center justify-content-center\">\r\n            <i className=\"bi bi-arrow-left-square\" style={{fontSize:\"30px\"}}></i>\r\n          </div>\r\n\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\"}}>\r\n            <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n              <div style={{width:\"25%\"}}>질병코드</div>\r\n              <div style={{width:\"25%\"}}>질병명(한글)</div>\r\n              <div style={{width:\"25%\"}}>질병명(영어)</div>\r\n              <div style={{width:\"25%\"}}></div>\r\n            </div>\r\n            <div className=\"border\" style={{height:\"450px\"}}>\r\n              {searchList.length === 0 ? \r\n              <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                <i className=\"bi bi-x-octagon mr-2\"></i>  검색 결과가 없습니다.\r\n              </div>\r\n              :\r\n              <AutoSizer>\r\n                {\r\n                  ({width, height}) => {\r\n                    return(\r\n                      <List width={width} height={height}\r\n                        rowCount={searchList.length}\r\n                        rowHeight={50}\r\n                        rowRenderer={rowRenderer}\r\n                        overscanRowCount={5}\r\n                      />\r\n                    )\r\n                  }\r\n                }\r\n              </AutoSizer>\r\n              }\r\n            </div>\r\n          </div> \r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" size=\"sm\" onClick={props.handleClose}>\r\n          닫기\r\n        </Button>\r\n        <Button variant=\"outline-primary\" size=\"sm\" onClick={() => { prescribe(prescriptionItems) } }>\r\n          선택 완료\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PrescriptionDiagnosesModal;","import { useState } from \"react\";\r\nimport ButtonHeader from \"./components/ButtonHeader\";\r\nimport DiagnosesItem from \"./components/Diagnoses/DiagnosesItem\";\r\nimport PrescriptionDiagnosesModal from \"./components/Diagnoses/PrescriptionDiagnosesModal\";\r\n\r\n\r\nfunction DiagnosisList(props) {\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const info = () => {\r\n    alert(\"대기중인 진료를 선택해주세요.\");\r\n  }\r\n  const prescribeDiagnoses =  (prescriptionItems) => {\r\n    props.prescribeDiagnoses(prescriptionItems);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ButtonHeader headertitle=\"상병 목록\" iclassName=\"bi bi-check2-square\" color=\"#D27E7B\" btnicon=\"bi bi-plus-square\" onclick={props.treatment.status===\"진료 대기\"? handleShow : info}/>\r\n      <PrescriptionDiagnosesModal show={show} treatment={props.treatment} handleClose={handleClose} staticItemList={props.staticDignoses} itemList={props.treatmentDiagnoses} prescribe={prescribeDiagnoses}></PrescriptionDiagnosesModal>\r\n      <div className=\"overflow-auto p-3\" style={{height:\"calc(100% - 50px\"}}>\r\n\r\n      \r\n      {\r\n        props.treatment.treatmentid == null ? \r\n        <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n          진료를 선택해주세요.\r\n        </div>\r\n        :\r\n        (\r\n          props.loading === true ? \r\n          <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n            <div className=\"spinner-border text-success\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n          :\r\n          (\r\n            props.treatmentDiagnoses.length !==0 ? \r\n            props.treatmentDiagnoses.map (diagnosis => {\r\n              return (\r\n                <DiagnosesItem key={diagnosis.diagnosesdataid} item={diagnosis}></DiagnosesItem>\r\n              );\r\n            })\r\n            :\r\n            <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n              처방 받은 내역이 없습니다.\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n      </div>\r\n\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default DiagnosisList;","import React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction PrescriptionDrugItem(props) {\r\n\r\n  const handleChange = (event) => {\r\n    props.onChangeQuantity(event, props.quantityArr);\r\n  }\r\n\r\n  return (\r\n    <div key={props.item.drugid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n      <div style={{width:\"25%\"}}>{props.item.drugid}</div>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.drugname}</Tooltip>}>\r\n        <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.drugname}</div>\r\n      </OverlayTrigger>\r\n      <div className=\"d-flex\" style={{width:\"25%\"}}>\r\n        <div style={{width:\"60%\", marginRight:\"3px\"}}>\r\n          <input min={1} type=\"number\" name={props.item.drugid} value={props.quantityArr[props.item.drugid] || 1} onChange={handleChange} className=\"form-control\"></input>\r\n        </div>\r\n        <div style={{width:\"40%\"}}>{props.item.drugunit}</div>\r\n      </div>\r\n      <div style={{width:\"25%\"}}><button className=\"btn btn-success btn-sm\" onClick={() => {props.addItem(props.item, props.quantityArr[props.item.drugid], props.quantityArr)}}>추가</button></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PrescriptionDrugItem);","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Modal, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport PrescriptionDrugsItem from \"./PrescriptionDrugItem\"\r\n\r\nfunction PrescriptionDrugsModal(props) {\r\n\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [searchList, setSearchList] = useState([]);\r\n  const [searchType, setSearchType] = useState(\"drugid\");\r\n\r\n  const [quantityArr, setQuantityArr] = useState({});\r\n  const [prescriptionItems, setPrescriptionItems] = useState([]);\r\n  \r\n  const handleSearchName = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n  \r\n  const onChangeQuantity = useCallback((e, quantityArr) => {\r\n    setQuantityArr({\r\n      ...quantityArr,\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(props.show === true){\r\n      setPrescriptionItems(props.itemList);\r\n      setQuantityArr({});\r\n      setSearchName(\"\");\r\n      setSearchList(props.staticItemList);\r\n    }\r\n  },[props]);\r\n\r\n  const prescribe = useCallback((items) => {\r\n    props.prescribe(items);\r\n    props.handleClose();\r\n  }, [props]);\r\n\r\n\r\n  const addItem = useCallback((item, quantity=1, quantityArr) => {\r\n    if(quantity <=0){\r\n      quantity = 1;\r\n    }\r\n    setPrescriptionItems((prevItems) => {\r\n      const compare = prevItems.findIndex((obj) => obj.drugid === item.drugid);\r\n      if(compare >= 0){\r\n        alert(\"이미 처방받았습니다.\");\r\n        return prevItems;\r\n      } else {\r\n        const newItem = {\r\n          ...item,\r\n          quantity:quantity,\r\n          treatmentid:props.treatment.treatmentid\r\n        }\r\n        const newItems = prevItems.concat(newItem);\r\n        setQuantityArr({\r\n          ...quantityArr,\r\n          [item.drugid] : 0\r\n        })\r\n        return newItems;\r\n      }\r\n    });\r\n\r\n  }, [props.treatment]);\r\n\r\n  const removeItem = useCallback((item) => {\r\n    setPrescriptionItems(prevItems => {\r\n      const newItems = prevItems.filter(prevItem => prevItem.drugid != item.drugid);\r\n      return newItems;\r\n    })\r\n  }, []);\r\n\r\n  const selectType = useCallback((event) => {\r\n    setSearchType(event.target.value);\r\n  }, []);\r\n\r\n  const search = useCallback((search, searchType) => {\r\n    let newItems = [];\r\n    search = search.toUpperCase();\r\n    setSearchList(() => {\r\n      if(searchType === \"drugid\") {\r\n        newItems = props.staticItemList.filter(drug => (drug.drugid.toUpperCase()).indexOf(search) !== -1)\r\n      } else if(searchType === \"drugname\") {\r\n        newItems = props.staticItemList.filter(drug => (drug.drugname.toUpperCase()).indexOf(search) !== -1)\r\n      } \r\n      return newItems;\r\n    })\r\n\r\n  },[props.staticItemList]);\r\n\r\n  const rowRenderer = ({index, key, style}) => {\r\n    return (\r\n      <div key={key} style={style}>\r\n        <PrescriptionDrugsItem item={searchList[index]} addItem={addItem} quantityArr={quantityArr} onChangeQuantity={onChangeQuantity}></PrescriptionDrugsItem>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal animation={false} show={props.show} onHide={props.handleClose} size=\"xl\" centered>\r\n      <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"} }>\r\n        <Modal.Title style={{color:\"#FFFFFF\"}}>약 처방</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n\r\n        <div className=\"input-group d-flex pb-2 justify-content-end border-bottom\">\r\n          <div className=\"d-flex\">\r\n            <select className=\"custom-select\" style={{width:\"110px\"}} onChange={selectType}>\r\n              <option value=\"drugid\" selected={searchType ===\"drugid\"}>약품코드</option>\r\n              <option value=\"drugname\" selected={searchType ===\"drugname\"}>약품명</option>\r\n            </select>\r\n            <input type=\"text\" onChange={handleSearchName}/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={ () => search(searchName, searchType)}>검색</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{height:\"500px\"}} className=\"d-flex\">\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\"}}>\r\n            <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n              <div style={{width:\"25%\"}}>약품코드</div>\r\n              <div style={{width:\"25%\"}}>약품명</div>\r\n              <div style={{width:\"25%\"}}>수량</div>\r\n              <div style={{width:\"25%\"}}></div>\r\n            </div>\r\n            <div className=\"overflow-auto border\" style={{height:\"450px\"}}>\r\n            {prescriptionItems != null &&\r\n            prescriptionItems.map ((item, index) => {\r\n              return (\r\n                <div key={item.drugid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n                  <div style={{width:\"25%\"}}>{item.drugid}</div>\r\n                  <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{item.drugname}</Tooltip>}>\r\n                    <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{item.drugname}</div>\r\n                  </OverlayTrigger>\r\n                  <div style={{width:\"25%\"}}>{item.quantity} {item.drugunit}</div>\r\n                  <div style={{width:\"25%\"}}><button className=\"btn btn-danger btn-sm\" onClick={() => {removeItem(item)}}>제거</button></div>\r\n                </div>\r\n              );\r\n            })} \r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 d-flex align-items-center justify-content-center\">\r\n            <i className=\"bi bi-arrow-left-square\" style={{fontSize:\"30px\"}}></i>\r\n          </div>\r\n\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\"}}>\r\n            <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n              <div style={{width:\"25%\"}}>약품코드</div>\r\n              <div style={{width:\"25%\"}}>약품명</div>\r\n              <div style={{width:\"25%\"}}>수량</div>\r\n              <div style={{width:\"25%\"}}></div>\r\n            </div>\r\n            <div className=\"border\" style={{height:\"450px\"}}>\r\n              {searchList.length === 0 ? \r\n              <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                <i className=\"bi bi-x-octagon mr-2\"></i>  검색 결과가 없습니다.\r\n              </div>\r\n              :\r\n              <AutoSizer>\r\n                {\r\n                  ({width, height}) => {\r\n                    return (\r\n                      <List width={width} height={height}\r\n                        rowCount={searchList.length}\r\n                        rowHeight={50}\r\n                        rowRenderer={rowRenderer}\r\n                        overscanRowCount={5}\r\n                      />\r\n                    )\r\n                  }\r\n                }\r\n              </AutoSizer>\r\n              }\r\n            </div>\r\n          </div> \r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" size=\"sm\" onClick={props.handleClose}>\r\n          닫기\r\n        </Button>\r\n        <Button variant=\"outline-success\" size=\"sm\" onClick={() => { prescribe(prescriptionItems) } }>\r\n          선택 완료\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PrescriptionDrugsModal;","import { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction DrugsItem(props) {\r\n  \r\n  return (\r\n    <>\r\n    <div tabIndex=\"-1\" onClick={(event)=>{if(props.onClick)props.onClick(props.item); }} className={\"test ml-2 mr-2 mb-2 pt-2 pb-2 d-flex align-items-center\"} style={{ boxShadow: \"rgb(0 0 0 / 8%) 0px 0px 5px 2px\",borderRadius:\"7px\",fontSize: \"13px\" }}>\r\n        <div className={\"col text-center\"}>{props.item.drugid}</div>\r\n        <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{props.item.drugname}</Tooltip>}>\r\n          <div className={\"col text-center border-left\"} style={{whiteSpace:\"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.drugname}</div>\r\n        </OverlayTrigger>\r\n        <div className={\"col text-center border-left\"} style={{whiteSpace:\"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.drugtype}</div>\r\n        <div className={\"col text-center border-left\"} style={{whiteSpace:\"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.quantity} {props.item.drugunit}</div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DrugsItem;\r\n\r\n\r\n\r\n\r\n","\r\nimport { useState } from \"react\";\r\n\r\nimport PrescriptionModal from \"./components/Drugs/PrescriptionDrugsModal\"\r\nimport ButtonHeader from \"./components/ButtonHeader\";\r\nimport DrugsItem from \"./components/Drugs/DrugsItem\";\r\n\r\nfunction DrugList(props) {\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  const info = () => {\r\n    alert(\"대기중인 진료를 선택해주세요.\");\r\n  }\r\n\r\n  const prescribeDrugs = (prescriptionItems) => {\r\n    props.prescribeDrugs(prescriptionItems);\r\n  }\r\n  return (\r\n    <>\r\n    <ButtonHeader headertitle=\"처방약 목록\" iclassName=\"bi bi-bag-plus\" color=\"#FFCD82\" btnicon=\"bi bi-plus-square\" onclick={props.treatment.status===\"진료 대기\"? handleShow : info}/>\r\n    <PrescriptionModal show={show} treatment={props.treatment} handleClose={handleClose} staticItemList={props.staticDrugs} itemList={props.treatmentDrugs} prescribe={prescribeDrugs}></PrescriptionModal>\r\n    <div className=\"overflow-auto p-3\" style={{height:\"calc(100% - 50px\"}}>\r\n      {\r\n        props.treatment.treatmentid == null ? \r\n        <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n          진료를 선택해주세요.\r\n        </div>\r\n        :\r\n        ( \r\n          props.loading === true ? \r\n          <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n            <div className=\"spinner-border text-success\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n          :\r\n          ( \r\n            props.treatmentDrugs.length !== 0 ?\r\n          \r\n            props.treatmentDrugs !=null &&\r\n            props.treatmentDrugs.map (drug => {\r\n              return (\r\n                <DrugsItem key={drug.drugid} item={drug}></DrugsItem>\r\n              );\r\n            })\r\n            :\r\n            <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n              처방 받은 내역이 없습니다.\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    </div>\r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default DrugList;","import { Badge } from \"react-bootstrap\";\r\n\r\nfunction TreatmentItem(props) {\r\n\r\n  return (\r\n    <>\r\n     {/* <style jsx>{`\r\n        .test:focus {\r\n          background: #B3E283;\r\n          color:black;\r\n        }\r\n        \r\n      `}</style> */}\r\n    <div tabIndex=\"-1\" onClick={(event)=>{if(props.onClick)props.onClick(props.item); }} \r\n        className={\"test ml-2 mr-2 mb-2 pt-2 pb-2 d-flex align-items-center\"} style={{ cursor:\"pointer\", boxShadow: \"rgb(0 0 0 / 8%) 0px 0px 5px 2px\",borderRadius:\"7px\",fontSize: \"13px\" }}>\r\n    {props.property.map((prop,index)=>{\r\n      return(\r\n        <div key={index}  className={index===0?\"col pl-0 pr-0  text-center\":\"col pl-0 pr-0 text-center border-left\"}>\r\n          {props.item[prop]}\r\n          {props.item.status === \"진료 대기\" && index === props.property.length - 1 ? <Badge variant=\"success\" className=\"ml-1\">new</Badge> : null}\r\n        </div>\r\n      )\r\n    })}\r\n\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TreatmentItem;\r\n\r\n\r\n\r\n\r\n","import { useCallback, useEffect } from \"react\";\r\nimport TreatmentItem from \"./components/TreatmentItem\";\r\nimport moment from 'moment';\r\nfunction PatientTreatment(props) {\r\n\r\n  const selectTreatment = useCallback((treatment) => {\r\n    props.selectTreatment(treatment);\r\n  }, [props])\r\n\r\n  useEffect(() => {\r\n  }, [props.treatment])\r\n  return (\r\n    <>\r\n      <div className=\"d-flex row pb-1\" style={{height:\"50px\"}}><div className=\"p-2 ml-3 mr-2 text-center\" style={{ backgroundColor:\"#887BD2\", width:\"40px\", color:\"#FFFFFF\"}}><i className=\"bi bi-calendar2-check\"></i></div><div className=\"d-flex align-items-center\">진료 내역</div></div>\r\n      <div className=\"d-flex align-items-center pb-1 justify-content-center\" style={{height:\"50px\", width:\"100%\"}}>\r\n        현재 선택한 진료: {props.treatment.treatmentid}  {props.treatment.treatmentdate} </div>\r\n      {\r\n      props.selectedPatient.patientid != null ? \r\n      <>\r\n        <div className=\"overflow-auto p-3\" style={{height:\"calc(100% - 100px)\"}}>\r\n          {\r\n            props.loading === true ? \r\n            <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n              <div className=\"spinner-border text-success\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            </div>\r\n            :\r\n            (\r\n              (props.patientTreatments == null || props.patientTreatments.length === 0) ?  \r\n              <div className=\"overflow-auto p-3 border-top justify-content-center d-flex align-items-center\" style={{height:\"100%\"}}>\r\n                <span><i className=\"bi bi-clipboard-x mr-1\"></i>선택한 환자의 진료내역이 없습니다.</span>\r\n              </div>\r\n              : \r\n              props.patientTreatments.map (treatment => {\r\n\r\n                return (\r\n                  <TreatmentItem key={treatment.treatmentid} item={{...treatment, treatmentdate: moment(treatment.treatmentdate).format(\"YYYY-MM-DD\")}} property={[\"treatmentid\", \"treatmentdate\", \"status\"]} onClick={selectTreatment}></TreatmentItem>\r\n                );\r\n              })\r\n            )\r\n          }\r\n        </div>\r\n      </>\r\n      :\r\n      <div className=\"overflow-auto p-3 border-top justify-content-center d-flex align-items-center\" style={{height:\"calc(100% - 100px)\"}}>\r\n        <span><i className=\"bi bi-file-person mr-1\"></i>환자를 선택해주세요.</span>\r\n      </div>\r\n      }\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PatientTreatment;\r\n\r\n\r\n\r\n\r\n// selectedTreatment.treatmentid === treatment.treatmentid ?  {cursor:\"pointer\", backgroundColor:\"#38B2AC\"} : ","import axios from \"axios\";\r\n\r\n//treatment관련\r\nexport function getAllTreatments(patientid){\r\n    const result = axios.get(\"treatment/treatments/\"+patientid);\r\n    return result;\r\n}\r\n\r\n//처방하기\r\nexport function prescribeTreatment(prescription) {\r\n  const result = axios.post(\"treatment/prescribetreatment\", prescription);\r\n  return result;\r\n}\r\n\r\n\r\n//약 목록 가져오기\r\nexport function getStaticDrugs() {\r\n  const result = axios.get(\"treatment/staticdrugs\");\r\n  return result;\r\n}\r\n\r\n//질병 목록 가져오기\r\nexport function getStaticDiagnoses() {\r\n  const result = axios.get(\"treatment/staticdiagnoses\");\r\n  return result;\r\n}\r\n\r\n//검사 목록 가져오기\r\nexport function getStaticTests() {\r\n  const result = axios.get(\"treatment/statictests\");\r\n  return result;\r\n}\r\n\r\n//처방 목록 가져오기\r\nexport function getPrescriptionList(treatmentid) {\r\n  const result = axios.get(\"treatment/getprescription/\" + treatmentid);\r\n  return result;\r\n}\r\n\r\n//실시간을 위해 테스트 리스트 가져오기\r\nexport function getTestList(treatmentid) {\r\n  const result = axios.get(\"treatment/gettestlist/\" + treatmentid);\r\n  return result;\r\n}\r\n\r\n//환자 목록 가져오기\r\nexport function getPatientList() {\r\n  const result = axios.get(\"treatment/getpatientlist\");\r\n  return result;\r\n}\r\n\r\n//\r\nexport function getPatient(patientid) {\r\n  const result = axios.get(\"treatment/getpatient/\"+patientid);\r\n  return result;\r\n}\r\n\r\nexport function getTestImgs(treatmentid, testdataid) {\r\n  const result = axios.get(\"treatment/getimgList\", {params: {treatmentid, testdataid}});\r\n  return result;\r\n}","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nfunction ImgDetailModal(props) {\r\n  return (\r\n    <Modal animation={false} show={props.show} onHide={props.closeImgModal} size=\"xl\" centered>\r\n      <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"}}>\r\n        <Modal.Title style={{color:\"#FFFFFF\"}}>사진 상세</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body >\r\n        {props.selectedImg.imgid != null ? \r\n        <a href={`http://kosa3.iptime.org:50006/treatment/imgdownload/${props.selectedImg.imgid}`}>\r\n          <img width={\"100%\"} height={\"100%\"} alt=\"xray\"  src={`http://kosa3.iptime.org:50006/treatment/imgdownload/${props.selectedImg.imgid}`}></img>\r\n        </a>\r\n        :\r\n        null\r\n        }\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" size=\"sm\" onClick={props.closeImgModal}>\r\n          닫기\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ImgDetailModal;","import { useEffect, useState } from \"react\";\r\nimport { Accordion, Alert, Badge, Button, Card, Carousel } from \"react-bootstrap\";\r\nimport { getTestImgs } from \"apis/Treatment\"\r\nimport ImgDetailModal from \"./ImgDetailModal\";\r\n\r\nfunction PackageImgTest(props) {\r\n\r\n  const [imgList, setImgList] = useState([]);\r\n  const [selectedImg, setSelectedImg] = useState({});\r\n  const [imgShow, setImgShow] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const test = props.groupTest.tests[0];\r\n    if(test.result != null && test.result === \"첨부완료\"){\r\n      work(test.treatmentid, test.testdataid);\r\n    } \r\n  },[props.groupTest])\r\n\r\n  const work = async(treatmentid, testdataid) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await getTestImgs(treatmentid, testdataid);\r\n      setImgList(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n   \r\n  }\r\n\r\n  const showImgModal = (img) => {\r\n    setSelectedImg(img);\r\n    setImgShow(true);\r\n  }\r\n\r\n  const closeImgModal = () => {\r\n    setSelectedImg({});\r\n    setImgShow(false)\r\n\r\n  };\r\n  return (\r\n    <>\r\n      <Accordion className=\"mb-3\">\r\n        <Card>\r\n          <Accordion.Toggle as={Alert} variant=\"dark\" className=\"mb-0\" eventKey=\"0\">\r\n          <span style={{fontWeight:\"bold\"}}>\r\n          {props.groupTest.groupname}&nbsp;&nbsp;</span>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body>\r\n              {props.groupTest.tests.map(test => {\r\n                return (\r\n                  <Accordion key={test.testdataid} className=\"mb-3\" defaultActiveKey={\"0\"}>\r\n                    <Card border=\"secondary\">\r\n                      <Card.Header>\r\n                        <Accordion.Toggle block as={Button} size=\"sm\" variant=\"outline-light\" eventKey=\"0\">\r\n                          <span style={{fontSize:\"14px\", fontWeight:\"bold\", color:\"black\"}}>{test.testdataname}\t&nbsp;&nbsp; {props.groupTest.tests[0].result ===\"첨부완료\" ? <Badge variant=\"primary\">입력완료</Badge> : <Badge variant=\"danger\">미입력</Badge>}\r\n                          </span>\r\n                        </Accordion.Toggle>\r\n                      </Card.Header>\r\n                      <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                        {props.groupTest.tests[0].result ===\"첨부완료\" ?\r\n                          <Carousel interval={null} prevIcon={<span className=\"carousel-control-prev-icon bg-dark\"/>} nextIcon={<span className=\"carousel-control-next-icon bg-dark\"/>}>\r\n                            {\r\n                            loading ===true ? \r\n                            <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n                              <div className=\"spinner-border text-success\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                              </div>\r\n                            </div>\r\n                            :\r\n                            imgList != null &&\r\n                            imgList.map((img) => {\r\n                              return(\r\n                                <Carousel.Item key={img.imgid}>\r\n                                  <img\r\n                                    className=\"d-block\"\r\n                                    src={`http://kosa3.iptime.org:50006/treatment/imgdownload/${img.imgid}`}\r\n                                    width=\"100%\"\r\n                                    height=\"536px\"\r\n                                    onClick={() => { showImgModal(img) }}\r\n                                    style={{cursor:\"pointer\"}}\r\n                                    alt=\"xray\"\r\n                                  />\r\n                                </Carousel.Item>\r\n                              )\r\n                            })}\r\n                          </Carousel>\r\n                          :\r\n                          \"결과 미입력\"\r\n                        }\r\n                        </Card.Body>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                  </Accordion>\r\n                );\r\n              })}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n      <ImgDetailModal show={imgShow} closeImgModal={closeImgModal} selectedImg={selectedImg}></ImgDetailModal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PackageImgTest;","\r\nimport { Accordion, Badge, Button, Card, Table } from \"react-bootstrap\";\r\n\r\nfunction Test(props) {\r\n  return (\r\n    <Accordion className=\"mb-3\" defaultActiveKey={\"0\"}>\r\n    <Card border=\"secondary\">\r\n      <Card.Header>\r\n        <Accordion.Toggle block as={Button} size=\"sm\" variant=\"outline-light\" eventKey=\"0\">\r\n          <span style={{fontSize:\"14px\", fontWeight:\"bold\", color:\"black\"}}>{props.test.testdataid}\t&nbsp;&nbsp;{props.test.testname}\r\n            &nbsp;&nbsp;<span style={{color:props.test.testcontainer===\"EDTA\"? \"purple\" : \"red\", marginRight:\"8px\"}}>{props.test.testcontainer}</span>\r\n           {(props.test.result != null && props.test.result !==\"\") ? <Badge variant=\"primary\">입력완료</Badge> : <Badge variant=\"danger\">미입력</Badge>} \r\n          </span>\r\n        </Accordion.Toggle>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"0\">\r\n        <Card.Body>\r\n          {(props.test.result != null && props.test.result !==\"\") ? \r\n            <Table striped hover className=\"text-center table-bordered\">\r\n              <thead></thead>\r\n              <tbody>\r\n                <tr>\r\n                  <th>하한치</th>\r\n                  <th>검사결과</th>\r\n                  <th>상한치</th>\r\n                </tr>\r\n                <tr>\r\n                  <td>{props.test.min}</td>\r\n                  <td className={(props.test.result < props.test.min || props.test.result > props.test.max) ? \"table-danger\" : \"table-primary\"}>{props.test.result == null ? 0 : props.test.result}&nbsp;&nbsp;{props.test.testunit}</td>\r\n                  <td>{props.test.max}</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n            : \r\n            \"결과 미입력\"}\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default Test;","import { Accordion, Alert, Card } from \"react-bootstrap\";\r\nimport Test from \"../Test\";\r\n\r\nfunction PackageTest(props) {\r\n  return (\r\n    <Accordion className=\"mb-3\">\r\n      <Card >\r\n        <Accordion.Toggle as={Alert} variant=\"dark\" className=\"mb-0\" eventKey=\"0\">\r\n        <span style={{fontWeight:\"bold\"}}>\r\n        {props.groupTest.groupcode}&nbsp;&nbsp;{props.groupTest.groupname}</span>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"0\">\r\n          <Card.Body>\r\n            {props.groupTest.tests.map(test => {\r\n              return (\r\n                <Test key={test.testdataid} test={test}/>\r\n              );\r\n            })}\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default PackageTest;","import React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction PrescriptionPackageItem(props) {\r\n  return (\r\n    <div key={props.item.groupcode} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n      <div style={{width:\"40%\"}}>{props.item.groupcode}</div>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.groupname}</Tooltip>}>\r\n        <div style={{width:\"40%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.groupname}</div>\r\n      </OverlayTrigger>\r\n      <div style={{width:\"20%\"}}><button className=\"btn btn-success btn-sm\" onClick={() => {props.addPackage(props.item)}}>추가</button></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PrescriptionPackageItem);","import React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction PrescriptionTestItem(props) {\r\n  return (\r\n    <div key={props.item.testdataid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n      <div style={{width:\"20%\"}}>{props.item.groupcode}</div>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.groupname}</Tooltip>}>\r\n        <div style={{width:\"20%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.groupname}</div>\r\n      </OverlayTrigger>\r\n      <div style={{width:\"20%\"}}>{props.item.testdataid}</div>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.testdataname}</Tooltip>}>\r\n        <div style={{width:\"20%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.testdataname}</div>\r\n      </OverlayTrigger>\r\n      <div style={{width:\"20%\"}}><button className=\"btn btn-success btn-sm\" onClick={() => {props.addItem(props.item)}}>추가</button></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PrescriptionTestItem);","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Modal, Nav, OverlayTrigger, Tab, Tooltip } from \"react-bootstrap\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport PrescriptionPackageItem from \"./PrescriptionPackageItem\";\r\nimport PrescriptionTestItem from \"./PrescriptionTestItem\";\r\n\r\nfunction PrescriptionTestsModal(props) {\r\n\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [searchType, setSearchType] = useState(\"groupcode\");\r\n  const [eventKey, setEventKey] = useState(\"test\")\r\n\r\n  const [prescriptionItems, setPrescriptionItems] = useState([]);\r\n  const [groupTests, setGroupTests] = useState([]);\r\n  const [searchGroupTests, setSearchGroupTests] = useState([]);\r\n  const [searchList, setSearchList] = useState([]);\r\n\r\n  const handleSearchName = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(props.show === true){\r\n      setPrescriptionItems(props.itemList);\r\n      setSearchName(\"\");\r\n      setSearchList(props.staticItemList);\r\n      setSearchGroupTests(groupTests);\r\n    }\r\n  },[props, groupTests]);\r\n\r\n  useEffect(() => {\r\n    const groupList = [];\r\n    props.staticItemList.reduce((gt, t) => {\r\n      if(!gt[t.groupcode]){\r\n        gt[t.groupcode] = {};\r\n        gt[t.groupcode].groupcode = t.groupcode;\r\n        gt[t.groupcode].groupname = t.groupname;\r\n        gt[t.groupcode].tests = [];\r\n        gt[t.groupcode].tests.push(t);\r\n        groupList.push(gt[t.groupcode]);\r\n      } else {\r\n        gt[t.groupcode].tests.push(t);\r\n      }\r\n      return gt;\r\n    }, {});\r\n    setGroupTests(groupList);\r\n    setSearchGroupTests(groupList);\r\n  }, [props.staticItemList])\r\n\r\n  const prescribe = useCallback((items) => {\r\n    props.prescribe(items);\r\n    props.handleClose();\r\n  },[props]);\r\n\r\n  const addItem = useCallback((item) => {  \r\n      setPrescriptionItems((prevItems) => {\r\n        const compare = prevItems.findIndex((obj) => obj.testdataid === item.testdataid);\r\n        if(compare >= 0){\r\n          alert(\"이미 처방받았습니다.\");\r\n          return prevItems;\r\n        } else {\r\n          const newItems = prevItems.concat(item);\r\n          return newItems;\r\n        }\r\n      });\r\n\r\n  },[])\r\n\r\n  const addPackage = useCallback((item) => {\r\n    setPrescriptionItems((prevItems) => {\r\n      let newItems = prevItems.filter(prevItem => prevItem.groupcode !== item.groupcode);\r\n      newItems = newItems.concat(item.tests);\r\n      return newItems;\r\n    })\r\n  },[]);\r\n\r\n  const removeItem = useCallback((item) => {\r\n    setPrescriptionItems((prevItems) => {\r\n      const newItems = prevItems.filter(prevItem => prevItem.testdataid !== item.testdataid);\r\n      return newItems;\r\n    })\r\n  }, [])\r\n  \r\n  const search = useCallback((search, searchType, eventKey) => {\r\n    let newTests = [];\r\n    search = search.toUpperCase();\r\n    if(eventKey === \"test\"){\r\n\r\n      setSearchList(() => {\r\n        if(searchType === \"dataid\") {\r\n          newTests = props.staticItemList.filter(test => (test.testdataid.toUpperCase()).indexOf(search) !== -1);\r\n        } else if (searchType === \"dataname\") {\r\n          newTests = props.staticItemList.filter(test => (test.testdataname.toUpperCase()).indexOf(search) !== -1);\r\n        } else if (searchType === \"groupcode\") {\r\n          newTests = props.staticItemList.filter(test => (test.groupcode.toUpperCase()).indexOf(search) !== -1);\r\n        } else if (searchType === \"groupname\") {\r\n          newTests = props.staticItemList.filter(test => (test.groupname.toUpperCase()).indexOf(search) !== -1);\r\n        } \r\n        return newTests;\r\n      });\r\n    } else if(eventKey === \"package\") {\r\n\r\n      setSearchGroupTests(() => {\r\n        if (searchType === \"groupcode\") {\r\n          newTests = groupTests.filter(test => (test.groupcode.toUpperCase()).indexOf(search) !== -1);\r\n        } else if (searchType === \"groupname\") {\r\n          newTests = groupTests.filter(test => (test.groupname.toUpperCase()).indexOf(search) !== -1);\r\n        }\r\n        return newTests;\r\n      })\r\n    }\r\n\r\n  }, [props.staticItemList, groupTests]);\r\n\r\n  const selectType = useCallback((event) => {\r\n    setSearchType(event.target.value);\r\n  }, []);\r\n\r\n  const selectNav = useCallback((key) => {\r\n    setEventKey(key);\r\n\r\n    setSearchType(\"groupcode\");\r\n    setSearchName(\"\");\r\n\r\n    setSearchList(props.staticItemList);\r\n    setSearchGroupTests(groupTests);\r\n  }, [props.staticItemList, groupTests]);\r\n\r\n  const rowRenderer = ({index, key, style}) => {\r\n    return (\r\n      <div key={key} style={style}>\r\n        <PrescriptionTestItem item={searchList[index]} addItem={addItem}></PrescriptionTestItem>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const rowRendererPackage = ({index, key, style}) => {\r\n    return (\r\n      <div key={key} style={style}>\r\n        <PrescriptionPackageItem item={searchGroupTests[index]} addPackage={addPackage}></PrescriptionPackageItem>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal animation={false} show={props.show} onHide={props.handleClose} size=\"xl\" centered>\r\n      <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"} }>\r\n        <Modal.Title style={{color:\"#FFFFFF\"}}>검사 처방</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body >\r\n        <div className=\"input-group d-flex pb-2 mb-1 justify-content-end border-bottom\">\r\n          <div className=\"d-flex\">\r\n          <select className=\"custom-select\" style={{width:\"110px\"}} onChange={selectType}>\r\n            <option value=\"groupcode\" selected={searchType ===\"groupcode\"}>묶음코드</option>\r\n            <option value=\"groupname\" selected={searchType ===\"groupname\"}>묶음명</option>\r\n            {eventKey !== \"package\"? \r\n              <>\r\n                <option value=\"dataid\" selected={searchType ===\"dataid\"}>처방코드</option>\r\n                <option value=\"dataname\" selected={searchType ===\"dataname\"}>처방명</option>\r\n              </>\r\n              :\r\n              null\r\n            }\r\n          </select>\r\n            <input type=\"text\" value={searchName} onChange={handleSearchName}/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={ () => search(searchName, searchType, eventKey, )}>검색</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{height:\"550px\"}} className=\"d-flex\">\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\", marginTop:\"50px\"}}>\r\n            <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n              <div style={{width:\"20%\"}}>묶음코드</div>\r\n              <div style={{width:\"20%\"}}>묶음명</div>\r\n              <div style={{width:\"20%\"}}>처방코드</div>\r\n              <div style={{width:\"20%\"}}>처방명</div>\r\n              <div style={{width:\"20%\"}}></div>\r\n            </div>\r\n            <div className=\"overflow-auto border\" style={{height:\"460px\"}}>\r\n            {prescriptionItems != null &&\r\n            prescriptionItems.map ((item, index) => {\r\n              return (\r\n                <div key={item.testdataid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n                  <div style={{width:\"20%\"}}>{item.groupcode}</div>\r\n                  <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{item.groupname}</Tooltip>}>\r\n                    <div style={{width:\"20%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{item.groupname}</div>\r\n                  </OverlayTrigger>\r\n                  <div style={{width:\"20%\"}}>{item.testdataid}</div>\r\n                  <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{item.testdataname}</Tooltip>}>\r\n                    <div style={{width:\"20%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{item.testdataname}</div>\r\n                  </OverlayTrigger>\r\n                  <div style={{width:\"20%\"}}><button className=\"btn btn-danger btn-sm\" onClick={() => {removeItem(item)}}>제거</button></div>\r\n                </div>\r\n              );\r\n            })} \r\n            </div>\r\n          </div> \r\n\r\n          <div className=\"col-1 d-flex align-items-center justify-content-center\">\r\n            <i className=\"bi bi-arrow-left-square\" style={{fontSize:\"30px\"}}></i>\r\n          </div>\r\n\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\"}}>\r\n            <div style={{height:\"550px\"}}>\r\n              <Tab.Container defaultActiveKey={eventKey}>\r\n                <Nav fill variant=\"tabs\" onSelect={selectNav} >\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"test\">개별 처방</Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"package\">묶음 처방</Nav.Link>\r\n                  </Nav.Item>\r\n                </Nav>\r\n                <Tab.Content  style={{height:\"500px\"}}>\r\n                  <Tab.Pane eventKey= \"test\" className=\"pt-1\">\r\n                  <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n                    <div style={{width:\"20%\"}}>묶음코드</div>\r\n                    <div style={{width:\"20%\"}}>묶음명</div>\r\n                    <div style={{width:\"20%\"}}>처방코드</div>\r\n                    <div style={{width:\"20%\"}}>처방명</div>\r\n                    <div style={{width:\"20%\"}}></div>\r\n                  </div>\r\n                  <div className=\"border\" style={{height:\"460px\"}}>\r\n                    {searchList.length === 0 ? \r\n                      <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                        <i className=\"bi bi-x-octagon mr-2\"></i>  검색 결과가 없습니다.\r\n                      </div>\r\n                      :\r\n                      <AutoSizer>\r\n                        {\r\n                          ({width, height}) => {\r\n                            return (\r\n                              <List width={width} height={height}\r\n                                rowCount={searchList.length}\r\n                                rowHeight={50}\r\n                                rowRenderer={rowRenderer}\r\n                                overscanRowCount={5}\r\n                              />\r\n                            )\r\n                          }\r\n                        }\r\n                      </AutoSizer>\r\n                    }\r\n                  </div>\r\n                  </Tab.Pane>\r\n\r\n                  <Tab.Pane eventKey=\"package\" className=\"pt-1\">\r\n                    <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n                      <div style={{width:\"40%\"}}>묶음코드</div>\r\n                      <div style={{width:\"40%\"}}>묶음명</div>\r\n                      <div style={{width:\"20%\"}}></div>\r\n                    </div>\r\n                    <div className=\"border\" style={{height:\"460px\"}}>\r\n                    {searchGroupTests.length === 0 ? \r\n                      <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                        <i className=\"bi bi-x-octagon mr-2\"></i>  검색 결과가 없습니다.\r\n                      </div>\r\n                      :\r\n                      <AutoSizer>\r\n                        {\r\n                          ({width, height}) => {\r\n                            return (\r\n                              <List width={width} height={height}\r\n                                rowCount={searchGroupTests.length}\r\n                                rowHeight={50}\r\n                                rowRenderer={rowRendererPackage}\r\n                                overscanRowCount={5}\r\n                              />\r\n                            )\r\n                          }\r\n                        }\r\n                      </AutoSizer>\r\n                    }\r\n                    </div>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </Tab.Container>\r\n            </div>\r\n          </div> \r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" size=\"sm\" onClick={props.handleClose}>\r\n          닫기\r\n        </Button>\r\n        <Button variant=\"outline-primary\" size=\"sm\" onClick={() => { prescribe(prescriptionItems) } }>\r\n          선택 완료\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PrescriptionTestsModal;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Col, Row, Toast } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ButtonHeader from \"./components/ButtonHeader\";\r\nimport PackageImgTest from \"./components/Tests/PackageImgTest\";\r\nimport PackageTest from \"./components/Tests/PackageTest\";\r\nimport PrescriptionTestsModal from \"./components/Tests/PrescriptionTestsModal\";\r\n\r\nfunction TestList(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [groupTests, setGroupTests] = useState({});\r\n\r\n  const [receptionToast, setReceptionToast] = useState(false);\r\n  const receptionToastShow = () => setReceptionToast(true);\r\n  const receptionToastClose = () => setReceptionToast(false);\r\n\r\n  const treatmentReception = useSelector((state)=>(state.receptionReducer.treatmentreception)) \r\n\r\n  const info = () => {\r\n    alert(\"대기중인 진료를 선택해주세요.\");\r\n  }\r\n\r\n  const toastClose = () => {\r\n    props.closeShow();\r\n  }\r\n\r\n  const prescribeTests = (prescriptionItems) => {\r\n    props.prescribeTests(prescriptionItems);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const group = props.treatmentTests.reduce((gt, t) => {\r\n      if(!gt[t.groupcode]){\r\n        gt[t.groupcode] = {};\r\n        gt[t.groupcode].groupcode = t.groupcode;\r\n        gt[t.groupcode].groupname = t.groupname;\r\n        gt[t.groupcode].testtype = t.testtype;\r\n        gt[t.groupcode].tests = [];\r\n        gt[t.groupcode].tests.push(t);\r\n      } else {\r\n        gt[t.groupcode].tests.push(t);\r\n      }\r\n      return gt;\r\n    }, {});\r\n    setGroupTests(group);\r\n  }, [props.treatmentTests])\r\n\r\n  useEffect(() => {\r\n    console.log(treatmentReception);\r\n    if(treatmentReception.status === \"접수\"){\r\n      receptionToastShow();\r\n    }\r\n  }, [treatmentReception])\r\n\r\n  return (\r\n    <>\r\n      <ButtonHeader headertitle=\"검사 목록\" iclassName=\"bi bi-droplet\" color=\"#E89677\" btnicon=\"bi bi-plus-square\" onclick={props.treatment.status===\"진료 대기\"? handleShow : info}/>\r\n      <PrescriptionTestsModal show={show} handleClose={handleClose} staticItemList={props.staticTests} itemList={props.treatmentTests} prescribe={prescribeTests}></PrescriptionTestsModal>\r\n      <div className=\"overflow-auto p-3\" style={{height:\"calc(100% - 50px)\"}}>\r\n        {\r\n          props.treatment.treatmentid == null ? \r\n          <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n            진료를 선택해주세요.\r\n          </div>\r\n          :\r\n          (\r\n            props.loading === true ? \r\n            <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n              <div className=\"spinner-border text-success\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            </div>\r\n            :\r\n            (\r\n              props.treatmentTests.length !== 0 ?\r\n              Object.values(groupTests).map(groupTest => {\r\n                return (\r\n                  groupTest.testtype === \"진단검사\" ?\r\n                  <PackageTest key={groupTest.groupcode}  groupTest={groupTest}/>\r\n                  :\r\n                  <PackageImgTest key={groupTest.groupcode} groupTest={groupTest}></PackageImgTest>\r\n                );\r\n              })\r\n              :\r\n              <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                처방 받은 내역이 없습니다.\r\n              </div>\r\n            )\r\n          )\r\n        }\r\n        <div style={{position: \"absolute\", bottom: \"40px\", right: \"30px\", zIndex:\"1000\"}}>\r\n          <Row>\r\n            <Col style={{width:\"400px\"}}>\r\n              <Toast onClose={toastClose} show={props.toastShow} delay={5000} autohide>\r\n                <Toast.Header style={{backgroundColor:\"#1B296D\"}}>\r\n                  <strong className=\"mr-auto\" style={{color:\"white\"}}>Message</strong>\r\n                  <small>complete</small>\r\n                </Toast.Header>\r\n                <Toast.Body style={{backgroundColor:\"white\"}}>진료 완료!</Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <div style={{position: \"absolute\", bottom: \"40px\", right: \"30px\", zIndex:\"990\"}}>\r\n          <Row>\r\n            <Col style={{width:\"400px\"}}>\r\n              <Toast onClose={receptionToastClose} show={receptionToast} delay={4000} autohide>\r\n                <Toast.Header style={{backgroundColor:\"green\"}}>\r\n                  <strong className=\"mr-auto\" style={{color:\"white\"}}>Message</strong>\r\n                </Toast.Header>\r\n                <Toast.Body>진료가 접수 되었습니다.</Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n  \r\n}\r\n\r\nexport default TestList;","import { useEffect, useState } from \"react\";\r\n\r\nfunction TreatmentMemo(props) {\r\n\r\n  const handlechange = (event) => {\r\n    props.setMemo(event.target.value);\r\n  }\r\n\r\n  return (\r\n  <>\r\n    <div className=\"d-flex row pb-1\" style={{height:\"50px\"}}><div className=\"p-2 ml-3 mr-2 text-center\" style={{ backgroundColor:\"#887BD2\", width:\"40px\", color:\"#FFFFFF\"}}><i className=\"bi bi-clipboard-plus\"></i></div><div className=\"d-flex align-items-center\">진료 메모</div></div>\r\n    <div className=\"p-3\" style={{height:\"calc(100% - 50px)\"}}>\r\n      <textarea value={props.treatment.status === \"진료 대기\" ? \r\n      props.memo\r\n      : \r\n      (props.treatment.memo == null ? \"\" : props.treatment.memo)} onChange={props.treatment.status !== \"진료 대기\" ? null : handlechange} readOnly={props.treatment.status !== \"진료 대기\"? true : false} className=\"h-100 w-100 \" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"15px\", height:\"50px\", outline:0}} >\r\n      </textarea>\r\n      {/* treatmentstate가 진료 대기이면 가능 완료이면 readonly*/}\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default TreatmentMemo;","import { getPatientList } from \"apis/Treatment\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport Item from \"views/components/Item\";\r\nfunction SearchPatient(props) {\r\n  const property = [\"patientid\", \"patientname\", \"age\", \"sex\", \"phonenumber\", \"lasttreatment\", \"registerday\"];\r\n\r\n  const [checkedPatient, setCheckedPatient] = useState({\r\n    patientname:\"환자이름\", \r\n    ssn1:\"\", \r\n    ssn2:\"\", \r\n    sex: \"성별\",\r\n    age:\"-\",\r\n    phonenumber: \"-\", \r\n  });\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [patientList, setPatientList] = useState([]);\r\n  const [searchList, setSearchList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const work = async() => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await getPatientList();\r\n        setPatientList(response.data);\r\n        setSearchList(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    work();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setCheckedPatient({\r\n      patientname:\"환자이름\", \r\n      ssn1:\"\", \r\n      ssn2:\"\", \r\n      sex: \"성별\",\r\n      age:\"-\",\r\n      phonenumber: \"-\", \r\n    })\r\n    setSearchList(patientList);\r\n    setSearchName(\"\");\r\n  }, [props.show, patientList])\r\n\r\n  const checkPatient = (patient) => {\r\n    setCheckedPatient(patient);\r\n  }\r\n\r\n  const selectedComplete = (patient) => {\r\n    props.selectPatient(patient); \r\n    props.handleClose();\r\n  }\r\n\r\n  const handleSearchName = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n\r\n  const search = useCallback((name, patientList) => {\r\n    setSearchList(() => {\r\n      const newPatient = patientList.filter(patient => patient.patientname.indexOf(name) !== -1);\r\n      return newPatient;\r\n    })\r\n  }, []);//useCallback로 받으면 () =>      ()괄호안에 매개변수를 받아야함\r\n\r\n  const rowRenderer = ({index, key, style}) => {\r\n    return (\r\n      <div key={key} style={style}>\r\n        <Item item={searchList[index]} property={property} onClick={checkPatient}></Item>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={props.show} onHide={props.handleClose} size=\"lg\">\r\n        <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"}}>\r\n          <Modal.Title style={{color:\"#FFFFFF\"}}>환자 검색</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"input-group mb-3\">\r\n            <input type=\"search\" value={searchName} onChange={handleSearchName} style={{width:\"300px\"}}/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={ () => search(searchName, patientList)}>검색</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <div style={{fontWeight:\"bold\"}}>현재 선택한 환자:  </div>\r\n            {checkedPatient.patientname}\r\n          </div>\r\n          <div style={{height:\"400px\"}} className=\"overflow-auto pt-1\">\r\n            {\r\n              loading === true ? \r\n              <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n                <div class=\"spinner-border text-success\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n              </div>\r\n              :\r\n              <AutoSizer>\r\n                {\r\n                  ({width, height}) => {\r\n                    return (\r\n                      <List width={width} height={height}\r\n                        rowCount={searchList.length}\r\n                        rowHeight={50}\r\n                        rowRenderer={rowRenderer}\r\n                        overscanRowCount={5}\r\n                      />\r\n                    )\r\n                  }\r\n                }\r\n              </AutoSizer>\r\n              // searchList.map ( patient => {\r\n              //   return (\r\n              //     <Item key={patient.patientid}  item={patient} property={property} onClick={checkPatient}></Item>\r\n              //   );\r\n              // })\r\n            }\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" size=\"sm\" onClick={props.handleClose}>\r\n            닫기\r\n          </Button>\r\n          <Button variant=\"outline-success\" size=\"sm\" onClick={() => { selectedComplete(checkedPatient) } }>\r\n            선택 완료\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchPatient;\r\n\r\n","import { useState } from \"react\";\r\nimport SearchPatient from \"./SearchPatient\";\r\n\r\n\r\nfunction PatientProfile(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const selectPatient = (patient) => {\r\n    props.selectPatient(patient);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"h-100 pl-3 pr-3 d-flex align-items-center\" style={{backgroundColor:\"#15367B\", marginRight:\"15px\", marginLeft:\"15px\"}}>\r\n        {/* 8vh */}\r\n        <div className=\"d-flex col\">\r\n          <div className=\"col-2 pl-0 pr-0 d-flex align-items-center text-center\" >\r\n            <div className=\"col-4 pl-0 pr-0\" style={{fontWeight:\"bold\", color:\"#FBFBFB\"}}>이름</div>\r\n            <div className=\"text-center pl-0 pr-0 pt-1 pb-1 ml-0 mr-0 col-8\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"7px\", fontSize:\"14px\", backgroundColor:\"#FFFFFF\"}}>{props.selectedPatient.patientname}</div>\r\n          </div>\r\n          <div className=\"col-2 pl-3 pr-0 d-flex align-items-center text-center\">\r\n            <div className=\"col-4 pl-0 pr-0\" style={{fontWeight:\"bold\", color:\"#FBFBFB\"}}>나이</div>\r\n            <div className=\"text-center pl-0 pr-0 pt-1 pb-1 ml-0 mr-0 col-8\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"7px\", fontSize:\"14px\", backgroundColor:\"#FFFFFF\"}}>{props.selectedPatient.age}세</div>\r\n          </div>\r\n          <div className=\"col-2 pl-3 pr-0 d-flex align-items-center text-center\">\r\n            <div className=\"col-4 pl-0 pr-0\" style={{fontWeight:\"bold\", color:\"#FBFBFB\"}}>성별</div>\r\n            <div className=\"text-center pl-0 pr-0 pt-1 pb-1 ml-0 mr-0 col-8\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"7px\", fontSize:\"14px\", backgroundColor:\"#FFFFFF\"}}>{props.selectedPatient.sex}</div>\r\n          </div>\r\n          <div className=\"col-4 pl-3 pr-0 d-flex align-items-center text-center\">\r\n            <div className=\"col-3 pl-0 pr-0\" style={{fontWeight:\"bold\", color:\"#FBFBFB\"}}>주민등록번호</div>\r\n            <div className=\"text-center pt-1 pb-1 pl-0 pr-0 ml-0 mr-0 col-6\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"7px\", fontSize:\"14px\", backgroundColor:\"#FFFFFF\"}}>{props.selectedPatient.ssn1} - {props.selectedPatient.ssn2}</div>\r\n          </div>\r\n          <div className=\"col-2 pl-3 pr-0  text-right\">\r\n              <button className=\"btn btn-dark btn-sm\" onClick={handleShow}>환자 검색</button>\r\n              <button className={`btn btn-dark btn-sm ml-2 mr-5`} disabled={props.treatment.status === \"진료 대기\"? false : true} onClick={props.saveTreatment}>저장</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <SearchPatient show={show} handleClose={handleClose} selectPatient={selectPatient}></SearchPatient>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PatientProfile;","import DiagnosisList from \"./DiagnosisList\";\r\nimport DrugList from \"./DrugList\";\r\nimport PatientTreatment from \"./PatientTreatment\";\r\nimport TestList from \"./TestList\";\r\nimport TreatmentMemo from \"./TreatmentMemo\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PatientProfile from \"./components/PatientProfile\";\r\nimport { getPatient, getStaticDiagnoses, getStaticDrugs, getPrescriptionList, prescribeTreatment, getAllTreatments, getStaticTests, getTestList } from \"apis/Treatment\";\r\nimport { sendRedisMessage } from \"apis/Redis\";\r\nimport { Col, Row, Toast } from \"react-bootstrap\";\r\n\r\nfunction Treatment(props) {\r\n\r\n  const globalPatient = useSelector((state) => {\r\n    return state.patientReducer.patient;\r\n  })\r\n  const globalUserid = useSelector((state) => {return state.authReducer.userid});\r\n\r\n  const [patient, setPatient] = useState({\r\n\r\n    patientname:\"환자이름\", \r\n    ssn1:\"\", \r\n    ssn2:\"\", \r\n    sex: \"성별\",\r\n    age:\"-\",\r\n    phonenumber: \"-\", \r\n  });\r\n  \r\n  const selectPatient = useCallback((patient) => {\r\n    setPatient(patient);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(globalPatient.patientid != null){\r\n      const response = getPatient(globalPatient.patientid);\r\n      response.then((response) => {\r\n        setPatient(response.data);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      })\r\n      \r\n    }\r\n  }, [globalPatient]) \r\n\r\n  const [treatment, setTreatment] = useState({})\r\n\r\n  const selectTreatment = useCallback((treatment) => {\r\n    if(treatment.userid !== globalUserid && treatment.status === \"진료 대기\"){\r\n      alert(\"해당 진료를 처방할 수 없습니다.\");\r\n    } else {\r\n      setTreatment(treatment);\r\n    }\r\n  }, [globalUserid])\r\n\r\n  const [patientTreatments, setPatientTreatments] = useState([]);\r\n  const [treatmentDrugs, setTreatmentDrugs] = useState([]);\r\n  const [treatmentDiagnoses, setTreatmentDiagnoses] = useState([]);\r\n  const [treatmentTests, setTreatmentTests] = useState([]);\r\n  const [memo, setMemo] = useState(\"\");\r\n\r\n  const [staticDrugs, setStaticDrugs] = useState([]);\r\n  const [staticDignoses, setStaticDignoses] = useState([]);\r\n  const [staticTests, setStaticTests] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [prescribeLoading, setPrescribeLoading] = useState(false);\r\n  const [treatmentsLoading, setTreatmentLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const work = async() => {\r\n      try {\r\n        const drugResponse = await getStaticDrugs();\r\n        const diagnosesResponse = await getStaticDiagnoses();\r\n        const testResponse = await getStaticTests();\r\n        setStaticDrugs(drugResponse.data);\r\n        setStaticDignoses(diagnosesResponse.data);\r\n        setStaticTests(testResponse.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    work();\r\n  },[])//정적 데이터 불러오기\r\n\r\n  useEffect(() => {\r\n    if(treatment.status===\"진료 완료\"){\r\n      const work = async() => {\r\n        try {\r\n          setPrescribeLoading(true);\r\n          const response = await getPrescriptionList(treatment.treatmentid);\r\n          setTreatmentDrugs(() => response.data.drugsList);\r\n          setTreatmentDiagnoses(() => response.data.diagnosesList);\r\n          setTreatmentTests(() => response.data.testsList);\r\n        } catch (error) {\r\n          console.log(error);\r\n        } finally {\r\n          setPrescribeLoading(false);\r\n        }\r\n\r\n      }\r\n      work();\r\n    }\r\n    return (() => {\r\n      setTreatmentDrugs([]);\r\n      setTreatmentDiagnoses([]);\r\n      setTreatmentTests([]);\r\n      setMemo(\"\");\r\n      })\r\n  }, [treatment]);//선택한 진료 변경시 그 진료가 처방받은 약, 상병, 테스트 가져오기\r\n\r\n  const testResult = useSelector((state) => {\r\n    return state.receptionReducer.testresult;\r\n  })\r\n\r\n  //testResult가 바뀔 때 \r\n  useEffect(() => {\r\n    if(testResult.treatmentid != null && testResult.treatmentid === treatment.treatmentid){\r\n      const response = getTestList(treatment.treatmentid);\r\n      response.then((response) => {\r\n        setTreatmentTests(response.data);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      })\r\n    }\r\n  }, [testResult]);\r\n\r\n\r\n  useEffect(() => {\r\n    const work = async() => {\r\n      try {\r\n        setTreatmentLoading(true);\r\n        const response = await getAllTreatments(patient.patientid);\r\n        if(response.data){\r\n          setPatientTreatments(() => {\r\n            return response.data\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setTreatmentLoading(false);\r\n      }\r\n    }\r\n    work();\r\n    setMemo(\"\");\r\n    setTreatment({});\r\n  }, [patient])\r\n\r\n  const prescribeDrugs = useCallback((prescriptionItems) => {\r\n    setTreatmentDrugs(prescriptionItems) \r\n  }, []);\r\n //약 처방 함수\r\n\r\n  const prescribeDiagnoses = useCallback((prescriptionItems) => {\r\n    setTreatmentDiagnoses(prescriptionItems)\r\n  },[]);\r\n  //증상 처방 함수\r\n\r\n  const prescribeTests = useCallback((prescriptionItems) => {\r\n    setTreatmentTests(prescriptionItems);\r\n  }, [])//검사 처방 함수\r\n\r\n  const prescribeList = async() => {\r\n    try {\r\n      let prescription = {};\r\n\r\n      let time = new Date(treatment.treatmentdate).getTime();\r\n      let newTreatment = {\r\n        ...treatment,\r\n        treatmentdate:time,\r\n        memo:memo\r\n      }\r\n\r\n      prescription.treatmentDrugs = [...treatmentDrugs];\r\n      prescription.treatmentDiagnoses = [...treatmentDiagnoses];\r\n\r\n      prescription.treatmentTests = [...treatmentTests];\r\n      prescription.treatment = newTreatment;\r\n      prescription.userid = globalUserid;\r\n      prescription.patientid = patient.patientid;\r\n      const response = await prescribeTreatment(prescription);\r\n      if(response.data === \"success\"){\r\n        const response = await getAllTreatments(patient.patientid);\r\n\r\n        if(response.data){\r\n          setMemo(\"\");\r\n          setPatientTreatments(response.data);\r\n          const message = {\r\n            type:\"treatment\",\r\n            patientid:patient.patientid\r\n          };\r\n          newTreatment.status = \"진료 완료\"\r\n          sendRedisMessage(message);//진료가 완료 되었다는 사실을 접수처에 알림\r\n          setTreatment(newTreatment);\r\n        }\r\n        \r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const saveTreatment = () => {\r\n    if(window.confirm(\"처방을 완료 하시겠습니까?\") === true){\r\n      prescribeList();\r\n      setShow(true);\r\n    }\r\n  }\r\n  const closeShow = () => {\r\n    setShow(false)\r\n  }\r\n  return (\r\n    <>        \r\n      <div style={{height:\"5vh\", marginBottom:\"2vh\",  marginTop:\"1vh\"}}>\r\n        <PatientProfile selectedPatient={patient} treatment={treatment} selectPatient={selectPatient} saveTreatment={saveTreatment} ></PatientProfile>\r\n      </div>\r\n      <div className=\"row ml-0 mr-0\" style={{heighn:\"92vh\"}}>\r\n        <div className=\"col-3 h-100 border-right\">\r\n          <div className=\"pl-3 pr-3 pt-0 pb-1 border border-dark\" style={{height:\"46vh\", marginBottom:\"2vh\", backgroundColor:\"#FFFFFF\"}}>\r\n            <PatientTreatment loading={treatmentsLoading} selectedPatient={patient} treatment={treatment} selectTreatment={selectTreatment} patientTreatments={patientTreatments}/>\r\n          </div>\r\n          <div className=\"pl-3 pr-3 pt-0 pb-1 border border-dark\" style={{height:\"42vh\",marginBottom:\"2vh\", backgroundColor:\"#FFFFFF\"}}>\r\n            <TreatmentMemo treatment={treatment} setMemo={setMemo} memo={memo}/>\r\n          </div> \r\n        </div>\r\n        <div className=\"col-4 h-100 border-right\">\r\n          <div className=\"pl-3 pr-3 pb-3 pt-0 border border-dark\" style={{height:\"46vh\", backgroundColor:\"#FFFFFF\", marginBottom:\"2vh\"}}>\r\n            <DiagnosisList loading={prescribeLoading} treatment={treatment} treatmentDiagnoses={treatmentDiagnoses}\r\n                  staticDignoses={staticDignoses} prescribeDiagnoses={prescribeDiagnoses}/>\r\n          </div>\r\n          <div className=\"pl-3 pr-3 pt-0 pb-1 border border-dark\" style={{height:\"42vh\",marginBottom:\"2vh\",  backgroundColor:\"#FFFFFF\"}}>\r\n            <DrugList loading={prescribeLoading} treatment={treatment} treatmentDrugs={treatmentDrugs} \r\n                  staticDrugs={staticDrugs} prescribeDrugs={prescribeDrugs}/>\r\n          </div>             \r\n        </div>\r\n        <div className=\"col-5 h-100\">\r\n          <div className=\"pl-3 pr-3 pb-3 pt-0 border border-dark\" style={{height:\"90vh\",marginBottom:\"2vh\", backgroundColor:\"#FFFFFF\"}}>\r\n            <TestList loading={prescribeLoading} treatment={treatment} treatmentTests = {treatmentTests}\r\n                  staticTests={staticTests} prescribeTests={prescribeTests} closeShow={closeShow} toastShow={show}></TestList>\r\n          </div>                \r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Treatment;","import { useState, forwardRef } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"views/style/datepicker.css\";\r\nimport { registerLocale } from \"react-datepicker\";  // 한국어적용\r\nimport ko from 'date-fns/locale/ko'; // 한국어적용\r\n\r\nregisterLocale(\"ko\", ko) // 한국어적용\r\n\r\nfunction PeriodSearch({change, startdate, enddate}) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [btnClicked, setBtnClicked] = useState(\"당일\");\r\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\r\n    <div className=\"example-custom-input\" onClick={onClick} ref={ref}>\r\n      <div className=\"mr-1\">\r\n      <i className=\"bi bi-calendar-day mr-3\"></i>              \r\n      {value}\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  const dateSubmit = () => {\r\n    \r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    change(startDate, endDate) //mysql between 이상~초과 여서 인식불가. 1일 추가해줘야함\r\n  }\r\n\r\n  const handleBtnClicked = (e) => {\r\n    const { value } = e.target;\r\n    setBtnClicked(value);\r\n    const currentDate = new Date(); \r\n    // 오늘 날짜\r\n    if (value === \"당일\") {\r\n      setStartDate(new Date());\r\n      setEndDate(new Date());\r\n    }\r\n    // 3일 전부터 오늘까지의 기간\r\n    if (value === \"3일\") {\r\n      let threeDaysAgo = new Date(\r\n        currentDate.getTime() - 3 * 24 * 60 * 60 * 1000\r\n      );\r\n      setStartDate(threeDaysAgo);\r\n      setEndDate(new Date());\r\n    }\r\n    // 1주일 전부터 오늘까지의 기간\r\n    if (value === \"1주일\") {\r\n      let weekAgo = new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n      setStartDate(weekAgo);\r\n      setEndDate(new Date());\r\n    }\r\n    // 1개월 전부터 오늘까지의 기간\r\n    if (value === \"1개월\") {\r\n      let oneMonthAgo = new Date(\r\n        new Date().getFullYear(),\r\n        new Date().getMonth() - 1,\r\n        new Date().getDate()\r\n      );\r\n      setStartDate(oneMonthAgo);\r\n      setEndDate(new Date());\r\n    }\r\n    // 3개월 전부터 오늘까지의 기간\r\n    if (value === \"3개월\") {\r\n      let threeMonthAgo = new Date(\r\n        new Date().getFullYear(),\r\n        new Date().getMonth() - 3,\r\n        new Date().getDate()\r\n      );\r\n      setStartDate(threeMonthAgo);\r\n      setEndDate(new Date());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n            <div className=\"mt-3 mb-3\" style={{backgroundColor: \"#EDECEA\"}}>\r\n              <div className=\"ml-3 pt-2\">\r\n                <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" value=\"당일\" onClick={ handleBtnClicked }>당일</button>\r\n                <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" value=\"3일\" onClick={ handleBtnClicked }>3일</button>\r\n                <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" value=\"1주일\" onClick={ handleBtnClicked }>1주일</button>\r\n                <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" value=\"1개월\" onClick={ handleBtnClicked }>1개월</button>\r\n                <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" value=\"1개월\" onClick={ handleBtnClicked }>3개월</button>\r\n              </div>\r\n              <div className=\"row ml-3 mt-3 mb-2 pb-2\">\r\n              <div className=\"row ml-1\">\r\n                <div className=\"mr-4\">\r\n                  <div>From: </div>\r\n                <DatePicker\r\n                  selected={startDate}\r\n                  onChange={(date) => setStartDate(date)}\r\n                  customInput={<ExampleCustomInput />}\r\n                  dateFormat=\"yyyy-MM-dd\"\r\n                  locale={ko}\r\n                />\r\n                </div>\r\n              </div>\r\n              <div className=\"row ml-3\">\r\n                <div className=\"mr-4\">\r\n                <div>To: </div>\r\n                <div className=\"row ml-0\">\r\n                <DatePicker\r\n                  selected={endDate}\r\n                  onChange={(date) => setEndDate(date)}\r\n                  customInput={<ExampleCustomInput />}\r\n                  dateFormat=\"yyyy-MM-dd\"\r\n                  locale={ko}\r\n                />\r\n                </div>\r\n                </div>\r\n              </div>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-dark btn-block\" onClick={ dateSubmit }>Submit</button>\r\n            </div>\r\n          </div>\r\n  );\r\n}\r\nexport default PeriodSearch;","import React from 'react';\r\nimport { useBarcode } from 'react-barcodes';\r\nimport moment from 'moment';\r\n\r\nfunction Print({selectpatientinfo, grouplist}) {\r\n  const { inputRef } = useBarcode({\r\n    value: selectpatientinfo.patientid+\"_\"+selectpatientinfo.testreceptionid+moment().format('YYYYMMDD'),\r\n    options: {\r\n      background: '#ffffff',\r\n    }\r\n  });\r\n\r\n  return (\r\n    <img ref={inputRef} />\r\n  );\r\n}\r\nexport default Print;","import axios from \"axios\";\r\n\r\nexport function testlistByDate(startdate, enddate) {\r\n  const promise = axios.get(\"test/patientbytestdate\", {params:{startdate, enddate}})\r\n  return promise\r\n}\r\nexport function testlistByPatientid(patientid) {\r\n  const promise = axios.get(\"test/testreceptionbypatientid\", {params: {patientid}})\r\n  return promise\r\n}\r\n\r\nexport function testlistByReceptionid(testreceptionid) {\r\n  const promise = axios.get(\"test/testlistbyreceptionid\", {params: {testreceptionid}})\r\n  return promise\r\n}\r\n\r\nexport function createXray(multipartFormData) {\r\n  console.log(multipartFormData)\r\n  return axios.post(\"test/xray\", multipartFormData); \r\n}\r\n\r\nexport function insertResult(test){\r\n  console.log(test)\r\n  const promise = axios.put(\"test/result\", test) \r\n  return promise;\r\n}\r\n\r\nexport function resultStatus(testreceptionid) {\r\n  const promise = axios.put(\"test/resultstatus/\"+testreceptionid)\r\n  return promise\r\n}\r\n\r\nexport function startTests(checkedList) {\r\n  //console.log(checkedList)\r\n  const tests = [];\r\n  JSON.stringify(checkedList, (key, val) => {\r\n    if (key === 'tests') {\r\n      tests.push(val);\r\n    }\r\n    return val;\r\n  });\r\n  const promise = axios.put(\"test/starttest\", tests);\r\n  \r\n  return promise;\r\n}\r\n\r\nexport function startPatient(testreceptionid) {\r\n  console.log(testreceptionid)\r\n  const promise = axios.put(\"test/teststartpatient/\"+testreceptionid)\r\n  return promise\r\n}\r\n\r\nexport function cancelTests(checkedList) {\r\n  console.log(checkedList)\r\n  const tests = [];\r\n  JSON.stringify(checkedList, (key, val) => {\r\n    if (key === 'tests') {\r\n      tests.push(val);\r\n    }\r\n    return val;\r\n  });\r\n  const promise = axios.put(\"test/canceltest\", tests);\r\n  \r\n  return promise;\r\n}\r\n\r\nexport function cancelPatient(testreceptionid) {\r\n  console.log(testreceptionid)\r\n  const promise = axios.put(\"test/testcancelpatient/\"+testreceptionid)\r\n  return promise\r\n}\r\n\r\nexport function finishTests(checkedList) {\r\n  console.log(checkedList)\r\n  const tests = [];\r\n  JSON.stringify(checkedList, (key, val) => {\r\n    if (key === 'tests') {\r\n      tests.push(val);\r\n    }\r\n    return val;\r\n  });\r\n  const promise = axios.put(\"test/finishtest\", tests);\r\n  console.log(promise)\r\n  return promise;\r\n}\r\n\r\nexport function finishPatient(testreceptionid) {\r\n  console.log(testreceptionid)\r\n  const promise = axios.put(\"test/testfinishpatient/\"+testreceptionid)\r\n  return promise\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Badge, Button, Modal, Accordion, Card  } from \"react-bootstrap\";\r\nimport xlsx from 'xlsx';\r\nimport React from 'react';\r\nimport Print from \"./Print\";\r\nimport { startTests, cancelTests, finishTests, startPatient, cancelPatient, finishPatient, insertResult, resultStatus } from \"apis/test\";\r\nimport { sendRedisMessage } from \"apis/Redis\";\r\n\r\nfunction TestGroup(props) {\r\n  const [open, setOpen] = useState(false); //모달 열림/닫힘 상태\r\n  const [groupList, setGroupList] = useState({}); //제일 바깥\r\n  const [excel, setExcel] = useState([]);\r\n  const [resultlist, setResultlist] = useState({}); \r\n\r\n  useEffect(()=>{ \r\n    group();\r\n    setResultlist({})\r\n  }, [props.testdatas, props.selectpatientinfo.testreceptionid])\r\n\r\n  const group = () => {\r\n    setExcel(props.testdatas)\r\n\r\n    const group = [];\r\n        for(var i=0; i<props.testdatas.length; i++){\r\n          group.push(props.testdatas[i].groupcode)    \r\n        }\r\n\r\n        const set = new Set(group)\r\n        const title = [...set]; //묶음 코드 중복 제거\r\n\r\n        let obj = {};//나중에 groupList가 데이터 가공후 리스트에 추가\r\n        for(var i=0; i<title.length; i++){\r\n            for(var j=0; j<props.testdatas.length; j++){\r\n              if(title[i] === props.testdatas[j].groupcode) {\r\n                if(obj[title[i]]){ //그룹코드이름으로 된 속성이 있을 때\r\n                  obj[title[i]].tests.push(props.testdatas[j]);\r\n                } else {\r\n                  obj[title[i]]={}; //묶음코드 하나하나 객체\r\n                  obj[title[i]].groupcode=props.testdatas[j].groupcode;\r\n                  obj[title[i]].groupname=props.testdatas[j].groupname;\r\n                  obj[title[i]].status=props.testdatas[j].status;\r\n                  obj[title[i]].chkresult=false;\r\n                  obj[title[i]].ischeck=false;\r\n                  if(props.testdatas[j].status === \"검사완료\") {\r\n                    obj[title[i]].saveBtn=false;\r\n                    obj[title[i]].label = \"danger\";\r\n                  } else if (props.testdatas[j].status === \"진행중\") {\r\n                    obj[title[i]].saveBtn=true;\r\n                    obj[title[i]].label = \"primary\";\r\n                  } else {\r\n                    obj[title[i]].saveBtn=true;\r\n                    obj[title[i]].label = \"success\";\r\n                  };\r\n                  obj[title[i]].tests=[];\r\n                  obj[title[i]].tests.push(props.testdatas[j]);\r\n                }\r\n              }\r\n          }\r\n        }\r\n        setGroupList(obj);\r\n  }\r\n\r\n  const handleExcel =() => { //엑셀 버튼 클릭 시, 동작하는 함수\r\n    const ws = xlsx.utils.json_to_sheet(excel); //안에 배열의 객체 넣으면 그대로 출력\r\n    const wb = xlsx.utils.book_new();\r\n    xlsx.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n    xlsx.writeFile(wb, \"환자차트번호:\"+props.selectpatientinfo.patientid+\"_\"+props.selectpatientinfo.testdate+\".xlsx\");\r\n  }\r\n\r\n  const changeHandler = (e, groupcode) => { //체크버튼 선택 시, ischeck 변경해줌 \r\n    const modify = Object.values(groupList).map((group)=>{\r\n      if(group.groupcode===groupcode){\r\n        group.ischeck = e.target.checked\r\n      }\r\n      return group;\r\n    })\r\n    setGroupList(modify)\r\n  }\r\n\r\n  const handleStart = async(groupList) => {\r\n    let checkedList = [];\r\n    let flag = 0;\r\n \r\n    const newGroupList = Object.values(groupList).map ((group) => {\r\n\r\n      if(group.ischeck === true){\r\n        group.ischeck = false;\r\n        if(group.status === \"대기중\"){\r\n          checkedList.push(group);\r\n          \r\n        } else {\r\n          alert(\"검사가 이미 진행중이거나 완료 되었습니다.\")\r\n          flag = 1;\r\n        }\r\n      }\r\n    \r\n      return group;\r\n    });\r\n\r\n    if(flag === 0){\r\n      try {\r\n        startTests(checkedList).then(()=>{props.gettest(props.selectpatientinfo.testreceptionid); group()});\r\n        startPatient(props.selectpatientinfo.testreceptionid).then(()=>{ \r\n          props.getpatient(props.startdate, props.enddate)\r\n          sendRedisMessage({type:\"test\"})\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n\r\n    }\r\n    \r\n    setGroupList(newGroupList);\r\n\r\n  }\r\n\r\n  \r\n  const handlePrint = async(groupList) => { \r\n    let checkedList = [];\r\n    let flag = 0;\r\n \r\n    const newGroupList = Object.values(groupList).map ((group) => {\r\n      if(group.ischeck === true){\r\n        setOpen(true);\r\n        group.ischeck = false;\r\n        if(group.status === \"대기중\"){\r\n          checkedList.push(group);\r\n        } else {\r\n          alert(\"검사가 이미 진행중이거나 완료 되었습니다.\")\r\n          setOpen(false);\r\n          flag = 1;\r\n        }\r\n      }\r\n      return group;\r\n    });\r\n\r\n    if(flag === 0){\r\n      try {\r\n        startTests(checkedList).then(()=>{props.gettest(props.selectpatientinfo.testreceptionid); group()});\r\n        startPatient(props.selectpatientinfo.testreceptionid).then(()=>{\r\n          props.getpatient(props.startdate, props.enddate)\r\n          sendRedisMessage({type:\"test\"})\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    setGroupList(newGroupList);\r\n  }\r\n  const handleExit = () => setOpen(false); //바코드 모달 닫힘\r\n\r\n  const handleCancel = async(groupList) => { \r\n    let checkedList = [];\r\n    let flag = 0;\r\n    \r\n    const newGroupList = Object.values(groupList).map ((group) => {\r\n      if(group.ischeck === true){\r\n        group.ischeck = false;\r\n        if(group.status === \"진행중\"){\r\n          checkedList.push(group);\r\n        } else {\r\n          if(group.status === \"대기중\") {\r\n            alert(\"검사가 대기중입니다..\")\r\n          } else {\r\n            alert(\"검사가 이미 완료되었습니다.\")\r\n          }\r\n          flag = 1;\r\n        }\r\n      }\r\n      return group;\r\n    });\r\n    if(flag === 0){\r\n      try {\r\n        cancelTests(checkedList).then(()=>{props.gettest(props.selectpatientinfo.testreceptionid); group()})\r\n        cancelPatient(props.selectpatientinfo.testreceptionid).then(()=>{\r\n          props.getpatient(props.startdate, props.enddate)\r\n          sendRedisMessage({type:\"test\"})\r\n        }) \r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n     \r\n    }\r\n    setGroupList(newGroupList);\r\n  }\r\n\r\n  const handleFinish = async(groupList) => { \r\n    let checkedList = [];\r\n    let flag = 0;\r\n    \r\n    const newGroupList = Object.values(groupList).map ((group) => {\r\n      if(group.ischeck === true){\r\n        group.ischeck = false;\r\n        if(group.status === \"진행중\"){\r\n          checkedList.push(group);\r\n        } else {\r\n          if(group.status === \"대기중\") {\r\n            alert(\"검사를 먼저 시작해주세요\")\r\n          } else {\r\n            alert(\"검사가 이미 완료되었습니다.\")\r\n          }\r\n          flag = 1;\r\n        }\r\n      }\r\n      return group;\r\n    });\r\n    if(flag === 0){\r\n      try {\r\n        finishTests(checkedList).then(()=>{props.gettest(props.selectpatientinfo.testreceptionid); group()})\r\n        let count = 0;\r\n        console.log(\"클릭한 검사그룹 갯수\", groupList.length)\r\n        if(groupList.length > 0) {\r\n          for(let i=0; i<groupList.length; i++){\r\n            console.log(groupList[i].status)\r\n          if(groupList[i].status === \"검사완료\"){\r\n            count++;\r\n            console.log(count)\r\n          }\r\n        }\r\n\r\n        if(checkedList.length === 1 ) {\r\n          if(count === groupList.length-1) {\r\n            console.log(count)\r\n            finishPatient(props.selectpatientinfo.testreceptionid).then(()=>{\r\n              props.getpatient(props.startdate, props.enddate)\r\n              sendRedisMessage({type:\"test\"})\r\n            })\r\n          }\r\n        } else {\r\n          if(count === groupList.length-checkedList.length) {\r\n            finishPatient(props.selectpatientinfo.testreceptionid).then(()=>{\r\n              props.getpatient(props.startdate, props.enddate)\r\n              sendRedisMessage({type:\"test\"})\r\n            })\r\n          }\r\n        }\r\n        }\r\n        \r\n       \r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    setGroupList(newGroupList);\r\n  }\r\n\r\n  const handleAdd = async(event, test) => {\r\n    event.preventDefault();\r\n    test.result = resultlist[test.testdataid]\r\n    insertResult(test).then(()=>{\r\n      setResultlist({...resultlist});//이전에 입력한 결과값 초기화 \r\n      group();\r\n\r\n      let count = 0;\r\n      console.log(props.testdatas)\r\n      if(props.testdatas.length > 0) {\r\n        for(let i=0; i<props.testdatas.length; i++){\r\n          console.log(props.testdatas[i].result)\r\n        if(props.testdatas[i].result !== null || props.testdatas[i].result === \"\"){\r\n          count++;\r\n          console.log(count)\r\n        }\r\n      }\r\n        if(count === props.testdatas.length) {\r\n          console.log(\"전체 입력완료\")\r\n          resultStatus(props.selectpatientinfo.testreceptionid).then(()=>{props.getpatient(props.startdate, props.enddate)})\r\n        }\r\n      }\r\n    });\r\n    alert(\"입력되었습니다.\")\r\n    sendRedisMessage({type:\"testresult\", treatmentid:test.treatmentid})//----------------redis 메세지\r\n    //다시 검사리스트 가져오기\r\n  }\r\n \r\n  const handleChange = (event, index, test) => { //사용자 입력시 상태 변경을 위해\r\n    setResultlist({\r\n      ...resultlist,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <div className=\"mt-2 mb-2 text-right\">\r\n      <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" onClick={ () => { handleStart(groupList) }} value=\"검사시작\">검사시작</button>\r\n      <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" onClick={ () => {handlePrint(groupList) }} value=\"바코드출력\">바코드출력</button>\r\n      <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" onClick={ () => {handleCancel(groupList) }} value=\"접수취소\">접수취소</button>\r\n      <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" onClick={ handleExcel}>엑셀저장</button>\r\n      <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" onClick={ () => {handleFinish(groupList) }} value=\"검사완료\">검사완료</button>\r\n    </div> \r\n    <div>검사접수번호: {props.selectpatientinfo.testreceptionid}</div>\r\n    <div className=\"overflow-auto\" style={{height:\"700px\"}}>\r\n      <Accordion defaultActiveKey=\"0\">\r\n       {groupList !=={} &&\r\n       Object.values(groupList).map((group, index)=> {\r\n         return (\r\n          <Card key={group.groupcode}>\r\n          <Card.Header className=\"row\" style={{backgroundColor:\"#D5D5D5\", height:\"60px\", alignItems:\"center\"}}>\r\n            <Accordion.Toggle as={Card.Header} eventKey={index.toString()}>\r\n              {/* checked: 체크박스 체크 유무 */}\r\n              <div><input className=\"mr-2\" type=\"checkbox\"  onChange={e => {changeHandler(e, group.groupcode)}} checked={group.ischeck}/>그룹코드: {group.groupcode}<Badge className=\"ml-3\" variant={group.label}>{group.status}</Badge></div>\r\n            </Accordion.Toggle>\r\n            <div></div>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey={index.toString()}>\r\n            <Card.Body>\r\n              <div className=\"pt-2 pb-2 mb-2 d-flex align-items-center\" style={{ fontSize:\"13px\", borderBottom:\"1px solid #a6a6a6\"}}>\r\n                <div className=\"col-2 p-0 text-center\">처방코드</div>\r\n                <div className=\"col-3 p-0 text-center\">검사명</div>\r\n                <div className=\"col-1 p-0 text-center\">용기</div>\r\n                <div className=\"col-2 p-0 text-center\">상태</div>\r\n                <div className=\"col-4 p-0 text-center\">결과값</div>\r\n              </div>\r\n              {group.tests.map((test, index) => {\r\n                return (\r\n                  <div key={test.testdataid} className=\"pt-2 pb-2 mb-2 d-flex align-items-center\" style={{ fontSize:\"13px\", borderBottom:\"1px solid #a6a6a6\"}}>\r\n                    <div className=\"col-2 p-0 text-center\">{test.testdataid}</div>\r\n                    <div className=\"col-3 p-0 text-center\">{test.testdataname}</div>\r\n                    <div className=\"col-1 p-0 text-center\" style={{ color:test.testcontainer == \"EDTA\"?\"orange\":\"purple\", fontWeight:\"bold\"}}>{test.testcontainer}</div>\r\n                    <div className=\"col-2 p-0 text-center\">{test.status}</div>\r\n                    {test.testdataid === \"xray\"?\r\n                    <div style={{marginLeft:\"80px\"}}>{test.result}</div>:\r\n                    <div className=\"col-4 p-0 pl-2 text-center\" style={{display:\"inline-flex\"}}>\r\n                    <form onSubmit={ event => {handleAdd(event, test)}}>\r\n                      {group.saveBtn?\"\":<div style={{float:\"left\", width:\"60%\"}}><input type=\"text\" className=\"form-control\" name={test.testdataid} value={test.result == resultlist.result ? (resultlist[test.testdataid] || \"\") : test.result} onChange={e => {handleChange(e, index, test)}}/></div>}\r\n                      {group.saveBtn?\"\":<div style={{float:\"right\"}}><input type=\"submit\" className=\"btn btn-primary btn-sm mr-2\"  disabled={group.saveBtn} value=\"추가\"/></div>}\r\n                    </form>\r\n                  </div>\r\n                    }\r\n                  </div>\r\n                )\r\n              })}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n         )\r\n       })}\r\n      </Accordion>\r\n    </div>\r\n\r\n    <Modal show={open} onHide={handleExit} animation={false}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>바코드 생성</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n      <Print selectpatientinfo={props.selectpatientinfo} grouplist={groupList} />\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleExit}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\r\n  </>\r\n  );\r\n}\r\nexport default TestGroup;","import { sendRedisMessage } from \"apis/Redis\";\r\nimport { createXray, resultStatus } from \"apis/test\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nfunction TestResult(props) { \r\n  const [show, setShow] = useState();\r\n  const [treatmentid, setTreatmentid] = useState();\r\n  \r\n  useEffect(()=>{ \r\n    group();\r\n    \r\n  }, [props.testdatas])\r\n\r\n  const group = () => {\r\n    for(let i=0; i<props.testdatas.length; i++){ //전체 testdata 리스트의 testdataid 조회\r\n      if(props.testdatas[i]){ \r\n        if(props.testdatas[i].testdataid === \"xray\") {\r\n          setTreatmentid(props.testdatas[i].treatmentid);\r\n          setShow(true); //testdataid가 xray일 경우에만 보이기\r\n        } else {\r\n          setShow(false)\r\n        }\r\n     }\r\n    } \r\n  }\r\n\r\n  const [testimg, setTestimg] = useState({\r\n    treatmentid:\"\",\r\n    testdataid:\"\"\r\n  }); \r\n\r\n  const inputFile = useRef();\r\n\r\n  const handleAdd = async(event) => {\r\n    event.preventDefault(); //고유 동작을 중단\r\n    try{\r\n      const formData = new FormData(); //multipart로 만드는법\r\n      formData.append(\"treatmentid\", treatmentid);\r\n      formData.append(\"testdataid\", \"xray\");\r\n      formData.append(\"battach\", inputFile.current.files[0]);\r\n      await createXray(formData);\r\n      sendRedisMessage({type:\"testresult\", treatmentid:treatmentid})//----------------redis 메세지\r\n      alert(\"사진첨부 완료\")\r\n    }catch(error){\r\n      console.log(error);\r\n    }\r\n    \r\n\r\n    inputFile.current.value = ''; //저장후 값 클리어\r\n\r\n    let count = 0;\r\n      console.log(props.testdatas)\r\n      if(props.testdatas.length > 0) {\r\n        for(let i=0; i<props.testdatas.length; i++){\r\n          console.log(props.testdatas[i].result)\r\n        if(props.testdatas[i].result !== null || props.testdatas[i].result === \"\"){\r\n          count++;\r\n          console.log(count)\r\n        }\r\n      }\r\n        if(count+1 === props.testdatas.length) {\r\n          console.log(\"전체 입력완료\")\r\n          resultStatus(props.selectpatientinfo.testreceptionid).then(()=>{props.getpatient(props.startdate, props.enddate)})\r\n        }\r\n      }\r\n  }\r\n\r\n  const handleChange = (event) => { //사용자 입력시 상태 변경을 위해\r\n    setTestimg({\r\n      ...testimg,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        xray\r\n      </div>\r\n      {show ?\r\n      <div className=\"card-body\">\r\n        <div>\r\n          <div>접수번호: {props.selectpatientinfo.testreceptionid}</div>\r\n        </div>\r\n        <hr/>\r\n        <form onSubmit={handleAdd}>\r\n          <div className=\"form-group row\">\r\n            <label htmlFor=\"treatmentid\" className=\"col-sm-3 col-form-label\">treatmentid</label>\r\n            <div className=\"col-sm-8\">\r\n              <input type=\"text\" className=\"form-control\" name=\"treatmentid\" value={treatmentid}/>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label htmlFor=\"testdataid\" className=\"col-sm-3 col-form-label\">testdataid</label>\r\n            <div className=\"col-sm-8\">\r\n              <input type=\"text\" className=\"form-control\" name=\"testdataid\" value=\"xray\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n              <label htmlFor=\"battach\" className=\"col-sm-3 col-form-label\">사진첨부</label>\r\n              <div className=\"col-sm-8\">\r\n                <input id=\"battach\" name=\"battach\" type=\"file\" className=\"form-control-file\" ref={inputFile}/>\r\n              </div>\r\n          </div> \r\n          <div className=\"form-group row\">\r\n            <div className=\"col-sm-12 d-flex justify-content-center\">\r\n              <input type=\"submit\" className=\"btn btn-primary btn-sm mr-2\" value=\"추가\"/>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>:\"\"}\r\n    </div>\r\n    <div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TestResult;","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PeriodSearch from \"./PeriodSearch\";\r\nimport TestGroup from \"./TestGroup\";\r\nimport TestResult from \"./TestResult\";\r\nimport { Nav, Row, Tab, Badge } from \"react-bootstrap\";\r\nimport { testlistByDate, testlistByReceptionid } from \"apis/test\";\r\nimport moment from 'moment';\r\n\r\nfunction TestPage(props) {  \r\n  console.log(\"리렌더링\")\r\n  const [patients, setPatient] = useState([]) //전체 환자\r\n  const [waitings, setWaiting] = useState([]) //대기 환자\r\n  const [progresss, setProgress] = useState([]) //진행 환자\r\n  const [completes, setComplete] = useState([]) //완료 환자\r\n\r\n  const [selectpatientinfo, setSelectpatientinfo] = useState({}) //클릭한 검사접수번호의 환자의 정보\r\n \r\n  const [groupshow, setGroupShow] = useState(false) //testgroup 보여주는 show\r\n \r\n  const [startdate, setStartdate] = useState(new Date());\r\n  const [enddate, setEnddate] = useState(new Date());\r\n\r\n  const [testdatas, setTestdatas] = useState([]);\r\n\r\n  const testReception = useSelector((state)=>(state.receptionReducer.testreception)) //--------------redis\r\n  \r\n  useEffect(()=>{ //맨처음 기본설정 당일, testReception 바뀔때마다 랜더링\r\n    getpatient(moment().format('YYYY-MM-DD'), moment().format('YYYY-MM-DD'))\r\n  },[testReception]);\r\n  \r\n  const getpatient = async(startdate, enddate) => { //함수로 만든이유는 나중에 클릭할때도 사용\r\n    try { \r\n      setStartdate(startdate)\r\n      setEnddate(enddate)\r\n      const response = await testlistByDate(moment(startdate).format('YYYY-MM-DD'), moment(new Date(enddate).getTime() + 1 * 24 * 60 * 60 * 1000).format('YYYY-MM-DD'));\r\n      const patient = response.data;\r\n      setPatient(response.data);\r\n      const waiting = patient.filter(patient => patient.status === \"대기중\");\r\n      setWaiting(waiting)\r\n      const progress = patient.filter(patient => patient.status === \"진행중\");\r\n      setProgress(progress)\r\n      const complete = patient.filter(patient => patient.status === \"검사완료\");\r\n      setComplete(complete)\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  const gettest = (testreceptionid) => { //testreceptionid로 test 리스트를 가져옴\r\n    if(selectpatientinfo.testreceptionid != null){\r\n      testlistByReceptionid(selectpatientinfo.testreceptionid).then((response)=>{\r\n      setTestdatas(response.data); //가져온 리스트 상태 저장\r\n      })\r\n   }\r\n  }\r\n\r\n  const ClickPatient = async(e, item, index) => {\r\n    setSelectpatientinfo(item) //클릭한 환자 검사 접수 저장\r\n \r\n    setGroupShow(true) //클릭시 show\r\n  }\r\n  \r\n  useEffect(()=>{ //환자접수 id가 바뀔때마다 가져와지는 데이터들이 다름\r\n    gettest();\r\n  }, [selectpatientinfo.testreceptionid])\r\n\r\n  return (\r\n    <div className=\"vh-100\" style={{minWidth:\"1000px\"}}>\r\n      <div className=\"row m-0\">\r\n      <div className=\"col-3 pt-3\" style={{borderRight:\"1px solid #dadada\"}}>\r\n          <div className=\"row pl-3 ml-0\" style={{backgroundColor: \"#ffffff\", width:\"85%\"}}><div className=\"pr-3 pl-3 pt-2 pb-2\" style={{ backgroundColor:\"#FF8C64\"}}><i class=\"bi bi-calendar4-week\" style={{ fontSize:\"22px\"}}></i></div><div className=\"ml-4 pt-2\">검사 대기 목록</div></div>\r\n          <div style={{height:\"88vh\"}}>\r\n          <PeriodSearch startdate={startdate} enddate={enddate} change={getpatient}/>\r\n          <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"wait\">\r\n          <Nav fill variant=\"tabs\" className=\"flex-column mb-2\">\r\n            <Row className=\"ml-0 mr-0\">\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"total\">전체<diV>{patients.length}</diV></Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"wait\">대기<diV>{waitings.length}</diV></Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"progress\">진행중<diV>{progresss.length}</diV></Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"complete\">완료<diV>{completes.length}</diV></Nav.Link>\r\n              </Nav.Item>\r\n            </Row>\r\n          </Nav>\r\n          \r\n          <div className=\"pt-2 pb-2 mb-2 d-flex align-items-center\" style={{ backgroundColor:\"#ffffff\", boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"15px\", fontSize:\"13px\"}}>\r\n            <div className=\"col-2 p-0 pt-1 pb-1 text-center\">접수번호</div>\r\n            <div className=\"col-2 p-0 text-center\">생년월일</div>\r\n            <div className=\"col-2 p-0 text-center\">이름</div>\r\n            <div className=\"col-4 p-0 text-center\">검사날짜</div>\r\n            <div className=\"col-2 p-0 text-center\">상태</div>\r\n          </div>\r\n\r\n          <Tab.Content className=\"overflow-auto\" style={{height:\"550px\"}}>\r\n              <Tab.Pane eventKey= \"total\" className=\"pt-1\">\r\n              {patients.map((item, index)=>{return(\r\n                <div key={item.testreceptionid} className=\"pt-2 pb-2 mb-2 d-flex align-items-center\" onClick={ e => {ClickPatient(e, item, index) }} style={{ fontSize:\"13px\", borderBottom:\"1px solid #a6a6a6\"}}>\r\n                  <div className=\"col-2 p-0 pt-1 pb-1 text-center\">{item.testreceptionid}</div>\r\n                  <div className=\"col-2 p-0 text-center\">{item.ssn1}</div>\r\n                  <div className=\"col-2 p-0 text-center\">{item.patientname}</div>\r\n                  <div className=\"col-4 p-0 text-center\">{moment(item.testdate).format('YYYY-MM-DD')}</div>\r\n                  <div className=\"col-2 p-0 text-center\"><Badge className=\"mr-1\" variant={(item.status == \"검사완료\")?\"danger\":\"success\"}>{item.status}</Badge><Badge variant={(item.resultstatus == \"미입력\")?\"success\":\"danger\"}>{item.resultstatus}</Badge></div>\r\n                </div>\r\n              )})}\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey= \"wait\" className=\"pt-1\">\r\n              {waitings.map((item, index)=>{return(\r\n                  <div key={item.testreceptionid} className=\"pt-2 pb-2 mb-2 d-flex align-items-center\" onClick={ e => {ClickPatient(e, item) }} style={{ fontSize:\"13px\", borderBottom:\"1px solid #a6a6a6\"}} >\r\n                  <div className=\"col-2 p-0 pt-1 pb-1 text-center\">{item.testreceptionid}</div>\r\n                  <div className=\"col-2 p-0 text-center\">{item.ssn1}</div>\r\n                  <div className=\"col-2 p-0 text-center\">{item.patientname}</div>\r\n                  <div className=\"col-4 p-0 text-center\">{moment(item.testdate).format('YYYY-MM-DD')}</div>\r\n                  <div className=\"col-2 p-0 text-center\"><Badge className=\"mr-1\" variant=\"success\">{item.status}</Badge><Badge variant={(item.result == null)?\"success\":\"danger\"}>{item.resultstatus}</Badge></div>\r\n                  </div>\r\n              )})}\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey= \"progress\" className=\"pt-1\">\r\n              {progresss.map((item, index)=>{return(\r\n                <div key={item.testreceptionid} className=\"pt-2 pb-2 mb-2 d-flex align-items-center\" onClick={ e => {ClickPatient(e, item) }} style={{ fontSize:\"13px\", borderBottom:\"1px solid #a6a6a6\", backgroundColor:\"color\"}}>\r\n                <div className=\"col-2 p-0 pt-1 pb-1 text-center\">{item.testreceptionid}</div>\r\n                <div className=\"col-2 p-0 text-center\">{item.ssn1}</div>\r\n                <div className=\"col-2 p-0 text-center\">{item.patientname}</div>\r\n                <div className=\"col-4 p-0 text-center\">{moment(item.testdate).format('YYYY-MM-DD')}</div>\r\n                <div className=\"col-2 p-0 text-center\"><Badge className=\"mr-1\" variant=\"primary\">{item.status}</Badge><Badge variant={(item.result == null)?\"success\":\"danger\"}>{item.resultstatus}</Badge></div>\r\n              </div>\r\n              )})}\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey= \"complete\" className=\"pt-1\">\r\n              {completes.map((item, index)=>{return(\r\n                <div key={item.testreceptionid} className=\"pt-2 pb-2 mb-2 d-flex align-items-center\" onClick={ e => {ClickPatient(e, item) }} style={{ fontSize:\"13px\", borderBottom:\"1px solid #a6a6a6\", backgroundColor:\"color\"}}>\r\n                <div className=\"col-2 p-0 pt-1 pb-1 text-center\">{item.testreceptionid}</div>\r\n                <div className=\"col-2 p-0 text-center\">{item.ssn1}</div>\r\n                <div className=\"col-2 p-0 text-center\">{item.patientname}</div>\r\n                <div className=\"col-4 p-0 text-center\">{moment(item.testdate).format('YYYY-MM-DD')}</div>\r\n                <div className=\"col-2 p-0 text-center\"><Badge className=\"mr-1\" variant=\"danger\">{item.status}</Badge><Badge variant={(item.result == null)?\"success\":\"danger\"}>{item.resultstatus}</Badge></div>\r\n              </div>\r\n              )})}\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Tab.Container>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-5 pt-3\">\r\n          <div className=\"d-flex pl-3 ml-0 mb-3 p-0\" style={{backgroundColor: \"#ffffff\", width:\"85%\"}}><div className=\"pr-3 pl-3 pt-2 pb-2\" style={{ backgroundColor:\"#F2E18D\"}}><i class=\"bi bi-droplet\" style={{ fontSize:\"22px\"}}></i></div><div className=\"ml-4 pt-2\">검사 처방 목록</div></div>\r\n          <div className=\"d-flex align-items-center pl-3 pr-3\" style={{ backgroundColor:\"#ffffff\", boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"15px\", fontSize:\"13px\", height:\"40px\"}}>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center\">차트번호 :</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center border-right\">{selectpatientinfo.patientid}</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center\">생년월일 :</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center border-right\">{selectpatientinfo.ssn1}</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center\">성별 :</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center border-right\">{selectpatientinfo.sex}</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center\">이름 :</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center\">{selectpatientinfo.patientname}</div>\r\n          </div>\r\n          <div className=\"d-flex pt-3\">\r\n            <div style={{width:\"96%\", marginLeft:\"2%\"}}>{groupshow?<TestGroup startdate={startdate} enddate={enddate} getpatient={getpatient} selectpatientinfo={selectpatientinfo} testdatas={testdatas} gettest={gettest} setTestdatas={setTestdatas}/>:\"\"}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-4 pt-3\" style={{borderLeft:\"1px solid #dadada\"}}>\r\n          <div className=\"row pl-3 10vh ml-0\" style={{backgroundColor: \"#ffffff\", width:\"85%\"}}>\r\n            <div className=\"pr-3 pl-3 pt-2 pb-2\" style={{ backgroundColor:\"#3EB2A2\"}}>\r\n              <i class=\"bi bi-display\" style={{ fontSize:\"22px\"}}></i>\r\n            </div>\r\n            <div className=\"ml-4 pt-2\">결과 입력</div>\r\n          </div>\r\n\r\n          <div className=\"row\" style={{height:\"2%\"}}></div>\r\n          <div style={{height:\"65%\"}}>\r\n            <TestResult selectpatientinfo={selectpatientinfo} testdatas={testdatas} gettest={gettest} startdate={startdate} enddate={enddate} getpatient={getpatient}/>\r\n          </div>\r\n          <div style={{height:\"10%\"}}></div>\r\n        </div>\r\n\r\n      </div> \r\n    </div>\r\n  );\r\n}\r\nexport default TestPage;","import { join } from \"apis/User\";\r\nimport { useState } from \"react\";\r\nimport { Button, Form, Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst errorMsg = {\r\n  password_empty : '비밀번호를 입력해주세요.',\r\n  userid_empty : '아이디를 입력해주세요.',\r\n  err_confirmPassword: '비밀번호확인을 다시 입력해주세요.',\r\n  err_userid: '이미 존재하는 userID 입니다.'\r\n}\r\n\r\nfunction JoinForm(props) { \r\n  const globalcode = useSelector((state) => {return state.authReducer.codenumber});\r\n  const [validated, setValidated] = useState(false);\r\n  const [errorMessage, setErrorMesssage] = useState(errorMsg.password_empty);\r\n  const [errorMessageID, setErrorMesssageID] = useState(errorMsg.userid_empty);\r\n  const [isInvalid, setIsInvalid] = useState(false);\r\n  const [isInvalidID, setIsInvalidID] = useState(false);\r\n  const [isNurse, setIsNurse] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    userid:\"\",\r\n    userpassword:\"\",\r\n    confirmpassword:\"\",\r\n    username:\"\",\r\n    phonenumber:\"\",\r\n    userroom:\"\",\r\n    sex:\"남자\",\r\n    role_authority:\"ROLE_DOCTOR\",\r\n    codenumber:globalcode\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    if(event.target.value === \"ROLE_NURSE\"){\r\n      setIsNurse(true);\r\n      setFormData((prevData) => {\r\n        return {\r\n          ...prevData,\r\n          userroom:\"\"\r\n        }\r\n      })\r\n      console.log(formData);\r\n    } else {\r\n      setIsNurse(false);\r\n    }\r\n    setFormData((prevData) => {\r\n      return {\r\n        ...prevData,\r\n        [event.target.name]:event.target.value\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    setLoading(true);\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (form.checkValidity() === false) {//빈칸이 있을경우\r\n      setValidated(true);\r\n      setLoading(false);\r\n      setErrorMesssage(errorMsg.password_empty);\r\n      setErrorMesssageID(errorMsg.userid_empty);\r\n    } else { //빈칸이 없을경우\r\n      if(formData.userpassword !== formData.confirmpassword){//비밀번호, 비밀번호 확인이 다르면\r\n        setIsInvalidID(false);\r\n        setErrorMesssageID(errorMsg.userid_empty);\r\n        setIsInvalid(true);\r\n        setErrorMesssage(errorMsg.err_confirmPassword);\r\n        setFormData({\r\n          ...formData,\r\n          confirmpassword:\"\"\r\n        })\r\n        setLoading(false);\r\n      } else {\r\n        const response = join(formData);\r\n        response\r\n        .then((response) => {\r\n          const state = response.data.state\r\n          if(state === \"success\"){\r\n            props.toastShow(\"직원 등록이 완료되었습니다.\");\r\n            setFormData({\r\n              userid:\"\",\r\n              userpassword:\"\",\r\n              confirmpassword:\"\", \r\n              username:\"\",\r\n              phonenumber:\"\",\r\n              userroom:\"\",\r\n              sex:\"남자\",\r\n              role_authority:\"ROLE_DOCTOR\"\r\n            });\r\n            setIsInvalidID(false);\r\n            setErrorMesssageID(errorMsg.userid_empty);\r\n            setIsInvalid(false);\r\n            setErrorMesssage(errorMsg.password_empty);\r\n            props.getUsers();\r\n          } else if(state === \"failure\"){\r\n            setIsInvalidID(true);\r\n            setErrorMesssageID(errorMsg.err_userid);\r\n            setIsInvalid(false);\r\n            setErrorMesssage(errorMsg.password_empty);\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error);\r\n        }).finally(() => {\r\n          setLoading(false);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>아이디</Form.Label>\r\n        <Form.Control required name=\"userid\" type=\"text\" placeholder=\"User ID\" value={formData.userid} onChange={handleChange} isInvalid={isInvalidID}/>\r\n        <Form.Control.Feedback type=\"invalid\">{errorMessageID}</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>비밀번호</Form.Label>\r\n        <Form.Control required name=\"userpassword\" type=\"password\" placeholder=\"Password\" value={formData.userpassword} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">비밀번호를 입력해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>비밀번호 확인</Form.Label>\r\n        <Form.Control required name=\"confirmpassword\" type=\"password\" placeholder=\"Confirm Password\" value={formData.confirmpassword} onChange={handleChange} isInvalid={isInvalid}/>\r\n        <Form.Control.Feedback type=\"invalid\">{errorMessage}</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>이름</Form.Label>\r\n        <Form.Control required name=\"username\" type=\"text\" placeholder=\"User Name\" value={formData.username} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">이름을 입력해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>전화번호</Form.Label>\r\n        <Form.Control required name=\"phonenumber\" type=\"test\" placeholder=\"Phone Number\" value={formData.phonenumber} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">전화번호를 입력해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <div>\r\n          <Form.Label>성별</Form.Label>\r\n        </div>\r\n        <Form.Check required checked={formData.sex === \"남자\"} inline label=\"남자\" name=\"sex\" type={\"radio\"} value=\"남자\" feedback={\"성별을 선택해주세요.\"} onChange={handleChange}/>\r\n        <Form.Check required checked={formData.sex === \"여자\"} inline label=\"여자\" name=\"sex\" type={\"radio\"} value=\"여자\" feedback={\"성별을 선택해주세요.\"} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">성별을 선택해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <div>\r\n          <Form.Label>직책</Form.Label>\r\n        </div>\r\n        <Form.Check checked={formData.role_authority === \"ROLE_DOCTOR\"} required inline label=\"의사\" name=\"role_authority\" value=\"ROLE_DOCTOR\" type={\"radio\"} feedback={\"직책을 선택해주세요.\"} onChange={handleChange}/>\r\n        <Form.Check checked={formData.role_authority === \"ROLE_NURSE\"} required inline label=\"간호사\" name=\"role_authority\" value=\"ROLE_NURSE\" type={\"radio\"} feedback={\"직책을 선택해주세요.\"} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">직책을 선택해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>진료실</Form.Label>\r\n        <Form.Control required name=\"userroom\" type=\"text\" placeholder=\"Treatment Room\" value={formData.userroom} onChange={handleChange} readOnly={isNurse}/>\r\n        <Form.Control.Feedback type=\"invalid\">진료실을 입력해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n\r\n      <div className=\"text-right\">\r\n        <Button className=\"w-100\" type=\"submit\" variant=\"dark\">\r\n          {loading === true ? <Spinner className=\"mr-1\" as=\"span\" animation=\"border\" size=\"sm\" role=\"status\"/> : null}\r\n            직원 등록</Button>\r\n      </div>\r\n    </Form>\r\n\r\n  );\r\n}\r\n\r\nexport default JoinForm;","import axios from \"axios\";\r\n\r\nexport function join(user) {\r\n    const promise = axios.post(\"/user/join\", user);\r\n    return promise;\r\n}\r\n\r\nexport function getUserList() {\r\n    const promise = axios.get(\"/user/userlist\");\r\n    return promise;\r\n}\r\n\r\nexport function updateForm(user) {\r\n    const promise = axios.post(\"/user/update\", user);\r\n    return promise;\r\n}\r\n\r\nexport function deleteUser(userid) {\r\n    const promise = axios.delete(\"/user/delete/\" + userid);\r\n    return promise;\r\n}\r\n\r\nexport function disableUser(userid) {\r\n    const promise = axios.put(\"/user/disable/\" + userid);\r\n    return promise;\r\n}\r\n\r\nexport function enableUser(userid) {\r\n    const promise = axios.put(\"/user/enable/\" + userid);\r\n    return promise;\r\n}\r\n\r\n ","import { useEffect, useState } from \"react\";\r\nimport { Button, Form, Spinner } from \"react-bootstrap\";\r\nimport { updateForm, deleteUser, disableUser, enableUser } from \"apis/User\";\r\n\r\nconst errorMsg = {\r\n  password_empty : '비밀번호를 입력해주세요.',\r\n  userid_empty : '아이디를 입력해주세요.',\r\n  err_confirmPassword: '비밀번호확인을 다시 입력해주세요.',\r\n  fail_update:\"수정을 실패하였습니다.\"\r\n}\r\n\r\nfunction UpdateForm(props) {\r\n \r\n  const [validated, setValidated] = useState(false);\r\n  const [errorMessage, setErrorMesssage] = useState(errorMsg.password_empty);\r\n  const [isInvalid, setIsInvalid] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]:event.target.value\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFormData({\r\n      ...props.updateUser,\r\n      userpassword:\"\",\r\n      confirmpassword:\"\"\r\n    })\r\n  }, [props.updateUser]);\r\n\r\n  const handleSubmit = (event) => {\r\n    setLoading(true);\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (form.checkValidity() === false) {//빈칸이 있을경우\r\n      setValidated(true);\r\n      setLoading(false);\r\n      setErrorMesssage(errorMsg.password_empty);\r\n    } else { //빈칸이 없을경우\r\n      if(formData.userpassword !== formData.confirmpassword){//비밀번호, 비밀번호 확인이 다르면\r\n        setIsInvalid(true);\r\n        setErrorMesssage(errorMsg.err_confirmPassword);\r\n        setFormData({\r\n          ...formData,\r\n          confirmpassword:\"\"\r\n        })\r\n        setLoading(false);\r\n      } else {\r\n        \r\n        const response = updateForm(formData);\r\n        response.then((response) => {\r\n          if(response.data.state === \"success\") {\r\n            setIsInvalid(false);\r\n            props.setIsUpdate(false);\r\n            props.updateShow(\"수정이 완료 되었습니다.\");\r\n          } else {\r\n            setIsInvalid(true);\r\n            setErrorMesssage(errorMsg.fail_update);\r\n          }\r\n        }).catch((error) => {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n        }).finally(() => {\r\n          setLoading(false);\r\n\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteUserFun = () => {\r\n\r\n    if(window.confirm(\"직원을 삭제하시겠습니까?\") === true){\r\n      setLoading(true);\r\n      const response = deleteUser(formData.userid);\r\n      response.then((response) => {\r\n        if(response.data.state === \"success\"){\r\n          setIsInvalid(false);\r\n          setLoading(false);\r\n          props.setIsUpdate(false);\r\n          props.updateShow(\"삭제가 완료되었습니다.\");\r\n          props.getUsers();\r\n        } else {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n        }\r\n      }).catch((error) => {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  const disableUserFun = () => {\r\n    if(window.confirm(\"직원을 비활성화 시키겠습니까?\") === true){\r\n      setLoading(true);\r\n      const response = disableUser(formData.userid);\r\n      response.then((response) => {\r\n        if(response.data.state === \"success\"){\r\n          setIsInvalid(false);\r\n          setLoading(false);\r\n          props.setIsUpdate(false);\r\n          props.updateShow(\"직원이 비활성화 되었습니다.\");\r\n          props.getUsers();\r\n        } else {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n        }\r\n      }).catch((error) => {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n      })\r\n    }\r\n  }\r\n\r\n  const enableUserFun = () => {\r\n    if(window.confirm(\"직원을 활성화 시키겠습니까?\") === true){\r\n      setLoading(true);\r\n      const response = enableUser(formData.userid);\r\n      response.then((response) => {\r\n        if(response.data.state === \"success\"){\r\n          setIsInvalid(false);\r\n          setLoading(false);\r\n          props.setIsUpdate(false);\r\n          props.updateShow(\"직원이 활성화 되었습니다.\");\r\n          props.getUsers();\r\n        } else {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n        }\r\n      }).catch((error) => {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>아이디</Form.Label>\r\n        <Form.Control required name=\"userid\" type=\"text\" placeholder=\"User ID\" value={formData.userid || \"\"} readOnly/>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>비밀번호</Form.Label>\r\n        <Form.Control required name=\"userpassword\" type=\"password\" placeholder=\"Password\" value={formData.userpassword || \"\"} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">비밀번호를 입력해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>비밀번호 확인</Form.Label>\r\n        <Form.Control required name=\"confirmpassword\" type=\"password\" placeholder=\"Confirm Password\" value={formData.confirmpassword || \"\"} onChange={handleChange} isInvalid={isInvalid}/>\r\n        <Form.Control.Feedback type=\"invalid\">{errorMessage}</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>이름</Form.Label>\r\n        <Form.Control required name=\"username\" type=\"text\" placeholder=\"User Name\" value={formData.username || \"\"} readOnly/>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>전화번호</Form.Label>\r\n        <Form.Control name=\"phonenumber\" type=\"test\" placeholder=\"Phone Number\" value={formData.phonenumber || \"\"} readOnly/>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <div>\r\n          <Form.Label>성별</Form.Label>\r\n        </div>\r\n        <Form.Check checked={formData.sex === \"남자\"} inline label=\"남자\" name=\"sex\" type={\"radio\"} value=\"남자\" feedback={\"성별을 선택해주세요.\"} readOnly/>\r\n        <Form.Check checked={formData.sex === \"여자\"} inline label=\"여자\" name=\"sex\" type={\"radio\"} value=\"여자\" feedback={\"성별을 선택해주세요.\"} readOnly/>\r\n        <Form.Control.Feedback type=\"invalid\">성별을 선택해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <div>\r\n          <Form.Label>직책</Form.Label>\r\n        </div>\r\n        <Form.Check checked={formData.role_authority === \"ROLE_DOCTOR\"} required inline label=\"의사\" name=\"role_authority\" value=\"ROLE_DOCTOR\" type={\"radio\"} feedback={\"직책을 선택해주세요.\"} readOnly/>\r\n        <Form.Check checked={formData.role_authority === \"ROLE_NURSE\"} required inline label=\"간호사\" name=\"role_authority\" value=\"ROLE_NURSE\" type={\"radio\"} feedback={\"직책을 선택해주세요.\"} readOnly/>\r\n        <Form.Control.Feedback type=\"invalid\">직책을 선택해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>진료실</Form.Label>\r\n        <Form.Control name=\"userroom\" type=\"text\" placeholder=\"Treatment Room\" value={formData.userroom || \"\"} onChange={handleChange} readOnly/>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>상태</Form.Label>\r\n        <Form.Control type=\"text\" value={formData.userenabled ===1 ? \"활성화\" : \"비활성화\"} readOnly/>\r\n      </Form.Group>\r\n\r\n      <div className=\"text-right\">\r\n        {formData.userenabled === 1 ? \r\n        <Button className=\"w-25 mr-3\" type=\"submit\" variant=\"dark\">\r\n        {loading === true ? <Spinner className=\"mr-2\" as=\"span\" animation=\"border\" size=\"sm\" role=\"status\"/> : null}\r\n          수정 완료</Button>\r\n        : \r\n        <Button className=\"w-25 mr-3\" variant=\"primary\" type=\"button\" onClick={enableUserFun}>\r\n        {loading === true ? <Spinner className=\"mr-2\" as=\"span\" animation=\"border\" size=\"sm\" role=\"status\"/> : null}\r\n          활성화</Button>\r\n        }\r\n\r\n\r\n        {formData.userenabled === 1 ? \r\n        <Button className=\"w-25\" variant=\"danger\" type=\"button\" onClick={disableUserFun}>\r\n        {loading === true ? <Spinner className=\"mr-2\" as=\"span\" animation=\"border\" size=\"sm\" role=\"status\"/> : null}\r\n          비활성화</Button>\r\n        :\r\n        <Button className=\"w-25\" variant=\"danger\" type=\"button\" onClick={deleteUserFun}>\r\n        {loading === true ? <Spinner className=\"mr-2\" as=\"span\" animation=\"border\" size=\"sm\" role=\"status\"/> : null}\r\n          삭제</Button>\r\n        }\r\n        \r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default UpdateForm;","import { getUserList } from \"apis/User\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Col, Row, Toast } from \"react-bootstrap\";\r\nimport JoinForm from \"./JoinForm\";\r\nimport UpdateForm from \"./UpdateForm\";\r\nfunction Members(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [toastMessage, setToastMessage] = useState(\"\");\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [userList, setUserList] = useState([]);\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const getUsers = async() => {\r\n    const response = await getUserList();\r\n    setUserList(response.data);\r\n  }\r\n\r\n  const [updateUser, setUpdateUser] = useState({});\r\n\r\n  const update = (selectUser) => {\r\n    setUpdateUser(selectUser);\r\n    setIsUpdate(true);\r\n  }\r\n\r\n  const completeUpdate = (message) => {\r\n    setToastMessage(message);\r\n    setShow(true);\r\n  }\r\n\r\n  const closeShow = () => {\r\n    setShow(false)\r\n    setToastMessage(\"\"); \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row ml-0 mr-0\" style={{height:\"100vh\"}}>\r\n        <div className=\"col h-100\">\r\n          <div className=\"border border-dark pl-3 pr-3\" style={{height:\"96vh\", marginBottom:\"2vh\",  marginTop:\"2vh\" , backgroundColor:\"#FFFFFF\"}}>\r\n            <div className=\"d-flex row pb-1\" style={{height:\"50px\"}}><div className=\"p-2 ml-3 mr-2 text-center\" style={{ backgroundColor:\"#887BD2\", width:\"40px\", color:\"#FFFFFF\"}}><i className=\"bi bi-person-lines-fill\"></i></div><div className=\"d-flex align-items-center\">직원 목록</div></div>\r\n            <div className=\"p-4\" style={{height:\"calc(100% - 50px)\"}}>\r\n              <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n                <div style={{width:\"10%\"}}></div>\r\n                <div style={{width:\"12%\"}}>직원 아이디</div>\r\n                <div style={{width:\"15%\"}}>직원명</div>\r\n                <div style={{width:\"18%\"}}>전화번호</div>\r\n                <div style={{width:\"10%\"}}>진료실</div>\r\n                <div style={{width:\"15%\"}}>직책</div>\r\n                <div style={{width:\"10%\"}}>상태</div>\r\n                <div style={{width:\"10%\"}}></div>\r\n              </div>\r\n              <div className=\"overflow-auto border\" style={{height:\"calc(100% - 40px\"}}>\r\n                {userList != null &&\r\n                userList.map((user) => {\r\n                  return (\r\n                    <div key={user.userid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"60px\", fontWeight:\"bold\"}}>\r\n                      <div style={{width:\"10%\"}}>\r\n                        {user.sex === \"남자\" ? \r\n                          <img src=\"/doctor2.png\" alt=\"man\" width=\"30\" height=\"30\"/> :\r\n                          <img src=\"/doctor3.png\" alt=\"woman\" width=\"30\" height=\"30\"/>\r\n                        }  \r\n                      </div>\r\n                      <div style={{width:\"12%\"}}>{user.userid}</div>\r\n                      <div style={{width:\"15%\"}}>{user.username}</div>\r\n                      <div style={{width:\"18%\"}}>{user.phonenumber}</div>\r\n                      <div style={{width:\"10%\"}}>{user.userroom}</div>\r\n                      <div style={{width:\"15%\"}}>\r\n                        {user.role_authority === \"ROLE_DOCTOR\" ? \"의사\" : \"간호사\"}\r\n                      </div>\r\n                      <div style={{width:\"10%\"}}>\r\n                        {user.userenabled === 1 ? \"활성화\" : \"비활성화\"}\r\n                      </div>\r\n                      <div style={{width:\"10%\"}}><button className=\"btn btn-sm btn-outline-secondary\" onClick={() => {update(user)}}>수정</button></div>\r\n                    </div>\r\n                  )\r\n                })\r\n                }\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col h-100\">\r\n          <div className=\"border border-dark pl-3 pr-3\" style={{height:\"96vh\", marginBottom:\"2vh\",  marginTop:\"2vh\" , backgroundColor:\"#FFFFFF\"}}>\r\n            <div className=\"d-flex row pb-1\" style={{height:\"50px\"}}><div className=\"p-2 ml-3 mr-2 text-center\" style={{ backgroundColor:\"#887BD2\", width:\"40px\", color:\"#FFFFFF\"}}><i className=\"bi bi-person-plus-fill\"></i></div><div className=\"d-flex align-items-center\">\r\n                {isUpdate == false ? \"직원 등록\" : \"직원 수정\"}</div></div>\r\n            <div className=\"pt-4\" style={{height:\"calc(100% - 50px)\"}}>\r\n              {isUpdate == false ? \r\n              <JoinForm toastShow={completeUpdate} getUsers={getUsers}/> \r\n              : \r\n              <UpdateForm updateUser={updateUser} getUsers={getUsers} setIsUpdate={setIsUpdate} updateShow={completeUpdate}></UpdateForm> }\r\n                \r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{position: \"absolute\", bottom: \"40px\", right: \"30px\"}}>\r\n          <Row>\r\n            <Col style={{width:\"400px\"}}>\r\n              <Toast onClose={closeShow} show={show} delay={3000} autohide>\r\n                <Toast.Header style={{backgroundColor:\"#1B296D\"}}>\r\n                  <strong className=\"mr-auto\" style={{color:\"white\"}}>Message</strong>\r\n                  <small>complete</small>\r\n                </Toast.Header>\r\n                <Toast.Body>{toastMessage}</Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Members;","import { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"views/Home\";\r\nimport Reception from \"views/Reception\";\r\nimport Treatment from \"views/Treatment\";\r\nimport Test from \"views/Test\";\r\nimport Members from \"views/Members\";\r\n\r\n\r\n//jsconfig로 하면 src가 기본 경로로 되어있음\r\n\r\nfunction AppRoute(props) {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${props.match.url}/home`} exact component={Home}/>\r\n      <Route path={`${props.match.url}/reception`} exact component={Reception}/>\r\n      <Route path={`${props.match.url}/treatment`} exact component={Treatment}/>\r\n      <Route path={`${props.match.url}/test`} exact component={Test}/>\r\n      <Route path={`${props.match.url}/members`} exact component={Members}/>\r\n      <Redirect to={`${props.match.url}/home`} />\r\n      {/* 어느 누구도 해당하지 않으면 home으로 감  */}\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default AppRoute;\r\n","const initialState = {\r\n  toast: {}\r\n}\r\n\r\n//액션 타입 선언\r\nconst SET_TOAST=\"toast/setToast\";\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetToast = (toast) => {\r\n  return {type:SET_TOAST, toast};\r\n} \r\n\r\n//리듀스 선언\r\nconst realtimeReducer = (state = initialState, action) => {\r\n  if(action.type === SET_TOAST) {\r\n    return {...state, toast:action.toast};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\n\r\nexport default realtimeReducer;","import { GetUserData } from \"apis/Reception\";\r\nimport { loadChatting, saveChatting, clearChatting } from \"apis/Redis\";\r\nimport {  useEffect, useRef, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { createSetToast } from \"redux/toast-reducer\";\r\nimport ReceptionHeader from \"views/Reception/components/ReceptionHeader\";\r\n\r\n// const initChatArray=  () =>{ \r\n//     const chatArray=[];\r\n//     for(var i=0; i<5; i++){\r\n//         const chatObj = {username:\"user\"+i, message:\"messageasdfdsafd\"+i, dateTime:new Date(),isMe:i%2===0, enabled:true}\r\n//         chatArray.push(chatObj)\r\n//     }\r\n//     return chatArray;\r\n// }\r\n\r\n// const initConnectionArray=  () =>{ \r\n//     const connectionArray=[];\r\n//     for(var i=0; i<10; i++){\r\n//         const connectionObj = {userid:\"userid\"+i,username:\"name\"+i,userrole:\"role\"+i,status:\"connect\"}\r\n//         connectionArray.push(connectionObj)\r\n//     }\r\n//     return connectionArray;\r\n// }\r\n\r\n\r\n//나중에 로그아웃때 넘길 chatArray 값\r\nlet chatarray = [];\r\nfunction Chatting(props){\r\n    const [test, setTest] = useState(\"test!!\")\r\n    const [chatArray, setChatArray] = useState([]);\r\n    const [connectionList,setConnectionList] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const globalUid= useSelector((state)=>(state.authReducer.userid))\r\n    const [userInfo, setUserInfo] = useState({})\r\n    const scrollRef = useRef();\r\n    const [websocket, setWebsocket] = useState();\r\n    const [brb, setBRB] = useState(false);\r\n    const dispatch = useDispatch();\r\n    // 채팅칠때 스크롤 내리기\r\n    useEffect(()=>{\r\n        if(scrollRef.current){\r\n            scrollRef.current.scrollIntoView({ behavior: 'smooth'});\r\n        }\r\n        //나중에 로그아웃때 넘길 chatArray 값 저장\r\n        chatarray = chatArray;\r\n    },[chatArray])\r\n\r\n    window.onbeforeunload = function(e) {\r\n         saveChatting(globalUid,chatArray).then((result)=>{\r\n             console.log(\"!!! save!!\")\r\n             console.log(result.data)\r\n     })\r\n      };\r\n    useEffect(()=>{\r\n        // let webSocket = new  WebSocket('ws://localhost:8080/websocket/chatting')\r\n        let webSocket = new WebSocket(\"ws://kosa3.iptime.org:50006/websocket/chatting\")\r\n      \r\n        webSocket.onopen = () =>{\r\n            console.log(\"open!!!\")\r\n            //Back-end에서 이전 채팅기록 가져오기\r\n            loadChatting(globalUid).then((result)=>{\r\n                console.log(\"load!!\")\r\n                if(result.data===\"\"){\r\n                    result.data = [];\r\n                }\r\n                    setChatArray(result.data )\r\n            })\r\n\r\n            console.log(\"sendHELLO!\" + globalUid)\r\n            //유저정보 불러오기\r\n            GetUserData(globalUid).then((result)=>{\r\n                //유저 role 한글로 바꿔주기\r\n                if(result.data.role_authority===\"ROLE_DOCTOR\")result.data.role_authority=\"의사\"\r\n                else if(result.data.role_authority===\"ROLE_NURSE\")result.data.role_authority=\"간호사\"\r\n                else if(result.data.role_authority===\"ROLE_ADMIN\")result.data.role_authority=\"관리자\"\r\n                setUserInfo(result.data)\r\n                //접속되면 처음 내 정보를 서버에 보내줌\r\n                webSocket.send(JSON.stringify({\r\n                    header:\"HELLO\",\r\n                    from:globalUid,\r\n                    connectioninfo:{userid:globalUid,username:result.data.username,userrole:result.data.role_authority,status:\"접속중\"},\r\n                    message:\"\"\r\n                }))\r\n            })\r\n            \r\n        }\r\n        webSocket.onclose=()=>{\r\n            console.log(\"sendBYE!\")\r\n        }\r\n        webSocket.onmessage = (event) =>{\r\n           \r\n            \r\n            var data = JSON.parse(event.data);\r\n            console.log(\"receive\" + data.header)\r\n            //접속 패킷 받았을때\r\n            if(data.header===\"HELLO\"){\r\n                //동기화할 유저정보 리스트\r\n                setConnectionList(data.connectionlist)\r\n            }\r\n            //자리 비움패킷 받았을때\r\n            else if(data.header===\"BRB\"){\r\n                //동기화할 유저정보 리스트\r\n                setConnectionList(data.connectionlist)\r\n            }\r\n            //접속종료패킷 받았을때\r\n            else if(data.header===\"BYE\"){\r\n                //동기화할 유저정보 리스트\r\n                console.log(\"byte!!\")\r\n                console.log(chatArray)\r\n                setConnectionList(data.connectionlist)\r\n            }\r\n            //채팅 패킷 받았을때\r\n            else if(data.header===\"CHATTING\"){\r\n                console.log(data)\r\n                dispatch(createSetToast({message:data.name+\"님으로 부터 메시지 도착\"}))\r\n                setChatArray((prev)=>{\r\n                    const chatObj = {name:data.name, from:data.from,role:data.role,message:data.message, dateTime:data.dateTime,isMe:data.from===globalUid, enabled:true}\r\n\r\n                return prev.concat(chatObj) \r\n                })\r\n            }\r\n        }\r\n        setWebsocket(webSocket)\r\n\r\n        return()=>{\r\n            console.log(\"로그아웃??\")\r\n        saveChatting(globalUid,chatarray).then((result)=>{\r\n            console.log(\"!!! save!!\")\r\n            webSocket.close();\r\n        })}\r\n\r\n    },[])\r\n\r\n    const onChangeMessage = (event) =>{\r\n        setMessage(event.target.value);\r\n    } \r\n    const onKeyPress =(e)=>{\r\n        if(e.key===\"Enter\"){\r\n            sendMsg(e);\r\n        }\r\n    }\r\n    const sendMsg = (event) =>{\r\n        if(message===\"\")return;\r\n        //만약 자리비움 상태에서 채팅보냈으면 접속중으로 바꿔주기\r\n        if(brb){\r\n            BRB();\r\n        }\r\n      websocket.send(JSON.stringify({\r\n        header:\"CHATTING\",\r\n        from:globalUid,\r\n\r\n        name:userInfo.username,\r\n\r\n        role:userInfo.role_authority,\r\n        dateTime:new Date().toLocaleString(),\r\n        message:message\r\n    }))\r\n    setMessage(\"\");\r\n    }\r\n    //채팅 내역 초기화\r\n    const clear = () =>{\r\n        setChatArray([]);\r\n        clearChatting(globalUid).then((result)=>{\r\n            console.log(\"!!! clear\")\r\n    })\r\n    }\r\n    //자리비움, 온라인 onoff\r\n    const BRB = () =>{\r\n      setBRB(!brb)\r\n      websocket.send(JSON.stringify({\r\n        header:\"BRB\",\r\n        from:globalUid,\r\n        connectioninfo:{userid:globalUid,username:userInfo.username,userrole:userInfo.role_authority,status:brb?\"접속중\":\"자리비움\"},\r\n        message:\"\"\r\n    }))\r\n    }\r\n    return(\r\n    <>\r\n    <ReceptionHeader  headertitle=\"메신저\" iclassName=\" bi bi-chat-dots-fill \" color=\"#ffc107\">\r\n        <span className=\"mr-5\">\r\n        아이디 : {globalUid} , 이름 : {userInfo.username}({userInfo.role_authority}) \r\n        </span>\r\n        <button className=\"btn  btn-sm align-self-end mr-4\" style={{backgroundColor:brb?\"green\":\"red\" ,color:\"white\"}} onClick={BRB}>{brb?\"접속하기\":\"자리비우기\"}</button>\r\n\r\n        <button className=\"btn  btn-sm align-self-end mr-4\" style={{backgroundColor:\"#ffc107\" ,color:\"white\"}} onClick={clear}>내역삭제</button>\r\n    </ReceptionHeader>\r\n\r\n    <div className=\"row mt-2\">\r\n        \r\n        <div className=\"col-6 pr-0\">\r\n            <div className=\"pl-2 pr-2 pb-3 border-bottom border-left border-top border-dark\" style={{height:\"100%\"}}>\r\n\r\n                   <label>접속직원리스트</label>\r\n                    <div  className=\"overflow-auto mb-2 border border-dark  justify-content-center\" style={{height:\"95%\"}}>\r\n                        {connectionList&&connectionList.map((item,index)=>{\r\n                        return(\r\n                            <div className=\"row m-0 border-bottom text-center\" key={index} style={{fontSize:\"1em\"}}>\r\n                                <div className=\"col-3 p-0 border-right\">\r\n                                {item.userid}\r\n                                </div>\r\n                                <div className=\"col-3 p-0 border-right\">\r\n                                {item.username}\r\n                                </div>\r\n                                <div className=\"col-3 p-0 border-right\">\r\n                                {item.userrole}\r\n                                </div>\r\n                                <div className=\"col-3 p-0\" style={{backgroundColor:item.status===\"자리비움\"?\"red\":\"green\" ,color:\"white\"}}>\r\n                                {item.status}\r\n                                </div>\r\n                            </div>                         \r\n                            )\r\n                        })}  \r\n                    </div>\r\n                    {/* <label>네트워크 상태</label>\r\n                    <div  className=\"overflow-auto border border-dark\" style={{height:\"45%\"}}>\r\n                    \r\n                    </div> */}\r\n\r\n            </div>\r\n        </div>\r\n        <div className=\"col-6 pl-0\">\r\n            <div className=\"pl-1 pr-1 pb-3 border border-dark\" style={{height:\"100%\"}}>\r\n                <div  className=\"overflow-auto mt-3\" style={{height:\"calc(92vh - 136px)\"}}>\r\n                \r\n                <div  className=\" d-flex flex-column justify-content-end bg-dark pl-3 pr-3\" style={{minHeight:\"calc(92vh - 136px)\"}}>\r\n                    {console.log(chatArray)}\r\n                    {chatArray&&chatArray.map((chat,index)=>{return(\r\n                        <div ref={scrollRef} key={index}  className={chat.isMe?\"row p-1 justify-content-end\":\"row  p-1  justify-content-start\"}>\r\n                            <div style={{ maxWidth:\"70%\"}}>\r\n                                <div style={{color:\"white\"}}>\r\n                                    {chat.name}({chat.role})\r\n                                </div>\r\n                                <div className=\"border \" style={ {backgroundColor:chat.isMe?\"yellow\":\"gray\",wordBreak:\"break-all\" }}>\r\n                                    {chat.message}\r\n                                </div>\r\n                                <div style={{fontSize:\"0.5em\",color:\"white\"}}>\r\n                                {chat.dateTime.toLocaleString()}\r\n                                </div>\r\n                            </div>\r\n                        </div>)\r\n                    })}\r\n                </div>\r\n                </div>\r\n                <div className=\"align-items-end d-flex\" >\r\n                    <input type=\"text\" className=\"col-10 form-control\" name=\"message\" onKeyPress={onKeyPress} value={message} onChange={onChangeMessage} />\r\n                    <button className=\"col-2 btn btn-warning btn-sm p-0\"style={{height:\"2.5rem\", fontSize:\"0.9rem\"}}  onClick={sendMsg}>보내기</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n    );\r\n}\r\nexport default Chatting;","import { useEffect, useState } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport TestReception from \"views/Reception/PatientReception/TestReception\";\r\nimport TreatmentReception from \"views/Reception/PatientReception/TreatmentReception\";\r\nimport { GetTestReceptionList, GetTreatmentList } from \"apis/Reception\";\r\nimport Chatting from \"./Messenger/Chatting\";\r\nimport ReceptionHeader from \"views/Reception/components/ReceptionHeader\";\r\nimport { ButtonGroup, Spinner, ToggleButton } from \"react-bootstrap\";\r\n\r\nfunction DrawerReceptions(props){\r\n    const treatmentReception = useSelector((state)=>(state.receptionReducer.treatmentreception)) \r\n    const testReception = useSelector((state)=>(state.receptionReducer.testreception))\r\n\r\n    const [treatementsData, setTreatmentsData] = useState()\r\n    const [testReceptionsData, setTestReceptionsData] = useState()\r\n    const [loading,setLoading] = useState(false);\r\n    \r\n    const [listtype, setListtype] = useState(\"접수목록\");\r\n\r\n    const handleChange = (event) => {\r\n        setListtype(event.target.value);\r\n      }\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        GetTreatmentList().then((result)=>{\r\n             \r\n            const userlist = result.data.userlist;\r\n            \r\n            const patientlist = result.data.patientlist;\r\n            const treatmentlist = result.data.treatmentlist.map((item, index)=>{\r\n                return {...item, patientname:patientlist[index].patientname,username:userlist[index].username }\r\n            })\r\n            setTreatmentsData(treatmentlist);\r\n            setLoading(false)\r\n        })\r\n    },[treatmentReception])\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        GetTestReceptionList().then((result)=>{\r\n            console.log(result.data)\r\n            const patientlist = result.data.patientlist;\r\n            const testlist = result.data.testlist.map((item, index)=>{\r\n                return {...item, patientname:patientlist[index].patientname }\r\n            })\r\n            setTestReceptionsData(testlist);\r\n            setLoading(false)\r\n        })\r\n    },[testReception])\r\n\r\n    return(\r\n        <>\r\n         <ButtonGroup toggle>\r\n                 <ToggleButton type=\"radio\" style={{color:\"white\"}}  variant= {`${listtype === \"접수목록\" ? \"success\" : \"\" }`} name=\"type\"  checked={listtype===\"접수목록\"} value=\"접수목록\" onChange={handleChange}><div className=\"ml-5 mr-5\">접수목록(당일)</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" style={{color:\"white\"}} variant={`${listtype === \"메신저\" ? \"success\" : \"\" }`} name=\"type\"  checked={listtype===\"메신저\"} value=\"메신저\" onChange={handleChange}><div className=\"ml-5 mr-5\">메신저</div></ToggleButton>\r\n        </ButtonGroup>\r\n        <div className=\"bg-white row p-2\" style={{height:\"calc(100vh-38px)\"}}>\r\n            \r\n            \r\n        <div className=\"col\" style={{height:\"calc(92vh-38px)\", backgroundColor:\"white\",display:listtype===\"접수목록\"?\"block\": \"none\"}}>\r\n            <div className=\"pl-3 pr-1  border border-dark\" style={{height:\"calc(48vh - 25px)\"}}>   \r\n            <ReceptionHeader  headertitle=\"진료접수\" iclassName=\" bi bi-clipboard-check \" color=\"#e89677\">\r\n            {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n            </ReceptionHeader>\r\n           \r\n            <TreatmentReception isDrawer={true} treatmentList={treatementsData}/> \r\n            </div>\r\n            <div className=\"mt-3 pl-3 pr-1  border border-dark\" style={{height:\"calc(48vh - 25px)\"}}>    \r\n            <ReceptionHeader  headertitle=\"검사접수\" iclassName=\" bi bi-clipboard-check \" color=\"#e89677\">\r\n            {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n            </ReceptionHeader>\r\n           \r\n            <TestReception isDrawer={true}  testList={testReceptionsData}/>\r\n            </div>\r\n        </div>\r\n        \r\n        <div className=\"col\"style={{height:\"calc(92vh-38px)\", backgroundColor:\"white\",display:listtype===\"메신저\"?\"block\": \"none\"}}>\r\n                <Chatting/>\r\n        </div>\r\n            \r\n            \r\n            \r\n           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DrawerReceptions;","import \"../style/menu.css\"\r\nimport {slide as Menu}  from \"react-burger-menu\";\r\nimport DrawerReceptions from \"./DrawerReceptions\";\r\nimport { Col, Row, Toast } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Menus(props){\r\n  \r\n  const toast = useSelector((state)=>(state.toastReducer.toast))\r\n  const [showToast,setShowToast] = useState(false); \r\n  const toggleShowToast = () => {setShowToast(!showToast);}\r\n  //리덕스 올때마다 토스트 켜줌\r\n  useEffect(()=>{\r\n    if(toast.message){\r\n      setShowToast(true)\r\n    }\r\n  },[toast])\r\n\r\n  return (\r\n  <>\r\n <Menu right  customBurgerIcon={<img src=\"/menu.svg\" />} width={\"40%\"}>\r\n     <DrawerReceptions/>\r\n  </Menu>\r\n  <div style={{position: \"fixed\", bottom: \"30px\", right: \"40px\",zIndex:\"1000\"}}>\r\n          <Row>\r\n            <Col style={{width:\"400px\"}}>\r\n              <Toast onClose={toggleShowToast} show={showToast} delay={5000} autohide>\r\n                <Toast.Header style={{backgroundColor:\"#ffc107\"}}>\r\n                  <strong className=\"mr-auto\" style={{color:\"white\"}}>메신저</strong>\r\n                </Toast.Header>\r\n                <Toast.Body>{toast.message}</Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n  </>\r\n  );\r\n}\r\nexport default Menus;","import { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createSetTestReception, createSetTestResult, createSetTreatmentReception } from \"redux/reception-reducer\";\r\n\r\nconst Redis = () => {\r\n  //-------------------------------------------------------------  \r\n  //상태 선언\r\n  //-------------------------------------------------------------\r\n  const [connected, setConnected] = useState(false);\r\n  //로그인 될때마다 토픽을 바꿔줘야함\r\n  const [subTopic, setSubTopic] = useState(\"/reception\");\r\n  const [pubMessage, setPubMessage] = useState({\r\n    topic: \"/reception\",\r\n    content: \"Hello\"\r\n  });\r\n  const [contents, setContents] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  //상태 변경 내용 출력\r\n  useEffect(() => {\r\n    console.group(\"상태 변경\");\r\n      console.log(\"connected: \", connected);\r\n      console.log(\"subTopic: \", subTopic);\r\n      console.log(\"pubMessage: \", pubMessage);\r\n      console.log(\"contents: \", contents);\r\n    console.groupEnd();\r\n  }); \r\n\r\n  //-------------------------------------------------------------\r\n  //버튼 이벤트 처리\r\n  //-------------------------------------------------------------\r\n  let ws = useRef(null);\r\n  const connectWebSocket = () => {\r\n \r\n     ws.current = new WebSocket(\"ws://kosa3.iptime.org:50006/websocket/redis\");\r\n    // ws.current = new WebSocket(\"ws://localhost:8080/websocket/redis\");\r\n\r\n    ws.current.onopen = () => {\r\n      console.log(\"접속 성공\");\r\n      setConnected(true);\r\n      sendSubTopic();\r\n    };\r\n    \r\n    ws.current.onclose = () => {\r\n      console.log(\"접속 끊김\");\r\n      setConnected(false);\r\n    };\r\n    \r\n    ws.current.onmessage = (event) => { \r\n      console.log(\"메시지 수신\");\r\n      var strJson = event.data;\r\n      var message = JSON.parse(JSON.parse(strJson));\r\n      // 여기서 각 topic에 따라 dispatch!!\r\n      //{type: , treatmentid: , newDate()}\r\n      if(message.type===\"treatment\"){\r\n        console.log(message);\r\n        dispatch(createSetTreatmentReception({patientid:message.patientid, status:message.status}))\r\n      }else if(message.type===\"test\"){\r\n        dispatch(createSetTestReception(new Date()))\r\n      }else if(message.type===\"testresult\"){\r\n        dispatch(createSetTestResult({treatmentid:message.treatmentid}))\r\n      }\r\n\r\n      setContents((contents) => {\r\n        return contents.concat(message.topic + \": \" + message.content);\r\n      });\r\n    } \r\n  };\r\n\r\n  const disconnectWebSocket = () => {\r\n    ws.current.close();\r\n  };\r\n\r\n  const sendSubTopic = () => {\r\n    var json = {topic:subTopic};\t\t\r\n    var strJson = JSON.stringify(json);\r\n    ws.current.send(strJson);\r\n  }\r\n\r\n  //-------------------------------------------------------------\r\n  //마운트 및 언마운트에 실행할 내용\r\n  //-------------------------------------------------------------\r\n  useEffect(() => {\r\n    connectWebSocket();\r\n    return (() => {\r\n      disconnectWebSocket();\r\n    });\r\n  }, []);\r\n\r\n  //-------------------------------------------------------------\r\n  //렌더링 내용\r\n  //-------------------------------------------------------------\r\n  return (\r\n    <>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Redis;\r\n\r\n","import AppMenu from \"AppMenu\";\r\nimport AppRoute from \"AppRoute\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Menus from \"views/components/Menu\";\r\nimport Home from \"views/Home\";\r\nimport Reception from \"views/Reception\";\r\nimport Treatment from \"views/Treatment\";\r\nimport Test from \"views/Test\";\r\nimport Members from \"views/Members\";\r\nimport Redis from \"views/components/Redis\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Main(props) {\r\n  \r\n  const globalUserid = useSelector((state) => {return state.authReducer.userid});\r\n   //유저 아이디가 없다면 다시 로그인 페이지로 이동\r\n   if(globalUserid == null || globalUserid === \"\") {\r\n    return <Redirect to=\"/\"></Redirect>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menus ></Menus>\r\n      <div className=\"flex-grow-1 container-fluid pl-0 pr-0\">\r\n        <div className=\"row h-100 mr-0 ml-0\">\r\n          <div className=\"col-1 pl-0 border-right align-items-end\" style={{position:\"relative\", backgroundColor:\"#FFFFFF\"}}>\r\n            <AppMenu/>\r\n          </div>\r\n          <Redis/>\r\n          <div className=\"col-11 pl-0 pr-0\" >\r\n          <Switch>\r\n            <Route path={`${props.match.url}/home`} exact component={Home}/>\r\n            <Route path={`${props.match.url}/reception`} exact component={Reception}/>\r\n            <Route path={`${props.match.url}/treatment`} exact component={Treatment}/>\r\n            <Route path={`${props.match.url}/test`} exact component={Test}/>\r\n            <Route path={`${props.match.url}/members`} exact component={Members}/>\r\n            <Redirect to={`${props.match.url}/home`} />\r\n          {/* 어느 누구도 해당하지 않으면 home으로 감  */}\r\n          </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;","let lastBno = 3;\r\n\r\nlet data = [\r\n  {\r\n    bno:4, \r\n    btitle:\"Ver. 1.1.5\", \r\n    bcontent:\"직원등록 기능이 추가 되었습니다.\", \r\n    bwriter:\"관리자\", \r\n    bdate:\"2021-06-30\", \r\n    bhitcount:15\r\n  },\r\n  {\r\n    bno:3, \r\n    btitle:\"Ver. 1.1.4\", \r\n    bcontent:\"실시간 기능이 추가 되었습니다.\", \r\n    bwriter:\"관리자\", \r\n    bdate:\"2021-06-20\", \r\n    bhitcount:18\r\n  },\r\n\r\n  {\r\n    bno:2, \r\n    btitle:\"Ver. 1.1.3\", \r\n    bcontent:\"사진추가 기능이 추가 되었습니다.\", \r\n    bwriter:\"관리자\", \r\n    bdate:\"2021-06-12\", \r\n    bhitcount:15\r\n  },\r\n\r\n\r\n  {\r\n    bno:1, \r\n    btitle:\"Ver. 1.1.2\", \r\n    bcontent:\"채팅 기능이 추가 되었습니다.\", \r\n    bwriter:\"관리자\", \r\n    bdate:\"2021-05-20\", \r\n    bhitcount:12\r\n  },\r\n\r\n];\r\n\r\n\r\nexport function getBoardList() {\r\n  return data;\r\n}\r\n\r\nexport function getBoard(bno) {\r\n  const newBoard = data.find(board => {\r\n    return board.bno === bno\r\n  });\r\n  return newBoard;\r\n}","import { Button, Form, Modal } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getBoard } from \"./data/Data\";\r\nfunction HospitalNoticeDetail(props){\r\n  \r\n  return(\r\n    <>\r\n      <Modal animation={false} show={props.show} onHide={props.handleClose} size=\"lg\" centered>\r\n        <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"} }>\r\n          <Modal.Title style={{color:\"#FFFFFF\"}}><h5>NOTICE DETAIL</h5></Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body >\r\n          <div className=\"overflow-auto border\" style={{height:\"718px\"}}>\r\n            <div className=\"mr-4 ml-4 d-flex align-items-center pt-3\" style={{height:\"50px\"}}><h4>{props.board.btitle}</h4></div>\r\n            <div className=\"ml-4 mr-4 border-bottom pb-3\" style={{color:\"#A8A8A8\",height:\"40px\"}}>{props.board.bdate}</div>\r\n            <div className=\"p-3\" style={{height:\"580px\"}}>\r\n              {props.board.bcontent}\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" size=\"sm\" onClick={props.handleClose}>\r\n            닫기\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HospitalNoticeDetail;","import { Form, Modal } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button } from 'react-bootstrap';\r\nimport Item from \"views/components/Item\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getBoardList } from \"./data/Data\";\r\nimport HospitalNoticeDetail from \"./HospitalNoticeDetail\";\r\nfunction HospitalNotice(props){\r\n  const [show, setShow] = useState(false);\r\n  const [selectedNotice, setSelectedNotice] = useState([]);\r\n  //공지사항을 가져올 list \r\n  const [board, setBoard] = useState({});\r\n\r\n\r\n  useEffect(() => {\r\n    setSelectedNotice(getBoardList());\r\n  }, [])\r\n\r\n  const handleShow = (board) => {\r\n    setShow(true);\r\n    setBoard(board);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  }\r\n\r\nreturn(\r\n  <>\r\n  <h5>NOTICE <img src=\"/pencil.png\" width=\"25\"height=\"25\"/></h5> \r\n  <div className=\"overflow-auto\" style={{height:\"718px\"}}>\r\n    <table className=\"table table-hover mb-0\" style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>\r\n      <thead className=\"card-header text-center\">\r\n        <tr>\r\n          <th width=\"90px\">#</th>\r\n          <th width=\"153px\">작성자</th>\r\n          <th width=\"170px\">제목</th>\r\n          <th width=\"170px\">날짜</th>\r\n        </tr>\r\n      </thead>\r\n    </table>\r\n    {selectedNotice.length != 0 &&\r\n    selectedNotice.map((board, index) => {\r\n      return (\r\n        <div key={board.bno} onClick={() => {handleShow(board)}} className=\"border-bottom d-flex text-center\" style={{heght:\"40px\", cursor:\"pointer\"}}>\r\n          <div style={{width:\"90px\", fontWeight:\"bold\", padding:\"12px\"}}>{board.bno}</div>\r\n          <div style={{width:\"153px\", padding:\"12px\"}}>{board.bwriter}</div>\r\n          <div style={{width:\"170px\", padding:\"12px\"}}>{board.btitle}</div>\r\n          <div style={{width:\"170px\", padding:\"12px\"}}>{board.bdate}</div>\r\n        </div>\r\n      )\r\n    })\r\n    }\r\n  </div>\r\n\r\n  <HospitalNoticeDetail board={board} show={show} handleClose={handleClose}></HospitalNoticeDetail>\r\n  </>\r\n)\r\n}\r\n\r\nexport default HospitalNotice;","import { LoginApi, LoginCode } from \"apis/Auth\";\r\nimport { addAuthHeader } from \"apis/axiosConfig\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {  Redirect, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { createSetAuthTokenAction, createSetCodeNumberAction, createSetRoleAuthority, createSetUseridAction } from \"redux/auth-rducer\";\r\nimport Treatment from \"views/Treatment\";\r\nimport HospitalNotice from \"./HospitalNotice\";\r\nimport HospitalNoticeDetail from \"./HospitalNoticeDetail\";\r\n\r\nconst errorMsg = {\r\n  code_empty : '병원코드를 입력해주세요.',\r\n  userid_empty : '직원아이디를 입력해주세요.',\r\n  password_empty : '비밀번호를 입력해주세요.',\r\n  err_login:\"아이디 비밀번호를 다시 한번 확인해주세요.\",\r\n  err_nullAuth:\"해당 병원에 없는 계정입니다.\"\r\n}\r\n\r\nfunction Hospital(props) {\r\n\r\n  const globalUserid = useSelector((state) => {return state.authReducer.userid});\r\n  const dispatch = useDispatch();\r\n\r\n  const [errorMessageCode, setErrorMessageCode] = useState(errorMsg.code_empty);\r\n  const [errorMessageUserid, setErrorMessageUserid] = useState(errorMsg.userid_empty);\r\n  const [errorMessagePassword, setErrorPassword] = useState(errorMsg.password_empty);\r\n\r\n  const [isInvalidCode, setIsInvalidCode] = useState(false);\r\n  const [isInvalidUserid, setIsInvalidUserid] = useState(false);\r\n  const [isInvalidPassword, setIsInvalidPassword] = useState(false);\r\n\r\n  const [validated, setValidated] = useState(false);\r\n  \r\n  const [loginForm, setLoginFoem] = useState({\r\n    codenumber:\"\",\r\n    userid:\"\",\r\n    userpassword:\"\"\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    setLoginFoem({\r\n      ...loginForm,\r\n      [event.target.name]:event.target.value\r\n    })\r\n  }\r\n\r\n  //만약 로그인이 되어 있다면 홈으로 이동\r\n  if(globalUserid != null && globalUserid !== \"\") {\r\n    return <Redirect to=\"/main\"></Redirect>\r\n    // history.push('/main');\r\n  } \r\n\r\n\r\n  const handleLogin = (event) => {\r\n\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (form.checkValidity() === false) {//빈칸이 있을경우\r\n      setErrorMessageCode(errorMsg.code_empty);\r\n      setErrorMessageUserid(errorMsg.userid_empty);\r\n      setErrorPassword(errorMsg.password_empty);\r\n      setValidated(true);\r\n    } else {\r\n      const response = LoginApi(loginForm);\r\n\r\n      response\r\n        .then((response) => {\r\n          if(response.data.state === \"success\"){\r\n\r\n              //로그인 성공시 redux에 저장\r\n            dispatch(createSetUseridAction(response.data.userid));\r\n            dispatch(createSetAuthTokenAction(response.data.authToken));\r\n            dispatch(createSetRoleAuthority(response.data.role_authority));\r\n            dispatch(createSetCodeNumberAction(response.data.codenumber));\r\n\r\n            //요청 헤더에 추가\r\n            addAuthHeader(response.data.authToken);\r\n\r\n            //로그인 성공시 sessionStorage에 저장\r\n            sessionStorage.setItem(\"userid\", response.data.userid);\r\n            sessionStorage.setItem(\"authToken\", response.data.authToken);\r\n            sessionStorage.setItem(\"role_authority\", response.data.role_authority);\r\n            sessionStorage.setItem(\"codenumber\", response.data.codenumber); \r\n\r\n          } else if(response.data.state === \"err_nullAuth\") {// 해당 병원에 계정이 없을경우\r\n            setIsInvalidCode(false);\r\n            setIsInvalidUserid(true);\r\n            setIsInvalidPassword(false);\r\n\r\n            setErrorMessageCode(errorMsg.code_empty);\r\n            setErrorMessageUserid(errorMsg.err_nullAuth);\r\n            setErrorPassword(errorMsg.password_empty);\r\n          }\r\n\r\n        }).catch((error) =>{\r\n          console.log(error.response);\r\n          if(error.response.status === 401) {\r\n            setErrorMessageUserid(\"\");\r\n            setErrorPassword(errorMsg.err_login);\r\n            setIsInvalidUserid(true);\r\n            setIsInvalidPassword(true);\r\n          }\r\n        })\r\n\r\n    }\r\n\r\n  }\r\n\r\n  \r\n  return (\r\n    <div style={{height:\"100vh\"}}>\r\n      <div className=\"pb-2\" style={{backgroundColor:\"#ffffff\"}}><img src=\"douzone.PNG\" className=\"pl-5\" style={{width: \"250px\"}}/></div>\r\n      <div className=\"d-flex\">\r\n        <div className=\"col-6\">\r\n          <div className=\"pt-5 pl-5\">\r\n            <div className=\"card\" style={{width:\"70%\", marginLeft:\"115px\", marginTop:\"0px\"}}>\r\n              <div className=\"card-header\" style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>System Login</div>\r\n                <div className=\"card-body\">\r\n                <div>\r\n                  <img src=\"Login-amico.png\" alt=\"img\" width=\"80%\"/>\r\n                </div>\r\n                  <Form noValidate validated={validated} onSubmit={handleLogin}>\r\n                    <Form.Group controlId=\"formBasicID\">\r\n                      <Form.Label>Hospital Code</Form.Label>\r\n                      <Form.Control required type=\"text\" name=\"codenumber\" placeholder=\"병원코드(숫자)를 입력하세요.\" value={loginForm.codenumber} onChange={handleChange} isInvalid={isInvalidCode}/>\r\n                      <Form.Control.Feedback type=\"invalid\">{errorMessageCode}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicID\">\r\n                      <Form.Label>UserID</Form.Label>\r\n                      <Form.Control required type=\"text\" name=\"userid\" placeholder=\"직원 ID를 입력하세요.\" value={loginForm.userid} onChange={handleChange} isInvalid={isInvalidUserid}/>\r\n                      <Form.Control.Feedback type=\"invalid\">{errorMessageUserid}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                      <Form.Label>Password</Form.Label>\r\n                      <Form.Control required type=\"password\" autoComplete=\"off\" name=\"userpassword\" placeholder=\"비밀번호를 입력하세요.\" value={loginForm.userpassword} onChange={handleChange} isInvalid={isInvalidPassword}/>\r\n                      <Form.Control.Feedback type=\"invalid\">{errorMessagePassword}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <div className=\"text-center mt-4\">\r\n                      <Button variant=\"secondary\" type=\"submit\">\r\n                        로그인\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <div className=\"pt-5 pl-5\">\r\n            <div>\r\n              <div className=\"row\" style={{width:\"70%\"}}>\r\n                <div className=\"col card p-3\" style={{height:\"790px\", border:\"1px solid gray\"}}>\r\n                  <HospitalNotice></HospitalNotice>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Hospital;","import axios from \"axios\";\r\nexport function LoginApi(user){\r\n    const result = axios.post(\"/auth/login\",user);\r\n    return result;\r\n}\r\n\r\nexport function LogoutApi(){\r\n    axios.get(\"/Auth/logout\")\r\n}\r\n\r\nexport function test(){\r\n    axios.get(\"/Auth/test\", {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n}\r\n\r\nexport function test2(){\r\n    axios.get(\"/Auth/test2\", {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n}","\r\nimport { AppContextProvider } from \"AppContext\";\r\nimport Main from \"Main\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Hospital from \"views/hospital\";\r\nimport './App.css';\r\nimport axiosConfig from \"apis/axiosConfig\"\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"d-flex flex-column vh-100\" style={{width:\"1920px\", backgroundColor:\"#F9F7F9\"}}>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Hospital}/>\r\n        <AppContextProvider>\r\n        <Route path=\"/main\" component={Main}/>\r\n        </AppContextProvider>\r\n \r\n        <Redirect to=\"/\"/>\r\n        {/* 어느 누구도 해당하지 않으면 home으로 감  */}\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n//  <div className=\"col-1 pl-0 border-right border-gray align-items-end text-bottom\" style={{position:\"relative\", backgroundColor:\"#FFFFFF\"}}>","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n  treatment: { \r\n  }\r\n}\r\n\r\n//액션 타입 선언\r\nconst SET_TREATMENT=\"treatment/setTreatment\";\r\n\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetTreatment = (treatment) => {\r\n  return {type:SET_TREATMENT, treatment};\r\n} \r\n\r\n//리듀스 선언\r\nconst treatmentReducer = (state = initialState, action) => {\r\n  if(action.type === SET_TREATMENT) {\r\n    return {...state, treatment:action.treatment};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\n\r\nexport default treatmentReducer;","const initialState = {\r\n  realtime: {}\r\n}\r\n\r\n//액션 타입 선언\r\nconst SET_REALTIME=\"realtime/setRealTime\";\r\nconst SET_=\"realtime/setRealTime\";\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetRealTime = (realtime) => {\r\n  return {type:SET_REALTIME, realtime};\r\n} \r\n\r\n//리듀스 선언\r\nconst realtimeReducer = (state = initialState, action) => {\r\n  if(action.type === SET_REALTIME) {\r\n    return {...state, realtime:action.realtime};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\n\r\nexport default realtimeReducer;","\r\nconst initState = {\r\n    websocket:null,\r\n}\r\nconst SET_WEBSOCKET = \"websocket/set_websocket\"\r\nexport const CreateSetWebSocket =(websocket) =>{\r\n    return({\r\n        type:SET_WEBSOCKET,\r\n        websocket\r\n    })\r\n}\r\nconst websocketReducer=(state = initState,action)=> {\r\n    switch(action.type){\r\n        case SET_WEBSOCKET:\r\n            return{\r\n                ...state,\r\n                websocket:action.websocket\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default websocketReducer;","import { combineReducers } from \"redux\";\r\nimport patientReducer from \"./patient-reducer\"\r\nimport treatmentReducer from \"./treatment-reducer\"\r\nimport reservationReducer from \"./reservation-reducer\"\r\nimport receptionReducer from \"./reception-reducer\"\r\nimport authReducer from \"./auth-rducer\"\r\nimport realtimeReducer from \"./realtime-reducer\"\r\nimport websocketReducer from \"./websocket-reducer\"\r\nimport toastReducer from \"./toast-reducer\"\r\nconst rootReducer = combineReducers({\r\n  patientReducer,\r\n  treatmentReducer,\r\n  reservationReducer,\r\n  receptionReducer,\r\n  authReducer,\r\n  websocketReducer,\r\n  realtimeReducer,\r\n  toastReducer\r\n\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport { createStore } from 'redux';\r\nimport rootReducer from 'redux/root-reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from 'react-redux';\r\nimport { createSetAuthTokenAction, createSetCodeNumberAction, createSetRoleAuthority, createSetUseridAction } from 'redux/auth-rducer';\r\nimport { addAuthHeader } from 'apis/axiosConfig';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\n//Redux에 인증 정보 설정\r\nstore.dispatch(createSetCodeNumberAction(sessionStorage.getItem(\"codenumber\") || \"\"));\r\nstore.dispatch(createSetUseridAction(sessionStorage.getItem(\"userid\") || \"\"));\r\nstore.dispatch(createSetAuthTokenAction(sessionStorage.getItem(\"authToken\") || \"\"));\r\nstore.dispatch(createSetRoleAuthority(sessionStorage.getItem(\"role_authority\") || \"\"));\r\n\r\n//Axios에 인증 헤더 추가\r\naddAuthHeader(sessionStorage.getItem(\"authToken\"));\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
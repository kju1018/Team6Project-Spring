{"version":3,"sources":["AppContext.js","apis/axiosConfig.js","redux/auth-rducer.js","AppMenu.js","views/Home/Notice/NoticeDetail.js","apis/Main.js","views/Home/Notice/NoticeAdd.js","views/Home/Notice/index.js","views/Home/User/index.js","views/Home/Photo/index.js","views/Home/Calendar/index.js","views/Home/Weekly/WeeklyWrite.js","views/Home/Weekly/WeeklyDetail.js","views/Home/Weekly/index.js","views/Home/index.js","views/Reception/SearchPatient/Calendar.js","views/components/Item.js","views/Reception/components/ReceptionHeader.js","apis/Reception.js","views/Reception/Reservation/ReservationUpdateModal.js","apis/Redis.js","views/Reception/BackEnd/index.js","redux/reception-reducer.js","views/Reception/SearchPatient/DoctorSelectorModal.js","views/Reception/SearchPatient/TestSelectorModal.js","views/Reception/Reservation/index.js","views/Reception/SearchPatient/SearchPatientModal.js","views/Reception/SearchPatient/RegisterPatientModal.js","views/Reception/SearchPatient/UpdatePatientModal.js","redux/reservation-reducer.js","views/Reception/SearchPatient/RegisterReservationModal.js","views/Reception/SearchPatient/PatientProfile.js","views/Reception/SearchPatient/PatientHistory.js","views/Reception/SearchPatient/index.js","redux/patient-reducer.js","views/Reception/PatientReception/TestReception.js","views/Reception/PatientReception/TreatmentReception.js","views/Reception/PatientReception/index.js","views/Reception/index.js","views/Treatment/components/ButtonHeader.js","views/Treatment/components/Diagnoses/DiagnosesItem.js","views/Treatment/components/Diagnoses/PrescriptionDiagnosesItem.js","views/Treatment/components/Diagnoses/PrescriptionDiagnosesModal.js","views/Treatment/DiagnosisList.js","views/Treatment/components/Drugs/PrescriptionDrugItem.js","views/Treatment/components/Drugs/PrescriptionDrugsModal.js","views/Treatment/components/Drugs/DrugsItem.js","views/Treatment/DrugList.js","views/Treatment/components/TreatmentItem.js","views/Treatment/PatientTreatment.js","apis/Treatment.js","views/Treatment/components/Tests/ImgDetailModal.js","views/Treatment/components/Tests/PackageImgTest.js","views/Treatment/components/Test.js","views/Treatment/components/Tests/PackageTest.js","views/Treatment/components/Tests/PrescriptionPackageItem.js","views/Treatment/components/Tests/PrescriptionTestItem.js","views/Treatment/components/Tests/PrescriptionTestsModal.js","views/Treatment/TestList.js","views/Treatment/TreatmentMemo.js","views/Treatment/components/SearchPatient.js","views/Treatment/components/PatientProfile.js","views/Treatment/index.js","views/Test/PeriodSearch.js","views/Test/Print.js","apis/test.js","views/Test/TestGroup.js","views/Test/Banner.js","views/Test/TestResult.js","views/Test/PatientList.js","views/Test/index.js","views/Members/JoinForm.js","apis/User.js","views/Members/UpdateForm.js","views/Members/index.js","AppRoute.js","redux/toast-reducer.js","views/components/Messenger/Chatting/index.js","views/components/DrawerReceptions.js","views/components/Menu.js","views/components/Redis/index.js","Main.js","views/hospital/data/Data.js","views/hospital/HospitalNoticeDetail.js","views/hospital/HospitalNotice.js","views/hospital/index.js","apis/Auth.js","App.js","reportWebVitals.js","redux/treatment-reducer.js","redux/realtime-reducer.js","redux/websocket-reducer.js","redux/root-reducer.js","index.js"],"names":["AppContext","React","createContext","websocket","AppContextProvider","props","value","Provider","children","addAuthHeader","authToken","axios","defaults","headers","common","baseURL","initState","userid","role_authority","codenumber","SET_USERID","SET_AuthToken","SET_CodeNumber","SET_Authority","createSetUseridAction","type","createSetAuthTokenAction","createSetCodeNumberAction","createSetRoleAuthority","authority","authReducer","state","action","AppMenu","dispatch","useDispatch","globalUserRole","useSelector","style","backgroundColor","height","marginRight","marginTop","className","to","exact","activeStyle","color","Button","marginLeft","variant","onClick","sessionStorage","removeItem","NoticeDetail","Modal","show","onHide","handleClose","Header","closeButton","Title","board","title","Body","content","Footer","event","deleteNoticeState","noticeid","alert","noticeUpdate","newBoard","post","getScheduleList","startDate","get","scheduleUpdate","NoticeAdd","globalUserid","console","log","useState","setBoard","handleChange","target","name","handleAdd","a","preventDefault","date","Date","handleClose1","work","Form","onSubmit","src","width","Group","controlId","Label","Control","onChange","as","rows","Notice","setShow","show1","setShow1","selectedNotice","setSelectedNotice","response","data","useEffect","float","id","scope","length","map","index","handleShow","delete","deleteNotice","then","User","UserList","setUserList","userroom","username","phonenumber","sex","Photo","setIndex","Carousel","activeIndex","onSelect","selectedIndex","e","Item","with","alt","Calendar","setStartDate","selected","inline","WeeklyWrite","WeeklyDetail","deleteScheduleState","scheduleid","Weekly","ExampleCustomInput","forwardRef","ref","scheduleList","setScheduleList","moment","format","formatDate","customInput","deleteSchedule","Home","fontSize","fontWeight","CalcCitem","month","lastDay","getDate","ItemBoard","i","j","push","getMonth","setMonth","DayIndex","CalcDayIndex","dayIndex","setDayIndex","slideIndex","setSlideIndex","CItem","setCItem","day","selectDate","getFullYear","setSelectDate","toLocaleDateString","today","tmpSlideindex","parseInt","week","ChangeMonth","dir","newMonth","margin","border","interval","prevIcon","nextIcon","indicators","citem","padding","onChangeDaySelect","borderRadius","textAlign","getDay","item","property","order","itemArray","setItemArray","itemarray","ip","jsx","tabIndex","memo","ReceptionHeader","iclassName","headertitle","GetTreatmentListBypatientid","patientid","GetTreatmentList","GetTestReceptionList","UpdateReservationModal","reservationType","setReservationType","handleReservation","patient","setPatient","selectedReservation","params","result","reservationdate","patientname","age","ssn1","ssn2","showTimeSelect","timeFormat","popperPlacement","minDate","minTime","maxTime","dateFormat","newDateOptions","hour","minute","origin","toLocaleString","setMinutes","getMinutes","getTime","getReservationDate","newreservation","reservation","put","UpdateReservation","closeModal","BASE_URL","sendRedisMessage","JSON","stringify","topic","saveChatting","chatArray","chatArrayst","initialState","testreception","treatmentreception","testresult","SET_TESTRECEPTION","SET_TREATMENTRECEPTION","SET_TESTRESULT","receptionReducer","patientslist","TR","registerday","lasttreatment","userslist","userpassword","userenabled","treatmentslist","treatmentid","treatmentdate","status","drugslist","drugid","description","reservationslist","reservationid","testList","testreceptionslist","testreceptionid","testdate","testslist","groupcode","groupname","testdataid","DoctorSelectorModal","doctorList","setDoctorList","selectedDoctor","setselectedDoctor","usertype","controlLoading","overflow","checked","disabled","treatment","newTreatment","selectedPatient","CancelReservation","TestSelectorModal","setTestList","entry","Object","entries","rowSpan","modify","ischeck","handleTestList","index2","testdataname","filter","test","testdataidlist","testdataArray","receptiontestarg","testreceptionarg","Reservation","reservationUpdateModalshow","setReservationUpdateModalshow","doctorSelectorModalshow","setDoctorSelectorModalshow","reservationList","setReservationList","reservationReducer","setSelectedReservation","testSelectorModalshow","setTestSelectorModalshow","loading","setLoading","click","focusItem","modalname","newreservationlist","concat","sort","r1","r2","Number","ControlLoading","bool","findIndex","tmplist","splice","marginBottom","rdate","item2","reservationuidate","backdrop","size","ReservationUpdateModal","Spinner","animation","role","SearchPatientModal","selectname","keyword","setKeyword","select","setSelect","patientList","setPatientList","setSelectedPatient","disableHeight","tmp","toString","indexOf","list","rowCount","rowHeight","rowRenderer","key","overscanRowCount","RegisterPatientModal","useForm","register","handleSubmit","errors","RegisterPatient","required","pattern","UpdatePatient","defaultValue","SET_RESERVATION","RegisterReservationModal","testlist","createSetReservation","PatientProfile","minWidth","boxShadow","paddingLeft","PatientHistory","selectedTreatment","setSelectedTreatment","treatmentData","setTreatmentData","testData","setTestData","drugsData","setDrugsData","diagnosesData","setDiagnosesData","treatmentReception","userlist","treatmentlist","treatmentdetail","useCallback","treatmentProperty","borderBottom","Math","round","window","innerHeight","diagnosesdataid","diagnosesdataname","drugname","SearchPatient","searchModalshow","setSearchModalshow","reservationRegisterhModalshow","setreservationRegisterhModalshow","patientRegisterhModalshow","setPatientRegisterhModalshow","patientUpdateModalshow","setPatientUpdateModalshow","tmpPatient","UpdatePatientModal","SET_PATIENT","createSetPatient","patientReducer","TestReception","listtype","setListtype","selectedTestReception","setSelectedTestReception","testProperty","ButtonGroup","toggle","ToggleButton","isDrawer","deleteTestReception","TreatmentReception","selectedTreatmetReception","setSelectedTreatmetReception","deleteTreatmentReception","treatmentList","PatientReception","testReception","treatementsData","setTreatmentsData","testReceptionsData","setTestReceptionsData","patientlist","treatment_id","selectedtreatment","testreception_id","Reception","fontFamily","ButtonHeader","onclick","btnicon","cursor","DiagnosesItem","OverlayTrigger","placement","overlay","Tooltip","whiteSpace","textOverflow","diagnosesdataename","PrescriptionDiagnosesItem","addItem","PrescriptionDiagnosesModal","searchName","setSearchName","prescriptionItems","setPrescriptionItems","searchList","setSearchList","searchType","setSearchType","itemList","staticItemList","prescribe","items","prevItems","obj","newItem","prevItem","selectType","search","newItems","toUpperCase","diagnosis","centered","DiagnosisList","staticDignoses","treatmentDiagnoses","prescribeDiagnoses","class","PrescriptionDrugItem","min","quantityArr","onChangeQuantity","drugunit","PrescriptionDrugsModal","setQuantityArr","quantity","drug","DrugsItem","drugtype","DrugList","staticDrugs","treatmentDrugs","prescribeDrugs","TreatmentItem","prop","Badge","PatientTreatment","selectTreatment","patientTreatments","getAllTreatments","prescribeTreatment","prescription","getTestImgs","ImgDetailModal","closeImgModal","selectedImg","imgid","href","PackageImgTest","imgList","setImgList","setSelectedImg","imgShow","setImgShow","groupTest","tests","Accordion","Card","Toggle","Alert","eventKey","Collapse","defaultActiveKey","block","img","showImgModal","Test","testname","testcontainer","Table","striped","hover","max","testunit","PackageTest","PrescriptionPackageItem","addPackage","PrescriptionTestItem","PrescriptionTestsModal","setEventKey","groupTests","setGroupTests","searchGroupTests","setSearchGroupTests","groupList","reduce","gt","t","newTests","selectNav","rowRendererPackage","Tab","Container","Nav","fill","Link","Content","Pane","TestList","receptionToast","setReceptionToast","group","treatmentTests","testtype","staticTests","prescribeTests","values","position","bottom","right","zIndex","Row","Col","Toast","onClose","closeShow","toastShow","delay","autohide","TreatmentMemo","setMemo","readOnly","outline","checkedPatient","setCheckedPatient","checkPatient","selectPatient","saveTreatment","Treatment","globalPatient","catch","error","setTreatment","setPatientTreatments","setTreatmentDrugs","setTreatmentDiagnoses","setTreatmentTests","setStaticDrugs","setStaticDignoses","setStaticTests","prescribeLoading","setPrescribeLoading","treatmentsLoading","setTreatmentLoading","drugResponse","diagnosesResponse","testResponse","drugsList","diagnosesList","testsList","testResult","prescribeList","time","message","confirm","heighn","registerLocale","ko","PeriodSearch","change","startdate","enddate","endDate","setEndDate","setBtnClicked","handleBtnClicked","currentDate","threeDaysAgo","weekAgo","oneMonthAgo","threeMonthAgo","locale","Print","selectpatientinfo","inputRef","grouplist","useBarcode","options","background","testlistByDate","insertResult","resultStatus","startTests","checkedList","val","startPatient","cancelTests","cancelPatient","finishTests","promise","finishPatient","TestGroup","open","setOpen","setGroupList","excel","setExcel","resultlist","setResultlist","testdatas","set","Set","chkresult","saveBtn","label","tcolor","handleStart","flag","newGroupList","gettest","getpatient","handlePrint","handleExit","handleCancel","count","handleFinish","ws","xlsx","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","alignItems","changeHandler","display","Banner","TestResult","setTreatmentid","inputFile","useRef","formData","FormData","append","current","files","multipartFormData","htmlFor","PatientList","patients","waitings","progresss","completes","borderTop","ClickPatient","resultstatus","TestPage","setWaiting","setProgress","setComplete","setSelectpatientinfo","groupshow","setGroupShow","setStartdate","setEnddate","setTestdatas","waiting","progress","complete","testlistByReceptionid","borderRight","borderLeft","errorMsg","JoinForm","globalcode","validated","setValidated","errorMessage","setErrorMesssage","errorMessageID","setErrorMesssageID","isInvalid","setIsInvalid","isInvalidID","setIsInvalidID","isNurse","setIsNurse","confirmpassword","setFormData","prevData","noValidate","user","form","currentTarget","stopPropagation","checkValidity","getUsers","finally","placeholder","Feedback","Check","feedback","UpdateForm","updateUser","setIsUpdate","updateShow","Members","toastMessage","setToastMessage","isUpdate","userList","setUpdateUser","completeUpdate","AppRoute","toast","SET_TOAST","realtimeReducer","chatarray","Chatting","setChatArray","connectionList","setConnectionList","setMessage","globalUid","userInfo","setUserInfo","scrollRef","setWebsocket","brb","setBRB","scrollIntoView","behavior","onbeforeunload","webSocket","WebSocket","onopen","GetUserData","send","header","from","connectioninfo","userrole","onclose","onmessage","parse","connectionlist","prev","chatObj","dateTime","isMe","enabled","close","sendMsg","BRB","minHeight","chat","maxWidth","wordBreak","onKeyPress","DrawerReceptions","Menus","toastReducer","showToast","setShowToast","customBurgerIcon","Redis","connected","setConnected","subTopic","pubMessage","contents","setContents","groupEnd","connectWebSocket","sendSubTopic","strJson","json","Main","Menu","path","component","bno","btitle","bcontent","bwriter","bdate","bhitcount","HospitalNoticeDetail","HospitalNotice","heght","Hospital","errorMessageCode","setErrorMessageCode","errorMessageUserid","setErrorMessageUserid","errorMessagePassword","setErrorPassword","isInvalidCode","setIsInvalidCode","isInvalidUserid","setIsInvalidUserid","isInvalidPassword","setIsInvalidPassword","loginForm","setLoginFoem","backgroundImage","backgroundRepeat","setItem","autoComplete","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_TREATMENT","treatmentReducer","realtime","SET_REALTIME","SET_WEBSOCKET","websocketReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","getItem","ReactDOM","render","document","getElementById"],"mappings":"wdAEMA,EAAaC,IAAMC,cAAc,CACnCC,UAAU,OAGP,SAASC,EAAmBC,GAC/B,IACMC,EAAQ,CACVH,UAFc,MAKlB,OACI,cAACH,EAAWO,SAAZ,CAAqBD,MAAOA,EAA5B,SACKD,EAAMG,WAKJR,I,iBChBR,SAASS,EAAcC,GAC1BC,IAAMC,SAASC,QAAQC,OAAvB,UAA6CJ,EAFjDC,IAAMC,SAASG,QAAU,yB,qCCDnBC,EAAY,CACdC,OAAO,GACPC,eAAe,GACfR,UAAU,GACVS,WAAW,IAETC,EAAa,kBACbC,EAAgB,qBAChBC,EAAiB,sBACjBC,EAAgB,0BACTC,EAAwB,SAACP,GAClC,MAAO,CAAEQ,KAAKL,EAAYH,WAEjBS,EAA2B,SAAChB,GACrC,MAAO,CAACe,KAAKJ,EAAeX,cAGnBiB,EAA4B,SAACR,GACtC,MAAO,CAACM,KAAKH,EAAgBH,eAGpBS,EAAyB,SAACC,GACnC,MAAO,CAACJ,KAAKF,EAAeM,cA6BjBC,EA3BG,WAA8B,IAA7BC,EAA4B,uDAApBf,EAAUgB,EAAU,uCAC3C,OAAOA,EAAOP,MACV,KAAKL,EACD,OAAO,2BACAW,GADP,IAEId,OAAOe,EAAOf,SAEtB,KAAKI,EACD,OAAO,2BACAU,GADP,IAEIrB,UAAUsB,EAAOtB,YAEzB,KAAKY,EACD,OAAO,2BACAS,GADP,IAEIZ,WAAWa,EAAOb,aAE1B,KAAKI,EACD,OAAO,2BACAQ,GADP,IAEIb,eAAec,EAAOH,YAE9B,QACI,OAAOE,IC6CJE,MArFf,WACI,IAAMC,EAAWC,cAEXC,EAAiBC,aAAY,SAACN,GAAY,OAAOA,EAAMD,YAAYZ,kBAmBzE,OACA,qCACA,qBAAKoB,MAAO,CAACC,gBAAgB,UAAWC,OAAO,OAAQC,YAAY,WAEnE,qBAAKH,MAAO,CAACI,UAAU,OAAvB,SACE,oBAAIC,UAAU,kBAAd,SACE,qBAAIA,UAAU,WAAd,UACE,cAAC,IAAD,CAASC,GAAG,aAAaC,OAAK,EAACF,UAAU,+BAA+BG,YAAa,CAACC,MAAM,UAAWR,gBAAgB,WAAYD,MAAO,CAACS,MAAM,SAAjJ,SACE,sBAAKJ,UAAU,MAAf,UACE,qBAAKA,UAAU,mBAAf,SAAkC,mBAAGA,UAAU,uBAC/C,qBAAKA,UAAU,aAAf,uBAIgB,gBAAnBP,EACC,KAEA,cAAC,IAAD,CAASQ,GAAG,kBAAkBD,UAAU,+BAA+BL,MAAO,CAACS,MAAM,SAAUD,YAAa,CAACC,MAAM,UAAWR,gBAAgB,WAA9I,SACA,sBAAKI,UAAU,MAAf,UACI,qBAAKA,UAAU,mBAAf,SAAkC,mBAAGA,UAAU,oBAC/C,qBAAKA,UAAU,aAAf,4BAIc,eAAnBP,EACC,KAEA,qCACE,cAAC,IAAD,CAASQ,GAAG,kBAAkBD,UAAU,+BAA+BL,MAAO,CAACS,MAAM,SAAUD,YAAa,CAACC,MAAM,UAAWR,gBAAgB,WAA9I,SACE,sBAAKI,UAAU,MAAf,UACE,qBAAKA,UAAU,mBAAf,SAAkC,mBAAGA,UAAU,0BAC/C,qBAAKA,UAAU,aAAf,4BAGJ,cAAC,IAAD,CAASC,GAAG,aAAaD,UAAU,+BAA+BL,MAAO,CAACS,MAAM,SAAUD,YAAa,CAACC,MAAM,UAAWR,gBAAgB,WAAzI,SACE,sBAAKI,UAAU,MAAf,UACE,qBAAKA,UAAU,mBAAf,SAAkC,mBAAGA,UAAU,uBAC/C,qBAAKA,UAAU,aAAf,0BAKY,eAAnBP,EAEC,cAAC,IAAD,CAASQ,GAAG,gBAAgBD,UAAU,+BAA+BL,MAAO,CAACS,MAAM,SAAUD,YAAa,CAACC,MAAM,UAAWR,gBAAgB,WAA5I,SACE,sBAAKI,UAAU,MAAf,UACE,qBAAKA,UAAU,mBAAf,SAAkC,mBAAGA,UAAU,wBAC/C,qBAAKA,UAAU,aAAf,0BAIJ,KAGF,cAACK,EAAA,EAAD,CAAQV,MAAO,CAACI,UAAU,OAAQO,WAAW,QAASC,QAAQ,OAAOC,QAvE5D,WAEbjB,EAASV,EAAsB,KAC/BU,EAASR,EAAyB,KAClCQ,EAASP,EAA0B,KACnCO,EAASN,EAAuB,YFV3BjB,IAAMC,SAASC,QAAQC,OAAvB,UEgBLsC,eAAeC,WAAW,UAC1BD,eAAeC,WAAW,aAC1BD,eAAeC,WAAW,cAC1BD,eAAeC,WAAW,mBAyDtB,iD,0DCtDKC,MA5Bf,SAAsBjD,GAQpB,OACE,mCACA,eAACkD,EAAA,EAAD,CAAOC,KAAMnD,EAAMmD,KAAMC,OAAQpD,EAAMqD,YAAvC,UACA,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAACtB,MAAO,CAACC,gBAAgB,mBAAoBQ,MAAM,SAA5E,SACM,cAACQ,EAAA,EAAMM,MAAP,UAAa,iCAASxD,EAAMyD,MAAMC,YAElC,cAACR,EAAA,EAAMS,KAAP,UAAa3D,EAAMyD,MAAMG,UACzB,eAACV,EAAA,EAAMW,OAAP,WACE,cAAClB,EAAA,EAAD,CAAQE,QAAQ,UAAUC,QAAS9C,EAAMqD,YAAzC,mBAGA,cAACV,EAAA,EAAD,CAAQE,QAAQ,SAASC,QAjBf,SAACgB,GACnB9D,EAAM+D,kBAAkB/D,EAAMyD,MAAMO,UACpChE,EAAMqD,cACNY,MAAM,gFAcE,6B,QCZL,SAASC,EAAaC,GAEzB,OADgB7D,IAAM8D,KAAK,qBAAsBD,GAiB9C,SAASE,EAAgBC,GAE5B,OADgBhE,IAAMiE,IAAI,sBAAwBD,GAK/C,SAASE,EAAeL,GAE3B,OADgB7D,IAAM8D,KAAK,uBAAwBD,G,aC6BxCM,MA1Df,SAAmBzE,GAEjB,IAAM0E,EAAe1C,aAAY,SAACN,GAChC,OAAOA,EAAMD,YAAYb,UAE3B+D,QAAQC,IAAIF,GALY,MAOEG,mBAAS,CACjCnB,MAAO,GACPE,QAAS,KATa,mBAOjBH,EAPiB,KAOVqB,EAPU,KAYlBC,EAAe,SAACjB,GACpBgB,EAAS,2BACJrB,GADG,kBAELK,EAAMkB,OAAOC,KAAOnB,EAAMkB,OAAO/E,UAIhCiF,EAAS,uCAAG,WAAMpB,GAAN,eAAAqB,EAAA,6DAChBrB,EAAMsB,kBACAjB,EAFU,eAEKV,IACZ7C,OAAS8D,EAClBP,EAASkB,KAAO,IAAIC,KAJJ,SAKVpB,EAAaC,GALH,OAMhBnE,EAAMuF,eACNvF,EAAMwF,OACNvB,MAAM,+EARU,2CAAH,sDAWf,OACE,mCACA,eAACf,EAAA,EAAD,CAAOC,KAAMnD,EAAMmD,KAAMC,OAAQpD,EAAMuF,aAAvC,UACU,eAACE,EAAA,EAAD,CAAMnD,UAAU,cAAcoD,SAAUR,EAAxC,UACE,wCAAU,qBAAKS,IAAI,cAAaC,MAAM,KAAIzD,OAAO,UACjD,uBACA,eAACsD,EAAA,EAAKI,MAAN,CAAYvD,UAAU,OAAOwD,UAAU,4BAAvC,UACE,cAACL,EAAA,EAAKM,MAAN,UAAY,oDACZ,cAACN,EAAA,EAAKO,QAAN,CAAc5E,KAAK,OAAO6D,KAAK,QAAQhF,MAAOwD,EAAMC,MAAOuC,SAAUlB,OAEvE,eAACU,EAAA,EAAKI,MAAN,CAAYvD,UAAU,OAAOwD,UAAU,+BAAvC,UACE,cAACL,EAAA,EAAKM,MAAN,UAAY,oDACZ,cAACN,EAAA,EAAKO,QAAN,CAAcE,GAAG,WAAWC,KAAM,EAAGlB,KAAK,UAAUhF,MAAOwD,EAAMG,QAASqC,SAAUlB,UAGxF,eAAC7B,EAAA,EAAMW,OAAP,WACA,cAAClB,EAAA,EAAD,CAAQvB,KAAK,SAASyB,QAAQ,UAAUC,QAASoC,EAAjD,iBAGE,cAACvC,EAAA,EAAD,CAAQE,QAAQ,SAASC,QAAS9C,EAAMuF,aAAxC,4BCuCDa,MAtFf,SAAgBpG,GAAO,IAAD,EACF6E,mBAAS,GADP,gCAMIA,oBAAS,IANb,mBAMb1B,EANa,KAMPkD,EANO,OAOMxB,oBAAS,GAPf,mBAObyB,EAPa,KAONC,EAPM,OAQwB1B,mBAAS,IARjC,mBAQb2B,EARa,KAQGC,EARH,OAUM5B,mBAAS,IAVf,mBAUbpB,EAVa,KAUNqB,EAVM,KAYdU,EAAI,uCAAG,4BAAAL,EAAA,sEFfK7E,IAAMiE,IAAI,oBEef,OACLmC,EADK,OAEX/B,QAAQC,IAAI8B,EAASC,MACrBF,EAAkBC,EAASC,MAHhB,2CAAH,qDAiCZ,OAjBEC,qBAAU,WACRpB,MACC,IAgBH,qCACA,yCAAW,qBAAKG,IAAI,cAAaC,MAAM,KAAIzD,OAAO,OAC9C,cAACQ,EAAA,EAAD,CAAQE,QAAQ,kBAAkBZ,MAAO,CAAC4E,MAAO,SAAU/D,QAL3C,kBAAMyD,GAAS,IAK/B,SACA,qBAAKZ,IAAI,WAAUC,MAAM,KAAIzD,OAAO,YAEtC,cAAC,EAAD,CAAWgB,KAAMmD,EAAOf,aATL,kBAAMgB,GAAS,IASkBf,KAAMA,IAC5D,qBAAKlD,UAAU,YAAYwE,GAAG,UAA9B,SACE,qBAAKxE,UAAU,sBAAf,SACD,wBAAOA,UAAU,oBAAjB,UACE,uBAAOA,UAAU,cAAcL,MAAO,CAACC,gBAAgB,mBAAoBQ,MAAM,SAAjF,SACE,+BACE,oBAAIqE,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,gCACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,+BAGJ,kCACGpC,QAAQC,IAAI4B,GACa,GAAzBA,EAAeQ,QAChBR,EAAeS,KAAI,SAACxD,EAAMyD,GACxB,OACE,qBAAyBpE,QAAS,YApCzB,SAACW,GACjB4C,GAAQ,GACRvB,EAASrB,GAkCqC0D,CAAW1D,IAAlD,UACE,oBAAIxB,MAAO,CAAC2D,MAAM,SAAlB,SAA6BsB,IAC7B,oBAAIjF,MAAO,CAAC2D,MAAM,SAAlB,SAA6BnC,EAAM7C,SACnC,6BAAK6C,EAAMC,QACX,oBAAIzB,MAAO,CAAC2D,MAAM,SAAlB,SAA6BnC,EAAM4B,SAJ5B5B,EAAMO,uBAatB,cAAC,EAAD,CAAcD,kBA/DQ,SAACC,IFVpB,SAAsBA,GAEzB,OADgB1D,IAAM8G,OAAO,gBAAkBpD,IEW/CqD,CAAarD,GAAUsD,MAAK,SAACZ,GAC3B/B,QAAQC,IAAIZ,GACZW,QAAQC,IAAI8B,EAASC,MACrBF,EAAkBC,EAASC,UA0DuBlD,MAAOA,EAAON,KAAMA,EAAME,YA5C5D,WAClBgD,GAAQ,UCIGkB,MA9Cf,SAAcvH,GAAO,IAAD,EAEc6E,mBAAS,IAFvB,mBAEX2C,EAFW,KAEDC,EAFC,KAIZjC,EAAI,uCAAG,4BAAAL,EAAA,sEHeK7E,IAAMiE,IAAI,kBGff,OACLmC,EADK,OAEXe,EAAYf,EAASC,MAFV,2CAAH,qDASV,OAJAC,qBAAU,WACRpB,MACA,IAGA,mCACA,qBAAKlD,UAAU,YAAYwE,GAAG,UAA9B,SACE,qBAAKxE,UAAU,sBAAf,SACA,wBAAOA,UAAU,oBAAjB,UACE,uBAAOA,UAAU,cAAcL,MAAO,CAACC,gBAAgB,mBAAoBQ,MAAM,SAAjF,SACA,+BACE,oBAAIqE,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBAGF,uBAAO9E,MAAO,CAACC,gBAAgB,SAA/B,SACsB,GAAnBsF,EAASR,QACVQ,EAASP,KAAI,SAACxD,GACZ,OACI,+BACE,oBAAIxB,MAAO,CAAC2D,MAAM,SAAlB,SAA6BnC,EAAMiE,WACnC,oBAAIzF,MAAO,CAAC2D,MAAM,SAAlB,SAA6BnC,EAAMkE,WACnC,oBAAI1F,MAAO,CAAC2D,MAAM,SAAlB,SAA6BnC,EAAMmE,cACnC,6BAAKnE,EAAMoE,wB,SCZdC,MAtBf,SAAe9H,GAAO,IAAD,EACO6E,mBAAS,GADhB,mBACZqC,EADY,KACLa,EADK,KAOnB,OACE,eAACC,EAAA,EAAD,CAAUC,YAAaf,EAAOgB,SALX,SAACC,EAAeC,GACnCL,EAASI,IAIT,UACE,cAACH,EAAA,EAASK,KAAV,UACE,qBAAK1C,IAAI,WAAW2C,KAAK,MAAMnG,OAAO,MAAOG,UAAU,gBAAgBiG,IAAI,kBAE7E,cAACP,EAAA,EAASK,KAAV,UACE,qBAAK1C,IAAI,YAAY2C,KAAK,MAAMnG,OAAO,MAAMG,UAAU,gBAAgBiG,IAAI,mBAE7E,cAACP,EAAA,EAASK,KAAV,UACE,qBAAK1C,IAAI,aAAa2C,KAAK,MAAMnG,OAAO,MAAMG,UAAU,gBAAgBiG,IAAI,sB,wBCArEC,MAff,SAAkBxI,GAAQ,IAAD,EACW6E,mBAAS,IAAIS,MADxB,mBAChBhB,EADgB,KACLmE,EADK,KAEvB,OACE,mCACA,qBAAKnG,UAAU,cAAf,SACE,cAAC,IAAD,CACAoG,SAAUpE,EACV2B,SAAU,SAACZ,GAAD,OAAUoD,EAAapD,IACjCsD,QAAM,S,iCC6CGC,MApDf,SAAqB5I,GAEnB,IAAM0E,EAAe1C,aAAY,SAACN,GAChC,OAAOA,EAAMD,YAAYb,UAHF,EAMCiE,mBAAS,CACjCjB,QAAS,KAPc,mBAMlBH,EANkB,KAMXqB,EANW,KAiBnBI,EAAS,uCAAG,WAAMpB,GAAN,eAAAqB,EAAA,6DAChBrB,EAAMsB,kBACAjB,EAFU,eAEKV,IACZ7C,OAAS8D,EAClBP,EAASkB,KAAOrF,EAAMsE,UAJN,SAKVE,EAAeL,GALL,OAMhBnE,EAAMuF,eACNvF,EAAMwF,OACNvB,MAAM,yEARU,2CAAH,sDAWf,OACE,mCACA,eAACf,EAAA,EAAD,CAAOC,KAAMnD,EAAMmD,KAAMC,OAAQpD,EAAMqD,YAAvC,UACU,eAACoC,EAAA,EAAD,CAAMC,SAAUR,EAAhB,UACE,qBAAI5C,UAAU,cAAd,oBAAmC,qBAAKqD,IAAI,cAAaC,MAAM,KAAIzD,OAAO,UAC1E,uBACA,eAACsD,EAAA,EAAKI,MAAN,CAAYvD,UAAU,oBAAoBwD,UAAU,+BAApD,UACE,cAACL,EAAA,EAAKM,MAAN,UAAY,oDACZ,cAACN,EAAA,EAAKO,QAAN,CAAcE,GAAG,WAAWC,KAAM,EAAGlB,KAAK,UAAUhF,MAAOwD,EAAMG,QAASqC,SA1BrE,SAACnC,GACpBgB,EAAS,2BACJrB,GADG,kBAELK,EAAMkB,OAAOC,KAAOnB,EAAMkB,OAAO/E,kBA0B1B,eAACiD,EAAA,EAAMW,OAAP,WACA,cAAClB,EAAA,EAAD,CAAQE,QAAQ,UAAUC,QAASoC,EAAnC,iBAGE,cAACvC,EAAA,EAAD,CAAQE,QAAQ,SAASC,QAAS9C,EAAMuF,aAAxC,4BClBDsD,MA5Bf,SAAsB7I,GAQpB,OACE,mCACA,eAACkD,EAAA,EAAD,CAAOC,KAAMnD,EAAMmD,KAAMC,OAAQpD,EAAMqD,YAAvC,UACA,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAACtB,MAAO,CAACC,gBAAgB,mBAAoBQ,MAAM,SAA5E,SACM,cAACQ,EAAA,EAAMM,MAAP,UAAa,iCAASxD,EAAMyD,MAAM7C,aAElC,cAACsC,EAAA,EAAMS,KAAP,UAAa3D,EAAMyD,MAAMG,UACzB,eAACV,EAAA,EAAMW,OAAP,WACE,cAAClB,EAAA,EAAD,CAAQE,QAAQ,UAAUC,QAAS9C,EAAMuF,aAAzC,mBAGA,cAAC5C,EAAA,EAAD,CAAQE,QAAQ,SAASC,QAjBd,SAACgB,GACpB9D,EAAM8I,oBAAoB9I,EAAMyD,MAAMsF,WAAY/I,EAAMyD,MAAM4B,MAC9DrF,EAAMuF,eACNtB,MAAM,0EAcE,6BCkFG+E,MA7Ff,SAAgBhJ,GAAQ,IAAD,EACG6E,oBAAS,GADZ,mBACd1B,EADc,KACRkD,EADQ,OAEKxB,oBAAS,GAFd,mBAEdyB,EAFc,KAEPC,EAFO,OAIa1B,mBAAS,IAAIS,MAJ1B,mBAIdhB,EAJc,KAIHmE,EAJG,KAKfQ,EAAqBC,sBAAW,WAAqBC,GAArB,IAAGlJ,EAAH,EAAGA,MAAO6C,EAAV,EAAUA,QAAV,OACpC,wBAAQR,UAAU,uBAAuBQ,QAASA,EAASqG,IAAKA,EAAhE,SACGlJ,OAPgB,EAYmB4E,mBAAS,IAZ5B,mBAYduE,EAZc,KAYAC,EAZA,OAaKxE,mBAAS,IAbd,mBAadpB,EAbc,KAaPqB,EAbO,KAefU,EAAI,uCAAG,8BAAAL,EAAA,6DACXR,QAAQC,IAAI0E,IAAOhF,GAAWiF,OAAO,eAC/BC,EAAaF,IAAOhF,GAAWiF,OAAO,cAFjC,SAGYlF,EAAgBmF,GAH5B,OAGL9C,EAHK,OAKX/B,QAAQC,IAAI8B,EAASC,MACrB0C,EAAgB3C,EAASC,MANd,2CAAH,qDA6BV,OAZAC,qBAAU,WACRpB,MACC,CAAClB,IAWF,qCACA,yCAAW,qBAAKqB,IAAI,mBAAkBC,MAAM,KAAIzD,OAAO,OACvD,cAACQ,EAAA,EAAD,CAAQE,QAAQ,kBAAkBZ,MAAO,CAAC4E,MAAO,SAAU/D,QAVzC,kBAAMyD,GAAS,IAUjC,SACE,qBAAKZ,IAAI,WAAUC,MAAM,KAAIzD,OAAO,SACtC,cAAC,EAAD,CAAagB,KAAMmD,EAAOf,aAbP,kBAAMgB,GAAS,IAaoBf,KAAMA,EAAMlB,UAAWA,IAC7E,qBAAKhC,UAAU,kBAAf,SACA,cAAC,IAAD,CACEoG,SAAUpE,EACV2B,SAAU,SAACZ,GAAD,OAAUoD,EAAapD,IACjCoE,YAAa,cAACR,EAAD,WAIf,qBAAK3G,UAAU,YAAYwE,GAAG,UAA9B,SACA,qBAAKxE,UAAU,sBAAf,SACD,wBAAOA,UAAU,oBAAjB,UACE,uBAAOA,UAAU,cAAcL,MAAO,CAACC,gBAAgB,mBAAoBQ,MAAM,SAAjF,SACE,+BACC,oBAAIqE,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,0BACC,oBAAIA,MAAM,MAAV,qCAKJ,kCACGpC,QAAQC,IAAIwE,GACW,GAAvBA,EAAapC,QACdoC,EAAanC,KAAI,SAACxD,EAAMyD,GACtB,OACE,qBAAIpE,QAAS,YAnCH,SAACW,GAClB4C,GAAQ,GACRvB,EAASrB,GAiCkB0D,CAAW1D,IAA/B,UACC,oBAAIxB,MAAO,CAAC2D,MAAM,SAAlB,SAA6BnC,EAAM4B,OACnC,6BAAK5B,EAAMG,UACV,oBAAI3B,MAAO,CAAC2D,MAAM,SAAlB,SAA6BnC,EAAM7C,yBAU5C,cAAC,EAAD,CAAckI,oBAhEY,SAACC,EAAYzE,IRKpC,SAAwByE,EAAYzE,GAEvC,OADgBhE,IAAMiE,IAAI,wBAA0BwE,EAAa,IAAMzE,IQJvEoF,CAAeX,EAAYzE,GAAWgD,MAAK,SAACZ,GAC1C/B,QAAQC,IAAI8B,EAASC,MACrB0C,EAAgB3C,EAASC,UA4D+BlD,MAAOA,EAAON,KAAMA,EAAMoC,aAjDlE,kBAAMc,GAAQ,UCXrBsD,MAhCf,SAAc3J,GACZ,OACE,sBAAKsC,UAAU,iCAAf,UACD,sBAAKA,UAAU,QAAf,UACG,qBAAKA,UAAU,eAAeL,MAAO,CAACE,OAAO,QAA7C,SACA,cAAC,EAAD,MAEA,qBAAKG,UAAU,QACf,qBAAKA,UAAU,eAAcL,MAAO,CAACE,OAAO,QAA5C,SACA,cAAC,EAAD,SAGH,sBAAKG,UAAU,QAAf,UACA,qBAAKA,UAAU,eAAeL,MAAO,CAACE,OAAO,QAA7C,SACG,cAAC,EAAD,MAEA,qBAAKG,UAAU,QACf,sBAAKA,UAAU,yBAAwBL,MAAO,CAACE,OAAO,QAAtD,UACA,qBAAKG,UAAU,OAAOL,MAAO,CAAC2H,SAAS,OAAQC,WAAW,QAA1D,qCACA,cAAC,EAAD,OAEA,qBAAKvH,UAAU,aACf,sBAAKA,UAAU,MAAKL,MAAO,CAACE,OAAO,UAAnC,UACE,qBAAKG,UAAU,OAAOL,MAAO,CAAC2H,SAAS,OAAQC,WAAW,QAA1D,iCACF,cAAC,EAAD,c,SChBAC,GAAY,SAACC,GACf,IAAIC,EAEJA,EAAU,IAAI1E,KAAK,KAAKyE,EAAM,GAAGE,UAIjC,IAFA,IAAIC,EAAW,GAEPC,EAAE,EAAGA,GAAG,EAAGA,IAAI,CAEnB,IADA,IAAI9B,EAAO,GACH+B,EAAE,GAAGD,EAAE,GAAG,EAAGC,GAAG,EAAED,EAAGC,IACzB/B,EAAKgC,KAAKD,GAEdF,EAAUG,KAAKhC,GAEnB,IAAIA,EAAO,GAEX,IAAQ+B,EAAE,GAAIA,GAAGJ,EAASI,IACtB/B,EAAKgC,KAAKD,GAKd,OAFG/B,EAAKrB,OAAO,GACfkD,EAAUG,KAAKhC,GACR6B,GAiGI1B,OA/Ff,SAAkBxI,GAAM,MAEK6E,oBAAS,IAAIS,MAAOgF,WAAW,GAFpC,mBAEbP,EAFa,KAEPQ,EAFO,OAIY1F,oBAAS,kBAvCzB,SAACkF,GACjB,IAEIS,GAFQ,IAAIlF,MAAO2E,UAED,EAAI,EAI1B,OAHGO,EAAS,IACRA,GAAoB,GAEjBA,EAgCuCC,EAAa,IAAInF,MAAOgF,eAJlD,mBAIbI,EAJa,KAIHC,EAJG,OAMgB9F,mBAAS,GANzB,mBAMb+F,EANa,KAMDC,EANC,OAQMhG,oBAAS,kBAAKiF,GAAUC,MAR9B,mBAQbe,EARa,KAQNC,EARM,KAgBpBnE,qBAAU,WACN,IAAMoE,EAAMF,EAAMF,GAAYF,GACxBO,EAAa,IAAI3F,MAAK,IAAIA,MAAO4F,cAAc,IAAInB,EAAM,IAAIiB,GACnEhL,EAAMmL,cAAcF,EAAWG,wBAEjC,CAACV,EAASE,EAAWb,IAQzBnD,qBAAU,WACR,IAAMyE,GAAQ,IAAI/F,MAAO2E,UACrBqB,EAAeC,SAASF,EAAM,GAC/BA,EAAM,IAAI,IACTC,EAAgBC,SAASF,EAAM,GAAG,GAEtCR,EAAcS,KACd,IAGF1E,qBAAU,WACTmE,EAASjB,GAAUC,MAClB,CAACA,IAGH,IAAIyB,EAAO,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAGlCC,EAAc,SAACC,GACjB,IAAIC,EAAW5B,EACZ2B,GAAOC,EAAS,IACfA,IACApB,EAASoB,KACHD,GAAOC,EAAS,IACtBA,IACApB,EAASoB,KAKjB,OACI,sBAAKrJ,UAAU,YAAf,UACI,sBAAKA,UAAU,kBAAkBL,MAAO,CAAC2J,OAAO,YAAhD,UACI,wBAAQtJ,UAAU,qCAAqCL,MAAO,CAAC4J,OAAO,QAAS/I,QAAS,WAAK2I,GAAY,MACzG,wBAAOxJ,MAAO,CAAC4H,WAAW,OAAQ+B,OAAO,YAAzC,UAAuD7B,EAAvD,YACA,wBAAQzH,UAAU,uCAAsCL,MAAO,CAAC4J,OAAO,QAAS/I,QAAS,WAAK2I,GAAY,SAE9G,cAACzD,EAAA,EAAD,CAAU8D,SAAU,KAAOjJ,QAAQ,OAAQkJ,SAAY,sBAAMzJ,UAAU,uCAAyC0J,SAAU,sBAAM1J,UAAU,yCAA2C2J,YAAY,EAAOhE,YAAa2C,EAAY1C,SA1CtN,SAACC,EAAcC,GAClCyC,EAAc1C,IAyCN,SAEQ2C,EAAM7D,KAAI,SAACiF,EAAMhF,GACb,OACI,cAACc,EAAA,EAASK,KAAV,UACQ,qBAAM/F,UAAW4E,EAAM,EAAE,qCAAqC,aAAejF,MAAO,CAACkK,QAAQ,aAA7F,SAEFD,EAAMjF,KAAI,SAAC+D,EAAI9D,GAAS,OACnB,yBAAoBpE,QAAS,YA/DvC,SAACoE,EAAMkB,GAC5BuC,EAAYzD,GA8DqDkF,CAAkBlF,IAASjF,MAAO,CAACC,gBAAgBwI,IAAWxD,EAAM,QAAQ,UAAU2E,OAAOnB,IAAWxD,EAAM,OAAO,oBAAqBmF,aAAa,OAAOzJ,WAAW,MAAOgD,MAAM,OAAQ0G,UAAU,UAA1O,UACEtB,EAAI,uBACLQ,EAAK,IAAIlG,MAAK,IAAIA,MAAO4F,cAAc,IAAInB,EAAM,IAAIiB,GAAKuB,YAF9CrF,SAJJA,YCzGhD,SAASmB,GAAKrI,GAEZ,IAAMwM,EAAOxM,EAAMwM,KACbC,EAAWzM,EAAMyM,SACjBC,EAAQ1M,EAAM0M,MAJD,EAKe7H,mBAAS,IALxB,mBAKZ8H,EALY,KAKDC,EALC,KAwBnB,OAlBAhG,qBAAU,WACR,IAAIiG,EAAY,GAIhB,GAHU,MAAPH,GACDG,EAAUxC,KAAKqC,GAEJ,MAAVD,EACD,IAAI,IAAIK,KAAMN,EACZK,EAAUxC,KAAKmC,EAAKM,SAItB,IAAI,IAAI3C,EAAE,EAAGA,EAAEsC,EAASzF,OAAQmD,IAC9B0C,EAAUxC,KAAKmC,EAAKC,EAAStC,KAG/ByC,EAAaC,KACjB,CAACL,IAGC,qCACC,uBAAOO,IAAI,OAAX,iIAQD,qBAAKC,SAAS,KAAKlK,QAAS,SAACgB,GAAY9D,EAAM8C,SAAQ9C,EAAM8C,QAAQ0J,IAAUlK,UAAW,0EAA2EL,MAAO,CAAE2H,SAAU,QAAxL,SACC+C,EAAU1F,KAAI,SAACuF,EAAKtF,GACnB,OACE,qBAAkB5E,UAAU,4BAA5B,SACGkK,GADOtF,WAUHtH,WAAMqN,KAAK5E,IC9BX6E,OApBf,SAAyBlN,GACvB,OACE,mCACE,sBAAKsC,UAAU,mCAAmCL,MAAO,CAACE,OAAO,QAAjE,UACE,sBAAKG,UAAU,UAAUL,MAAO,CAACE,OAAO,QAAxC,UACA,qBAAKG,UAAU,uDAAuDL,MAAO,CAAEC,gBAAgBlC,EAAM0C,MAAOkD,MAAM,OAAQlD,MAAM,WAAhI,SACE,mBAAGJ,UAAWtC,EAAMmN,eAEtB,qBAAK7K,UAAU,4BAAf,SAA4CtC,EAAMoN,iBAElD,qBAAK9K,UAAU,oBAAf,SACCtC,EAAMG,iB,iBCkDR,SAASkN,GAA4BC,GAExC,OADehN,IAAMiE,IAAI,wBAAwB+I,GA8D9C,SAASC,KAEZ,OADejN,IAAMiE,IAAI,2BAItB,SAASiJ,KAEZ,OADelN,IAAMiE,IAAI,+BC+FdkJ,OA3Nf,SAAgCzN,GAAM,MAIA6E,mBAAS,IAAIS,MAJb,mBAI3BhB,EAJ2B,KAIhBmE,EAJgB,OAUY5D,oBAAS,GAVrB,mBAU3B6I,EAV2B,KAUVC,EAVU,KAY5BC,EAAoB,SAACxM,GACvBuM,EAAmBvM,IAbW,EAmBJyD,qBAnBI,mBAmB3BgJ,EAnB2B,KAmBlBC,EAnBkB,KA0JlC,OAvGAlH,qBAAU,WD3BP,IAAoB0G,EC4BhBtN,EAAM+N,sBD5BUT,EC6BJtN,EAAM+N,oBAAoBT,UD5B9BhN,IAAMiE,IAAI,uBAAuB,CAC5CyJ,OAAO,CACHV,gBC0BgDhG,MAAK,SAAC2G,GAClDtJ,QAAQC,IAAIqJ,EAAOtH,MACnBmH,EAAWG,EAAOtH,WAI5B,CAAC3G,EAAM+N,sBACTnH,qBAAU,WAMN+G,EAAoD,iBAAjC3N,EAAM+N,oBAAoB3M,MAC7CqH,EAAa,IAAInD,KAAKtF,EAAM+N,oBAAoBG,oBAyClD,IAEFtH,qBAAU,cACR,CAACtC,IA4CC,sBAAKhC,UAAU,aAAaL,MAAO,CAACE,OAAO,QAA3C,UACI,sBAAKF,MAAO,CAACE,OAAO,OAApB,UACG,sBAAKG,UAAU,yDAAyDL,MAAO,CAACoK,aAAa,QAA7F,UACK,qBAAKpK,MAAO,CAAC2D,MAAM,OAAnB,gBACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,sBAGJ,sBAAKtD,UAAU,mDAAmDL,MAAO,CAACoK,aAAa,QAAvF,UACI,qBAAKpK,MAAO,CAAC2D,MAAM,OAAnB,SAA4BiI,GAASA,EAAQP,YAC7C,qBAAKrL,MAAO,CAAC2D,MAAM,OAAnB,SAA4BiI,GAASA,EAAQM,cAC7C,qBAAKlM,MAAO,CAAC2D,MAAM,OAAnB,SAA4BiI,GAASA,EAAQhG,MAC7C,qBAAK5F,MAAO,CAAC2D,MAAM,OAAnB,SAA4BiI,GAASA,EAAQO,MAC7C,qBAAKnM,MAAO,CAAC2D,MAAM,OAAnB,SAA4BiI,GAAUA,EAAQQ,KAAO,MAAQR,EAAQS,OACrE,qBAAKrM,MAAO,CAAC2D,MAAM,OAAnB,SAA4BiI,GAASA,EAAQjG,oBAGrD,sBAAKtF,UAAU,MAAML,MAAO,CAACE,OAAO,OAApC,UACQ,qBAAKG,UAAU,oBAAoBL,MAAO,CAAC2J,OAAO,OAAOvJ,UAAU,KAAMF,OAAO,QAAhF,SACI,cAAC,IAAD,CACAuG,SAAUpE,EACV2B,SAAU,SAACZ,GAAD,OAAUoD,EAAapD,IACjCkJ,gBAAc,EACdC,WAAW,QACXC,gBAAgB,SAChBC,QAAS,IAAIpJ,MAAK,IAAIA,MAAO4F,eAAc,IAAI5F,MAAOgF,YAAW,IAAIhF,MAAO2E,WAC5E0E,QAAS,IAAIrJ,KAAKhB,EAAU4G,cAAc5G,EAAUgG,WAAWhG,EAAU2F,UAAU,EAAE,GACrF2E,QAAS,IAAItJ,KAAKhB,EAAU4G,cAAc5G,EAAUgG,WAAWhG,EAAU2F,UAAU,GAAG,IAEtFtB,QAAM,EACNkG,WAAW,uBAIf,sBAAKvM,UAAU,SAASL,MAAO,CAAC2J,OAAO,OAAQzJ,OAAO,OAAQgK,QAAQ,MAAO9J,UAAU,MAAvF,UACA,sBAAKC,UAAU,0BAA0BL,MAAO,CAACoK,aAAa,QAA9D,qCACY,uBAlFF,WACtB,IAAIyC,EAAiB,CACjB/E,MAAO,UACPiB,IAAK,UACL+D,KAAK,UACLC,OAAO,WAELC,EAAS3K,EAAU4K,eAAe,QAAQJ,GAC5CzJ,EAAO,IAAIC,KAAKhB,GAEpB,OADAe,EAAK8J,WAAW9J,EAAK+J,aAAa,IAC/B9K,EAAU+K,UAEFJ,EAAO,MAAM5J,EAAK6J,eAAe,QAAQJ,GAEzC,2DAoEmBQ,MAGd,wBAAQxM,QAAS,WAAK8K,GAAkB,IAAQ3L,MAAO,CAACC,gBAAgBwL,EAAiB,UAAU,QAAQ7B,OAAO,oBAAoBQ,aAAa,OAAOzG,MAAM,MAAMzD,OAAO,MAAOyH,SAAS,SAAUtH,UAAU,UAAjN,0BACA,wBAAQQ,QAAS,WAAK8K,GAAkB,IAAU3L,MAAO,CAACC,gBAAiBwL,EAA2B,QAAV,UAAkB7B,OAAO,oBAAoBQ,aAAa,OAAOzG,MAAM,MAAMzD,OAAO,MAAOyH,SAAS,SAAUtH,UAAU,IAApN,0BAYA,wBAAQA,UAAU,2BAA2BL,MAAO,CAACoK,aAAa,OAAShK,UAAU,OAAQuD,MAAM,OAAQgE,SAAS,SAAkI9G,QA9E1O,WAC5B,IAAIyM,EDlHsBC,ECqHtBD,EAAc,2BAAOvP,EAAM+N,qBAAb,IAAiCG,gBAAgB5J,EAAU+K,UAAUjO,KAAKsM,EAAgB,eAAK,kBDrHvF8B,ECuHJD,EDtHbjP,IAAMmP,IAAI,8BAA8BD,ICsHXlI,MAAK,SAAC2G,GAEpCjO,EAAM0P,kBAAkBH,GAExBvP,EAAM2P,WAAW,8BAoET,oCCtNjBC,GAAU,iCACV,SAASC,GAAiBjM,GAE7B,OADAA,EAASkM,KAAKC,UAAUnM,GACjBtD,IAAMiE,IAAIqL,GAAS,6BAA8B,CAAC5B,OAAO,CAACgC,MAAM,aAAcpM,aAOlF,SAASqM,GAAarP,EAAOsP,GAClC,IAAIC,EAAcL,KAAKC,UAAUG,GACjC,OAAO5P,IAAM8D,KAAKwL,GAAS,yBAAyB,CAAChP,SAAOsP,UAAUC,GAAa,CACjF3P,QAAS,CACL,eAAgB,sBCVxB,ICNA,IAAM4P,GAAe,CACjBC,cAAe,GACfC,mBAAmB,GACnBC,WAAW,IAIPC,GAAkB,6BAClBC,GAAuB,kCACvBC,GAAe,0BA6BNC,GAbU,WAAmC,IAAlCjP,EAAiC,uDAAzB0O,GAAczO,EAAW,uCACzD,OAAGA,EAAOP,OAASoP,GACV,2BAAI9O,GAAX,IAAkB2O,cAAc1O,EAAO0O,gBAChC1O,EAAOP,OAASqP,GAChB,2BAAI/O,GAAX,IAAkB4O,mBAAmB3O,EAAO2O,qBACrC3O,EAAOP,OAASsP,GAChB,2BAAIhP,GAAX,IAAkB6O,WAAW5O,EAAO4O,aAE7B7O,GD5BTkP,GAAa,GACTzG,GAAE,EAAGA,GAAE,GAAIA,KAAI,CACnB,IAAM0G,GAAK,CAACvD,UAAU,YAAYnD,GAAGgE,YAAY,OAAOhE,GAAGtC,IAAIsC,GAAE,EAAE,eAAK,eAAKiE,IAAIjE,GAAEkE,KAAK,SAASC,KAAK,SACrG1G,YAAY,cAAckJ,aAAY,IAAIxL,MAAO8F,qBAAqB2F,eAAc,IAAIzL,MAAO8F,sBAChGwF,GAAavG,KAAKwG,IA4BtB,IAAIG,GAAU,GACd,IAAQ7G,GAAE,EAAGA,GAAE,EAAGA,KAAI,CAClB,IAAM0G,GAAK,CAACjQ,OAAO,SAASuJ,GAAGxC,SAAS,OAAOwC,GAAEzC,SAAS,OAAOyC,GAAEtJ,eAAe,cAAcoQ,aAAa,QAAQrJ,YAAY,cAAcsJ,YAAY,KAC3JF,GAAU3G,KAAKwG,IAUnB,IAAIM,GAAe,GACnB,IAAQhH,GAAE,EAAGA,GAAE,EAAGA,KAAI,CAClB,IAAM0G,GAAK,CAACO,YAAY,cAAcjH,GAAG8C,KAAK,OAAO9C,GAAEkH,eAAc,IAAI/L,MAAO8F,qBAAqBkC,UAAU,YAAYnD,GAAEvJ,OAAO,SAASuJ,GAAEmH,OAAO,gBACtJH,GAAe9G,KAAKwG,IA4BxB,IAAIU,GAAU,GACd,IAAQpH,GAAE,EAAGA,GAAE,GAAIA,KAAI,CACnB,IAAM0G,GAAK,CAACO,YAAY,cAAcjH,GAAEqH,OAAO,SAASrH,GAAEsH,YAAY,cAActH,IACpFoH,GAAUlH,KAAKwG,IAEnBU,GAAUlH,KAAK,CAAC+G,YAAY,eAAgBI,OAAO,UAAWC,YAAY,iBAS1E,IAAIC,GAAiB,GACrB,IAAQvH,GAAE,EAAGA,GAAE,EAAGA,KAAI,CAClB,IAAM0G,GAAK,CAACc,cAAc,gBAAgBxH,GACzC+D,gBAAgB,IAAI5I,MAAK,IAAIA,MAAO4F,eAAc,IAAI5F,MAAOgF,YAAW,IAAIhF,MAAO2E,UAAU,EAAEE,GAAE,GAClGmD,UAAU,YAAYnD,GAAEmH,OAAO,eAAKlQ,KAAK+I,GAAE,IAAI,EAAE,eAAK,eAAKyH,SAAS,IACpEF,GAAiBrH,KAAKwG,IAmD1B,IAAIgB,GAAmB,GACvB,IAAQ1H,GAAE,EAAGA,GAAE,EAAGA,KAAI,CAClB,IAAM0G,GAAK,CAACiB,gBAAgB,kBAAkB3H,GAAG4H,UAAS,IAAIzM,MAAO8F,qBAAqBkC,UAAU,YAAYnD,GAAEmH,OAAO,gBACzHO,GAAmBxH,KAAKwG,IA2C5B,IAAImB,GAAU,GACd,IAAQ7H,GAAE,EAAGA,GAAE,EAAGA,KAAI,CAClB,IAAM0G,GAAK,CAACoB,UAAU,YAAY9H,GAAE+H,UAAU,YAAY/H,GAAE8D,OAAO,SAAS9D,GAAEmH,OAAO,2BAAOQ,gBAAgB,GAAGK,WAAW,WAAWhI,GAAEwH,cAAc,EAAEP,YAAY,cAAcjH,GAAEmD,UAAU,YAAYnD,GAAEvJ,OAAO,SAASuJ,IAC3N6H,GAAU3H,KAAKwG,IAGnBmB,GAAU3H,KADC,CAAC4H,UAAU,aAAcC,UAAU,aAAcjE,OAAO,UAAWqD,OAAO,2BAAOQ,gBAAgB,GAAGK,WAAW,YAAaR,cAAc,EAAEP,YAAY,eAAgB9D,UAAU,aAAc1M,OAAO,YEzHnMwR,OAxEf,SAA6BpS,GAAM,MAEI6E,mBAAS,IAFb,mBAExBwN,EAFwB,KAEbC,EAFa,OAIazN,qBAJb,mBAIxB0N,EAJwB,KAIRC,EAJQ,QAQd1Q,cAEY+C,oBAAS,IAVP,mBAoD/B,OApD+B,UAY/B+B,qBAAU,WLkHP,IAAsB6L,EKjHrBzS,EAAM0S,gBAAe,ILiHAD,EKhHR,eLiHFnS,IAAMiE,IAAI,gBAAgB,CACrCyJ,OAAO,CACHyE,eKnHenL,MAAK,SAAC2G,GACrBqE,EAAcrE,EAAOtH,MAGrB3G,EAAM0S,gBAAe,QAE3B,IAiCF,sBAAKpQ,UAAU,aAAaL,MAAO,CAACE,OAAO,SAA3C,UACE,qBAAKG,UAAU,aAAaL,MAAO,CAAC0Q,SAAS,OAAQtG,aAAa,OAAShK,UAAU,OAAQF,OAAO,OAApG,SACmBkQ,GAAYA,EAAWpL,KAAI,SAACuF,EAAKtF,GAAS,OACnC,gCACA,uBAAO9F,KAAK,QAAQ6E,SAAU,SAACmC,GAnDzDoK,EAmDkFhG,IAAQoG,QAASL,GAAgB/F,EAAK5L,SAAS2R,EAAe3R,OAAQX,MAAOuM,EAAK5L,SAC1I,uBAAOqB,MAAO,CAACW,WAAW,OAA1B,SAAmC4J,EAAK5L,SACxC,uBAAOqB,MAAO,CAACW,WAAW,OAA1B,SAAmC4J,EAAK7E,WACxC,uBAAO1F,MAAO,CAACW,WAAW,OAA1B,SAAmC4J,EAAK9E,aAJ9BR,QASlC,qBAAK5E,UAAU,iCAAiCL,MAAO,CAACoK,aAAa,OAAShK,UAAU,QAAxF,SACI,wBAAQwQ,UAAUN,EAA2BjQ,UAAU,8BAA8BQ,QAzCpE,WACzB,IL2D+BgQ,EK3D3BzB,GAAgB,IAAI/L,MAAO+J,UACzB0D,EAAe,CAAC9F,KAAK,GAAGoE,cAAcA,EAAc/D,UAAUtN,EAAMgT,gBAAgB1F,UAAU1M,OAAO2R,EAAe3R,OAAO0Q,OAAO,6BAErItR,EAAMiT,mBACLjT,EAAMiT,qBLuDqBH,EKnDZC,ELoDJzS,IAAM8D,KAAK,+BAA+B0O,EAAU,CAC/DtS,QAAS,CACL,eAAgB,uBKtDS8G,MAAK,SAAC2G,GACpCtJ,QAAQC,IAAI0E,IAAO+H,GAAe9H,OAAO,UAKxCsG,GAAiB,CAACzO,KAAK,YAAYkM,UAAUtN,EAAMgT,gBAAgB1F,UAAWgE,OAAO,iBAErFtR,EAAM2P,WAAW,2BAwBb,4C,SC6BGuD,OAnGf,SAA2BlT,GAAM,MAEE6E,mBAAS,IAFX,mBAEtB+M,EAFsB,KAEbuB,EAFa,KAsD7B,OAhDAvM,qBAAU,WNkEP,IAA0B0G,EMjEzBtN,EAAM0S,gBAAe,INiEIpF,EMhERtN,EAAMgT,gBAAgB1F,UNiE5BhN,IAAMiE,IAAI,6BAA6B,CAClDyJ,OAAO,CACHV,gBMnE8ChG,MAAK,SAAC2G,GAErD,IADA,IAAImF,EAAQC,OAAOC,QAAQrF,EAAOtH,MAC1B,EAAR,IAAcyM,EAAd,eAAoB,CAAV,KACJ,SAAc,EAGnBD,EAAYC,GACZpT,EAAM0S,gBAAe,QAE3B,IAsCF,sBAAKpQ,UAAU,aAAaL,MAAO,CAACE,OAAO,SAA3C,UACE,qBAAKG,UAAU,aAAaL,MAAO,CAAC0Q,SAAS,OAAUtQ,UAAU,OAAQF,OAAO,MAAOgK,QAAQ,GAA/F,SAGkB,wBAAO7J,UAAU,QAAjB,UACY,uBAAQL,MAAO,CAACC,gBAAgB,WAAhC,SACI,+BACI,8CACA,0DACA,yDAGZ,gCACP0P,GAAUA,EAAS3K,KAAI,SAACuF,EAAKtF,GAE1B,OACI,qCACA,+BACI,oBAAIqM,QAAS/G,EAAK,GAAGxF,OAAO,EAA5B,SAAgC,uBAAO5F,KAAK,WAAW6E,SAAU,SAACmC,IAtD3E,SAACtE,EAAOoD,GAE3B,IAAMsM,EAAS5B,EAAS3K,KAAI,SAACuF,EAAKrC,GAI9B,OAHGA,IAAIjD,IACHsF,EAAKiH,QAAU3P,EAAMkB,OAAO4N,SAEzBpG,KAEX2G,EAAYK,GA8CuFE,CAAetL,EAAElB,IAASjH,MAAO2R,EAAS1K,GAAOuM,YACxH,oBAAInR,UAAU,mCAAmCiR,QAAS/G,EAAK,GAAGxF,OAAO,EAAzE,SAA6EwF,EAAK,QAGrFA,EAAK,GAAGvF,KAAI,SAACN,EAAKgN,GACf,OACA,6BACI,6BAAKhN,EAAKiN,iCAY1C,qBAAKtR,UAAU,iCAAiCL,MAAO,CAACoK,aAAa,OAAShK,UAAU,QAAxF,SACI,wBAAQwQ,WAAUjB,GAAUA,EAASiC,QAAO,SAACC,GAAD,OAAwB,IAAfA,EAAKL,WAAiBzM,OAAO,GAAc1E,UAAU,8BAA8BQ,QA/D3H,WAEd9C,EAAMiT,mBACLjT,EAAMiT,oBAGV,IANsB,EAMlBc,EAAe,GANG,eAOGnC,GAPH,IAOtB,IAAI,EAAJ,qBAAkC,CAAC,IAA3BoC,EAA0B,QAC9B,GAAGA,EAAcP,QAAQ,CAAC,IAAD,iBACLO,EAAc,IADT,IACrB,IAAI,EAAJ,qBAAiC,CAAC,IAA1BrN,EAAyB,QAC7BoN,EAAe1J,KAAK1D,EAAKwL,aAFR,iCARP,8BActB,INqCsB8B,EMrChBC,EAAmB,CAAC5G,UAAUtN,EAAMgT,gBAAgB1F,UAAWyG,mBNqC/CE,EMpCRC,ENqCH5T,IAAM8D,KAAK,0BAA0B6P,EAAiB,CACjEzT,QAAS,CACL,eAAgB,uBMvCY8G,MAAK,SAAC2G,GAClCtJ,QAAQC,IAAIqJ,EAAOtH,MAGnBkJ,GAAiB,CAACzO,KAAK,SACvBpB,EAAM2P,WAAW,yBA2CjB,4CCuFGwE,OA9Kf,SAAqBnU,GAAO,IAAD,EAC6C6E,oBAAS,GADtD,mBAChBuP,EADgB,KACYC,EADZ,OAEuCxP,oBAAS,GAFhD,mBAEhByP,EAFgB,KAESC,EAFT,KAKjB9H,EAAW,CAAC,YAAY,cAAc,OAAO,qBAL5B,EAMY5H,oBAAS,IAAIS,MAAO8F,sBANhC,mBAMhBH,EANgB,KAMLE,EANK,OAOuBtG,mBAAS,IAPhC,mBAOhB2P,EAPgB,KAOCC,EAPD,KAQjBC,EAAqB1S,aAAY,SAACN,GAAD,OAAUA,EAAMgT,sBARhC,EAU+B7P,qBAV/B,mBAUhBkJ,EAVgB,KAUK4G,EAVL,OAWmC9P,oBAAS,GAX5C,mBAWhB+P,EAXgB,KAWOC,EAXP,OAYMhQ,oBAAS,GAZf,mBAYhBiQ,EAZgB,KAYRC,EAZQ,KAajBC,EAAQ,SAACC,GACXN,EAAuBM,IAGpBtF,EAAY,SAACuF,GAEC,2BAAZA,EACDb,GAA8B,GACX,sBAAZa,EACPL,GAAyB,GACN,wBAAZK,GACHX,GAA2B,IAIvC3N,qBAAU,WPnCKtG,IAAMiE,IAAI,6BOoCF+C,MAAK,SAAC2G,GACzBwG,EAAmBxG,EAAOtH,WAE5B,IAEFC,qBAAU,WACN,GAAG8N,EAAmBlF,YAAYmC,cAAc,CAC5C,IAAMwD,EAAqBX,EAAgBY,OAAOV,EAAmBlF,aACrE2F,EAAmBE,MAAK,SAACC,EAAGC,GACxB,OAAOC,OAAO,IAAIlQ,KAAKgQ,EAAGpH,kBAAoBsH,OAAO,IAAIlQ,KAAKiQ,EAAGrH,qBAErEuG,EAAmBU,MAGzB,CAACT,IAGL,IAAMe,EAAe,SAACC,GACpBX,EAAWW,IAqBTzC,EAAkB,WP/DjB,IAA2BtB,EOgE3B5D,IPhE2B4D,EOkER5D,EAAoB4D,cPjE3BrR,IAAM8G,OAAO,8BAA+B,CACvDT,KAAM,CACJgL,oBO+DmDrK,MAAK,SAAC2G,GAEvD,IAAM/G,EAAQsN,EAAgBmB,WAAU,SAACnJ,GAAD,OAASA,EAAKmF,gBAAgB5D,EAAoB4D,iBACtFiE,EAAO,aAAOpB,GACftN,GAAO,GACN0O,EAAQC,OAAO3O,EAAM,GAEzB0O,EAAQP,MAAK,SAACC,EAAGC,GACb,OAAOC,OAAO,IAAIlQ,KAAKgQ,EAAGpH,kBAAoBsH,OAAO,IAAIlQ,KAAKiQ,EAAGrH,qBAErEuG,EAAmBmB,OAoC3B,OACA,sBAAKtT,UAAU,oCAAoCL,MAAO,CAACE,OAAO,OAAQD,gBAAgB,SAA1F,UACI,eAAC,GAAD,CAAiBkL,YAAY,eAAKD,WAAW,wBAAwBzK,MAAM,UAA3E,UACI,wBAAQT,MAAO,CAACG,YAAY,QAASyQ,UAAY9E,EAAqBjL,QAAS,WAAKuR,GAA8B,IAAQ/R,UAAU,sBAApI,sCACA,wBAAQL,MAAO,CAACG,YAAY,QAASyQ,WAAY9E,GAAgD,iBAA3BA,EAAoB3M,MAA2C,iBAA7B2M,EAAoBuD,QAAiBxO,QA9BhI,WAEnB+R,GAAyB,IA4BiJvS,UAAU,sBAA9K,sCACA,wBAAQL,MAAO,CAACG,YAAY,QAASyQ,WAAY9E,GAAgD,iBAA3BA,EAAoB3M,MAA0C,iBAA7B2M,EAAoBuD,QAAiBxO,QAX1H,WAEjByR,GAA2B,IAS4IjS,UAAU,sBAAlL,sCACA,wBAAQL,MAAO,CAACG,YAAY,QAASyQ,UAAY9E,EAAqBjL,QAASmQ,EAAmB3Q,UAAU,sBAA5G,yCAEJ,cAAC,GAAD,CAAU6I,cAAiB,SAAC9F,GAAQ8F,EAAc9F,MAClD,sBAAK/C,UAAU,oCAAf,UACI,sBAAKA,UAAU,qDAAqDL,MAAO,CAACoK,aAAa,OAAOhK,UAAU,OAAOyT,aAAa,QAA9H,UACI,qBAAK7T,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,4BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,yCAEJ,qBAAKtD,UAAU,wCAAwCL,MAAO,CAACE,OAAO,sBAAtE,SACMqS,GAAiBA,EAAgBvN,KAAI,SAACuF,EAAKtF,GAGxC,IAAI6O,EAAQ,IAAIzQ,KAAKkH,EAAK0B,iBAAiB9C,qBACrC4K,EAAK,2BAAOxJ,GAAP,IAAayJ,kBAAkB3M,IAAOkD,EAAK0B,iBAAiB3E,OAAO,WAC9E,GAAGwM,IAAQ9K,EACR,OACI,8BACQ,cAAC,GAAD,CAAMnI,QAASkS,EAAOxI,KAAOwJ,EAAOvJ,SAAUA,EAAUC,MAAOxF,KAD7DA,WAQ9B,eAAChE,EAAA,EAAD,CAAOgT,SAAS,SAASC,KAAK,KAAKhT,KAAMiR,EAA6BhR,OAAQ,WAAKiR,GAA8B,IAAjH,UACA,cAACnR,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACA,cAACL,EAAA,EAAMM,MAAP,yCAEA,cAACN,EAAA,EAAMS,KAAP,UAAY,cAACyS,GAAD,CAAwBzG,WAAYA,EAAY5B,oBAAqBA,EAAqB2B,kBAvGtF,SAACH,GACrB,GAAGxB,EAAoB,CAEnB,IAAM7G,EAAQsN,EAAgBmB,WAAU,SAACnJ,GAAD,OAASA,EAAKmF,gBAAgB5D,EAAoB4D,iBACtFiE,EAAO,aAAOpB,GACftN,GAAO,GACN0O,EAAQC,OAAO3O,EAAM,EAAEqI,GAE3BqG,EAAQP,MAAK,SAACC,EAAGC,GACb,OAAOC,OAAO,IAAIlQ,KAAKgQ,EAAGpH,kBAAoBsH,OAAO,IAAIlQ,KAAKiQ,EAAGrH,qBAErEuG,EAAmBmB,YA8FnB,eAAC1S,EAAA,EAAD,CAAQgT,SAAS,SAAS/S,KAAMyR,EAAuBxR,OAAQ,WAAKyR,GAAyB,IAA7F,UACA,eAAC3R,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,UACE,cAACL,EAAA,EAAMM,MAAP,uCACCsR,EAAQ,cAACuB,GAAA,EAAD,CAASnQ,GAAG,OAAOoQ,UAAU,SAASzT,QAAQ,OAAOsT,KAAK,KAAKI,KAAK,SAASjU,UAAU,SAAS,QAE3G,cAACY,EAAA,EAAMS,KAAP,UAAY,cAAC,GAAD,CAAmBsP,kBAAmBA,EAAmBP,eAAgB+C,EAAgB9F,WAAYA,EAAYqD,gBAAiBjF,SAE9I,eAAC7K,EAAA,EAAD,CAAQgT,SAAS,SAAS/S,KAAMmR,EAAyBlR,OAAQ,WAAKmR,GAA2B,IAAjG,UACA,eAACrR,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,UACE,cAACL,EAAA,EAAMM,MAAP,uCACCsR,EAAQ,cAACuB,GAAA,EAAD,CAASnQ,GAAG,OAAOoQ,UAAU,SAASzT,QAAQ,OAAOsT,KAAK,KAAKI,KAAK,SAASjU,UAAU,SAAS,QAE3G,cAACY,EAAA,EAAMS,KAAP,UAAY,cAAC,GAAD,CAAqBsP,kBAAmBA,EAAmBP,eAAgB+C,EAAgB9F,WAAYA,EAAYqD,gBAAiBjF,a,SCtDzIyI,OAzHf,SAA4BxW,GACxB,IAMIiV,EANExI,EAAW,CAAC,YAAY,cAAc,OAAO,gBAAgB,eAC7DgK,EAAa,CAAC,KAAK,eAAK,2BAAO,iCAAQ,sBAFf,EAGA5R,mBAAS,IAHT,mBAGvB6R,EAHuB,KAGdC,EAHc,OAIF9R,mBAAS4H,EAAS,IAJhB,mBAIvBmK,EAJuB,KAIfC,EAJe,OAMOhS,mBAAS,IANhB,mBAMvBiS,EANuB,KAMXC,EANW,KAS9BnQ,qBAAU,WAWN,OATA5G,EAAM0S,gBAAe,GRyBVpS,IAAMiE,IAAI,yBQvBJ+C,MAAK,SAAC2G,GAEnB8I,EAAe9I,EAAOtH,MAEtB3G,EAAM0S,gBAAe,MAGlB,eAEb,IAGE,IAgBMsC,EAAQ,SAACxI,GACXyI,EAAYzI,GAEhB,OACA,sBAAKlK,UAAU,aAAaL,MAAO,CAACE,OAAO,SAA3C,UAEI,sBAAKG,UAAU,iCAAf,UACI,gCACI,uBAAOL,MAAO,CAACG,YAAY,QAA3B,0BACA,wBAAQ6D,SArBC,SAACnC,GAClB+S,EAAU/S,EAAMkB,OAAO/E,QAoBiBgC,MAAO,CAACG,YAAY,QAApD,SACKqK,EAASxF,KAAI,SAACuF,EAAKtF,GAAS,OACzB,wBAAoBjH,MAAOuM,EAA3B,SAAkCiK,EAAWvP,IAAhCA,QAIrB,uBAAOjF,MAAO,CAACG,YAAY,QAAS6D,SA/B1B,SAACnC,GACnB6S,EAAW7S,EAAMkB,OAAO/E,QA8B6CA,MAAOyW,OAGxE,8BACM,wBAAQpU,UAAU,8BAA8BQ,QA3BxC,WAEnB9C,EAAMgX,mBAAmB/B,GAEzBjV,EAAM2P,WAAW,uBAuBN,+BAGV,sBAAKrN,UAAU,oCAAf,UACI,sBAAKA,UAAU,qDAAqDL,MAAO,CAACoK,aAAa,OAAOhK,UAAU,OAAOyT,aAAa,QAA9H,UACI,qBAAK7T,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,gBACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,4CACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,mCAGJ,qBAAKtD,UAAU,0BAA0BL,MAAO,CAACE,OAAO,SAAxD,SAEA,cAAC,KAAD,CAAW8U,eAAa,EAAxB,SACC,YAAsB,IAApBrR,EAAmB,EAAnBA,MAEKsR,GAFc,EAAZ/U,OAEI2U,EAAYjD,QAAO,SAACrH,GAC1B,GAAiB,MAAdA,EAAKoK,GACJ,OAAkD,GAA3CpK,EAAKoK,GAAQO,WAAWC,QAAQV,GAGvC,OAAgC,GADtB,GACGU,QAAQV,OAI7B,OACA,cAAC,KAAD,CAAM9Q,MAAOA,EAAOzD,OAAQ,IACpBkV,KAAMH,EACNI,SAAUJ,EAAIlQ,OACduQ,UAAW,GACXC,YAAa,YAA0B,IAAxBtQ,EAAuB,EAAvBA,MAAOuQ,EAAgB,EAAhBA,IAAKxV,EAAW,EAAXA,MACvB,OACI,qBAAeA,MAAOA,EAAtB,SACA,cAAC,GAAD,CAAMa,QAASkS,EAAOxI,KAAO0K,EAAIhQ,GAAQuF,SAAUA,EAAUC,MAAOxF,KAD1DuQ,IAKlBC,iBAAkB,gB,UCxB3BC,OA7Ef,SAA8B3X,GAAO,IAAD,UACY4X,eAApCC,EADwB,EACxBA,SAAUC,EADc,EACdA,aAAeC,EADD,EACCA,OAmBjC,OACI,mCACF,8BACF,uBAAMrS,SAAUoS,GApBD,SAACjK,GAEZA,EAAO,YAAkB,IAAIvI,KAC7BuI,EAAO,WAAe,EACtBA,EAAO,QAAY,ETmCpB,SAAyBA,GAK5B,OAJevN,IAAM8D,KAAK,4BAA4ByJ,EAAQ,CAC1DrN,QAAS,CACL,eAAgB,sBSpCrBwX,CAAgBnK,GAASvG,MAAK,SAAC2G,GAC9BJ,EAAO,UAAgBI,EAAOtH,KAC9BkH,EAAO,cAAoB,IAC3BA,EAAO,YAAkBA,EAAO,YAAgBzC,qBAEhDpL,EAAMgX,mBAAmBnJ,GACzB7N,EAAM2P,WAAW,8BAQrB,UACE,sBAAKrN,UAAU,OAAf,UACE,oDACA,uBAAOA,UAAU,OAAO2C,KAAK,cAAckE,IAAK0O,EAAS,CAAEI,UAAU,MACpEF,EAAO5J,aAAe,qBAAKlM,MAAO,CAACS,MAAM,OAAnB,yEAGzB,sBAAKJ,UAAU,OAAf,UACA,oDACA,yBAAQA,UAAU,OAAO2C,KAAK,MAAMkE,IAAK0O,EAAS,CAAEI,UAAU,IAA9D,UACE,wBAAQhY,MAAM,eAAd,0BACA,wBAAQA,MAAM,eAAd,gCAIF,sBAAKqC,UAAU,OAAf,UACA,oDACA,uBAAOA,UAAU,OAAO2C,KAAK,MAAM7D,KAAK,SAAS+H,IAAK0O,EAAS,CAAEI,UAAU,MAC1EF,EAAO3J,KAAO,qBAAKnM,MAAO,CAACS,MAAM,OAAnB,yEAGf,sBAAKJ,UAAU,OAAf,UACA,4EACL,uBACK,uBAAOA,UAAU,OAAO2C,KAAK,OAAO7D,KAAK,SAAS+H,IAAK0O,EAAS,CAACI,UAAU,EAAMC,QAAS,eAH1F,IAQA,uBAAO5V,UAAU,OAAO2C,KAAK,OAAO7D,KAAK,SAAS+H,IAAK0O,EAAS,CAACI,UAAU,EAAMC,QAAS,gBAClE,cAAtB,UAAAH,EAAOzJ,YAAP,eAAalN,OAA6C,cAAtB,UAAA2W,EAAO1J,YAAP,eAAajN,QAAyB,qBAAKa,MAAO,CAACS,MAAM,OAAnB,mFACpD,aAAtB,UAAAqV,EAAOzJ,YAAP,eAAalN,OAA2C,aAAtB,UAAA2W,EAAO1J,YAAP,eAAajN,QAAwB,qBAAKa,MAAO,CAACS,MAAM,OAAnB,oGAGzE,sBAAKJ,UAAU,OAAf,UACA,sEACA,uBAAOA,UAAU,OAAO2C,KAAK,cAAc7D,KAAK,SAAS+H,IAAK0O,EAAS,CAAEI,UAAU,MAClFF,EAAOnQ,aAAe,qBAAK3F,MAAO,CAACS,MAAM,OAAnB,4FAMvB,qBAAKJ,UAAU,6BAAf,SACA,uBAAQlB,KAAK,qBCKJuW,OAvEf,SAA8B3X,GAAO,IAAD,UAEW4X,eAAnCC,EAFwB,EAExBA,SAAUC,EAFc,EAEdA,aAAcC,EAFA,EAEAA,OAkBhC,OACI,mCACF,8BACF,uBAAMrS,SAAUoS,GAnBD,SAACjK,GACZA,EAAO,UAAgB7N,EAAMgT,gBAAgB1F,UAC7CO,EAAO,cAA0D,MAAtC7N,EAAMgT,gBAAgBjC,cAAoB,KAAK/Q,EAAMgT,gBAAgBjC,cAEhGlD,EAAO,YAAkB,IAAIvI,KVyC9B,SAAuBuI,GAK1B,OAJevN,IAAMmP,IAAI,0BAA0B5B,EAAQ,CACvDrN,QAAS,CACL,eAAgB,sBUzCpB2X,CAActK,GAASvG,MAAK,SAAC2G,GAC3BJ,EAAO,YAAmBA,EAAO,YAAgBzC,qBAEjDpL,EAAMgX,mBAAmBnJ,GACzB7N,EAAM2P,WAAW,4BAQvB,UACE,sBAAKrN,UAAU,OAAf,UACE,oDACA,uBAAOA,UAAU,OAAO2C,KAAK,cAAcmT,aAAcpY,EAAMgT,gBAAgB7E,YAAahF,IAAK0O,EAAS,CAAEI,UAAU,MACrHF,EAAO5J,aAAe,qBAAKlM,MAAO,CAACS,MAAM,OAAnB,yEAGzB,sBAAKJ,UAAU,OAAf,UACA,oDACA,yBAAQA,UAAU,OAAO2C,KAAK,MAAMkE,IAAK0O,EAAS,CAAEI,UAAU,IAASG,aAAcpY,EAAMgT,gBAAgBnL,IAA3G,UACE,wBAAS5H,MAAM,eAAf,0BACA,wBAAQA,MAAM,eAAd,gCAIF,sBAAKqC,UAAU,OAAf,UACA,oDACA,uBAAOA,UAAU,OAAO2C,KAAK,MAAM7D,KAAK,SAASgX,aAAcpY,EAAMgT,gBAAgB5E,IAAKjF,IAAK0O,EAAS,CAAEI,UAAU,MACnHF,EAAO3J,KAAO,qBAAKnM,MAAO,CAACS,MAAM,OAAnB,yEAGf,sBAAKJ,UAAU,OAAf,UACA,4EACL,uBACK,uBAAOA,UAAU,OAAO2C,KAAK,OAAO7D,KAAK,SAASgX,aAAcpY,EAAMgT,gBAAgB3E,KAAOlF,IAAK0O,EAAS,CAACI,UAAU,EAAMC,QAAS,eAHrI,IAQA,uBAAO5V,UAAU,OAAO2C,KAAK,OAAO7D,KAAK,SAASgX,aAAcpY,EAAMgT,gBAAgB1E,KAAMnF,IAAK0O,EAAS,CAACI,UAAU,EAAMC,QAAS,gBAC5G,cAAtB,UAAAH,EAAOzJ,YAAP,eAAalN,OAA6C,cAAtB,UAAA2W,EAAO1J,YAAP,eAAajN,QAAyB,qBAAKa,MAAO,CAACS,MAAM,OAAnB,mFACpD,aAAtB,UAAAqV,EAAOzJ,YAAP,eAAalN,OAA2C,aAAtB,UAAA2W,EAAO1J,YAAP,eAAajN,QAAwB,qBAAKa,MAAO,CAACS,MAAM,OAAnB,oGAGzE,sBAAKJ,UAAU,OAAf,UACA,sEACA,uBAAOA,UAAU,OAAO2C,KAAK,cAAc7D,KAAK,SAASgX,aAAcpY,EAAMgT,gBAAgBpL,YAAauB,IAAK0O,EAAS,CAAEI,UAAU,MACnIF,EAAOnQ,aAAe,qBAAK3F,MAAO,CAACS,MAAM,OAAnB,4FAEvB,qBAAKJ,UAAU,6BAAf,SACA,uBAAQlB,KAAK,qBClEbgP,GAAe,CACnBZ,YAAa,IAGT6I,GAAgB,6BAkBP3D,GATY,WAAmC,IAAlChT,EAAiC,uDAAzB0O,GAAczO,EAAW,uCAC3D,OAAGA,EAAOP,OAASiX,GACV,2BAAI3W,GAAX,IAAkB8N,YAAY7N,EAAO6N,cAE9B9N,GCmMI4W,OA7Mf,SAAkCtY,GAAM,MAIF6E,mBAAS,IAAIS,MAAK,IAAIA,MAAO4F,eAAc,IAAI5F,MAAOgF,YAAW,IAAIhF,MAAO2E,UAAU,EAAE,IAJtF,mBAI7B3F,EAJ6B,KAIlBmE,EAJkB,OAUU5D,oBAAS,GAVnB,mBAU7B6I,EAV6B,KAUZC,EAVY,KAY9BC,EAAoB,SAACxM,GACvBuM,EAAmBvM,IAEjBS,EAAWC,cAwHjB,OAtFA8E,qBAAU,cAqDR,IAkCE,sBAAKtE,UAAU,aAAaL,MAAO,CAACE,OAAO,QAA3C,UACI,sBAAKF,MAAO,CAACE,OAAO,OAApB,UACG,sBAAKG,UAAU,yDAAyDL,MAAO,CAACoK,aAAa,QAA7F,UACK,qBAAKpK,MAAO,CAAC2D,MAAM,OAAnB,gBACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,sBAGJ,sBAAKtD,UAAU,mDAAmDL,MAAO,CAACoK,aAAa,QAAvF,UAEI,qBAAKpK,MAAO,CAAC2D,MAAM,OAAnB,SAA4B5F,EAAMgT,gBAAgB1F,YAClD,qBAAKrL,MAAO,CAAC2D,MAAM,OAAnB,SAA4B5F,EAAMgT,gBAAgB7E,cAClD,qBAAKlM,MAAO,CAAC2D,MAAM,OAAnB,SAA4B5F,EAAMgT,gBAAgBnL,MAClD,qBAAK5F,MAAO,CAAC2D,MAAM,OAAnB,SAA4B5F,EAAMgT,gBAAgB5E,MAClD,qBAAKnM,MAAO,CAAC2D,MAAM,OAAnB,SAA4B5F,EAAMgT,gBAAgB3E,KAAO,MAAQrO,EAAMgT,gBAAgB1E,OACvF,qBAAKrM,MAAO,CAAC2D,MAAM,OAAnB,SAA4B5F,EAAMgT,gBAAgBpL,oBAG1D,sBAAKtF,UAAU,MAAML,MAAO,CAACE,OAAO,OAApC,UACI,qBAAKG,UAAU,oBAAoBL,MAAO,CAAC2J,OAAO,OAAOvJ,UAAU,KAAMF,OAAO,QAAhF,SACI,cAAC,IAAD,CACAuG,SAAUpE,EACV2B,SAAU,SAACZ,GAAD,OAAUoD,EAAapD,IACjCkJ,gBAAc,EACdC,WAAW,QACXC,gBAAgB,SAChBC,QAAS,IAAIpJ,MAAK,IAAIA,MAAO4F,eAAc,IAAI5F,MAAOgF,YAAW,IAAIhF,MAAO2E,WAC5E0E,QAAS,IAAIrJ,KAAKhB,EAAU4G,cAAc5G,EAAUgG,WAAWhG,EAAU2F,UAAU,EAAE,GACrF2E,QAAS,IAAItJ,KAAKhB,EAAU4G,cAAc5G,EAAUgG,WAAWhG,EAAU2F,UAAU,GAAG,IAEtFtB,QAAM,EACNkG,WAAW,uBAGf,sBAAKvM,UAAU,SAASL,MAAO,CAAC2J,OAAO,OAAQzJ,OAAO,OAAQgK,QAAQ,MAAO9J,UAAU,MAAvF,UACI,sBAAKC,UAAU,0BAA0BL,MAAO,CAACoK,aAAa,QAA9D,qCACQ,uBAtEE,WACtB,IAAIyC,EAAiB,CACjB/E,MAAO,UACPiB,IAAK,UACL+D,KAAK,UACLC,OAAO,WAELC,EAAS3K,EAAU4K,eAAe,QAAQJ,GAC5CzJ,EAAO,IAAIC,KAAKhB,GAEpB,OADAe,EAAK8J,WAAW9J,EAAK+J,aAAa,IAC/B9K,EAAU+K,UAEFJ,EAAO,MAAM5J,EAAK6J,eAAe,QAAQJ,GAEzC,2DAwDeQ,MAEd,wBAAQxM,QAAS,WAAK8K,GAAkB,IAAQ3L,MAAO,CAACC,gBAAgBwL,EAAiB,UAAU,QAAQ7B,OAAO,oBAAoBQ,aAAa,OAAOzG,MAAM,MAAMzD,OAAO,MAAOyH,SAAS,SAAUtH,UAAU,UAAjN,0BAGA,wBAAQQ,QAAS,WAAK8K,GAAkB,IAAU3L,MAAO,CAACC,gBAAiBwL,EAA2B,QAAV,UAAkB7B,OAAO,oBAAoBQ,aAAa,OAAOzG,MAAM,MAAMzD,OAAO,MAAOyH,SAAS,SAAUtH,UAAU,IAApN,0BAYA,wBAAQA,UAAU,2BAA2BL,MAAO,CAACoK,aAAa,OAAShK,UAAU,OAAQuD,MAAM,OAAQgE,SAAS,SAAkI9G,QAnE5O,WZ5HvB,IAA6B0M,EAAa+I,GAAb/I,EY+HJ,CAACtB,gBAAgB5J,EAAU+K,UAAU/B,UAAUtN,EAAMgT,gBAAgB1F,UAAUa,YAAYnO,EAAMgT,gBAAgB7E,YAAYmD,OAAO,eAAKlQ,KAAKsM,EAAgB,eAAK,gBZ9HhLpN,IAAM8D,KAAK,gCAAgC,CAACoL,EAAY+I,GAAU,CAC7E/X,QAAS,CACL,eAAgB,uBY4H+K8G,MAAK,SAAC2G,GAEjMpM,EDjIoB,SAAC2N,GACnC,MAAO,CAACpO,KAAKiX,GAAiB7I,eCgIPgJ,CAAqBvK,EAAOtH,OAErC3G,EAAM2P,WAAW,gCA4Db,oCCjJH8I,OAtDjB,SAAwBzY,GAGtB,OACE,mCACE,sBAAKsC,UAAU,GAAGL,MAAO,CAACE,OAAO,qBAAjC,UACE,sBAAKG,UAAU,mBAAmBL,MAAO,CAACE,OAAO,MAAOuW,SAAS,SAAjE,UACE,sBAAKpW,UAAU,gDAAf,UACE,qBAAKA,UAAU,OAAOL,MAAO,CAAC2H,SAAS,OAAQC,WAAW,QAA1D,SAAmE,kDACnE,qBAAKvH,UAAU,kCAAkCL,MAAO,CAAC0W,UAAU,kCAAmCtM,aAAa,OAAQzC,SAAS,QAApI,SAA8I5J,EAAMgT,gBAAgB7E,iBAEtK,sBAAK7L,UAAU,gDAAf,UACE,qBAAKA,UAAU,OAAOL,MAAO,CAAC2H,SAAS,OAAQC,WAAW,QAA1D,SAAmE,kDACnE,sBAAKvH,UAAU,kCAAkCL,MAAO,CAAC0W,UAAU,kCAAmCtM,aAAa,OAAQzC,SAAS,QAApI,UAA8I5J,EAAMgT,gBAAgB5E,IAApK,kBAGJ,sBAAK9L,UAAU,4CAA4CL,MAAO,CAACE,OAAO,OAA1E,UACE,qBAAKG,UAAU,YAAYL,MAAO,CAAC2H,SAAS,OAAQC,WAAW,OAAQ+O,YAAY,QAAnF,SAA4F,2EAC5F,sBAAKtW,UAAU,gBAAf,UACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,kCAAkCL,MAAO,CAAC0W,UAAU,kCAAmCtM,aAAa,OAAQzC,SAAS,QAApI,SAA8I5J,EAAMgT,gBAAgB3E,SAEtK,qBAAK/L,UAAU,4BAAf,eACA,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,kCAAkCL,MAAO,CAAC0W,UAAU,kCAAmCtM,aAAa,OAAQzC,SAAS,QAApI,SAA8I5J,EAAMgT,gBAAgB1E,eAI1K,sBAAKhM,UAAU,gBAAgBL,MAAO,CAACE,OAAO,OAA9C,UACE,sBAAKG,UAAU,gDAAf,UACE,qBAAKA,UAAU,YAAYL,MAAO,CAAC2H,SAAS,OAAQC,WAAW,QAA/D,SAAwE,kDACxE,qBAAKvH,UAAU,kCAAkCL,MAAO,CAAC0W,UAAU,kCAAmCtM,aAAa,OAAQzC,SAAS,QAApI,SAA8I5J,EAAMgT,gBAAgBnL,SAEtK,sBAAKvF,UAAU,gDAAf,UACE,qBAAKA,UAAU,YAAYL,MAAO,CAAC2H,SAAS,OAAQC,WAAW,QAA/D,SAAwE,8DACxE,qBAAKvH,UAAU,kCAAkCL,MAAO,CAAC0W,UAAU,kCAAmCtM,aAAa,OAAQzC,SAAS,QAApI,SAA8I5J,EAAMgT,gBAAgBpL,oBAGxK,sBAAKtF,UAAU,gBAAgBL,MAAO,CAACE,OAAO,OAA9C,UACE,sBAAKG,UAAU,gDAAf,UACE,qBAAKA,UAAU,YAAYL,MAAO,CAAC2H,SAAS,OAAQC,WAAW,QAA/D,SAAwE,wDACxE,qBAAKvH,UAAU,kCAAkCL,MAAO,CAAC0W,UAAU,kCAAmCtM,aAAa,OAAQzC,SAAS,QAApI,SAA8I5J,EAAMgT,gBAAgBlC,iBAEtK,sBAAKxO,UAAU,gDAAf,UACE,qBAAKA,UAAU,YAAYL,MAAO,CAAC2H,SAAS,OAAQC,WAAW,QAA/D,SAAwE,oEACxE,qBAAKvH,UAAU,kCAAkCL,MAAO,CAAC0W,UAAU,kCAAmCtM,aAAa,OAAQzC,SAAS,QAApI,SAA8I5J,EAAMgT,gBAAgBjC,4BC8I/J8H,OArLjB,SAAwB7Y,GAAQ,IAAD,EACoB6E,qBADpB,mBACvBiU,EADuB,KACJC,EADI,OAEYlU,mBAAS,IAFrB,mBAEvBmU,EAFuB,KAERC,EAFQ,OAGEpU,mBAAS,IAHX,mBAGvBqU,EAHuB,KAGbC,EAHa,OAIItU,mBAAS,IAJb,mBAIvBuU,EAJuB,KAIZC,EAJY,OAKYxU,mBAAS,IALrB,mBAKvByU,EALuB,KAKRC,EALQ,OAMA1U,oBAAS,GANT,mBAMtBiQ,EANsB,KAMdC,EANc,KAQvByE,EAAqBxX,aAAY,SAACN,GAAD,OAAUA,EAAMiP,iBAAiBL,sBACxE1J,qBAAU,WACL5G,EAAMgT,gBAAgB1F,YACrByH,GAAW,GAEXgE,EAAqB,MAErB1L,GAA4BrN,EAAMgT,gBAAgB1F,WAAWhG,MAAK,SAAC2G,GAEjE,IAAMwL,EAAWxL,EAAOtH,KAAK8S,SAExB9S,EADgBsH,EAAOtH,KAAK+S,cACPzS,KAAI,SAACuF,EAAKtF,GACpC,OAAO,2BAAIsF,GAAX,IAAgB2B,YAAYnO,EAAMgT,gBAAgB7E,YAAYxG,SAAS8R,EAASvS,GAAOS,cACvFsR,EAAiBtS,GACjBoO,GAAW,SAIjB,CAAC/U,EAAMgT,kBACTpM,qBAAU,WACL4S,EAAmBlM,YAActN,EAAMgT,gBAAgB1F,YACtDyH,GAAW,GAEXgE,EAAqB,MAErB1L,GAA4BrN,EAAMgT,gBAAgB1F,WAAWhG,MAAK,SAAC2G,GAEjE,IAAMwL,EAAWxL,EAAOtH,KAAK8S,SAExB9S,EADgBsH,EAAOtH,KAAK+S,cACPzS,KAAI,SAACuF,EAAKtF,GACpC,OAAO,2BAAIsF,GAAX,IAAgB2B,YAAYnO,EAAMgT,gBAAgB7E,YAAYxG,SAAS8R,EAASvS,GAAOS,cACvFsR,EAAiBtS,GACjBoO,GAAW,SAIjB,CAACyE,IACH5S,qBAAU,WdgBL,IAA4BwK,Ecf5B0H,IACD/D,GAAW,IdckB3D,EcbV0H,EAAkB1H,YdcxB9Q,IAAMiE,IAAI,4BAA4B,CACjDyJ,OAAO,CACHoD,kBchB4C9J,MAAK,SAAC2G,GAEtDsL,EAAiBtL,EAAOtH,KAAKgT,gBAAgB,IAC7CN,EAAapL,EAAOtH,KAAKgT,gBAAgB,IACzCR,EAAYlL,EAAOtH,KAAKgT,gBAAgB,IACxC5E,GAAW,SAIf,CAAC+D,IACH,IAAM9D,EAAO4E,uBAAa,SAAC3E,GACzB8D,EAAqB9D,KACrB,IAEM4E,EAAoB,CAAC,cAAc,cAAc,WAAW,SAAS,iBAC7E,OACE,mCACE,sBAAKvX,UAAU,WAAWL,MAAO,CAACE,OAAO,QAAzC,UACE,sBAAKF,MAAO,CAAC2H,SAAS,OAAQC,WAAW,OAAQiQ,aAAa,aAA9D,UAA4E,uBAAO7X,MAAO,CAACE,OAAO,QAAtB,mDAA5E,IAA4H2S,EAAQ,cAACuB,GAAA,EAAD,CAASnQ,GAAG,OAAOoQ,UAAU,SAASzT,QAAQ,OAAOsT,KAAK,KAAKI,KAAK,SAASjU,UAAU,SAAS,QACpO,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,oCAAf,UACE,sBAAKA,UAAU,qDAAqDL,MAAO,CAACoK,aAAa,OAAOhK,UAAU,OAAOyT,aAAa,QAA9H,UACI,qBAAK7T,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,4BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,gCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,yCAEJ,qBAAKtD,UAAU,2BAA2BL,MAAO,CAACE,OAAO,qBAAzD,SAEA,cAAC,KAAD,CAAW8U,eAAa,EAAxB,SACa,YAAsB,IAApBrR,EAAmB,EAAnBA,MAAmB,EAAZzD,OACN,OAEA,cAAC,KAAD,CAAMyD,MAAOA,EAAOzD,OAAQ4X,KAAKC,MAAMC,OAAOC,YAAP,GAAiC,GAChE7C,KAAM2B,EACN1B,SAAU0B,EAAchS,OACxBuQ,UAAW,GACXC,YAAa,YAA0B,IAAxBtQ,EAAuB,EAAvBA,MAAOuQ,EAAgB,EAAhBA,IAAKxV,EAAW,EAAXA,MACzB,OACI,qBAAeA,MAAOA,EAAtB,SACA,cAAC,GAAD,CAAMa,QAASkS,EAAOxI,KAAOwM,EAAc9R,GAAQuF,SAAUoN,EAAmBnN,MAAOxF,KAD7EuQ,IAKhBC,iBAAkB,YAoB9C,sBAAKpV,UAAU,eAAeL,MAAO,CAACE,OAAO,qBAA7C,UACG,sBAAKG,UAAU,QAAf,qCAEA,qBAAKA,UAAU,+CAA+CL,MAAO,CAACE,OAAO,sBAA7E,SAEM2W,GAAmBQ,GAAeA,EAAcrS,KAAI,SAACuF,EAAKtF,GACrD,OACI,sBAAK5E,UAAU,oCAAgDL,MAAO,CAAC2H,SAAS,SAAhF,UACE,qBAAKtH,UAAU,yBAAf,SACCkK,EAAK2N,kBAEN,qBAAK7X,UAAU,YAAf,SACCkK,EAAK4N,sBALgDlT,WAavE,sBAAK5E,UAAU,QAAf,qCAEA,qBAAKA,UAAU,+CAA+CL,MAAO,CAACE,OAAO,sBAA7E,SACM2W,GAAmBI,GAAUA,EAASjS,KAAI,SAACuF,EAAKtF,GAC7C,OACE,sBAAK5E,UAAU,oCAAgDL,MAAO,CAAC2H,SAAS,SAAhF,UACA,qBAAKtH,UAAU,yBAAf,SACCkK,EAAK2F,aAEN,qBAAK7P,UAAU,YAAf,SACCkK,EAAKoH,iBALkD1M,WAanE,sBAAK5E,UAAU,QAAf,+BAEA,qBAAKA,UAAU,+CAA+CL,MAAO,CAACE,OAAO,sBAA7E,SAEM2W,GAAmBM,GAAWA,EAAUnS,KAAI,SAACuF,EAAKtF,GAC7C,OACE,sBAAK5E,UAAU,oCAAgDL,MAAO,CAAC2H,SAAS,SAAhF,UACE,qBAAKtH,UAAU,yBAAf,SACCkK,EAAKgF,SAEN,qBAAKlP,UAAU,YAAf,SACCkK,EAAK6N,aALgDnT,uBCtBjEoT,OAlIf,SAAuBta,GAAO,IAAD,EACqB6E,oBAAS,GAD9B,mBAClB0V,EADkB,KACDC,EADC,OAEiD3V,oBAAS,GAF1D,mBAElB4V,EAFkB,KAEaC,EAFb,OAGyC7V,oBAAS,GAHlD,mBAGlB8V,EAHkB,KAGSC,EAHT,OAImC/V,oBAAS,GAJ5C,mBAIlBgW,EAJkB,KAIMC,EAJN,OAKiCjW,oBAAS,GAL1C,mBAKlB+P,EALkB,KAKKC,EALL,OAMqChQ,oBAAS,GAN9C,mBAMlByP,EANkB,KAMOC,EANP,OAOI1P,oBAAS,GAPb,mBAOlBiQ,EAPkB,KAOVC,EAPU,QAQRjT,cAE6B+C,mBAAS,CACrDsJ,YAAY,IACZE,KAAK,IACLC,KAAK,IACLzG,IAAK,IACLuG,IAAI,IACJxG,YAAa,IACbmJ,cAAc,IACdD,YAAY,OAlBW,mBAUlBkC,EAVkB,KAUDgE,EAVC,KAqBnBrH,EAAY,SAACuF,GAEF,yBAAZA,EACD0F,GAA6B,GAEX,uBAAZ1F,EACN4F,GAA0B,GAER,uBAAZ5F,EACNsF,GAAmB,GAED,6BAAZtF,EACNwF,GAAiC,GAEf,sBAAZxF,EACNL,GAAyB,GACL,wBAAZK,GACRX,GAA2B,IAM1BzG,EAAa,SAACD,GAElB,GAAGA,EAAQ,CACV,IAAMkN,EAAa,CACjBzN,UAAUO,EAAQP,UAClBa,YAAYN,EAAQM,YACpBE,KAAKR,EAAQQ,KACbC,KAAKT,EAAQS,KACbzG,IAAKgG,EAAQhG,IACbuG,IAAIP,EAAQO,IACZxG,YAAaiG,EAAQjG,YACrBkJ,YAAajD,EAAQiD,YACrBC,cAAelD,EAAQkD,cAAclD,EAAQkD,cAAc,KAE7DiG,EAAmB+D,KAIjBtF,EAAe,SAACC,GACpBX,EAAWW,IAGX,OACD,sBAAKpT,UAAU,oCAAoCL,MAAO,CAACE,OAAO,OAAQD,gBAAgB,SAA1F,UACK,eAAC,GAAD,CAAiBkL,YAAY,2BAAOD,WAAW,uBAAuBzK,MAAM,UAA5E,UACQ,wBAAST,MAAO,CAACG,YAAY,QAASE,UAAU,sBAAsBQ,QAAS,WAAK0X,GAAmB,IAAvG,sCACC,wBAAQ3H,SAAwC,MAA9BG,EAAgB7E,YAA8BlM,MAAO,CAACG,YAAY,QAASE,UAAU,sBAAsBQ,QAAS,WAAK4X,GAAiC,IAA5K,0BACA,wBAAQzY,MAAO,CAACG,YAAY,QAASE,UAAU,sBAAsBQ,QAAS,WAAK8X,GAA6B,IAAhH,sCACF,wBAAQ/H,SAAwC,MAA9BG,EAAgB7E,YAA8BlM,MAAO,CAACG,YAAY,QAASE,UAAU,sBAAsBQ,QAAS,WAAKgY,GAA0B,IAArK,sCACC,wBAAQjI,SAAwC,MAA9BG,EAAgB7E,YAA8BlM,MAAO,CAACG,YAAY,QAASE,UAAU,sBAAsBQ,QAAS,WAAK+R,GAAyB,IAApK,sCACC,wBAAQhC,SAAwC,MAA9BG,EAAgB7E,YAA8BlM,MAAO,CAACG,YAAY,QAASE,UAAU,sBAAsBQ,QAAS,WAAKyR,GAA2B,IAAtK,yCAET,cAAC,GAAD,CAAgBjS,UAAU,OAAO0Q,gBAAiBA,IAClD,cAAC,GAAD,CAAgBA,gBAAiBA,IAEnC,eAAC9P,EAAA,EAAD,CAAOgT,SAAS,SAASC,KAAK,KAAKhT,KAAMoX,EAAkBnX,OAAQ,WAAKoX,GAAmB,IAA3F,UACE,eAACtX,EAAA,EAAMI,OAAP,CAAcrB,MAAO,CAACC,gBAAgB,oBAAsBqB,aAAW,EAAvE,UACE,cAACL,EAAA,EAAMM,MAAP,CAAcvB,MAAO,CAACS,MAAM,SAA5B,sCACCoS,EAAQ,cAACuB,GAAA,EAAD,CAASnQ,GAAG,OAAOoQ,UAAU,SAASzT,QAAQ,OAAOsT,KAAK,KAAKI,KAAK,SAASjU,UAAU,SAAS,QAG3G,cAACY,EAAA,EAAMS,KAAP,UAAY,cAAC,GAAD,CAAoB+O,eAAgB+C,EAAgB9F,WAAYA,EAAYqH,mBAAoBlJ,SAG9G,eAAC5K,EAAA,EAAD,CAAQgT,SAAS,SAASC,KAAK,KAAKhT,KAAMsX,EAA+BrX,OAAQ,WAAKsX,GAAiC,IAAvH,UACE,cAACxX,EAAA,EAAMI,OAAP,CAAcrB,MAAO,CAACC,gBAAgB,oBAAsBqB,aAAW,EAAvE,SACE,cAACL,EAAA,EAAMM,MAAP,CAAcvB,MAAO,CAACS,MAAM,SAA5B,wCAEF,cAACQ,EAAA,EAAMS,KAAP,UAAY,cAAC,GAAD,CAA0BgM,WAAYA,EAAYqD,gBAAiBA,SAGjF,eAAC9P,EAAA,EAAD,CAAQgT,SAAS,SAAU/S,KAAMwX,EAA2BvX,OAAQ,WAAKwX,GAA6B,IAAtG,UACE,cAAC1X,EAAA,EAAMI,OAAP,CAAcrB,MAAO,CAACC,gBAAgB,oBAAsBqB,aAAW,EAAvE,SACE,cAACL,EAAA,EAAMM,MAAP,CAAcvB,MAAO,CAACS,MAAM,SAA5B,wCAEF,cAACQ,EAAA,EAAMS,KAAP,UAAY,cAAC,GAAD,CAAsBgM,WAAYA,EAAYqH,mBAAoBlJ,SAEhF,eAAC5K,EAAA,EAAD,CAAQgT,SAAS,SAAU/S,KAAM0X,EAAwBzX,OAAQ,WAAK0X,GAA0B,IAAhG,UACE,cAAC5X,EAAA,EAAMI,OAAP,CAAcrB,MAAO,CAACC,gBAAgB,oBAAqBqB,aAAW,EAAtE,SACE,cAACL,EAAA,EAAMM,MAAP,CAAcvB,MAAO,CAACS,MAAM,SAA5B,wCAEF,cAACQ,EAAA,EAAMS,KAAP,UAAY,cAACqX,GAAD,CAAoBrL,WAAYA,EAAYqD,gBAAiBA,EAAiBgE,mBAAoBlJ,SAGhH,eAAC5K,EAAA,EAAD,CAAOiT,KAAK,KAAMD,SAAS,SAAS/S,KAAMyR,EAAuBxR,OAAQ,WAAKyR,GAAyB,IAAvG,UACE,eAAC3R,EAAA,EAAMI,OAAP,CAAcrB,MAAO,CAACC,gBAAgB,oBAAqBqB,aAAW,EAAtE,UACE,cAACL,EAAA,EAAMM,MAAP,CAAavB,MAAO,CAACS,MAAM,SAA3B,sCACCoS,EAAQ,cAACuB,GAAA,EAAD,CAASnQ,GAAG,OAAOoQ,UAAU,SAASzT,QAAQ,OAAOsT,KAAK,KAAKI,KAAK,SAASjU,UAAU,SAAS,QAE3G,cAACY,EAAA,EAAMS,KAAP,UAAY,cAAC,GAAD,CAAmB+O,eAAgB+C,EAAgB9F,WAAYA,EAAYqD,gBAAiBA,SAE1G,eAAC9P,EAAA,EAAD,CAAQgT,SAAS,SAAS/S,KAAMmR,EAAyBlR,OAAQ,WAAKmR,GAA2B,IAAjG,UACE,eAACrR,EAAA,EAAMI,OAAP,CAAcrB,MAAO,CAACC,gBAAgB,oBAAqBqB,aAAW,EAAtE,UACE,cAACL,EAAA,EAAMM,MAAP,CAAcvB,MAAO,CAACS,MAAM,SAA5B,sCACCoS,EAAQ,cAACuB,GAAA,EAAD,CAASnQ,GAAG,OAAOoQ,UAAU,SAASzT,QAAQ,OAAOsT,KAAK,KAAKI,KAAK,SAASjU,UAAU,SAAS,QAE3G,cAACY,EAAA,EAAMS,KAAP,UAAY,cAAC,GAAD,CAAqB+O,eAAgB+C,EAAgB9F,WAAYA,EAAYqD,gBAAiBA,a,6BCpI5G5C,GAAe,CACnBvC,QAAS,CACPM,YAAY,2BACZE,KAAK,IACLC,KAAK,IACLzG,IAAK,eACLuG,IAAI,IACJxG,YAAa,MAKXqT,GAAY,qBAILC,GAAmB,SAACrN,GAC/B,MAAO,CAACzM,KAAK6Z,GAAapN,YAabsN,GATQ,WAAmC,IAAlCzZ,EAAiC,uDAAzB0O,GAAczO,EAAW,uCACvD,OAAGA,EAAOP,OAAS6Z,GACV,2BAAIvZ,GAAX,IAAkBmM,QAAQlM,EAAOkM,UAE1BnM,GCsEI0Z,OAvFf,SAAuBpb,GAAO,IAAD,EACO6E,mBAAS,OADhB,mBAClBwW,EADkB,KACRC,EADQ,OAEgCzW,qBAFhC,mBAElB0W,EAFkB,KAEIC,EAFJ,KAGnB3Z,EAAWC,cAGXiD,EAAe,SAACjB,GAClBwX,EAAYxX,EAAMkB,OAAO/E,QAErB+U,EAAQ,SAACxI,GACb3K,EAASqZ,GAAiB,CAAC5N,UAAUd,EAAKc,aAC1CkO,EAAyBhP,IASvBiP,EAAe,CAAC,kBAAkB,cAAc,SAAS,YAE/D,OACI,sBAAKnZ,UAAU,iBAAiBL,MAAO,CAACC,gBAAgB,SAAxD,UACA,sBAAKI,UAAU,sCAAf,UACI,eAACoZ,GAAA,EAAD,CAAaC,QAAM,EAAnB,UACI,cAACC,GAAA,EAAD,CAAcxa,KAAK,QAAQyB,QAAO,UAAkB,QAAbwY,EAAqB,YAAc,SAAYpW,KAAK,OAAQ2N,QAAoB,QAAXyI,EAAkBpb,MAAM,MAAMgG,SAAUlB,EAApJ,SAAkK,qBAAKzC,UAAU,YAAf,4BAClK,cAACsZ,GAAA,EAAD,CAAcxa,KAAK,QAAQyB,QAAO,UAAkB,uBAAbwY,EAAqB,YAAc,SAAYpW,KAAK,OAAQ2N,QAAoB,uBAAXyI,EAAkBpb,MAAM,qBAAMgG,SAAUlB,EAApJ,SAAkK,qBAAKzC,UAAU,YAAf,kCAClK,cAACsZ,GAAA,EAAD,CAAcxa,KAAK,QAAQyB,QAAO,UAAkB,uBAAbwY,EAAqB,YAAc,SAAYpW,KAAK,OAAQ2N,QAAoB,uBAAXyI,EAAkBpb,MAAM,qBAAMgG,SAAUlB,EAApJ,SAAkK,qBAAKzC,UAAU,YAAf,kCAClK,cAACsZ,GAAA,EAAD,CAAcxa,KAAK,QAAQyB,QAAO,UAAkB,6BAAbwY,EAAsB,YAAc,SAAYpW,KAAK,OAAQ2N,QAAoB,6BAAXyI,EAAmBpb,MAAM,2BAAOgG,SAAUlB,EAAvJ,SAAqK,qBAAKzC,UAAU,YAAf,2CAEzK,+BACsB,IAAjBtC,EAAM6b,UAAkB,wBAAQ5Z,MAAO,CAACG,YAAY,QAASU,QAlB9C,WACrByY,GACCvb,EAAM8b,oBAAoBP,EAAsBzJ,kBAgBgDxP,UAAU,sBAA7E,+BAGjC,sBAAKA,UAAU,oCAAf,UACI,sBAAKA,UAAU,qDAAqDL,MAAO,CAACoK,aAAa,OAAOhK,UAAU,OAAOyT,aAAa,QAA9H,UACI,qBAAK7T,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,4BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,yCAEJ,qBAAKtD,UAAU,0BAA0BL,MAAO,CAACE,OAAO,sBAAxD,SAECnC,EAAM4R,SACP,cAAC,KAAD,CAAWqF,eAAa,EAAxB,SACa,YAAsB,IAApBrR,EAAmB,EAAnBA,MACKqI,GADc,EAAZ9L,OACOnC,EAAM4R,SAASiC,QAAO,SAACrH,GAAD,MAAmB,QAAX6O,GAAkB7O,EAAK8E,SAAS+J,MAC3E,OACA,cAAC,KAAD,CAAMzV,MAAOA,EAAOzD,OAAQ4X,KAAKC,MAAMC,OAAOC,YAAP,KAAiC,IAChE7C,KAAMpJ,EACNqJ,SAAUrJ,EAAOjH,OACjBuQ,UAAW,GACXC,YAAa,YAA0B,IAAxBtQ,EAAuB,EAAvBA,MAAOuQ,EAAgB,EAAhBA,IAAKxV,EAAW,EAAXA,MACjB+T,EAAK,2BAAO/H,EAAO/G,IAAd,IAAqB6K,SAASzI,IAAO2E,EAAO/G,GAAO6K,UAAUxI,OAAO,WAC/E,OACI,qBAAetH,MAAOA,EAAtB,SACA,cAAC,GAAD,CAAMa,QAASkS,EAAOxI,KAAOwJ,EAAOvJ,SAAUgP,EAAc/O,MAAOxF,KADzDuQ,IAKlBC,iBAAkB,OAK1C,cCuBGqE,OA1Ff,SAA4B/b,GAAO,IAAD,EACE6E,mBAAS,OADX,mBACvBwW,EADuB,KACbC,EADa,OAEmCzW,qBAFnC,mBAEvBmX,EAFuB,KAEGC,EAFH,KAGxBpa,EAAWC,cAGXiD,EAAe,SAACjB,GAClBwX,EAAYxX,EAAMkB,OAAO/E,QAErB+U,EAAQ,SAACxI,GACb3K,EAASqZ,GAAiB,CAAC5N,UAAUd,EAAKc,aAC1C2O,EAA6BzP,IAS3BqN,EAAoB,CAAC,cAAc,cAAc,WAAW,SAAS,iBAC3E,OACI,sBAAKvX,UAAU,iBAAiBL,MAAO,CAAEC,gBAAgB,SAAzD,UACA,sBAAKI,UAAU,sCAAf,UACI,eAACoZ,GAAA,EAAD,CAAaC,QAAM,EAAnB,UACI,cAACC,GAAA,EAAD,CAAcxa,KAAK,QAAQyB,QAAO,UAAkB,QAAbwY,EAAqB,YAAc,SAAYpW,KAAK,OAAQ2N,QAAoB,QAAXyI,EAAkBpb,MAAM,MAAMgG,SAAUlB,EAApJ,SAAkK,qBAAKzC,UAAU,YAAf,4BAClK,cAACsZ,GAAA,EAAD,CAAcxa,KAAK,QAAQyB,QAAO,UAAkB,8BAAbwY,EAAuB,YAAc,SAAYpW,KAAK,OAAQ2N,QAAoB,8BAAXyI,EAAoBpb,MAAM,4BAAQgG,SAAUlB,EAA1J,SAAwK,qBAAKzC,UAAU,YAAf,yCACxK,cAACsZ,GAAA,EAAD,CAAcxa,KAAK,QAAQyB,QAAO,UAAkB,8BAAbwY,EAAuB,YAAc,SAAYpW,KAAK,OAAQ2N,QAAoB,8BAAXyI,EAAoBpb,MAAM,4BAAQgG,SAAUlB,EAA1J,SAAwK,qBAAKzC,UAAU,YAAf,4CAE5K,+BACsB,IAAjBtC,EAAM6b,UAAkB,wBAAQ5Z,MAAO,CAACG,YAAY,QAASU,QAhBzC,WAC1BkZ,GACChc,EAAMkc,yBAAyBF,EAA0B5K,cAc4C9O,UAAU,sBAAlF,+BAGjC,sBAAKA,UAAU,oCAAf,UACI,sBAAKA,UAAU,qDAAqDL,MAAO,CAACoK,aAAa,OAAOhK,UAAU,OAAOyT,aAAa,QAA9H,UACI,qBAAK7T,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,4BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,gCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,yCAIJ,qBAAKtD,UAAU,yBAAyBL,MAAO,CAACE,OAAO,sBAAvD,SACCnC,EAAMmc,cACP,cAAC,KAAD,CAAWlF,eAAa,EAAxB,SACa,YAAsB,IAApBrR,EAAmB,EAAnBA,MACKqI,GADc,EAAZ9L,OACOnC,EAAMmc,cAActI,QAAO,SAACrH,GAAD,MAAmB,QAAX6O,GAAkB7O,EAAK8E,SAAS+J,MAChF,OACA,cAAC,KAAD,CAAMzV,MAAOA,EAAOzD,OAAQ4X,KAAKC,MAAMC,OAAOC,YAAP,KAAiC,IAChE7C,KAAMpJ,EACNqJ,SAAUrJ,EAAOjH,OACjBuQ,UAAW,GACXC,YAAa,YAA0B,IAAxBtQ,EAAuB,EAAvBA,MAAOuQ,EAAgB,EAAhBA,IAAKxV,EAAW,EAAXA,MACjB+T,EAAK,2BAAO/H,EAAO/G,IAAd,IAAqBmK,cAAc/H,IAAO2E,EAAO/G,GAAOmK,eAAe9H,OAAO,WACzF,OACI,qBAAetH,MAAOA,EAAtB,SACA,cAAC,GAAD,CAAMa,QAASkS,EAAOxI,KAAOwJ,EAAOvJ,SAAUoN,EAAmBnN,MAAOxF,KAD9DuQ,IAKlBC,iBAAkB,OAK1C,cCsBG0E,OAvFf,SAA0Bpc,GAAO,IAAD,EACD6E,mBAAS,sBADR,mBACtB+R,EADsB,KACdC,EADc,KAMtB2C,EAAqBxX,aAAY,SAACN,GAAD,OAAUA,EAAMiP,iBAAiBL,sBAClE+L,EAAgBra,aAAY,SAACN,GAAD,OAAUA,EAAMiP,iBAAiBN,iBAPvC,EAQiBxL,qBARjB,mBAQrByX,EARqB,KAQJC,EARI,OASwB1X,qBATxB,mBASrB2X,EATqB,KASDC,EATC,OAUC5X,oBAAS,GAVV,mBAUrBiQ,EAVqB,KAUbC,EAVa,KAuE5B,OA5DAnO,qBAAU,WACNmO,GAAW,GACXxH,KAAmBjG,MAAK,SAAC2G,GACrB,IAAMwL,EAAWxL,EAAOtH,KAAK8S,SAEvBiD,EAAczO,EAAOtH,KAAK+V,YAC1BhD,EAAgBzL,EAAOtH,KAAK+S,cAAczS,KAAI,SAACuF,EAAMtF,GACvD,OAAO,2BAAIsF,GAAX,IAAiB2B,YAAYuO,EAAYxV,GAAOiH,YAAYxG,SAAS8R,EAASvS,GAAOS,cAEzF4U,EAAkB7C,GAClB3E,GAAW,QAEjB,CAACyE,IACH5S,qBAAU,WACNmO,GAAW,GACXvH,KAAuBlG,MAAK,SAAC2G,GACzB,IAAMyO,EAAczO,EAAOtH,KAAK+V,YAC1BnE,EAAWtK,EAAOtH,KAAK4R,SAAStR,KAAI,SAACuF,EAAMtF,GAC7C,OAAO,2BAAIsF,GAAX,IAAiB2B,YAAYuO,EAAYxV,GAAOiH,iBAEpDsO,EAAsBlE,GACtBxD,GAAW,QAEjB,CAACsH,IAsCC,sBAAK/Z,UAAU,oCAAoCL,MAAO,CAACE,OAAO,oBAAqBD,gBAAgB,SAAvG,UACI,eAAC,GAAD,CAAiBkL,YAAY,wCAAUD,WAAW,iBAAiBzK,MAAM,UAAzE,UACCoS,EAAQ,cAACuB,GAAA,EAAD,CAASnQ,GAAG,OAAOoQ,UAAU,SAASzT,QAAQ,OAAOsT,KAAK,KAAKI,KAAK,SAASjU,UAAU,SAAS,KACxG,yBAAQ2D,SAzEG,SAACnC,GAClB+S,EAAU/S,EAAMkB,OAAO/E,QAwEiBqC,UAAU,OAAO2C,KAAK,YAAxD,UACO,wBAAQhF,MAAM,qBAAd,sCACA,wBAAQA,MAAM,gBAAd,4CAIE,uBAAT2W,EAA8B,cAAC,GAAD,CAAoBiF,UAAU,EAAOK,yBA7CjD,SAACS,GAGxB,IAFA,InBmEiCvL,EmBnE7BoC,EAAS,GACToJ,EAAmB,KACfzS,EAAE,EAAGA,EAAEmS,EAAgBtV,OAAQmD,IAChCmS,EAAgBnS,GAAGiH,cAAcuL,EAChCnJ,EAAOnJ,KAAKiS,EAAgBnS,IAE5ByS,EAAoBN,EAAgBnS,InB6DXiH,EmBzDRuL,EnB0Ddrc,IAAM8G,OAAO,qCAAsC,CAC9DT,KAAM,CACFyK,kBmB5DmC9J,MAAK,WACxCiV,EAAkB/I,GAClB3D,GAAiB,CAACzO,KAAK,YAAakM,UAAUsP,EAAkBtP,UAAYgE,OAAO,qBAgCiC6K,cAAeG,IAAmB,cAAC,GAAD,CAAeT,UAAU,EAAOC,oBAzBxK,SAACe,GAEnB,IADA,InBoC4B/K,EmBpCxB0B,EAAS,GACLrJ,EAAE,EAAGA,EAAEqS,EAAmBxV,OAAQmD,IACnCqS,EAAmBrS,GAAG2H,kBAAkB+K,GACvCrJ,EAAOnJ,KAAKmS,EAAmBrS,KnBiCX2H,EmB7BR+K,EnB8BTvc,IAAM8G,OAAO,gCAAiC,CACzDT,KAAM,CACFmL,sBmBhCkCxK,MAAK,WACvCmV,EAAsBjJ,GACtB3D,GAAiB,CAACzO,KAAK,aAeqMwQ,SAAU4K,QC7DnOM,OAxBf,SAAmB9c,GAEf,OACA,mCACA,sBAAKsC,UAAU,+BAA+BL,MAAO,CAACyW,SAAS,SAAUqE,WAAW,gBAApF,UACA,qBAAKza,UAAU,UAAUL,MAAO,CAACE,OAAO,SAAxC,SACQ,qBAAKG,UAAU,MAAf,SACI,cAAC,GAAD,QAGZ,sBAAKA,UAAU,UAAUL,MAAO,CAACE,OAAO,SAAxC,UACQ,qBAAKG,UAAU,YAAf,SACI,cAAC,GAAD,MAEJ,qBAAKA,UAAU,aAAf,SACI,cAAC,GAAD,eCRD0a,OAbf,SAAsBhd,GACpB,OACE,qCACA,0BAEE,sBAAKsC,UAAU,WAAWL,MAAO,CAACE,OAAO,QAAzC,UACE,sBAAKG,UAAU,aAAf,UAA4B,qBAAKA,UAAU,4BAA4BL,MAAO,CAAEC,gBAAgBlC,EAAM0C,MAAOkD,MAAM,OAAQlD,MAAM,WAArG,SAAiH,mBAAGJ,UAAWtC,EAAMmN,eAAsB,qBAAK7K,UAAU,4BAAf,SAA4CtC,EAAMoN,iBACzO,qBAAK9K,UAAU,2DAAf,SAA0E,mBAAGQ,QAAS9C,EAAMid,QAAS3a,UAAS,UAAKtC,EAAMkd,SAAWjb,MAAO,CAACkb,OAAO,UAAWvT,SAAU,SAAUvH,UAAU,mB,oBCcrL+a,OAnBf,SAAuBpd,GAErB,OACE,mCACA,sBAAKgN,SAAS,KAAKlK,QAAS,SAACgB,GAAY9D,EAAM8C,SAAQ9C,EAAM8C,QAAQ9C,EAAMwM,OAAUlK,UAAW,0DAA2DL,MAAO,CAAE0W,UAAW,kCAAkCtM,aAAa,MAAMzC,SAAU,QAA9O,UACI,qBAAKtH,UAAW,kBAAhB,SAAoCtC,EAAMwM,KAAK2N,kBAC/C,cAACkD,GAAA,EAAD,CAAgBC,UAAU,QACZC,QAAS,cAACC,GAAA,EAAD,UAAUxd,EAAMwM,KAAK4N,oBAD5C,SAEE,qBAAK9X,UAAW,8BAA+BL,MAAO,CAACwb,WAAW,SAAS9K,SAAS,SAAU+K,aAAa,YAA3G,SAAyH1d,EAAMwM,KAAK4N,sBAEtI,cAACiD,GAAA,EAAD,CAAgBC,UAAU,QACZC,QAAS,cAACC,GAAA,EAAD,UAAUxd,EAAMwM,KAAKmR,qBAD5C,SAEE,qBAAKrb,UAAW,8BAA+BL,MAAO,CAACwb,WAAW,SAAS9K,SAAS,SAAU+K,aAAa,YAA3G,SAAyH1d,EAAMwM,KAAKmR,6BCX9I,SAASC,GAA0B5d,GAEjC,OACE,sBAAKsC,UAAU,gEAAgEL,MAAO,CAACE,OAAO,OAAQ0H,WAAW,QAAjH,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,OAAnB,SAA4B5F,EAAMwM,KAAK2N,kBACvC,cAACkD,GAAA,EAAD,CAAgBC,UAAU,QACtBC,QAAS,cAACC,GAAA,EAAD,UAAUxd,EAAMwM,KAAK4N,oBADlC,SAEE,qBAAKnY,MAAO,CAAC2D,MAAM,MAAO6X,WAAY,SAAS9K,SAAS,SAAU+K,aAAa,YAA/E,SAA6F1d,EAAMwM,KAAK4N,sBAE1G,cAACiD,GAAA,EAAD,CAAgBC,UAAU,QACtBC,QAAS,cAACC,GAAA,EAAD,UAAUxd,EAAMwM,KAAKmR,qBADlC,SAEE,qBAAK1b,MAAO,CAAC2D,MAAM,MAAO6X,WAAY,SAAS9K,SAAS,SAAU+K,aAAa,YAA/E,SAA6F1d,EAAMwM,KAAKmR,uBAE1G,qBAAK1b,MAAO,CAAC2D,MAAM,OAAnB,SAA2B,wBAAQtD,UAAU,yBAAyBQ,QAAS,WAAO9C,EAAM6d,QAAQ7d,EAAMwM,OAA/E,+BAKlB5M,WAAMqN,KAAK2Q,IC2JXE,OA3Kf,SAAoC9d,GAAQ,IAAD,EAEL6E,mBAAS,IAFJ,mBAElCkZ,EAFkC,KAEtBC,EAFsB,OAGSnZ,mBAAS,IAHlB,mBAGlCoZ,EAHkC,KAGfC,EAHe,OAILrZ,mBAAS,IAJJ,mBAIlCsZ,EAJkC,KAItBC,EAJsB,OAKLvZ,mBAAS,UALJ,mBAKlCwZ,EALkC,KAKtBC,EALsB,KAWzC1X,qBAAU,YACU,IAAf5G,EAAMmD,OACP+a,EAAqBle,EAAMue,UAC3BH,EAAcpe,EAAMwe,gBACpBR,EAAc,OAEhB,CAAChe,IAEH,IAAMye,EAAY7E,uBAAY,SAAC8E,GAC7B1e,EAAMye,UAAUC,GAChB1e,EAAMqD,gBACL,CAACrD,IAEE6d,EAAUjE,uBAAY,SAACpN,GACzB0R,GAAqB,SAACS,GAEpB,GADgBA,EAAUhJ,WAAU,SAACiJ,GAAD,OAASA,EAAIzE,kBAAoB3N,EAAK2N,oBAC5D,EAEZ,OADAlW,MAAM,4DACC0a,EAEP,IAAME,EAAO,2BACRrS,GADQ,IAEX4E,YAAYpR,EAAM8S,UAAU1B,cAG9B,OADiBuN,EAAUvJ,OAAOyJ,QAIxC,CAAC7e,EAAM8S,YAEH9P,EAAa4W,uBAAY,SAACpN,GAC9B0R,GAAqB,SAACS,GAEpB,OADiBA,EAAU9K,QAAO,SAAAiL,GAAQ,OAAIA,EAAS3E,kBAAoB3N,EAAK2N,wBAGjF,IAEG4E,EAAanF,uBAAY,SAAC9V,GAC9Bwa,EAAcxa,EAAMkB,OAAO/E,SAC1B,IAEG+e,EAASpF,uBAAY,SAACoF,EAAQX,GAClC,IAAIY,EAAW,GACfD,EAASA,EAAOE,cAChBd,GAAc,WAQZ,MAPkB,WAAfC,EACDY,EAAWjf,EAAMwe,eAAe3K,QAAO,SAAAsL,GAAS,OAAmE,IAA9DA,EAAUhF,gBAAgB+E,cAAe9H,QAAQ4H,MAC/E,UAAfX,EACRY,EAAWjf,EAAMwe,eAAe3K,QAAO,SAAAsL,GAAS,OAAqD,IAAjDA,EAAU/E,kBAAkBhD,QAAQ4H,MACjE,UAAfX,IACRY,EAAWjf,EAAMwe,eAAe3K,QAAO,SAAAsL,GAAS,OAAsE,IAAjEA,EAAUxB,mBAAmBuB,cAAe9H,QAAQ4H,OAEpGC,OAGT,CAACjf,EAAMwe,iBAEHhH,EAAc,SAAC,GAAyB,IAAxBtQ,EAAuB,EAAvBA,MAAOuQ,EAAgB,EAAhBA,IAAKxV,EAAW,EAAXA,MAChC,OACE,qBAAeA,MAAOA,EAAtB,SACE,cAAC,GAAD,CAA2BuK,KAAM2R,EAAWjX,GAAQ2W,QAASA,KADrDpG,IAKd,OACE,eAACvU,EAAA,EAAD,CAAOoT,WAAW,EAAOnT,KAAMnD,EAAMmD,KAAMC,OAAQpD,EAAMqD,YAAa8S,KAAK,KAAKiJ,UAAQ,EAAxF,UACE,cAAClc,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAACtB,MAAO,CAACC,gBAAgB,WAAlD,SACE,cAACgB,EAAA,EAAMM,MAAP,CAAavB,MAAO,CAACS,MAAM,WAA3B,yCAEF,eAACQ,EAAA,EAAMS,KAAP,WACE,qBAAKrB,UAAU,4DAAf,SACE,sBAAKA,UAAU,SAAf,UACA,yBAAQA,UAAU,gBAAgBL,MAAO,CAAC2D,MAAM,SAAUK,SAAU8Y,EAApE,UACE,wBAAQ9e,MAAM,SAASyI,SAAwB,WAAd2V,EAAjC,sCACA,wBAAQpe,MAAM,QAAQyI,SAAwB,UAAd2V,EAAhC,8CACA,wBAAQpe,MAAM,QAAQyI,SAAwB,UAAd2V,EAAhC,iDAEA,uBAAOjd,KAAK,OAAO6E,SAjFJ,SAACnC,GACxBka,EAAcla,EAAMkB,OAAO/E,UAiFnB,qBAAKqC,UAAU,qBAAf,SACE,wBAAQA,UAAU,mCAAmClB,KAAK,SAAS0B,QAAU,kBAAMkc,EAAOjB,EAAYM,IAAtG,iCAIN,sBAAKpc,MAAO,CAACE,OAAO,SAAUG,UAAU,SAAxC,UACE,sBAAKA,UAAU,YAAYL,MAAO,CAAC2D,MAAM,SAAzC,UACE,sBAAKtD,UAAU,wCAAwCL,MAAO,CAACE,OAAO,OAAQO,MAAM,UAAWmH,WAAW,QAA1G,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,8CACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,8CACA,qBAAK3D,MAAO,CAAC2D,MAAM,YAErB,qBAAKtD,UAAU,uBAAuBL,MAAO,CAACE,OAAO,SAArD,SACsB,MAArB8b,GACDA,EAAkBhX,KAAK,SAACuF,EAAMtF,GAC5B,OACE,sBAAgC5E,UAAU,gEAAgEL,MAAO,CAACE,OAAO,OAAQ0H,WAAW,QAA5I,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,OAAnB,SAA4B4G,EAAK2N,kBACjC,cAACkD,GAAA,EAAD,CAAgBC,UAAU,QACtBC,QAAS,cAACC,GAAA,EAAD,UAAUhR,EAAK4N,oBAD5B,SAEE,qBAAKnY,MAAO,CAAC2D,MAAM,MAAO6X,WAAY,SAAS9K,SAAS,SAAU+K,aAAa,YAA/E,SAA6FlR,EAAK4N,sBAEpG,cAACiD,GAAA,EAAD,CAAgBC,UAAU,QACtBC,QAAS,cAACC,GAAA,EAAD,UAAUhR,EAAKmR,qBAD5B,SAEE,qBAAK1b,MAAO,CAAC2D,MAAM,MAAO6X,WAAY,SAAS9K,SAAS,SAAU+K,aAAa,YAA/E,SAA6FlR,EAAKmR,uBAEpG,qBAAK1b,MAAO,CAAC2D,MAAM,OAAnB,SAA2B,wBAAQtD,UAAU,wBAAwBQ,QAAS,WAAOE,EAAWwJ,IAArE,8BAVnBA,EAAK2N,yBAiBrB,qBAAK7X,UAAU,yDAAf,SACE,mBAAGA,UAAU,0BAA0BL,MAAO,CAAC2H,SAAS,YAG1D,sBAAKtH,UAAU,YAAYL,MAAO,CAAC2D,MAAM,SAAzC,UACE,sBAAKtD,UAAU,wCAAwCL,MAAO,CAACE,OAAO,OAAQO,MAAM,UAAWmH,WAAW,QAA1G,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,8CACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,8CACA,qBAAK3D,MAAO,CAAC2D,MAAM,YAErB,qBAAKtD,UAAU,SAASL,MAAO,CAACE,OAAO,SAAvC,SACyB,IAAtBgc,EAAWnX,OACZ,sBAAK1E,UAAU,yDAAf,UACE,mBAAGA,UAAU,yBADf,iEAIA,cAAC,KAAD,UAEI,YAAsB,IAApBsD,EAAmB,EAAnBA,MAAOzD,EAAY,EAAZA,OACP,OACE,cAAC,KAAD,CAAMyD,MAAOA,EAAOzD,OAAQA,EAC1BmV,SAAU6G,EAAWnX,OACrBuQ,UAAW,GACXC,YAAaA,EACbE,iBAAkB,kBAWpC,eAACxU,EAAA,EAAMW,OAAP,WACE,cAAClB,EAAA,EAAD,CAAQE,QAAQ,YAAYsT,KAAK,KAAKrT,QAAS9C,EAAMqD,YAArD,0BAGA,cAACV,EAAA,EAAD,CAAQE,QAAQ,kBAAkBsT,KAAK,KAAKrT,QAAS,WAAQ2b,EAAUR,IAAvE,8CC3GOoB,OAvDf,SAAuBrf,GAAQ,IAAD,EAEJ6E,oBAAS,GAFL,mBAErB1B,EAFqB,KAEfkD,EAFe,KAa5B,OACE,qCACE,cAAC,GAAD,CAAc+G,YAAY,4BAAQD,WAAW,sBAAsBzK,MAAM,UAAUwa,QAAQ,oBAAoBD,QAAkC,8BAAzBjd,EAAM8S,UAAUxB,OAXzH,kBAAMjL,GAAQ,IAEpB,WACXpC,MAAM,wFASJ,cAAC,GAAD,CAA4Bd,KAAMA,EAAM2P,UAAW9S,EAAM8S,UAAWzP,YAbpD,kBAAMgD,GAAQ,IAagEmY,eAAgBxe,EAAMsf,eAAgBf,SAAUve,EAAMuf,mBAAoBd,UAPhJ,SAACR,GAC3Bje,EAAMwf,mBAAmBvB,MAOvB,qBAAK3b,UAAU,oBAAoBL,MAAO,CAACE,OAAO,oBAAlD,SAIiC,MAA/BnC,EAAM8S,UAAU1B,YAChB,qBAAK9O,UAAU,yDAAf,SACE,sBAAKL,MAAO,CAACqK,UAAU,SAAU5J,MAAM,UAAWL,UAAU,OAA5D,UAAoE,8BAAK,mBAAGod,MAAM,qBAAqBxd,MAAO,CAAC2H,SAAS,aAAoB,qBAAK3H,MAAO,CAAC2H,SAAS,QAAtB,4EAI1H,IAAlB5J,EAAM8U,QACN,qBAAKxS,UAAU,yDAAf,SACE,qBAAKA,UAAU,8BAA8BiU,KAAK,SAAlD,SACE,sBAAMjU,UAAU,UAAhB,4BAKiC,IAAnCtC,EAAMuf,mBAAmBvY,OACzBhH,EAAMuf,mBAAmBtY,KAAK,SAAAkY,GAC5B,OACE,cAAC,GAAD,CAA+C3S,KAAM2S,GAAjCA,EAAUhF,oBAIlC,qBAAK7X,UAAU,yDAAf,SACE,sBAAKL,MAAO,CAACqK,UAAU,SAAU5J,MAAM,UAAWL,UAAU,OAA5D,UAAoE,8BAAK,mBAAGod,MAAM,oBAAoBxd,MAAO,CAAC2H,SAAS,aAAoB,qBAAK3H,MAAO,CAAC2H,SAAS,QAAtB,+FC9CzJ,SAAS8V,GAAqB1f,GAM5B,OACE,sBAA6BsC,UAAU,gEAAgEL,MAAO,CAACE,OAAO,OAAQ0H,WAAW,QAAzI,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,OAAnB,SAA4B5F,EAAMwM,KAAKgF,SACvC,cAAC6L,GAAA,EAAD,CAAgBC,UAAU,QACtBC,QAAS,cAACC,GAAA,EAAD,UAAUxd,EAAMwM,KAAK6N,WADlC,SAEE,qBAAKpY,MAAO,CAAC2D,MAAM,MAAO6X,WAAY,SAAS9K,SAAS,SAAU+K,aAAa,YAA/E,SAA6F1d,EAAMwM,KAAK6N,aAE1G,sBAAK/X,UAAU,SAASL,MAAO,CAAC2D,MAAM,OAAtC,UACE,qBAAK3D,MAAO,CAAC2D,MAAM,MAAOxD,YAAY,OAAtC,SACE,uBAAOud,IAAK,EAAGve,KAAK,SAAS6D,KAAMjF,EAAMwM,KAAKgF,OAAQvR,MAAOD,EAAM4f,YAAY5f,EAAMwM,KAAKgF,SAAW,EAAGvL,SAb3F,SAACnC,GACpB9D,EAAM6f,iBAAiB/b,EAAO9D,EAAM4f,cAYkGtd,UAAU,mBAE5I,qBAAKL,MAAO,CAAC2D,MAAM,OAAnB,SAA4B5F,EAAMwM,KAAKsT,cAEzC,qBAAK7d,MAAO,CAAC2D,MAAM,OAAnB,SAA2B,wBAAQtD,UAAU,yBAAyBQ,QAAS,WAAO9C,EAAM6d,QAAQ7d,EAAMwM,KAAMxM,EAAM4f,YAAY5f,EAAMwM,KAAKgF,QAASxR,EAAM4f,cAAjI,8BAZnB5f,EAAMwM,KAAKgF,QAiBV5R,WAAMqN,KAAKyS,ICqKXK,OA3Lf,SAAgC/f,GAAQ,IAAD,EAED6E,mBAAS,IAFR,mBAE9BkZ,EAF8B,KAElBC,EAFkB,OAGDnZ,mBAAS,IAHR,mBAG9BsZ,EAH8B,KAGlBC,EAHkB,OAIDvZ,mBAAS,UAJR,mBAI9BwZ,EAJ8B,KAIlBC,EAJkB,OAMCzZ,mBAAS,IANV,mBAM9B+a,EAN8B,KAMjBI,EANiB,OAOanb,mBAAS,IAPtB,mBAO9BoZ,EAP8B,KAOXC,EAPW,KAa/B2B,EAAmBjG,uBAAY,SAACxR,EAAGwX,GACvCI,EAAe,2BACVJ,GADS,kBAEXxX,EAAEpD,OAAOC,KAAMmD,EAAEpD,OAAO/E,WAE1B,IAEH2G,qBAAU,YACU,IAAf5G,EAAMmD,OACP+a,EAAqBle,EAAMue,UAC3ByB,EAAe,IACfhC,EAAc,IACdI,EAAcpe,EAAMwe,mBAEtB,CAACxe,IAEH,IAAMye,EAAY7E,uBAAY,SAAC8E,GAC7B1e,EAAMye,UAAUC,GAChB1e,EAAMqD,gBACL,CAACrD,IAGE6d,EAAUjE,uBAAY,SAACpN,GAAmC,IAA7ByT,EAA4B,uDAAnB,EAAGL,EAAgB,uCAC1DK,GAAW,IACZA,EAAW,GAEb/B,GAAqB,SAACS,GAEpB,GADgBA,EAAUhJ,WAAU,SAACiJ,GAAD,OAASA,EAAIpN,SAAWhF,EAAKgF,WACnD,EAEZ,OADAvN,MAAM,4DACC0a,EAEP,IAAME,EAAO,2BACRrS,GADQ,IAEXyT,SAASA,EACT7O,YAAYpR,EAAM8S,UAAU1B,cAExB6N,EAAWN,EAAUvJ,OAAOyJ,GAKlC,OAJAmB,EAAe,2BACVJ,GADS,kBAEXpT,EAAKgF,OAAU,KAEXyN,OAIV,CAACjf,EAAM8S,YAEJ9P,EAAa4W,uBAAY,SAACpN,GAC9B0R,GAAqB,SAAAS,GAEnB,OADiBA,EAAU9K,QAAO,SAAAiL,GAAQ,OAAIA,EAAStN,QAAUhF,EAAKgF,eAGvE,IAEGuN,EAAanF,uBAAY,SAAC9V,GAC9Bwa,EAAcxa,EAAMkB,OAAO/E,SAC1B,IAEG+e,EAASpF,uBAAY,SAACoF,EAAQX,GAClC,IAAIY,EAAW,GACfD,EAASA,EAAOE,cAChBd,GAAc,WAMZ,MALkB,WAAfC,EACDY,EAAWjf,EAAMwe,eAAe3K,QAAO,SAAAqM,GAAI,OAAqD,IAAhDA,EAAK1O,OAAO0N,cAAe9H,QAAQ4H,MAC5D,aAAfX,IACRY,EAAWjf,EAAMwe,eAAe3K,QAAO,SAAAqM,GAAI,OAAuD,IAAlDA,EAAK7F,SAAS6E,cAAe9H,QAAQ4H,OAEhFC,OAGT,CAACjf,EAAMwe,iBAEHhH,EAAc,SAAC,GAAyB,IAAxBtQ,EAAuB,EAAvBA,MAAOuQ,EAAgB,EAAhBA,IAAKxV,EAAW,EAAXA,MAChC,OACE,qBAAeA,MAAOA,EAAtB,SACE,cAAC,GAAD,CAAuBuK,KAAM2R,EAAWjX,GAAQ2W,QAASA,EAAS+B,YAAaA,EAAaC,iBAAkBA,KADtGpI,IAOd,OACE,eAACvU,EAAA,EAAD,CAAOoT,WAAW,EAAOnT,KAAMnD,EAAMmD,KAAMC,OAAQpD,EAAMqD,YAAa8S,KAAK,KAAKiJ,UAAQ,EAAxF,UACE,cAAClc,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAACtB,MAAO,CAACC,gBAAgB,WAAlD,SACE,cAACgB,EAAA,EAAMM,MAAP,CAAavB,MAAO,CAACS,MAAM,WAA3B,mCAEF,eAACQ,EAAA,EAAMS,KAAP,WAEE,qBAAKrB,UAAU,4DAAf,SACE,sBAAKA,UAAU,SAAf,UACE,yBAAQA,UAAU,gBAAgBL,MAAO,CAAC2D,MAAM,SAAUK,SAAU8Y,EAApE,UACE,wBAAQ9e,MAAM,SAASyI,SAAwB,WAAd2V,EAAjC,sCACA,wBAAQpe,MAAM,WAAWyI,SAAwB,aAAd2V,EAAnC,mCAEF,uBAAOjd,KAAK,OAAO6E,SAnGJ,SAACnC,GACxBka,EAAcla,EAAMkB,OAAO/E,UAmGnB,qBAAKqC,UAAU,qBAAf,SACE,wBAAQA,UAAU,mCAAmClB,KAAK,SAAS0B,QAAU,kBAAMkc,EAAOjB,EAAYM,IAAtG,iCAIN,sBAAKpc,MAAO,CAACE,OAAO,SAAUG,UAAU,SAAxC,UACE,sBAAKA,UAAU,YAAYL,MAAO,CAAC2D,MAAM,SAAzC,UACE,sBAAKtD,UAAU,wCAAwCL,MAAO,CAACE,OAAO,OAAQO,MAAM,UAAWmH,WAAW,QAA1G,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,gCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,YAErB,qBAAKtD,UAAU,uBAAuBL,MAAO,CAACE,OAAO,SAArD,SACsB,MAArB8b,GACDA,EAAkBhX,KAAK,SAACuF,EAAMtF,GAC5B,OACE,sBAAuB5E,UAAU,gEAAgEL,MAAO,CAACE,OAAO,OAAQ0H,WAAW,QAAnI,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,OAAnB,SAA4B4G,EAAKgF,SACjC,cAAC6L,GAAA,EAAD,CAAgBC,UAAU,QACtBC,QAAS,cAACC,GAAA,EAAD,UAAUhR,EAAK6N,WAD5B,SAEE,qBAAKpY,MAAO,CAAC2D,MAAM,MAAO6X,WAAY,SAAS9K,SAAS,SAAU+K,aAAa,YAA/E,SAA6FlR,EAAK6N,aAEpG,sBAAKpY,MAAO,CAAC2D,MAAM,OAAnB,UAA4B4G,EAAKyT,SAAjC,IAA4CzT,EAAKsT,YACjD,qBAAK7d,MAAO,CAAC2D,MAAM,OAAnB,SAA2B,wBAAQtD,UAAU,wBAAwBQ,QAAS,WAAOE,EAAWwJ,IAArE,8BAPnBA,EAAKgF,gBAarB,qBAAKlP,UAAU,yDAAf,SACE,mBAAGA,UAAU,0BAA0BL,MAAO,CAAC2H,SAAS,YAG1D,sBAAKtH,UAAU,YAAYL,MAAO,CAAC2D,MAAM,SAAzC,UACE,sBAAKtD,UAAU,wCAAwCL,MAAO,CAACE,OAAO,OAAQO,MAAM,UAAWmH,WAAW,QAA1G,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,gCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,YAErB,qBAAKtD,UAAU,SAASL,MAAO,CAACE,OAAO,SAAvC,SACyB,IAAtBgc,EAAWnX,OACZ,sBAAK1E,UAAU,yDAAf,UACE,mBAAGA,UAAU,yBADf,iEAIA,cAAC,KAAD,UAEI,YAAsB,IAApBsD,EAAmB,EAAnBA,MAAOzD,EAAY,EAAZA,OACP,OACE,cAAC,KAAD,CAAMyD,MAAOA,EAAOzD,OAAQA,EAC1BmV,SAAU6G,EAAWnX,OACrBuQ,UAAW,GACXC,YAAaA,EACbE,iBAAkB,kBAWpC,eAACxU,EAAA,EAAMW,OAAP,WACE,cAAClB,EAAA,EAAD,CAAQE,QAAQ,YAAYsT,KAAK,KAAKrT,QAAS9C,EAAMqD,YAArD,0BAGA,cAACV,EAAA,EAAD,CAAQE,QAAQ,kBAAkBsT,KAAK,KAAKrT,QAAS,WAAQ2b,EAAUR,IAAvE,8CCrKOkC,OAjBf,SAAmBngB,GAEjB,OACE,mCACA,sBAAKgN,SAAS,KAAKlK,QAAS,SAACgB,GAAY9D,EAAM8C,SAAQ9C,EAAM8C,QAAQ9C,EAAMwM,OAAUlK,UAAW,0DAA2DL,MAAO,CAAE0W,UAAW,kCAAkCtM,aAAa,MAAMzC,SAAU,QAA9O,UACI,qBAAKtH,UAAW,kBAAhB,SAAoCtC,EAAMwM,KAAKgF,SAC/C,cAAC6L,GAAA,EAAD,CAAgBC,UAAU,QACZC,QAAS,cAACC,GAAA,EAAD,UAAUxd,EAAMwM,KAAK6N,WAD5C,SAEE,qBAAK/X,UAAW,8BAA+BL,MAAO,CAACwb,WAAW,SAAS9K,SAAS,SAAU+K,aAAa,YAA3G,SAAyH1d,EAAMwM,KAAK6N,aAEtI,qBAAK/X,UAAW,8BAA+BL,MAAO,CAACwb,WAAW,SAAS9K,SAAS,SAAU+K,aAAa,YAA3G,SAAyH1d,EAAMwM,KAAK4T,WACpI,sBAAK9d,UAAW,8BAA+BL,MAAO,CAACwb,WAAW,SAAS9K,SAAS,SAAU+K,aAAa,YAA3G,UAAyH1d,EAAMwM,KAAKyT,SAApI,IAA+IjgB,EAAMwM,KAAKsT,kBCkDnJO,OAxDf,SAAkBrgB,GAAQ,IAAD,EAEC6E,oBAAS,GAFV,mBAEhB1B,EAFgB,KAEVkD,EAFU,KAcvB,OACE,qCACA,cAAC,GAAD,CAAc+G,YAAY,kCAASD,WAAW,iBAAiBzK,MAAM,UAAUwa,QAAQ,oBAAoBD,QAAkC,8BAAzBjd,EAAM8S,UAAUxB,OAZnH,kBAAMjL,GAAQ,IAGpB,WACXpC,MAAM,wFASN,cAAC,GAAD,CAAmBd,KAAMA,EAAM2P,UAAW9S,EAAM8S,UAAWzP,YAdzC,kBAAMgD,GAAQ,IAcqDmY,eAAgBxe,EAAMsgB,YAAa/B,SAAUve,EAAMugB,eAAgB9B,UANnI,SAACR,GACtBje,EAAMwgB,eAAevC,MAMrB,qBAAK3b,UAAU,oBAAoBL,MAAO,CAACE,OAAO,oBAAlD,SAEmC,MAA/BnC,EAAM8S,UAAU1B,YAChB,qBAAK9O,UAAU,yDAAf,SACE,sBAAKL,MAAO,CAACqK,UAAU,SAAU5J,MAAM,UAAWL,UAAU,OAA5D,UAAoE,8BAAK,mBAAGod,MAAM,qBAAqBxd,MAAO,CAAC2H,SAAS,aAAoB,qBAAK3H,MAAO,CAAC2H,SAAS,QAAtB,4EAI1H,IAAlB5J,EAAM8U,QACN,qBAAKxS,UAAU,yDAAf,SACE,qBAAKA,UAAU,8BAA8BiU,KAAK,SAAlD,SACE,sBAAMjU,UAAU,UAAhB,4BAK8B,IAAhCtC,EAAMugB,eAAevZ,OAEE,MAAvBhH,EAAMugB,gBACNvgB,EAAMugB,eAAetZ,KAAK,SAAAiZ,GACxB,OACE,cAAC,GAAD,CAA6B1T,KAAM0T,GAAnBA,EAAK1O,WAIzB,qBAAKlP,UAAU,yDAAf,SACE,sBAAKL,MAAO,CAACqK,UAAU,SAAU5J,MAAM,UAAWL,UAAU,OAA5D,UAAoE,8BAAK,mBAAGod,MAAM,oBAAoBxd,MAAO,CAAC2H,SAAS,aAAoB,qBAAK3H,MAAO,CAAC2H,SAAS,QAAtB,+F,UCtB1I6W,OA3Bf,SAAuBzgB,GAErB,OACE,mCAQA,qBAAKgN,SAAS,KAAKlK,QAAS,SAACgB,GAAY9D,EAAM8C,SAAQ9C,EAAM8C,QAAQ9C,EAAMwM,OACvElK,UAAW,0DAA2DL,MAAO,CAAEkb,OAAO,UAAWxE,UAAW,kCAAkCtM,aAAa,MAAMzC,SAAU,QAD/K,SAEC5J,EAAMyM,SAASxF,KAAI,SAACyZ,EAAKxZ,GACxB,OACE,sBAAkB5E,UAAmB,IAAR4E,EAAU,6BAA6B,wCAApE,UACGlH,EAAMwM,KAAKkU,GACW,8BAAtB1gB,EAAMwM,KAAK8E,QAAsBpK,IAAUlH,EAAMyM,SAASzF,OAAS,EAAI,cAAC2Z,GAAA,EAAD,CAAO9d,QAAQ,UAAUP,UAAU,OAAnC,iBAAwD,OAFxH4E,WCqCH0Z,OAnDf,SAA0B5gB,GAExB,IAAM6gB,EAAkBjH,uBAAY,SAAC9G,GACnC9S,EAAM6gB,gBAAgB/N,KACrB,CAAC9S,IAIJ,OAFA4G,qBAAU,cACP,CAAC5G,EAAM8S,YAER,qCACE,sBAAKxQ,UAAU,kBAAkBL,MAAO,CAACE,OAAO,QAAhD,UAAyD,qBAAKG,UAAU,4BAA4BL,MAAO,CAAEC,gBAAgB,UAAW0D,MAAM,OAAQlD,MAAM,WAAnG,SAA+G,mBAAGJ,UAAU,4BAAkC,qBAAKA,UAAU,4BAAf,0CACvN,sBAAKA,UAAU,wDAAwDL,MAAO,CAACE,OAAO,OAAQyD,MAAM,QAApG,2DACc5F,EAAM8S,UAAU1B,YAD9B,KAC6CpR,EAAM8S,UAAUzB,cAD7D,OAGmC,MAAnCrR,EAAMgT,gBAAgB1F,UACtB,mCACE,qBAAKhL,UAAU,oBAAoBL,MAAO,CAACE,OAAO,sBAAlD,UAEsB,IAAlBnC,EAAM8U,QACN,qBAAKxS,UAAU,yDAAf,SACE,qBAAKA,UAAU,8BAA8BiU,KAAK,SAAlD,SACE,sBAAMjU,UAAU,UAAhB,4BAK0B,MAA3BtC,EAAM8gB,mBAAgE,IAAnC9gB,EAAM8gB,kBAAkB9Z,OAC5D,qBAAK1E,UAAU,gFAAgFL,MAAO,CAACE,OAAO,QAA9G,SACE,+BAAM,sBAAKF,MAAO,CAACqK,UAAU,SAAU5J,MAAM,WAAvC,UAAmD,8BAAK,mBAAG+c,MAAM,oBAAoBxd,MAAO,CAAC2H,SAAS,aAAoB,qBAAK3H,MAAO,CAAC2H,SAAS,QAAtB,mHAGlI5J,EAAM8gB,kBAAkB7Z,KAAK,SAAA6L,GAE3B,OACE,cAAC,GAAD,CAA2CtG,KAAI,2BAAMsG,GAAN,IAAiBzB,cAAe/H,IAAOwJ,EAAUzB,eAAe9H,OAAO,gBAAgBkD,SAAU,CAAC,cAAe,gBAAiB,UAAW3J,QAAS+d,GAAjL/N,EAAU1B,oBAQ1C,qBAAK9O,UAAU,gFAAgFL,MAAO,CAACE,OAAO,sBAA9G,SACE,+BAAM,sBAAKF,MAAO,CAACqK,UAAU,SAAU5J,MAAM,UAAWL,UAAU,OAA5D,UAAoE,8BAAK,mBAAGod,MAAM,iBAAiBxd,MAAO,CAAC2H,SAAS,aAAoB,qBAAK3H,MAAO,CAAC2H,SAAS,QAAtB,gF,4DC3C/I,SAASmX,GAAiBzT,GAE7B,OADehN,IAAMiE,IAAI,wBAAwB+I,GAK9C,SAAS0T,GAAmBC,GAEjC,OADe3gB,IAAM8D,KAAK,+BAAgC6c,GA+CrD,SAASC,GAAY9P,EAAae,GAEvC,OADe7R,IAAMiE,IAAI,uBAAwB,CAACyJ,OAAQ,CAACoD,cAAae,gBChC3DgP,OAxBf,SAAwBnhB,GACtB,OACE,eAACkD,EAAA,EAAD,CAAOoT,WAAW,EAAOnT,KAAMnD,EAAMmD,KAAMC,OAAQpD,EAAMohB,cAAejL,KAAK,KAAKiJ,UAAQ,EAA1F,UACE,cAAClc,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAACtB,MAAO,CAACC,gBAAgB,WAAlD,SACE,cAACgB,EAAA,EAAMM,MAAP,CAAavB,MAAO,CAACS,MAAM,WAA3B,yCAEF,cAACQ,EAAA,EAAMS,KAAP,UAC8B,MAA3B3D,EAAMqhB,YAAYC,MACnB,mBAAGC,KAAI,8DAAyDvhB,EAAMqhB,YAAYC,OAAlF,SACE,qBAAK1b,MAAO,OAAQzD,OAAQ,OAAQoG,IAAI,OAAQ5C,IAAG,8DAAyD3F,EAAMqhB,YAAYC,WAGhI,OAGF,cAACpe,EAAA,EAAMW,OAAP,UACE,cAAClB,EAAA,EAAD,CAAQE,QAAQ,YAAYsT,KAAK,KAAKrT,QAAS9C,EAAMohB,cAArD,gCC2FOI,OAxGf,SAAwBxhB,GAAQ,IAAD,EAEC6E,mBAAS,IAFV,mBAEtB4c,EAFsB,KAEbC,EAFa,OAGS7c,mBAAS,IAHlB,mBAGtBwc,EAHsB,KAGTM,EAHS,OAIC9c,oBAAS,GAJV,mBAItB+c,EAJsB,KAIbC,EAJa,OAKChd,oBAAS,GALV,mBAKtBiQ,EALsB,KAKbC,EALa,KAO7BnO,qBAAU,WACR,IAAMkN,EAAO9T,EAAM8hB,UAAUC,MAAM,GACjB,MAAfjO,EAAK7F,QAAkC,6BAAhB6F,EAAK7F,QAC7BzI,EAAKsO,EAAK1C,YAAa0C,EAAK3B,cAE9B,CAACnS,EAAM8hB,YAET,IAAMtc,EAAI,uCAAG,WAAM4L,EAAae,GAAnB,eAAAhN,EAAA,sEAET4P,GAAW,GAFF,SAGcmM,GAAY9P,EAAae,GAHvC,OAGHzL,EAHG,OAITgb,EAAWhb,EAASC,MAJX,gDAMThC,QAAQC,IAAR,MANS,yBAQTmQ,GAAW,GARF,4EAAH,wDAuBV,OACE,qCACE,cAACiN,GAAA,EAAD,CAAW1f,UAAU,OAArB,SACE,eAAC2f,GAAA,EAAD,WACE,cAACD,GAAA,EAAUE,OAAX,CAAkBhc,GAAIic,KAAOtf,QAAQ,OAAOP,UAAU,OAAO8f,SAAS,IAAtE,SACA,uBAAMngB,MAAO,CAAC4H,WAAW,QAAzB,UACC7J,EAAM8hB,UAAU5P,UADjB,gBAGA,cAAC8P,GAAA,EAAUK,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAACH,GAAA,EAAKte,KAAN,UACG3D,EAAM8hB,UAAUC,MAAM9a,KAAI,SAAA6M,GACzB,OACE,cAACkO,GAAA,EAAD,CAAiC1f,UAAU,OAAOggB,iBAAkB,IAApE,SACE,eAACL,GAAA,EAAD,CAAMpW,OAAO,YAAb,UACE,cAACoW,GAAA,EAAK3e,OAAN,UACE,cAAC0e,GAAA,EAAUE,OAAX,CAAkBK,OAAK,EAACrc,GAAIvD,IAAQwT,KAAK,KAAKtT,QAAQ,gBAAgBuf,SAAS,IAA/E,SACE,uBAAMngB,MAAO,CAAC2H,SAAS,OAAQC,WAAW,OAAQnH,MAAM,SAAxD,UAAmEoR,EAAKF,aAAxE,aAAuI,6BAAnC5T,EAAM8hB,UAAUC,MAAM,GAAG9T,OAAmB,cAAC0S,GAAA,EAAD,CAAO9d,QAAQ,UAAf,sCAAwC,cAAC8d,GAAA,EAAD,CAAO9d,QAAQ,SAAf,uCAI5L,cAACmf,GAAA,EAAUK,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAACH,GAAA,EAAKte,KAAN,UACoC,6BAAnC3D,EAAM8hB,UAAUC,MAAM,GAAG9T,OACxB,cAACjG,EAAA,EAAD,CAAU8D,SAAU,KAAMC,SAAU,sBAAMzJ,UAAU,uCAAwC0J,SAAU,sBAAM1J,UAAU,uCAAtH,UAEa,IAAXwS,EACA,qBAAKxS,UAAU,yDAAf,SACE,qBAAKA,UAAU,8BAA8BiU,KAAK,SAAlD,SACE,sBAAMjU,UAAU,UAAhB,4BAIO,MAAXmf,GACAA,EAAQxa,KAAI,SAACub,GACX,OACE,cAACxa,EAAA,EAASK,KAAV,UACE,qBACE/F,UAAU,UACVqD,IAAG,8DAAyD6c,EAAIlB,OAChE1b,MAAM,OACNzD,OAAO,QACPW,QAAS,YAnDtB,SAAC0f,GACpBb,EAAea,GACfX,GAAW,GAiDsCY,CAAaD,IAC9BvgB,MAAO,CAACkb,OAAO,WACf5U,IAAI,UARYia,EAAIlB,YAe9B,0CAtCQxN,EAAK3B,wBAkDjC,cAAC,GAAD,CAAgBhP,KAAMye,EAASR,cAnEb,WACpBO,EAAe,IACfE,GAAW,IAiEoDR,YAAaA,Q,UC9DjEqB,OAvCf,SAAc1iB,GACZ,OACE,cAACgiB,GAAA,EAAD,CAAW1f,UAAU,OAAOggB,iBAAkB,IAA9C,SACA,eAACL,GAAA,EAAD,CAAMpW,OAAO,YAAb,UACE,cAACoW,GAAA,EAAK3e,OAAN,UACE,cAAC0e,GAAA,EAAUE,OAAX,CAAkBK,OAAK,EAACrc,GAAIvD,IAAQwT,KAAK,KAAKtT,QAAQ,gBAAgBuf,SAAS,IAA/E,SACE,uBAAMngB,MAAO,CAAC2H,SAAS,OAAQC,WAAW,OAAQnH,MAAM,SAAxD,UAAmE1C,EAAM8T,KAAK3B,WAA9E,YAAuGnS,EAAM8T,KAAK6O,SAAlH,WACc,sBAAM1gB,MAAO,CAACS,MAAiC,SAA3B1C,EAAM8T,KAAK8O,cAAwB,SAAW,MAAOxgB,YAAY,OAArF,SAA8FpC,EAAM8T,KAAK8O,gBAC/F,MAArB5iB,EAAM8T,KAAK7F,QAAuC,KAArBjO,EAAM8T,KAAK7F,OAAgB,cAAC0S,GAAA,EAAD,CAAO9d,QAAQ,UAAf,sCAAwC,cAAC8d,GAAA,EAAD,CAAO9d,QAAQ,SAAf,uCAIvG,cAACmf,GAAA,EAAUK,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAACH,GAAA,EAAKte,KAAN,UACyB,MAArB3D,EAAM8T,KAAK7F,QAAuC,KAArBjO,EAAM8T,KAAK7F,OACxC,eAAC4U,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACzgB,UAAU,6BAA/B,UACE,0BACA,kCACE,+BACE,oDACA,0DACA,uDAEF,+BACE,6BAAKtC,EAAM8T,KAAK6L,MAChB,qBAAIrd,UAAYtC,EAAM8T,KAAK7F,OAASjO,EAAM8T,KAAK6L,KAAO3f,EAAM8T,KAAK7F,OAASjO,EAAM8T,KAAKkP,IAAO,eAAiB,gBAA7G,UAAoJ,MAArBhjB,EAAM8T,KAAK7F,OAAiB,EAAIjO,EAAM8T,KAAK7F,OAA1K,WAA8LjO,EAAM8T,KAAKmP,YACzM,6BAAKjjB,EAAM8T,KAAKkP,eAKtB,4CCTGE,OAtBf,SAAqBljB,GACnB,OACE,cAACgiB,GAAA,EAAD,CAAW1f,UAAU,OAArB,SACE,eAAC2f,GAAA,EAAD,WACE,cAACD,GAAA,EAAUE,OAAX,CAAkBhc,GAAIic,KAAOtf,QAAQ,OAAOP,UAAU,OAAO8f,SAAS,IAAtE,SACA,uBAAMngB,MAAO,CAAC4H,WAAW,QAAzB,UACC7J,EAAM8hB,UAAU7P,UADjB,WACwCjS,EAAM8hB,UAAU5P,eAExD,cAAC8P,GAAA,EAAUK,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAACH,GAAA,EAAKte,KAAN,UACG3D,EAAM8hB,UAAUC,MAAM9a,KAAI,SAAA6M,GACzB,OACE,cAAC,GAAD,CAA4BA,KAAMA,GAAvBA,EAAK3B,yB,oBCZhC,SAASgR,GAAwBnjB,GAC/B,OACE,sBAAgCsC,UAAU,gEAAgEL,MAAO,CAACE,OAAO,OAAQ0H,WAAW,QAA5I,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,OAAnB,SAA4B5F,EAAMwM,KAAKyF,YACvC,cAACoL,GAAA,EAAD,CAAgBC,UAAU,QACtBC,QAAS,cAACC,GAAA,EAAD,UAAUxd,EAAMwM,KAAK0F,YADlC,SAEE,qBAAKjQ,MAAO,CAAC2D,MAAM,MAAO6X,WAAY,SAAS9K,SAAS,SAAU+K,aAAa,YAA/E,SAA6F1d,EAAMwM,KAAK0F,cAE1G,qBAAKjQ,MAAO,CAAC2D,MAAM,OAAnB,SAA2B,wBAAQtD,UAAU,yBAAyBQ,QAAS,WAAO9C,EAAMojB,WAAWpjB,EAAMwM,OAAlF,8BANnBxM,EAAMwM,KAAKyF,WAWVrS,WAAMqN,KAAKkW,ICb1B,SAASE,GAAqBrjB,GAC5B,OACE,sBAAiCsC,UAAU,gEAAgEL,MAAO,CAACE,OAAO,OAAQ0H,WAAW,QAA7I,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,OAAnB,SAA4B5F,EAAMwM,KAAKyF,YACvC,cAACoL,GAAA,EAAD,CAAgBC,UAAU,QACtBC,QAAS,cAACC,GAAA,EAAD,UAAUxd,EAAMwM,KAAK0F,YADlC,SAEE,qBAAKjQ,MAAO,CAAC2D,MAAM,MAAO6X,WAAY,SAAS9K,SAAS,SAAU+K,aAAa,YAA/E,SAA6F1d,EAAMwM,KAAK0F,cAE1G,qBAAKjQ,MAAO,CAAC2D,MAAM,OAAnB,SAA4B5F,EAAMwM,KAAK2F,aACvC,cAACkL,GAAA,EAAD,CAAgBC,UAAU,QACtBC,QAAS,cAACC,GAAA,EAAD,UAAUxd,EAAMwM,KAAKoH,eADlC,SAEE,qBAAK3R,MAAO,CAAC2D,MAAM,MAAO6X,WAAY,SAAS9K,SAAS,SAAU+K,aAAa,YAA/E,SAA6F1d,EAAMwM,KAAKoH,iBAE1G,qBAAK3R,MAAO,CAAC2D,MAAM,OAAnB,SAA2B,wBAAQtD,UAAU,yBAAyBQ,QAAS,WAAO9C,EAAM6d,QAAQ7d,EAAMwM,OAA/E,8BAXnBxM,EAAMwM,KAAK2F,YAgBVvS,WAAMqN,KAAKoW,ICmRXC,OAlSf,SAAgCtjB,GAAQ,IAAD,EAED6E,mBAAS,IAFR,mBAE9BkZ,EAF8B,KAElBC,EAFkB,OAGDnZ,mBAAS,aAHR,mBAG9BwZ,EAH8B,KAGlBC,EAHkB,OAILzZ,mBAAS,QAJJ,mBAI9Bud,EAJ8B,KAIpBmB,EAJoB,OAMa1e,mBAAS,IANtB,mBAM9BoZ,EAN8B,KAMXC,EANW,OAODrZ,mBAAS,IAPR,mBAO9B2e,EAP8B,KAOlBC,EAPkB,OAQW5e,mBAAS,IARpB,mBAQ9B6e,EAR8B,KAQZC,EARY,OASD9e,mBAAS,IATR,mBAS9BsZ,EAT8B,KASlBC,EATkB,KAerCxX,qBAAU,YACU,IAAf5G,EAAMmD,OACP+a,EAAqBle,EAAMue,UAC3BP,EAAc,IACdI,EAAcpe,EAAMwe,gBACpBmF,EAAoBH,MAEtB,CAACxjB,EAAOwjB,IAEV5c,qBAAU,WACR,IAAMgd,EAAY,GAClB5jB,EAAMwe,eAAeqF,QAAO,SAACC,EAAIC,GAW/B,OAVID,EAAGC,EAAE9R,WAQP6R,EAAGC,EAAE9R,WAAW8P,MAAM1X,KAAK0Z,IAP3BD,EAAGC,EAAE9R,WAAa,GAClB6R,EAAGC,EAAE9R,WAAWA,UAAY8R,EAAE9R,UAC9B6R,EAAGC,EAAE9R,WAAWC,UAAY6R,EAAE7R,UAC9B4R,EAAGC,EAAE9R,WAAW8P,MAAQ,GACxB+B,EAAGC,EAAE9R,WAAW8P,MAAM1X,KAAK0Z,GAC3BH,EAAUvZ,KAAKyZ,EAAGC,EAAE9R,aAIf6R,IACN,IACHL,EAAcG,GACdD,EAAoBC,KACnB,CAAC5jB,EAAMwe,iBAEV,IAAMC,EAAY7E,uBAAY,SAAC8E,GAC7B1e,EAAMye,UAAUC,GAChB1e,EAAMqD,gBACN,CAACrD,IAEG6d,EAAUjE,uBAAY,SAACpN,GACzB0R,GAAqB,SAACS,GAEpB,OADgBA,EAAUhJ,WAAU,SAACiJ,GAAD,OAASA,EAAIzM,aAAe3F,EAAK2F,eACvD,GACZlO,MAAM,4DACC0a,GAEUA,EAAUvJ,OAAO5I,QAKxC,IAEI4W,EAAaxJ,uBAAY,SAACpN,GAC9B0R,GAAqB,SAACS,GACpB,IAAIM,EAAWN,EAAU9K,QAAO,SAAAiL,GAAQ,OAAIA,EAAS7M,YAAczF,EAAKyF,aAExE,OADAgN,EAAWA,EAAS7J,OAAO5I,EAAKuV,YAGlC,IAEI/e,EAAa4W,uBAAY,SAACpN,GAC9B0R,GAAqB,SAACS,GAEpB,OADiBA,EAAU9K,QAAO,SAAAiL,GAAQ,OAAIA,EAAS3M,aAAe3F,EAAK2F,mBAG5E,IAEG6M,EAASpF,uBAAY,SAACoF,EAAQX,EAAY+D,GAC9C,IAAI4B,EAAW,GACfhF,EAASA,EAAOE,cACA,SAAbkD,EAEDhE,GAAc,WAUZ,MATkB,WAAfC,EACD2F,EAAWhkB,EAAMwe,eAAe3K,QAAO,SAAAC,GAAI,OAAyD,IAApDA,EAAK3B,WAAW+M,cAAe9H,QAAQ4H,MAC/D,aAAfX,EACT2F,EAAWhkB,EAAMwe,eAAe3K,QAAO,SAAAC,GAAI,OAA2D,IAAtDA,EAAKF,aAAasL,cAAe9H,QAAQ4H,MACjE,cAAfX,EACT2F,EAAWhkB,EAAMwe,eAAe3K,QAAO,SAAAC,GAAI,OAAwD,IAAnDA,EAAK7B,UAAUiN,cAAe9H,QAAQ4H,MAC9D,cAAfX,IACT2F,EAAWhkB,EAAMwe,eAAe3K,QAAO,SAAAC,GAAI,OAAwD,IAAnDA,EAAK5B,UAAUgN,cAAe9H,QAAQ4H,OAEjFgF,KAEY,YAAb5B,GAERuB,GAAoB,WAMlB,MALmB,cAAftF,EACF2F,EAAWR,EAAW3P,QAAO,SAAAC,GAAI,OAAwD,IAAnDA,EAAK7B,UAAUiN,cAAe9H,QAAQ4H,MACpD,cAAfX,IACT2F,EAAWR,EAAW3P,QAAO,SAAAC,GAAI,OAAwD,IAAnDA,EAAK5B,UAAUgN,cAAe9H,QAAQ4H,OAEvEgF,OAIV,CAAChkB,EAAMwe,eAAgBgF,IAEpBzE,EAAanF,uBAAY,SAAC9V,GAC9Bwa,EAAcxa,EAAMkB,OAAO/E,SAC1B,IAEGgkB,EAAYrK,uBAAY,SAACnC,GAC7B8L,EAAY9L,GAEZ6G,EAAc,aACdN,EAAc,IAEdI,EAAcpe,EAAMwe,gBACpBmF,EAAoBH,KACnB,CAACxjB,EAAMwe,eAAgBgF,IAEpBhM,EAAc,SAAC,GAAyB,IAAxBtQ,EAAuB,EAAvBA,MAAOuQ,EAAgB,EAAhBA,IAAKxV,EAAW,EAAXA,MAChC,OACE,qBAAeA,MAAOA,EAAtB,SACE,cAAC,GAAD,CAAsBuK,KAAM2R,EAAWjX,GAAQ2W,QAASA,KADhDpG,IAMRyM,EAAqB,SAAC,GAAyB,IAAxBhd,EAAuB,EAAvBA,MAAOuQ,EAAgB,EAAhBA,IAAKxV,EAAW,EAAXA,MACvC,OACE,qBAAeA,MAAOA,EAAtB,SACE,cAAC,GAAD,CAAyBuK,KAAMkX,EAAiBxc,GAAQkc,WAAYA,KAD5D3L,IAMd,OACE,eAACvU,EAAA,EAAD,CAAOoT,WAAW,EAAOnT,KAAMnD,EAAMmD,KAAMC,OAAQpD,EAAMqD,YAAa8S,KAAK,KAAKiJ,UAAQ,EAAxF,UACE,cAAClc,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAACtB,MAAO,CAACC,gBAAgB,WAAlD,SACE,cAACgB,EAAA,EAAMM,MAAP,CAAavB,MAAO,CAACS,MAAM,WAA3B,yCAEF,eAACQ,EAAA,EAAMS,KAAP,WACE,qBAAKrB,UAAU,iEAAf,SACE,sBAAKA,UAAU,SAAf,UACA,yBAAQA,UAAU,gBAAgBL,MAAO,CAAC2D,MAAM,SAAUK,SAAU8Y,EAApE,UACE,wBAAQ9e,MAAM,YAAYyI,SAAwB,cAAd2V,EAApC,sCACA,wBAAQpe,MAAM,YAAYyI,SAAwB,cAAd2V,EAApC,gCACc,YAAb+D,EACC,qCACE,wBAAQniB,MAAM,SAASyI,SAAwB,WAAd2V,EAAjC,sCACA,wBAAQpe,MAAM,WAAWyI,SAAwB,aAAd2V,EAAnC,mCAGF,QAGF,uBAAOjd,KAAK,OAAOnB,MAAO8d,EAAY9X,SAnJvB,SAACnC,GACxBka,EAAcla,EAAMkB,OAAO/E,UAmJnB,qBAAKqC,UAAU,qBAAf,SACE,wBAAQA,UAAU,mCAAmClB,KAAK,SAAS0B,QAAU,kBAAMkc,EAAOjB,EAAYM,EAAY+D,IAAlH,iCAIN,sBAAKngB,MAAO,CAACE,OAAO,SAAUG,UAAU,SAAxC,UACE,sBAAKA,UAAU,YAAYL,MAAO,CAAC2D,MAAM,QAASvD,UAAU,QAA5D,UACE,sBAAKC,UAAU,wCAAwCL,MAAO,CAACE,OAAO,OAAQO,MAAM,UAAWmH,WAAW,QAA1G,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,gCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,gCACA,qBAAK3D,MAAO,CAAC2D,MAAM,YAErB,qBAAKtD,UAAU,uBAAuBL,MAAO,CAACE,OAAO,SAArD,SACsB,MAArB8b,GACDA,EAAkBhX,KAAK,SAACuF,EAAMtF,GAC5B,OACE,sBAA2B5E,UAAU,gEAAgEL,MAAO,CAACE,OAAO,OAAQ0H,WAAW,QAAvI,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,OAAnB,SAA4B4G,EAAKyF,YACjC,cAACoL,GAAA,EAAD,CAAgBC,UAAU,QACtBC,QAAS,cAACC,GAAA,EAAD,UAAUhR,EAAK0F,YAD5B,SAEE,qBAAKjQ,MAAO,CAAC2D,MAAM,MAAO6X,WAAY,SAAS9K,SAAS,SAAU+K,aAAa,YAA/E,SAA6FlR,EAAK0F,cAEpG,qBAAKjQ,MAAO,CAAC2D,MAAM,OAAnB,SAA4B4G,EAAK2F,aACjC,cAACkL,GAAA,EAAD,CAAgBC,UAAU,QACtBC,QAAS,cAACC,GAAA,EAAD,UAAUhR,EAAKoH,eAD5B,SAEE,qBAAK3R,MAAO,CAAC2D,MAAM,MAAO6X,WAAY,SAAS9K,SAAS,SAAU+K,aAAa,YAA/E,SAA6FlR,EAAKoH,iBAEpG,qBAAK3R,MAAO,CAAC2D,MAAM,OAAnB,SAA2B,wBAAQtD,UAAU,wBAAwBQ,QAAS,WAAOE,EAAWwJ,IAArE,8BAXnBA,EAAK2F,oBAkBrB,qBAAK7P,UAAU,yDAAf,SACE,mBAAGA,UAAU,0BAA0BL,MAAO,CAAC2H,SAAS,YAG1D,qBAAKtH,UAAU,YAAYL,MAAO,CAAC2D,MAAM,SAAzC,SACE,qBAAK3D,MAAO,CAACE,OAAO,SAApB,SACE,eAACgiB,GAAA,EAAIC,UAAL,CAAe9B,iBAAkBF,EAAjC,UACE,eAACiC,GAAA,EAAD,CAAKC,MAAI,EAACzhB,QAAQ,OAAOqF,SAAU+b,EAAnC,UACE,cAACI,GAAA,EAAIhc,KAAL,UACE,cAACgc,GAAA,EAAIE,KAAL,CAAUnC,SAAS,OAAnB,yCAEF,cAACiC,GAAA,EAAIhc,KAAL,UACE,cAACgc,GAAA,EAAIE,KAAL,CAAUnC,SAAS,UAAnB,4CAGJ,eAAC+B,GAAA,EAAIK,QAAL,CAAcviB,MAAO,CAACE,OAAO,SAA7B,UACE,eAACgiB,GAAA,EAAIM,KAAL,CAAUrC,SAAU,OAAO9f,UAAU,OAArC,UACA,sBAAKA,UAAU,wCAAwCL,MAAO,CAACE,OAAO,OAAQO,MAAM,UAAWmH,WAAW,QAA1G,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,gCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,gCACA,qBAAK3D,MAAO,CAAC2D,MAAM,YAErB,qBAAKtD,UAAU,SAASL,MAAO,CAACE,OAAO,SAAvC,SACyB,IAAtBgc,EAAWnX,OACV,sBAAK1E,UAAU,yDAAf,UACE,mBAAGA,UAAU,yBADf,iEAIA,cAAC,KAAD,UAEI,YAAsB,IAApBsD,EAAmB,EAAnBA,MAAOzD,EAAY,EAAZA,OACP,OACE,cAAC,KAAD,CAAMyD,MAAOA,EAAOzD,OAAQA,EAC1BmV,SAAU6G,EAAWnX,OACrBuQ,UAAW,GACXC,YAAaA,EACbE,iBAAkB,YAUhC,eAACyM,GAAA,EAAIM,KAAL,CAAUrC,SAAS,UAAU9f,UAAU,OAAvC,UACE,sBAAKA,UAAU,wCAAwCL,MAAO,CAACE,OAAO,OAAQO,MAAM,UAAWmH,WAAW,QAA1G,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,gCACA,qBAAK3D,MAAO,CAAC2D,MAAM,YAErB,qBAAKtD,UAAU,SAASL,MAAO,CAACE,OAAO,SAAvC,SAC6B,IAA5BuhB,EAAiB1c,OAChB,sBAAK1E,UAAU,yDAAf,UACE,mBAAGA,UAAU,yBADf,iEAIA,cAAC,KAAD,UAEI,YAAsB,IAApBsD,EAAmB,EAAnBA,MAAOzD,EAAY,EAAZA,OACP,OACE,cAAC,KAAD,CAAMyD,MAAOA,EAAOzD,OAAQA,EAC1BmV,SAAUoM,EAAiB1c,OAC3BuQ,UAAW,GACXC,YAAa0M,EACbxM,iBAAkB,4BAe5C,eAACxU,EAAA,EAAMW,OAAP,WACE,cAAClB,EAAA,EAAD,CAAQE,QAAQ,YAAYsT,KAAK,KAAKrT,QAAS9C,EAAMqD,YAArD,0BAGA,cAACV,EAAA,EAAD,CAAQE,QAAQ,kBAAkBsT,KAAK,KAAKrT,QAAS,WAAQ2b,EAAUR,IAAvE,8CCnKOyG,OArHf,SAAkB1kB,GAAQ,IAAD,EACC6E,oBAAS,GADV,mBAChB1B,EADgB,KACVkD,EADU,OAIaxB,mBAAS,IAJtB,mBAIhB2e,EAJgB,KAIJC,EAJI,OAMqB5e,oBAAS,GAN9B,mBAMhB8f,EANgB,KAMAC,EANA,KAUjBpL,EAAqBxX,aAAY,SAACN,GAAD,OAAUA,EAAMiP,iBAAiBL,sBAsCxE,OAxBA1J,qBAAU,WACR,IAAMie,EAAQ7kB,EAAM8kB,eAAejB,QAAO,SAACC,EAAIC,GAW7C,OAVID,EAAGC,EAAE9R,aACP6R,EAAGC,EAAE9R,WAAa,GAClB6R,EAAGC,EAAE9R,WAAWA,UAAY8R,EAAE9R,UAC9B6R,EAAGC,EAAE9R,WAAWC,UAAY6R,EAAE7R,UAC9B4R,EAAGC,EAAE9R,WAAW8S,SAAWhB,EAAEgB,SAC7BjB,EAAGC,EAAE9R,WAAW8P,MAAQ,IAGxB+B,EAAGC,EAAE9R,WAAW8P,MAAM1X,KAAK0Z,GAEtBD,IACN,IACHL,EAAcoB,KACb,CAAC7kB,EAAM8kB,iBAEVle,qBAAU,WACRjC,QAAQC,IAAI4U,GACqB,iBAA9BA,EAAmBlI,QApCSsT,GAAkB,KAuChD,CAACpL,IAGF,qCACE,cAAC,GAAD,CAAcpM,YAAY,4BAAQD,WAAW,gBAAgBzK,MAAM,UAAUwa,QAAQ,oBAAoBD,QAAkC,8BAAzBjd,EAAM8S,UAAUxB,OA/CnH,kBAAMjL,GAAQ,IASpB,WACXpC,MAAM,wFAsCJ,cAAC,GAAD,CAAwBd,KAAMA,EAAME,YAjDpB,kBAAMgD,GAAQ,IAiDgCmY,eAAgBxe,EAAMglB,YAAazG,SAAUve,EAAM8kB,eAAgBrG,UA/B9G,SAACR,GACtBje,EAAMilB,eAAehH,MA+BnB,sBAAK3b,UAAU,oBAAoBL,MAAO,CAACE,OAAO,qBAAlD,UAEmC,MAA/BnC,EAAM8S,UAAU1B,YAChB,qBAAK9O,UAAU,yDAAf,SACE,sBAAKL,MAAO,CAACqK,UAAU,SAAU5J,MAAM,UAAWL,UAAU,OAA5D,UAAoE,8BAAK,mBAAGod,MAAM,qBAAqBxd,MAAO,CAAC2H,SAAS,aAAoB,qBAAK3H,MAAO,CAAC2H,SAAS,QAAtB,4EAI1H,IAAlB5J,EAAM8U,QACN,qBAAKxS,UAAU,yDAAf,SACE,qBAAKA,UAAU,8BAA8BiU,KAAK,SAAlD,SACE,sBAAMjU,UAAU,UAAhB,4BAK8B,IAAhCtC,EAAM8kB,eAAe9d,OACrBqM,OAAO6R,OAAO1B,GAAYvc,KAAI,SAAA6a,GAC5B,MACyB,6BAAvBA,EAAUiD,SACV,cAAC,GAAD,CAAwCjD,UAAWA,GAAjCA,EAAU7P,WAE5B,cAAC,GAAD,CAA0C6P,UAAWA,GAAhCA,EAAU7P,cAInC,qBAAK3P,UAAU,yDAAf,SACE,sBAAKL,MAAO,CAACqK,UAAU,SAAU5J,MAAM,UAAWL,UAAU,OAA5D,UAAoE,8BAAK,mBAAGod,MAAM,oBAAoBxd,MAAO,CAAC2H,SAAS,aAAoB,qBAAK3H,MAAO,CAAC2H,SAAS,QAAtB,yFAKnJ,qBAAK3H,MAAO,CAACkjB,SAAU,WAAYC,OAAQ,OAAQC,MAAO,OAAQC,OAAO,QAAzE,SACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKvjB,MAAO,CAAC2D,MAAM,SAAnB,SACE,eAAC6f,GAAA,EAAD,CAAOC,QAvEA,WACjB1lB,EAAM2lB,aAsEgCxiB,KAAMnD,EAAM4lB,UAAWC,MAAO,IAAMC,UAAQ,EAAxE,UACE,eAACL,GAAA,EAAMniB,OAAP,CAAcrB,MAAO,CAACC,gBAAgB,WAAtC,UACE,wBAAQI,UAAU,UAAUL,MAAO,CAACS,MAAM,SAA1C,qBACA,gDAEF,cAAC+iB,GAAA,EAAM9hB,KAAP,CAAY1B,MAAO,CAACC,gBAAgB,SAApC,iDAMR,qBAAKD,MAAO,CAACkjB,SAAU,WAAYC,OAAQ,OAAQC,MAAO,OAAQC,OAAO,OAAzE,SACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKvjB,MAAO,CAAC2D,MAAM,SAAnB,SACE,eAAC6f,GAAA,EAAD,CAAOC,QA7FS,kBAAMd,GAAkB,IA6FHzhB,KAAMwhB,EAAgBkB,MAAO,IAAMC,UAAQ,EAAhF,UACE,cAACL,GAAA,EAAMniB,OAAP,CAAcrB,MAAO,CAACC,gBAAgB,SAAtC,SACE,wBAAQI,UAAU,UAAUL,MAAO,CAACS,MAAM,SAA1C,uBAEF,cAAC+iB,GAAA,EAAM9hB,KAAP,8FC1FDoiB,OArBf,SAAuB/lB,GAMrB,OACA,qCACE,sBAAKsC,UAAU,kBAAkBL,MAAO,CAACE,OAAO,QAAhD,UAAyD,qBAAKG,UAAU,4BAA4BL,MAAO,CAAEC,gBAAgB,UAAW0D,MAAM,OAAQlD,MAAM,WAAnG,SAA+G,mBAAGJ,UAAU,2BAAiC,qBAAKA,UAAU,4BAAf,0CACtN,qBAAKA,UAAU,MAAML,MAAO,CAACE,OAAO,qBAApC,SACE,0BAAUlC,MAAkC,8BAA3BD,EAAM8S,UAAUxB,OACjCtR,EAAMiN,KAEmB,MAAxBjN,EAAM8S,UAAU7F,KAAe,GAAKjN,EAAM8S,UAAU7F,KAAOhH,SAAqC,8BAA3BjG,EAAM8S,UAAUxB,OAAqB,KAX1F,SAACxN,GACpB9D,EAAMgmB,QAAQliB,EAAMkB,OAAO/E,QAUuGgmB,SAAqC,8BAA3BjmB,EAAM8S,UAAUxB,OAAkChP,UAAU,eAAeL,MAAO,CAAC0W,UAAU,kCAAmCtM,aAAa,OAAQlK,OAAO,OAAQ+jB,QAAQ,WC4H7S5L,OAtIf,SAAuBta,GACrB,IAAMyM,EAAW,CAAC,YAAa,cAAe,MAAO,MAAO,cAAe,gBAAiB,eADhE,EAGgB5H,mBAAS,CACnDsJ,YAAY,2BACZE,KAAK,GACLC,KAAK,GACLzG,IAAK,eACLuG,IAAI,IACJxG,YAAa,MATa,mBAGrBue,EAHqB,KAGLC,EAHK,OAWQvhB,mBAAS,IAXjB,mBAWrBkZ,EAXqB,KAWTC,EAXS,OAYUnZ,mBAAS,IAZnB,mBAYrBiS,EAZqB,KAYRC,EAZQ,OAaQlS,mBAAS,IAbjB,mBAarBsZ,EAbqB,KAaTC,EAbS,OAcEvZ,oBAAS,GAdX,mBAcrBiQ,EAdqB,KAcZC,EAdY,KAgB5BnO,qBAAU,YACE,uCAAG,4BAAAzB,EAAA,sEAET4P,GAAW,GAFF,SVyBAzU,IAAMiE,IAAI,4BUzBV,OAGHmC,EAHG,OAITqQ,EAAerQ,EAASC,MACxByX,EAAc1X,EAASC,MALd,gDAOThC,QAAQC,IAAR,MAPS,yBASTmQ,GAAW,GATF,4EAAH,qDAYVvP,KACC,IAEHoB,qBAAU,WACRwf,EAAkB,CAChBjY,YAAY,2BACZE,KAAK,GACLC,KAAK,GACLzG,IAAK,eACLuG,IAAI,IACJxG,YAAa,MAEfwW,EAActH,GACdkH,EAAc,MACb,CAAChe,EAAMmD,KAAM2T,IAEhB,IAAMuP,EAAe,SAACxY,GACpBuY,EAAkBvY,IAYdmR,EAASpF,uBAAY,SAAC3U,EAAM6R,GAChCsH,GAAc,WAEZ,OADmBtH,EAAYjD,QAAO,SAAAhG,GAAO,OAA2C,IAAvCA,EAAQM,YAAYiJ,QAAQnS,WAG9E,IAEGuS,EAAc,SAAC,GAAyB,IAAxBtQ,EAAuB,EAAvBA,MAAOuQ,EAAgB,EAAhBA,IAAKxV,EAAW,EAAXA,MAChC,OACE,qBAAeA,MAAOA,EAAtB,SACE,cAAC,GAAD,CAAMuK,KAAM2R,EAAWjX,GAAQuF,SAAUA,EAAU3J,QAASujB,KADpD5O,IAMd,OACE,mCACE,eAACvU,EAAA,EAAD,CAAOC,KAAMnD,EAAMmD,KAAMC,OAAQpD,EAAMqD,YAAa8S,KAAK,KAAzD,UACE,cAACjT,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAACtB,MAAO,CAACC,gBAAgB,WAAlD,SACE,cAACgB,EAAA,EAAMM,MAAP,CAAavB,MAAO,CAACS,MAAM,WAA3B,yCAEF,eAACQ,EAAA,EAAMS,KAAP,WACE,sBAAKrB,UAAU,mBAAf,UACE,uBAAOlB,KAAK,SAASnB,MAAO8d,EAAY9X,SA3BzB,SAACnC,GACxBka,EAAcla,EAAMkB,OAAO/E,QA0BiDgC,MAAO,CAAC2D,MAAM,WAClF,qBAAKtD,UAAU,qBAAf,SACE,wBAAQA,UAAU,mCAAmClB,KAAK,SAAS0B,QAAU,kBAAMkc,EAAOjB,EAAYjH,IAAtG,+BAGJ,sBAAKxU,UAAU,SAAf,UACE,qBAAKL,MAAO,CAAC4H,WAAW,QAAxB,6DACCsc,EAAehY,eAElB,qBAAKlM,MAAO,CAACE,OAAO,SAAUG,UAAU,qBAAxC,UAEgB,IAAZwS,EACA,qBAAKxS,UAAU,yDAAf,SACE,qBAAKmd,MAAM,8BAA8BlJ,KAAK,SAA9C,SACE,sBAAMkJ,MAAM,UAAZ,4BAIJ,cAAC,KAAD,UAEI,YAAsB,IAApB7Z,EAAmB,EAAnBA,MAAOzD,EAAY,EAAZA,OACP,OACE,cAAC,KAAD,CAAMyD,MAAOA,EAAOzD,OAAQA,EAC1BmV,SAAU6G,EAAWnX,OACrBuQ,UAAW,GACXC,YAAaA,EACbE,iBAAkB,YAclC,eAACxU,EAAA,EAAMW,OAAP,WACE,cAAClB,EAAA,EAAD,CAAQE,QAAQ,YAAYsT,KAAK,KAAKrT,QAAS9C,EAAMqD,YAArD,0BAGA,cAACV,EAAA,EAAD,CAAQE,QAAQ,kBAAkBsT,KAAK,KAAKrT,QAAS,WA5EpC,IAAC+K,IA4E4DsY,EA3EpFnmB,EAAMsmB,cAAczY,GACpB7N,EAAMqD,eA0EA,gDCnFKoV,OA3Cf,SAAwBzY,GAAQ,IAAD,EACL6E,oBAAS,GADJ,mBACtB1B,EADsB,KAChBkD,EADgB,KAW7B,OACE,qCACE,qBAAK/D,UAAU,4CAA4CL,MAAO,CAACC,gBAAgB,UAAWE,YAAY,OAAQQ,WAAW,QAA7H,SAEE,sBAAKN,UAAU,aAAf,UACE,sBAAKA,UAAU,wDAAf,UACE,qBAAKA,UAAU,kBAAkBL,MAAO,CAAC4H,WAAW,OAAQnH,MAAM,WAAlE,0BACA,qBAAKJ,UAAU,kDAAkDL,MAAO,CAAC0W,UAAU,kCAAmCtM,aAAa,MAAOzC,SAAS,OAAQ1H,gBAAgB,WAA3K,SAAwLlC,EAAMgT,gBAAgB7E,iBAEhN,sBAAK7L,UAAU,wDAAf,UACE,qBAAKA,UAAU,kBAAkBL,MAAO,CAAC4H,WAAW,OAAQnH,MAAM,WAAlE,0BACA,sBAAKJ,UAAU,kDAAkDL,MAAO,CAAC0W,UAAU,kCAAmCtM,aAAa,MAAOzC,SAAS,OAAQ1H,gBAAgB,WAA3K,UAAwLlC,EAAMgT,gBAAgB5E,IAA9M,eAEF,sBAAK9L,UAAU,wDAAf,UACE,qBAAKA,UAAU,kBAAkBL,MAAO,CAAC4H,WAAW,OAAQnH,MAAM,WAAlE,0BACA,qBAAKJ,UAAU,kDAAkDL,MAAO,CAAC0W,UAAU,kCAAmCtM,aAAa,MAAOzC,SAAS,OAAQ1H,gBAAgB,WAA3K,SAAwLlC,EAAMgT,gBAAgBnL,SAEhN,sBAAKvF,UAAU,wDAAf,UACE,qBAAKA,UAAU,kBAAkBL,MAAO,CAAC4H,WAAW,OAAQnH,MAAM,WAAlE,kDACA,sBAAKJ,UAAU,kDAAkDL,MAAO,CAAC0W,UAAU,kCAAmCtM,aAAa,MAAOzC,SAAS,OAAQ1H,gBAAgB,WAA3K,UAAwLlC,EAAMgT,gBAAgB3E,KAA9M,MAAuNrO,EAAMgT,gBAAgB1E,WAE/O,sBAAKhM,UAAU,8BAAf,UACI,wBAAQA,UAAU,uBAAuBL,MAAO,CAAC4H,WAAW,OAAQD,SAAS,QAAS9G,QA9B/E,kBAAMuD,GAAQ,IA8BrB,uCACA,wBAAQ/D,UAAS,mCAAsCuQ,SAAqC,8BAA3B7S,EAAM8S,UAAUxB,OAAkCxO,QAAS9C,EAAMumB,cAAlI,kCAIR,cAAC,GAAD,CAAepjB,KAAMA,EAAME,YApCX,kBAAMgD,GAAQ,IAoCuBigB,cAjCnC,SAACzY,GACrB7N,EAAMsmB,cAAczY,UC4OT2Y,OA1Of,SAAmBxmB,GAEjB,IAAMymB,EAAgBzkB,aAAY,SAACN,GACjC,OAAOA,EAAMyZ,eAAetN,WAExBnJ,EAAe1C,aAAY,SAACN,GAAW,OAAOA,EAAMD,YAAYb,UAL9C,EAOMiE,mBAAS,CAErCsJ,YAAY,2BACZE,KAAK,GACLC,KAAK,GACLzG,IAAK,eACLuG,IAAI,IACJxG,YAAa,MAdS,mBAOjBiG,EAPiB,KAORC,EAPQ,KAiBlBwY,EAAgB1M,uBAAY,SAAC/L,GACjCC,EAAWD,KACV,IAEHjH,qBAAU,WAEN,IZiBqB0G,EYlBO,MAA3BmZ,EAAcnZ,YZkBMA,EYjBOmZ,EAAcnZ,UZkB/BhN,IAAMiE,IAAI,wBAAwB+I,IYjBpChG,MAAK,SAACZ,GACboH,EAAWpH,EAASC,SACnB+f,OAAM,SAACC,GACRhiB,QAAQC,IAAI+hB,QAIf,CAACF,IA/BoB,MAiCU5hB,mBAAS,IAjCnB,mBAiCjBiO,EAjCiB,KAiCN8T,EAjCM,KAmClB/F,EAAkBjH,uBAAY,SAAC9G,GAChCA,EAAUlS,SAAW8D,GAAqC,8BAArBoO,EAAUxB,OAChDrN,MAAM,uFAEN2iB,EAAa9T,KAEd,CAACpO,IAzCoB,EA2C0BG,mBAAS,IA3CnC,mBA2CjBic,EA3CiB,KA2CE+F,EA3CF,OA4CoBhiB,mBAAS,IA5C7B,mBA4CjB0b,EA5CiB,KA4CDuG,EA5CC,OA6C4BjiB,mBAAS,IA7CrC,mBA6CjB0a,EA7CiB,KA6CGwH,EA7CH,OA8CoBliB,mBAAS,IA9C7B,mBA8CjBigB,EA9CiB,KA8CDkC,EA9CC,OA+CAniB,mBAAS,IA/CT,mBA+CjBoI,EA/CiB,KA+CX+Y,EA/CW,OAiDcnhB,mBAAS,IAjDvB,mBAiDjByb,EAjDiB,KAiDJ2G,EAjDI,OAkDoBpiB,mBAAS,IAlD7B,mBAkDjBya,EAlDiB,KAkDD4H,EAlDC,OAmDcriB,mBAAS,IAnDvB,mBAmDjBmgB,EAnDiB,KAmDJmC,EAnDI,OAoDAtiB,oBAAS,GApDT,oBAoDjB1B,GApDiB,MAoDXkD,GApDW,SAqDwBxB,oBAAS,GArDjC,qBAqDjBuiB,GArDiB,MAqDCC,GArDD,SAsDyBxiB,oBAAS,GAtDlC,qBAsDjByiB,GAtDiB,MAsDEC,GAtDF,MAwDxB3gB,qBAAU,YACE,uCAAG,gCAAAzB,EAAA,+EZpDA7E,IAAMiE,IAAI,yBYoDV,cAEHijB,EAFG,gBZ9CAlnB,IAAMiE,IAAI,6BY8CV,cAGHkjB,EAHG,gBZxCAnnB,IAAMiE,IAAI,yBYwCV,OAIHmjB,EAJG,OAKTT,EAAeO,EAAa7gB,MAC5BugB,EAAkBO,EAAkB9gB,MACpCwgB,EAAeO,EAAa/gB,MAPnB,kDASThC,QAAQC,IAAR,MATS,0DAAH,qDAYVY,KACA,IAEFoB,qBAAU,WACc,8BAAnBkM,EAAUxB,QACD,uCAAG,4BAAAnM,EAAA,sEAETkiB,IAAoB,GAFX,SZpDiBjW,EYuDiB0B,EAAU1B,YZtD9C9Q,IAAMiE,IAAI,6BAA+B6M,GYmDvC,OAGH1K,EAHG,OAITogB,GAAkB,kBAAMpgB,EAASC,KAAKghB,aACtCZ,GAAsB,kBAAMrgB,EAASC,KAAKihB,iBAC1CZ,GAAkB,kBAAMtgB,EAASC,KAAKkhB,aAN7B,kDAQTljB,QAAQC,IAAR,MARS,yBAUTyiB,IAAoB,GAVX,+CZpDZ,IAA6BjW,IYoDjB,2BAAH,oDAcV5L,GAEF,OAAQ,WACNshB,EAAkB,IAClBC,EAAsB,IACtBC,EAAkB,IAClBhB,EAAQ,OAET,CAAClT,IAEJ,IAAMgV,GAAa9lB,aAAY,SAACN,GAC9B,OAAOA,EAAMiP,iBAAiBJ,cAIhC3J,qBAAU,WAEN,IZ7EsBwK,EY4EK,MAA1B0W,GAAW1W,aAAuB0W,GAAW1W,cAAgB0B,EAAU1B,cZ5ElDA,EY6EO0B,EAAU1B,YZ5E5B9Q,IAAMiE,IAAI,yBAA2B6M,IY6EvC9J,MAAK,SAACZ,GACbsgB,EAAkBtgB,EAASC,SAC1B+f,OAAM,SAACC,GACRhiB,QAAQC,IAAI+hB,QAGf,CAACmB,KAGJlhB,qBAAU,YACE,uCAAG,4BAAAzB,EAAA,sEAEToiB,IAAoB,GAFX,SAGcxG,GAAiBlT,EAAQP,WAHvC,QAGH5G,EAHG,QAIGC,MACVkgB,GAAqB,WACnB,OAAOngB,EAASC,QANX,gDAUThC,QAAQC,IAAR,MAVS,yBAYT2iB,IAAoB,GAZX,4EAAH,qDAeV/hB,GACAwgB,EAAQ,IACRY,EAAa,MACZ,CAAC/Y,IAEJ,IAAM2S,GAAiB5G,uBAAY,SAACqE,GAClC6I,EAAkB7I,KACjB,IAGGuB,GAAqB5F,uBAAY,SAACqE,GACtC8I,EAAsB9I,KACtB,IAGIgH,GAAiBrL,uBAAY,SAACqE,GAClC+I,EAAkB/I,KACjB,IAEG8J,GAAa,uCAAG,oCAAA5iB,EAAA,sEAEd8b,EAAe,GAEf+G,EAAO,IAAI1iB,KAAKwN,EAAUzB,eAAehC,UACzC0D,EALc,2BAMbD,GANa,IAOhBzB,cAAc2W,EACd/a,KAAKA,IAGPgU,EAAaV,eAAb,aAAkCA,GAClCU,EAAa1B,mBAAb,aAAsCA,GAEtC0B,EAAa6D,eAAb,aAAkCA,GAClC7D,EAAanO,UAAYC,EACzBkO,EAAargB,OAAS8D,EACtBuc,EAAa3T,UAAYO,EAAQP,UAjBf,UAkBK0T,GAAmBC,GAlBxB,WAmBG,YAnBH,OAmBNta,KAnBM,kCAoBOoa,GAAiBlT,EAAQP,WApBhC,SAoBV5G,EApBU,QAsBJC,OACVqf,EAAQ,IACRa,EAAqBngB,EAASC,MACxBshB,EAAU,CACd7mB,KAAK,YACLkM,UAAUO,EAAQP,WAEpByF,EAAazB,OAAS,4BACtBzB,GAAiBoY,GACjBrB,EAAa7T,IA/BC,0DAoClBpO,QAAQC,IAAR,MApCkB,0DAAH,qDAiDnB,OACE,qCACE,qBAAK3C,MAAO,CAACE,OAAO,MAAO2T,aAAa,MAAQzT,UAAU,OAA1D,SACE,cAAC,GAAD,CAAgB2Q,gBAAiBnF,EAASiF,UAAWA,EAAWwT,cAAeA,EAAeC,cAZ9E,YACoB,IAArCtM,OAAOiO,QAAQ,2EAChBH,KACA1hB,IAAQ,SAWR,sBAAK/D,UAAU,gBAAgBL,MAAO,CAACkmB,OAAO,QAA9C,UACE,sBAAK7lB,UAAU,2BAAf,UACE,qBAAKA,UAAU,yCAAyCL,MAAO,CAACE,OAAO,OAAQ2T,aAAa,MAAO5T,gBAAgB,WAAnH,SACE,cAAC,GAAD,CAAkB4S,QAASwS,GAAmBtU,gBAAiBnF,EAASiF,UAAWA,EAAW+N,gBAAiBA,EAAiBC,kBAAmBA,MAErJ,qBAAKxe,UAAU,yCAAyCL,MAAO,CAACE,OAAO,OAAO2T,aAAa,MAAO5T,gBAAgB,WAAlH,SACE,cAAC,GAAD,CAAe4Q,UAAWA,EAAWkT,QAASA,EAAS/Y,KAAMA,SAGjE,sBAAK3K,UAAU,2BAAf,UACE,qBAAKA,UAAU,yCAAyCL,MAAO,CAACE,OAAO,OAAQD,gBAAgB,UAAW4T,aAAa,OAAvH,SACE,cAAC,GAAD,CAAehB,QAASsS,GAAkBtU,UAAWA,EAAWyM,mBAAoBA,EAC9ED,eAAgBA,EAAgBE,mBAAoBA,OAE5D,qBAAKld,UAAU,yCAAyCL,MAAO,CAACE,OAAO,OAAO2T,aAAa,MAAQ5T,gBAAgB,WAAnH,SACE,cAAC,GAAD,CAAU4S,QAASsS,GAAkBtU,UAAWA,EAAWyN,eAAgBA,EACrED,YAAaA,EAAaE,eAAgBA,UAGpD,qBAAKle,UAAU,cAAf,SACE,qBAAKA,UAAU,yCAAyCL,MAAO,CAACE,OAAO,OAAO2T,aAAa,MAAO5T,gBAAgB,WAAlH,SACE,cAAC,GAAD,CAAU4S,QAASsS,GAAkBtU,UAAWA,EAAWgS,eAAkBA,EACvEE,YAAaA,EAAaC,eAAgBA,GAAgBU,UA9BxD,WAChBtf,IAAQ,IA6BsFuf,UAAWziB,gB,mBCxO7GilB,yBAAe,KAAMC,MA8GNC,OA5Gf,YAAqD,IAA9BC,EAA6B,EAA7BA,OAA6B,KAArBC,UAAqB,EAAVC,QACN5jB,mBAAS,IAAIS,OADG,mBAC3ChB,EAD2C,KAChCmE,EADgC,OAEpB5D,mBAAS,IAAIS,MAFO,mBAE3CojB,EAF2C,KAElCC,EAFkC,OAGd9jB,mBAAS,gBAHK,mBAG/B+jB,GAH+B,WAI5C3f,EAAqBC,sBAAW,WAAqBC,GAArB,IAAGlJ,EAAH,EAAGA,MAAO6C,EAAV,EAAUA,QAAV,OACpC,qBAAKR,UAAU,uBAAuBQ,QAASA,EAASqG,IAAKA,EAA7D,SACE,sBAAK7G,UAAU,OAAf,UACA,mBAAGA,UAAU,4BACZrC,UAYC4oB,EAAmB,SAACzgB,GAAO,IACvBnI,EAAUmI,EAAEpD,OAAZ/E,MACR2oB,EAAc3oB,GACd,IAAM6oB,EAAc,IAAIxjB,KAOxB,GALc,iBAAVrF,IACFwI,EAAa,IAAInD,MACjBqjB,EAAW,IAAIrjB,OAGH,YAAVrF,EAAgB,CAClB,IAAI8oB,EAAe,IAAIzjB,KACrBwjB,EAAYzZ,UAAY,QAE1B5G,EAAasgB,GACbJ,EAAW,IAAIrjB,MAGjB,GAAc,kBAAVrF,EAAiB,CACnB,IAAI+oB,EAAU,IAAI1jB,KAAKwjB,EAAYzZ,UAAY,QAC/C5G,EAAaugB,GACbL,EAAW,IAAIrjB,MAGjB,GAAc,kBAAVrF,EAAiB,CACnB,IAAIgpB,EAAc,IAAI3jB,MACpB,IAAIA,MAAO4F,eACX,IAAI5F,MAAOgF,WAAa,GACxB,IAAIhF,MAAO2E,WAEbxB,EAAawgB,GACbN,EAAW,IAAIrjB,MAGjB,GAAc,kBAAVrF,EAAiB,CACnB,IAAIipB,EAAgB,IAAI5jB,MACtB,IAAIA,MAAO4F,eACX,IAAI5F,MAAOgF,WAAa,GACxB,IAAIhF,MAAO2E,WAEbxB,EAAaygB,GACbP,EAAW,IAAIrjB,QAInB,OACE,8BACQ,sBAAKhD,UAAU,YAAYL,MAAO,CAACC,gBAAiB,WAApD,UACE,sBAAKI,UAAU,YAAf,UACE,wBAAQlB,KAAK,SAASkB,UAAU,2BAA2BrC,MAAM,eAAK6C,QAAU+lB,EAAhF,0BACA,wBAAQznB,KAAK,SAASkB,UAAU,2BAA2BrC,MAAM,UAAK6C,QAAU+lB,EAAhF,qBACA,wBAAQznB,KAAK,SAASkB,UAAU,2BAA2BrC,MAAM,gBAAM6C,QAAU+lB,EAAjF,2BACA,wBAAQznB,KAAK,SAASkB,UAAU,2BAA2BrC,MAAM,gBAAM6C,QAAU+lB,EAAjF,2BACA,wBAAQznB,KAAK,SAASkB,UAAU,2BAA2BrC,MAAM,gBAAM6C,QAAU+lB,EAAjF,8BAEF,sBAAKvmB,UAAU,0BAAf,UACA,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,OAAf,UACE,yCACF,cAAC,IAAD,CACEoG,SAAUpE,EACV2B,SAAU,SAACZ,GAAD,OAAUoD,EAAapD,IACjCoE,YAAa,cAACR,EAAD,IACb4F,WAAW,aACXsa,OAAQd,YAIZ,qBAAK/lB,UAAU,WAAf,SACE,sBAAKA,UAAU,OAAf,UACA,uCACA,qBAAKA,UAAU,WAAf,SACA,cAAC,IAAD,CACEoG,SAAUggB,EACVziB,SAAU,SAACZ,GAAD,OAAUsjB,EAAWtjB,IAC/BoE,YAAa,cAACR,EAAD,IACb4F,WAAW,aACXsa,OAAQd,iBAMZ,wBAAQjnB,KAAK,SAASkB,UAAU,yBAAyBQ,QA1FlD,WAEjB2F,EAAanE,GACbqkB,EAAWD,GACXH,EAAOjkB,EAAWokB,IAsFR,0B,+BC/FCU,OAZf,YAAgD,IAAhCC,EAA+B,EAA/BA,kBACNC,GADqC,EAAZC,UACZC,aAAW,CAC9BvpB,MAAOopB,EAAkB/b,UAAU,IAAI+b,EAAkBvX,gBAAgBxI,MAASC,OAAO,YACzFkgB,QAAS,CACPC,WAAY,aAHRJ,UAOR,OACE,qBAAKngB,IAAKmgB,K,OCXP,SAASK,GAAenB,EAAWC,GAExC,OADgBnoB,IAAMiE,IAAI,yBAA0B,CAACyJ,OAAO,CAACwa,YAAWC,aAkBnE,SAASmB,GAAa9V,GAG3B,OAFAnP,QAAQC,IAAIkP,GACIxT,IAAMmP,IAAI,cAAeqE,GAIpC,SAAS+V,GAAa/X,GAE3B,OADgBxR,IAAMmP,IAAI,qBAAqBqC,GAI1C,SAASgY,GAAWC,GAEzB,IAAMhI,EAAQ,GASd,OARAjS,KAAKC,UAAUga,GAAa,SAACtS,EAAKuS,GAIhC,MAHY,UAARvS,GACFsK,EAAM1X,KAAK2f,GAENA,KAEO1pB,IAAMmP,IAAI,iBAAkBsS,GAKvC,SAASkI,GAAanY,GAG3B,OAFAnN,QAAQC,IAAIkN,GACIxR,IAAMmP,IAAI,yBAAyBqC,GAI9C,SAASoY,GAAYH,GAC1BplB,QAAQC,IAAImlB,GACZ,IAAMhI,EAAQ,GASd,OARAjS,KAAKC,UAAUga,GAAa,SAACtS,EAAKuS,GAIhC,MAHY,UAARvS,GACFsK,EAAM1X,KAAK2f,GAENA,KAEO1pB,IAAMmP,IAAI,kBAAmBsS,GAKxC,SAASoI,GAAcrY,GAG5B,OAFAnN,QAAQC,IAAIkN,GACIxR,IAAMmP,IAAI,0BAA0BqC,GAI/C,SAASsY,GAAYL,GAC1BplB,QAAQC,IAAImlB,GACZ,IAAMhI,EAAQ,GACdjS,KAAKC,UAAUga,GAAa,SAACtS,EAAKuS,GAIhC,MAHY,UAARvS,GACFsK,EAAM1X,KAAK2f,GAENA,KAET,IAAMK,EAAU/pB,IAAMmP,IAAI,kBAAmBsS,GAE7C,OADApd,QAAQC,IAAIylB,GACLA,EAGF,SAASC,GAAcxY,GAG5B,OAFAnN,QAAQC,IAAIkN,GACIxR,IAAMmP,IAAI,0BAA0BqC,GC2SvCyY,OA1Xf,SAAmBvqB,GAAQ,IAAD,EACA6E,oBAAS,GADT,mBACjB2lB,EADiB,KACXC,EADW,OAEU5lB,mBAAS,IAFnB,mBAEjB+e,EAFiB,KAEN8G,EAFM,OAGE7lB,mBAAS,IAHX,mBAGjB8lB,EAHiB,KAGVC,EAHU,OAIY/lB,mBAAS,IAJrB,mBAIjBgmB,EAJiB,KAILC,EAJK,KAMxBlkB,qBAAU,WACRie,IACAiG,EAAc,MACb,CAAC9qB,EAAM+qB,UAAW/qB,EAAMqpB,kBAAkBvX,kBAE7C,IAAM+S,EAAQ,WACZ+F,EAAS5qB,EAAM+qB,WAGX,IADJ,IAAMlG,EAAQ,GACF1a,EAAE,EAAGA,EAAEnK,EAAM+qB,UAAU/jB,OAAQmD,IACrC0a,EAAMxa,KAAKrK,EAAM+qB,UAAU5gB,GAAG8H,WAGhC,IAAM+Y,EAAM,IAAIC,IAAIpG,GACdnhB,EAAK,aAAOsnB,GAEdpM,EAAM,GACV,IAAQzU,EAAE,EAAGA,EAAEzG,EAAMsD,OAAQmD,IACzB,IAAI,IAAIC,EAAE,EAAGA,EAAEpK,EAAM+qB,UAAU/jB,OAAQoD,IAClC1G,EAAMyG,KAAOnK,EAAM+qB,UAAU3gB,GAAG6H,YAC9B2M,EAAIlb,EAAMyG,MAGXyU,EAAIlb,EAAMyG,IAAI,GACdyU,EAAIlb,EAAMyG,IAAI8H,UAAUjS,EAAM+qB,UAAU3gB,GAAG6H,UAC3C2M,EAAIlb,EAAMyG,IAAI+H,UAAUlS,EAAM+qB,UAAU3gB,GAAG8H,UAC3C0M,EAAIlb,EAAMyG,IAAImH,OAAOtR,EAAM+qB,UAAU3gB,GAAGkH,OACxCsN,EAAIlb,EAAMyG,IAAI+gB,WAAU,EACxBtM,EAAIlb,EAAMyG,IAAIsJ,SAAQ,EACW,6BAA9BzT,EAAM+qB,UAAU3gB,GAAGkH,QACpBsN,EAAIlb,EAAMyG,IAAIghB,SAAQ,EACtBvM,EAAIlb,EAAMyG,IAAIihB,MAAQ,SACtBxM,EAAIlb,EAAMyG,IAAIkhB,OAAS,OACgB,uBAA9BrrB,EAAM+qB,UAAU3gB,GAAGkH,QAC5BsN,EAAIlb,EAAMyG,IAAIghB,SAAQ,EACtBvM,EAAIlb,EAAMyG,IAAIihB,MAAQ,UACtBxM,EAAIlb,EAAMyG,IAAIkhB,OAAS,SAEvBzM,EAAIlb,EAAMyG,IAAIghB,SAAQ,EACtBvM,EAAIlb,EAAMyG,IAAIihB,MAAQ,UACtBxM,EAAIlb,EAAMyG,IAAIkhB,OAAS,SAEzBzM,EAAIlb,EAAMyG,IAAI4X,MAAM,IArBpBnD,EAAIlb,EAAMyG,IAAI4X,MAAM1X,KAAKrK,EAAM+qB,UAAU3gB,KA2BnDsgB,EAAa9L,IAoBb0M,EAAW,uCAAG,WAAM1H,GAAN,mBAAAze,EAAA,sDAmBlB,GAlBI4kB,EAAc,GACdwB,EAAO,EAELC,EAAenY,OAAO6R,OAAOtB,GAAW3c,KAAK,SAAC4d,GAYlD,OAVqB,IAAlBA,EAAMpR,UACPoR,EAAMpR,SAAU,EACI,uBAAjBoR,EAAMvT,OACPyY,EAAY1f,KAAKwa,IAEjB5gB,MAAM,qHACNsnB,EAAO,IAIJ1G,KAGG,IAAT0G,EACD,IACEzB,GAAWC,GAAaziB,MAAK,WAAKtH,EAAMyrB,QAAQzrB,EAAMqpB,kBAAkBvX,iBAAkB+S,OAC1FoF,GAAajqB,EAAMqpB,kBAAkBvX,iBAAiBxK,MAAK,WACzDtH,EAAM0rB,WAAW1rB,EAAMwoB,UAAWxoB,EAAMyoB,SACxC5Y,GAAiB,CAACzO,KAAK,YAEzB,MAAOulB,GACPhiB,QAAQC,IAAI+hB,GAKhB+D,EAAac,GAhCK,2CAAH,sDAqCXG,EAAW,uCAAG,WAAM/H,GAAN,mBAAAze,EAAA,sDAmBlB,GAlBI4kB,EAAc,GACdwB,EAAO,EAELC,EAAenY,OAAO6R,OAAOtB,GAAW3c,KAAK,SAAC4d,GAYlD,OAXqB,IAAlBA,EAAMpR,UACPgX,GAAQ,GACR5F,EAAMpR,SAAU,EACI,uBAAjBoR,EAAMvT,OACPyY,EAAY1f,KAAKwa,IAEjB5gB,MAAM,qHACNwmB,GAAQ,GACRc,EAAO,IAGJ1G,KAGG,IAAT0G,EACD,IACEzB,GAAWC,GAAaziB,MAAK,WAAKtH,EAAMyrB,QAAQzrB,EAAMqpB,kBAAkBvX,iBAAkB+S,OAC1FoF,GAAajqB,EAAMqpB,kBAAkBvX,iBAAiBxK,MAAK,WACzDtH,EAAM0rB,WAAW1rB,EAAMwoB,UAAWxoB,EAAMyoB,SACxC5Y,GAAiB,CAACzO,KAAK,YAEzB,MAAOulB,GACPhiB,QAAQC,IAAI+hB,GAGhB+D,EAAac,GA9BK,2CAAH,sDAgCXI,EAAa,kBAAMnB,GAAQ,IAE3BoB,EAAY,uCAAG,WAAMjI,GAAN,uBAAAze,EAAA,sDAoBnB,GAnBI4kB,EAAc,GACdwB,EAAO,EAELC,EAAenY,OAAO6R,OAAOtB,GAAW3c,KAAK,SAAC4d,GAclD,OAbqB,IAAlBA,EAAMpR,UACPoR,EAAMpR,SAAU,EACI,uBAAjBoR,EAAMvT,OACPyY,EAAY1f,KAAKwa,IAEG,uBAAjBA,EAAMvT,OACPrN,MAAM,6DAENA,MAAM,+EAERsnB,EAAO,IAGJ1G,KAEG,IAAT0G,EACD,IAIE,GAHArB,GAAYH,GAAaziB,MAAK,WAAKtH,EAAMyrB,QAAQzrB,EAAMqpB,kBAAkBvX,iBAAkB+S,OACvFiH,EAAQ,EACZnnB,QAAQC,IAAI,2DAAegf,EAAU5c,QAClC4c,EAAU5c,OAAS,EAAG,CACvB,IAAQmD,EAAE,EAAGA,EAAEyZ,EAAU5c,OAAQmD,IAC/BxF,QAAQC,IAAIgf,EAAUzZ,GAAGmH,QACA,uBAAxBsS,EAAUzZ,GAAGmH,SACdwa,IACAnnB,QAAQC,IAAIknB,IAIU,IAAvB/B,EAAY/iB,OACV8kB,IAAUlI,EAAU5c,OAAO,IAC5BrC,QAAQC,IAAIknB,GACZ3B,GAAcnqB,EAAMqpB,kBAAkBvX,iBAAiBxK,MAAK,WAC1DtH,EAAM0rB,WAAW1rB,EAAMwoB,UAAWxoB,EAAMyoB,SACxC5Y,GAAiB,CAACzO,KAAK,aAIxB0qB,IAAUlI,EAAU5c,OAAO+iB,EAAY/iB,QACxCmjB,GAAcnqB,EAAMqpB,kBAAkBvX,iBAAiBxK,MAAK,WAC1DtH,EAAM0rB,WAAW1rB,EAAMwoB,UAAWxoB,EAAMyoB,SACxC5Y,GAAiB,CAACzO,KAAK,aAK7B,MAAOulB,GACPhiB,QAAQC,IAAI+hB,GAIhB+D,EAAac,GAxDM,2CAAH,sDA2DZO,EAAY,uCAAG,WAAMnI,GAAN,uBAAAze,EAAA,sDAoBnB,GAnBI4kB,EAAc,GACdwB,EAAO,EAELC,EAAenY,OAAO6R,OAAOtB,GAAW3c,KAAK,SAAC4d,GAclD,OAbqB,IAAlBA,EAAMpR,UACPoR,EAAMpR,SAAU,EACI,uBAAjBoR,EAAMvT,OACPyY,EAAY1f,KAAKwa,IAEG,uBAAjBA,EAAMvT,OACPrN,MAAM,wEAENA,MAAM,+EAERsnB,EAAO,IAGJ1G,KAEG,IAAT0G,EACD,IAIE,GAHAnB,GAAYL,GAAaziB,MAAK,WAAKtH,EAAMyrB,QAAQzrB,EAAMqpB,kBAAkBvX,iBAAkB+S,OACvFiH,EAAQ,EACZnnB,QAAQC,IAAI,2DAAegf,EAAU5c,QAClC4c,EAAU5c,OAAS,EAAG,CACvB,IAAQmD,EAAE,EAAGA,EAAEyZ,EAAU5c,OAAQmD,IAC/BxF,QAAQC,IAAIgf,EAAUzZ,GAAGmH,QACA,6BAAxBsS,EAAUzZ,GAAGmH,SACdwa,IACAnnB,QAAQC,IAAIknB,IAIU,IAAvB/B,EAAY/iB,OACV8kB,IAAUlI,EAAU5c,OAAO,IAC5BrC,QAAQC,IAAIknB,GACZxB,GAActqB,EAAMqpB,kBAAkBvX,iBAAiBxK,MAAK,WAC1DtH,EAAM0rB,WAAW1rB,EAAMwoB,UAAWxoB,EAAMyoB,SACxC5Y,GAAiB,CAACzO,KAAK,aAIxB0qB,IAAUlI,EAAU5c,OAAO+iB,EAAY/iB,QACxCsjB,GAActqB,EAAMqpB,kBAAkBvX,iBAAiBxK,MAAK,WAC1DtH,EAAM0rB,WAAW1rB,EAAMwoB,UAAWxoB,EAAMyoB,SACxC5Y,GAAiB,CAACzO,KAAK,aAO7B,MAAOulB,GACPhiB,QAAQC,IAAI+hB,GAGhB+D,EAAac,GAzDM,2CAAH,sDA4DZtmB,EAAS,uCAAG,WAAMpB,EAAOgQ,GAAb,SAAA3O,EAAA,sDAChBrB,EAAMsB,iBACN0O,EAAK7F,OAAS4c,EAAW/W,EAAK3B,YAC9ByX,GAAa9V,GAAMxM,MAAK,WACtBwjB,EAAc,eAAID,IAClBhG,IAEA,IAAIiH,EAAQ,EAEZ,GADAnnB,QAAQC,IAAI5E,EAAM+qB,WACf/qB,EAAM+qB,UAAU/jB,OAAS,EAAG,CAC7B,IAAI,IAAImD,EAAE,EAAGA,EAAEnK,EAAM+qB,UAAU/jB,OAAQmD,IACrCxF,QAAQC,IAAI5E,EAAM+qB,UAAU5gB,GAAG8D,QACA,OAA9BjO,EAAM+qB,UAAU5gB,GAAG8D,QAAiD,KAA9BjO,EAAM+qB,UAAU5gB,GAAG8D,SAC1D6d,IACAnnB,QAAQC,IAAIknB,IAGXA,IAAU9rB,EAAM+qB,UAAU/jB,SAC3BrC,QAAQC,IAAI,yCACZilB,GAAa7pB,EAAMqpB,kBAAkBvX,iBAAiBxK,MAAK,WAAKtH,EAAM0rB,WAAW1rB,EAAMwoB,UAAWxoB,EAAMyoB,iBAI9GxkB,MAAM,+CACN4L,GAAiB,CAACzO,KAAK,aAAcgQ,YAAY0C,EAAK1C,cAxBtC,2CAAH,wDAmCf,OADAzM,QAAQC,IAAIgf,GAEV,qCACA,gCACE,sBAAKthB,UAAU,uBAAf,UACE,wBAAQlB,KAAK,SAASkB,UAAU,2BAA2BQ,QAAU,WAAQwoB,EAAY1H,IAAc3jB,MAAM,2BAA7G,sCACA,wBAAQmB,KAAK,SAASkB,UAAU,2BAA2BQ,QAAU,WAAO6oB,EAAY/H,IAAc3jB,MAAM,iCAA5G,4CACA,wBAAQmB,KAAK,SAASkB,UAAU,2BAA2BQ,QAAU,WAAO+oB,EAAajI,IAAc3jB,MAAM,2BAA7G,sCACA,wBAAQmB,KAAK,SAASkB,UAAU,2BAA2BQ,QAzP9C,WACjB,IAAMkpB,EAAKC,KAAKC,MAAMC,cAAcxB,GAC9ByB,EAAKH,KAAKC,MAAMG,WACtBJ,KAAKC,MAAMI,kBAAkBF,EAAIJ,EAAI,UACrCC,KAAKM,UAAUH,EAAI,wCAAUpsB,EAAMqpB,kBAAkB/b,UAAU,IAAItN,EAAMqpB,kBAAkBtX,SAAS,UAqPhG,sCACA,wBAAQ3Q,KAAK,SAASkB,UAAU,2BAA2BQ,QAAU,WAAOipB,EAAanI,IAAc3jB,MAAM,2BAA7G,yCAEF,yEAAcD,EAAMqpB,kBAAkBvX,mBACtC,qBAAKxP,UAAU,gBAAgBwE,GAAG,UAAU7E,MAAO,CAACE,OAAO,SAA3D,SACE,cAAC6f,GAAA,EAAD,CAAWM,iBAAiB,IAA5B,SACCsB,IAAa,IACdvQ,OAAO6R,OAAOtB,GAAW3c,KAAI,SAAC4d,EAAO3d,GACnC,OACE,eAAC+a,GAAA,EAAD,WACA,eAACA,GAAA,EAAK3e,OAAN,CAAahB,UAAU,eAAeL,MAAO,CAACC,gBAAgB,UAAWC,OAAO,OAAQqqB,WAAW,UAAnG,UACA,uBAAOlqB,UAAU,OAAOlB,KAAK,WAAY6E,SAAU,SAAAmC,IA7PvC,SAACA,EAAG6J,GACxB,IAAMuB,EAASH,OAAO6R,OAAOtB,GAAW3c,KAAI,SAAC4d,GAI3C,OAHGA,EAAM5S,YAAYA,IACnB4S,EAAMpR,QAAUrL,EAAEpD,OAAO4N,SAEpBiS,KAET6F,EAAalX,GAsPoDiZ,CAAcrkB,EAAGyc,EAAM5S,YAAaW,QAASiS,EAAMpR,UAC1G,cAACuO,GAAA,EAAUE,OAAX,CAAkBhc,GAAI+b,KAAK3e,OAAQ8e,SAAUlb,EAAMiQ,WAAnD,SAEE,sBAAK7U,UAAU,MAAf,sCAA0B,sBAAKL,MAAO,CAAC2H,SAAS,OAAQC,WAAW,OAAQ+O,YAAY,OAA7D,cAAuEiM,EAAM5S,aAAvG,IAAwH,cAAC0O,GAAA,EAAD,CAAOre,UAAU,YAAYO,QAASgiB,EAAMuG,MAAQnpB,MAAO,CAAC2H,SAAS,QAArE,SAA+Eib,EAAMvT,cAE/M,2BAEF,cAAC0Q,GAAA,EAAUK,SAAX,CAAoBD,SAAUlb,EAAMiQ,WAApC,SACE,eAAC8K,GAAA,EAAKte,KAAN,WACE,sBAAKrB,UAAU,2CAA2CL,MAAO,CAAE4H,WAAW,OAAQD,SAAS,SAAUkQ,aAAa,qBAAtH,UACE,qBAAKxX,UAAU,wBAAf,sCACA,qBAAKA,UAAU,wBAAf,gCACA,qBAAKA,UAAU,wBAAf,0BACA,qBAAKA,UAAU,wBAAf,0BACA,qBAAKA,UAAU,wBAAf,mCAEDuiB,EAAM9C,MAAM9a,KAAI,SAAC6M,EAAM5M,GACtB,OACE,sBAA2B5E,UAAU,2CAA2CL,MAAO,CAAC2H,SAAS,SAAUkQ,aAAa,qBAAxH,UACE,qBAAKxX,UAAU,wBAAwBL,MAAO,CAAC4H,WAAW,QAA1D,SAAoEiK,EAAK3B,aACzE,qBAAK7P,UAAU,wBAAf,SAAwCwR,EAAKF,eAC7C,qBAAKtR,UAAU,wBAAwBL,MAAO,CAAES,MAA4B,QAAtBoR,EAAK8O,cAAwB,SAAS,SAAU/Y,WAAW,OAAQD,SAAS,QAAlI,SAA4IkK,EAAK8O,gBACjJ,qBAAKtgB,UAAU,wBAAwBL,MAAO,CAACS,MAAMmiB,EAAMwG,OAAQxhB,WAAW,QAA9E,SAAwFiK,EAAKxC,SACxE,SAApBwC,EAAK3B,WACN,qBAAKlQ,MAAO,CAACW,WAAW,QAAxB,SAAkCkR,EAAK7F,SACvC,qBAAK3L,UAAU,6BAA6BL,MAAO,CAACyqB,QAAQ,eAA5D,SACA,uBAAMhnB,SAAW,SAAA5B,GAAUoB,EAAUpB,EAAOgQ,IAA5C,UACG+Q,EAAMsG,QAAQ,GAAG,qBAAKlpB,MAAO,CAAC4E,MAAM,OAAQjB,MAAM,OAAjC,SAAyC,uBAAOxE,KAAK,OAAOkB,UAAU,eAAe2C,KAAM6O,EAAK3B,WAAYlS,MAAO6T,EAAK7F,QAAU4c,EAAW5c,OAAU4c,EAAW/W,EAAK3B,aAAe,GAAM2B,EAAK7F,OAAQhI,SAAU,SAAAmC,GApDtO,IAACtE,IAoDwPsE,EAnD5Q0iB,EAAc,2BACTD,GADQ,kBAEV/mB,EAAMkB,OAAOC,KAAOnB,EAAMkB,OAAO/E,cAkDf4kB,EAAMsG,QAAQ,GAAG,qBAAKlpB,MAAO,CAAC4E,MAAM,SAAnB,SAA6B,uBAAOzF,KAAK,SAASkB,UAAU,8BAA+BuQ,SAAUgS,EAAMsG,QAASlrB,MAAM,0BAVtI6T,EAAK3B,sBApBZ0S,EAAM5S,qBA8CzB,eAAC/O,EAAA,EAAD,CAAOC,KAAMqnB,EAAMpnB,OAAQwoB,EAAYtV,WAAW,EAAlD,UACE,cAACpT,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,gDAEF,cAACN,EAAA,EAAMS,KAAP,UACA,cAAC,GAAD,CAAO0lB,kBAAmBrpB,EAAMqpB,kBAAmBE,UAAW3F,MAE9D,cAAC1gB,EAAA,EAAMW,OAAP,UACE,cAAClB,EAAA,EAAD,CAAQE,QAAQ,YAAYC,QAAS8oB,EAArC,4BCvVOe,OAjCf,WACE,OACE,eAAC3kB,EAAA,EAAD,WACE,cAACA,EAAA,EAASK,KAAV,UACE,qBACE/F,UAAU,gBACVqD,IAAI,SACJ4C,IAAI,eACJpG,OAAO,QACP0J,OAAO,qBAGX,cAAC7D,EAAA,EAASK,KAAV,UACE,qBACE/F,UAAU,gBACVqD,IAAI,eACJ4C,IAAI,eACJpG,OAAO,QACP0J,OAAO,qBAGX,cAAC7D,EAAA,EAASK,KAAV,UACE,qBACE/F,UAAU,gBACVqD,IAAI,SACJ4C,IAAI,cACJpG,OAAO,QACP0J,OAAO,yBCmGF+gB,OA1Hf,SAAoB5sB,GAAQ,IAAD,EACD6E,qBADC,mBAClB1B,EADkB,KACZkD,EADY,OAEaxB,qBAFb,mBAElBuM,EAFkB,KAELyb,EAFK,KAIzBjmB,qBAAU,WACRie,MAEC,CAAC7kB,EAAM+qB,YAEV,IAAMlG,EAAQ,WACZ,IAAI,IAAI1a,EAAE,EAAGA,EAAEnK,EAAM+qB,UAAU/jB,OAAQmD,IAClCnK,EAAM+qB,UAAU5gB,KACoB,SAAlCnK,EAAM+qB,UAAU5gB,GAAGgI,YACpB0a,EAAe7sB,EAAM+qB,UAAU5gB,GAAGiH,aAClC/K,GAAQ,IAERA,GAAQ,KAhBS,EAsBKxB,mBAAS,CACrCuM,YAAY,GACZe,WAAW,KAxBY,mBA2BnB2a,GA3BmB,UA2BPC,oBAEZ7nB,EAAS,uCAAG,WAAMpB,GAAN,mBAAAqB,EAAA,sDAChBrB,EAAMsB,iBACN,KACQ4nB,EAAW,IAAIC,UACZC,OAAO,cAAe9b,GAC/B4b,EAASE,OAAO,aAAc,QAC9BF,EAASE,OAAO,UAAWJ,EAAUK,QAAQC,MAAM,KHzB9BC,EG0BVL,EHzBfroB,QAAQC,IAAIyoB,GACL/sB,IAAM8D,KAAK,YAAaipB,IGwBN/lB,MAAK,WACxBtH,EAAMyrB,QAAQzrB,EAAMqpB,kBAAkBvX,iBACtCjC,GAAiB,CAACzO,KAAK,aAAcgQ,YAAYA,IACjDnN,MAAM,4CAET,MAAM0iB,GACLhiB,QAAQC,IAAI+hB,GAQZ,GAJFmG,EAAUK,QAAQltB,MAAQ,GAEtB6rB,EAAQ,EACVnnB,QAAQC,IAAI5E,EAAM+qB,WACf/qB,EAAM+qB,UAAU/jB,OAAS,EAAG,CAC7B,IAAQmD,EAAE,EAAGA,EAAEnK,EAAM+qB,UAAU/jB,OAAQmD,IACrCxF,QAAQC,IAAI5E,EAAM+qB,UAAU5gB,GAAG8D,QACA,OAA9BjO,EAAM+qB,UAAU5gB,GAAG8D,QAAiD,KAA9BjO,EAAM+qB,UAAU5gB,GAAG8D,SAC1D6d,IACAnnB,QAAQC,IAAIknB,IAGXA,EAAM,IAAM9rB,EAAM+qB,UAAU/jB,SAC7BrC,QAAQC,IAAI,yCACZilB,GAAa7pB,EAAMqpB,kBAAkBvX,iBAAiBxK,MAAK,WAAKtH,EAAM0rB,WAAW1rB,EAAMwoB,UAAWxoB,EAAMyoB,aA/B9F,iCHnBb,IAAoB4E,IGmBP,OAAH,sDA2Cf,OACE,qCACA,qBAAKprB,MAAO,CAAC6T,aAAa,QAAS3T,OAAO,OAA1C,SACCgB,EACD,sBAAKb,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAcL,MAAO,CAAC4H,WAAW,QAAhD,mDAGA,sBAAKvH,UAAU,iBAAf,UACE,8BACE,6DAAYtC,EAAMqpB,kBAAkBvX,qBAEtC,uBACA,uBAAMpM,SAAUR,EAAhB,UACE,sBAAK5C,UAAU,iBAAf,UACE,uBAAOgrB,QAAQ,cAAchrB,UAAU,0BAAvC,yBACA,qBAAKA,UAAU,WAAf,SACE,uBAAOlB,KAAK,OAAOkB,UAAU,eAAe2C,KAAK,cAAchF,MAAOmR,SAG1E,sBAAK9O,UAAU,iBAAf,UACE,uBAAOgrB,QAAQ,aAAahrB,UAAU,0BAAtC,wBACA,qBAAKA,UAAU,WAAf,SACE,uBAAOlB,KAAK,OAAOkB,UAAU,eAAe2C,KAAK,aAAahF,MAAM,cAGxE,sBAAKqC,UAAU,iBAAf,UACI,uBAAOgrB,QAAQ,UAAUhrB,UAAU,0BAAnC,sCACA,qBAAKA,UAAU,WAAf,SACE,uBAAOwE,GAAG,UAAU7B,KAAK,UAAU7D,KAAK,OAAOkB,UAAU,oBAAoB6G,IAAK2jB,SAGxF,qBAAKxqB,UAAU,iBAAf,SACE,qBAAKA,UAAU,+CAAf,SACE,uBAAOlB,KAAK,SAASkB,UAAU,oCAAoCrC,MAAM,8BAMlF,sBAAKgC,MAAO,CAACqK,UAAU,SAAU5J,MAAM,UAAWL,UAAU,QAA5D,UAAqE,8BAAK,mBAAGod,MAAM,uBAAuBxd,MAAO,CAAC2H,SAAS,aAAoB,qBAAK3H,MAAO,CAAC2H,SAAS,QAAtB,4CAEhJ,sBAAK3H,MAAO,CAACE,OAAO,OAApB,UACE,sBAAKF,MAAO,CAAC2H,SAAS,OAAQC,WAAW,OAAQiM,aAAa,OAA9D,UAAsE,mBAAG2J,MAAM,iCAAiCxd,MAAO,CAACS,MAAM,YAA9H,kDACA,qBAAKT,MAAO,CAAC4J,OAAO,mBAApB,SAAwC,cAAC,GAAD,aCnB/B0hB,OApGf,SAAqBvtB,GACnB,OACE,eAACmkB,GAAA,EAAIC,UAAL,CAAetd,GAAG,oBAAoBwb,iBAAiB,OAAvD,UACM,cAAC+B,GAAA,EAAD,CAAKC,MAAI,EAACzhB,QAAQ,OAAOP,UAAU,mBAAnC,SACE,eAACijB,GAAA,EAAD,CAAKjjB,UAAU,YAAf,UACE,cAAC+hB,GAAA,EAAIhc,KAAL,UACE,eAACgc,GAAA,EAAIE,KAAL,CAAUnC,SAAS,QAAnB,yBAA6B,8BAAMpiB,EAAMwtB,SAASxmB,cAEpD,cAACqd,GAAA,EAAIhc,KAAL,UACE,eAACgc,GAAA,EAAIE,KAAL,CAAUnC,SAAS,OAAnB,yBAA4B,8BAAMpiB,EAAMytB,SAASzmB,cAEnD,cAACqd,GAAA,EAAIhc,KAAL,UACE,eAACgc,GAAA,EAAIE,KAAL,CAAUnC,SAAS,WAAnB,+BAAiC,8BAAMpiB,EAAM0tB,UAAU1mB,cAEzD,cAACqd,GAAA,EAAIhc,KAAL,UACE,eAACgc,GAAA,EAAIE,KAAL,CAAUnC,SAAS,WAAnB,yBAAgC,8BAAMpiB,EAAM2tB,UAAU3mB,mBAK5D,sBAAK1E,UAAU,2CAA2CL,MAAO,CAAEC,gBAAgB,UAAWQ,MAAM,QAASoX,aAAa,iBAAkB8T,UAAU,iBAAkBhkB,SAAS,UAAjL,UACE,qBAAKtH,UAAU,kCAAf,sCACA,qBAAKA,UAAU,wBAAf,sCACA,qBAAKA,UAAU,wBAAf,0BACA,qBAAKA,UAAU,wBAAf,sCACA,qBAAKA,UAAU,wBAAf,6BAGF,eAAC6hB,GAAA,EAAIK,QAAL,CAAaliB,UAAU,gBAAgBwE,GAAG,UAAU7E,MAAO,CAACE,OAAO,SAAnE,UAC6B,IAA1BnC,EAAMwtB,SAASxmB,OAChB,cAACmd,GAAA,EAAIM,KAAL,CAAUrC,SAAU,QAAQ9f,UAAU,OAAtC,SACE,sBAAKL,MAAO,CAACqK,UAAU,SAAU5J,MAAM,WAAvC,UAAmD,8BAAK,mBAAG+c,MAAM,iBAAiBxd,MAAO,CAAC2H,SAAS,aAAoB,qBAAK3H,MAAO,CAAC2H,SAAS,QAAtB,wFAGvH,cAACua,GAAA,EAAIM,KAAL,CAAUrC,SAAU,QAAQ9f,UAAU,OAAtC,SACCtC,EAAMwtB,SAASvmB,KAAI,SAACuF,EAAMtF,GAAS,OAClC,sBAAgC5E,UAAU,2CAA2CQ,QAAU,SAAAsF,GAAMpI,EAAM6tB,aAAazlB,EAAGoE,EAAMtF,IAAUjF,MAAO,CAAE2H,SAAS,OAAQkQ,aAAa,qBAAlL,UACE,qBAAKxX,UAAU,kCAAf,SAAkDkK,EAAKsF,kBACvD,qBAAKxP,UAAU,wBAAf,SAAwCkK,EAAK6B,OAC7C,qBAAK/L,UAAU,wBAAf,SAAwCkK,EAAK2B,cAC7C,qBAAK7L,UAAU,wBAAf,SAAwCgH,IAAOkD,EAAKuF,UAAUxI,OAAO,gBACrE,qBAAKjH,UAAU,wBAAwBL,MAAO,CAAC2H,SAAS,QAAxD,SAAiE,cAAC+W,GAAA,EAAD,CAAO9d,QAA+B,4BAArB2J,EAAKshB,aAAwB,OAAO,UAArD,SAAiEthB,EAAKshB,mBAL/HthB,EAAKsF,sBAUU,IAA1B9R,EAAMytB,SAASzmB,OAClB,cAACmd,GAAA,EAAIM,KAAL,CAAUrC,SAAU,OAAO9f,UAAU,OAArC,SACE,sBAAKL,MAAO,CAACqK,UAAU,SAAU5J,MAAM,WAAvC,UAAmD,8BAAK,mBAAG+c,MAAM,iBAAiBxd,MAAO,CAAC2H,SAAS,aAAoB,qBAAK3H,MAAO,CAAC2H,SAAS,QAAtB,wFAGvH,cAACua,GAAA,EAAIM,KAAL,CAAUrC,SAAU,OAAO9f,UAAU,OAArC,SACCtC,EAAMytB,SAASxmB,KAAI,SAACuF,EAAMtF,GAAS,OAChC,sBAAgC5E,UAAU,2CAA2CQ,QAAU,SAAAsF,GAAMpI,EAAM6tB,aAAazlB,EAAGoE,IAASvK,MAAO,CAAE2H,SAAS,OAAQkQ,aAAa,qBAA3K,UACA,qBAAKxX,UAAU,kCAAf,SAAkDkK,EAAKsF,kBACvD,qBAAKxP,UAAU,wBAAf,SAAwCkK,EAAK6B,OAC7C,qBAAK/L,UAAU,wBAAf,SAAwCkK,EAAK2B,cAC7C,qBAAK7L,UAAU,wBAAf,SAAwCgH,IAAOkD,EAAKuF,UAAUxI,OAAO,gBACrE,sBAAKjH,UAAU,wBAAwBL,MAAO,CAAC2H,SAAS,QAAxD,UAAiE,cAAC+W,GAAA,EAAD,CAAOre,UAAU,OAAOO,QAAQ,UAAhC,SAA2C2J,EAAK8E,SAAe,cAACqP,GAAA,EAAD,CAAO9d,QAA+B,4BAArB2J,EAAKshB,aAAwB,OAAO,UAArD,SAAiEthB,EAAKshB,oBAL5LthB,EAAKsF,sBAUS,IAA3B9R,EAAM0tB,UAAU1mB,OACnB,cAACmd,GAAA,EAAIM,KAAL,CAAUrC,SAAU,WAAW9f,UAAU,OAAzC,SACE,sBAAKL,MAAO,CAACqK,UAAU,SAAU5J,MAAM,WAAvC,UAAmD,8BAAK,mBAAG+c,MAAM,iBAAiBxd,MAAO,CAAC2H,SAAS,aAAoB,qBAAK3H,MAAO,CAAC2H,SAAS,QAAtB,uFAGvH,cAACua,GAAA,EAAIM,KAAL,CAAUrC,SAAU,WAAW9f,UAAU,OAAzC,SACCtC,EAAM0tB,UAAUzmB,KAAI,SAACuF,EAAMtF,GAAS,OACnC,sBAAgC5E,UAAU,2CAA2CQ,QAAU,SAAAsF,GAAMpI,EAAM6tB,aAAazlB,EAAGoE,IAASvK,MAAO,CAAE2H,SAAS,OAAQkQ,aAAa,oBAAqB5X,gBAAgB,SAAhN,UACA,qBAAKI,UAAU,kCAAf,SAAkDkK,EAAKsF,kBACvD,qBAAKxP,UAAU,wBAAf,SAAwCkK,EAAK6B,OAC7C,qBAAK/L,UAAU,wBAAf,SAAwCkK,EAAK2B,cAC7C,qBAAK7L,UAAU,wBAAf,SAAwCgH,IAAOkD,EAAKuF,UAAUxI,OAAO,gBACrE,sBAAKjH,UAAU,wBAAwBL,MAAO,CAAC2H,SAAS,QAAxD,UAAiE,cAAC+W,GAAA,EAAD,CAAOre,UAAU,OAAOO,QAAQ,UAAhC,SAA2C2J,EAAK8E,SAAe,cAACqP,GAAA,EAAD,CAAO9d,QAA+B,4BAArB2J,EAAKshB,aAAwB,OAAO,UAArD,SAAiEthB,EAAKshB,oBAL5LthB,EAAKsF,sBAUW,IAA3B9R,EAAM2tB,UAAU3mB,OACnB,cAACmd,GAAA,EAAIM,KAAL,CAAUrC,SAAU,WAAW9f,UAAU,OAAzC,SACE,sBAAKL,MAAO,CAACqK,UAAU,SAAU5J,MAAM,WAAvC,UAAmD,8BAAK,mBAAG+c,MAAM,iBAAiBxd,MAAO,CAAC2H,SAAS,aAAoB,qBAAK3H,MAAO,CAAC2H,SAAS,QAAtB,kFAGvH,cAACua,GAAA,EAAIM,KAAL,CAAUrC,SAAU,WAAW9f,UAAU,OAAzC,SACCtC,EAAM2tB,UAAU1mB,KAAI,SAACuF,EAAMtF,GAAS,OACnC,sBAAgC5E,UAAU,2CAA2CQ,QAAU,SAAAsF,GAAMpI,EAAM6tB,aAAazlB,EAAGoE,IAASvK,MAAO,CAAE2H,SAAS,OAAQkQ,aAAa,oBAAqB5X,gBAAgB,SAAhN,UACA,qBAAKI,UAAU,kCAAf,SAAkDkK,EAAKsF,kBACvD,qBAAKxP,UAAU,wBAAf,SAAwCkK,EAAK6B,OAC7C,qBAAK/L,UAAU,wBAAf,SAAwCkK,EAAK2B,cAC7C,qBAAK7L,UAAU,wBAAf,SAAwCgH,IAAOkD,EAAKuF,UAAUxI,OAAO,gBACrE,sBAAKjH,UAAU,wBAAwBL,MAAO,CAAC2H,SAAS,QAAxD,UAAiE,cAAC+W,GAAA,EAAD,CAAOre,UAAU,OAAOO,QAAQ,SAAhC,SAA0C2J,EAAK8E,SAAe,cAACqP,GAAA,EAAD,CAAO9d,QAA+B,4BAArB2J,EAAKshB,aAAwB,OAAO,UAArD,SAAiEthB,EAAKshB,oBAL3LthB,EAAKsF,6BCyBhBic,OA1Gf,SAAkB/tB,GAChB2E,QAAQC,IAAI,4BADW,MAEQC,mBAAS,IAFjB,mBAEhB2oB,EAFgB,KAEN1f,EAFM,OAGQjJ,mBAAS,IAHjB,mBAGhB4oB,EAHgB,KAGNO,EAHM,OAIUnpB,mBAAS,IAJnB,mBAIhB6oB,EAJgB,KAILO,EAJK,OAKUppB,mBAAS,IALnB,mBAKhB8oB,EALgB,KAKLO,EALK,OAO2BrpB,mBAAS,IAPpC,mBAOhBwkB,EAPgB,KAOG8E,EAPH,OASWtpB,oBAAS,GATpB,mBAShBupB,EATgB,KASLC,EATK,OAWWxpB,mBAAS,IAAIS,MAXxB,mBAWhBkjB,EAXgB,KAWL8F,EAXK,OAYOzpB,mBAAS,IAAIS,MAZpB,mBAYhBmjB,EAZgB,KAYP8F,EAZO,OAcW1pB,mBAAS,IAdpB,mBAchBkmB,EAdgB,KAcLyD,EAdK,KAgBjBnS,EAAgBra,aAAY,SAACN,GAAD,OAAUA,EAAMiP,iBAAiBN,iBAEnEzJ,qBAAU,WACR8kB,EAAWpiB,MAASC,OAAO,cAAeD,MAASC,OAAO,iBAC1D,CAAC8S,IAEH,IAAMqP,EAAU,uCAAG,WAAMlD,EAAWC,GAAjB,uBAAAtjB,EAAA,sEAEfmpB,EAAa9F,GACb+F,EAAW9F,GAHI,SAIQkB,GAAergB,IAAOkf,GAAWjf,OAAO,cAAeD,IAAO,IAAIhE,KAAKmjB,GAASpZ,UAAY,OAAyB9F,OAAO,eAJpI,OAIT7C,EAJS,OAKTmH,EAAUnH,EAASC,KACzBmH,EAAWpH,EAASC,MACd8nB,EAAU5gB,EAAQgG,QAAO,SAAAhG,GAAO,MAAuB,uBAAnBA,EAAQyD,UAClD0c,EAAWS,GACLC,EAAW7gB,EAAQgG,QAAO,SAAAhG,GAAO,MAAuB,uBAAnBA,EAAQyD,UACnD2c,EAAYS,GACNC,EAAW9gB,EAAQgG,QAAO,SAAAhG,GAAO,MAAuB,6BAAnBA,EAAQyD,UACnD4c,EAAYS,GAZG,kDAcfhqB,QAAQgiB,MAAR,MAde,0DAAH,wDAkBV8E,EAAU,SAAC3Z,GACyB,MAArCuX,EAAkBvX,iBLvClB,SAA+BA,GAEpC,OADgBxR,IAAMiE,IAAI,6BAA8B,CAACyJ,OAAQ,CAAC8D,qBKuC9D8c,CAAsBvF,EAAkBvX,iBAAiBxK,MAAK,SAACZ,GAC/D8nB,EAAa9nB,EAASC,UAKpBknB,EAAY,uCAAG,WAAMzlB,EAAGoE,EAAMtF,GAAf,SAAA/B,EAAA,sDACnBgpB,EAAqB3hB,GAErB6hB,GAAa,GAHM,2CAAH,0DAUlB,OAJAznB,qBAAU,WACR6kB,MACC,CAACpC,EAAkBvX,kBAGpB,qBAAKxP,UAAU,SAASL,MAAO,CAACyW,SAAS,UAAzC,SACE,sBAAKpW,UAAU,UAAf,UACA,sBAAKA,UAAU,aAAaL,MAAO,CAAC4sB,YAAY,qBAAhD,UACI,sBAAKvsB,UAAU,gBAAgBL,MAAO,CAACC,gBAAiB,UAAW0D,MAAM,OAAzE,UAAiF,qBAAKtD,UAAU,sBAAsBL,MAAO,CAAEC,gBAAgB,WAA9D,SAA0E,mBAAGud,MAAM,uBAAuBxd,MAAO,CAAE2H,SAAS,YAAmB,qBAAKtH,UAAU,YAAf,uDAChO,sBAAKL,MAAO,CAACE,OAAO,QAApB,UACA,cAAC,GAAD,CAAcqmB,UAAWA,EAAWC,QAASA,EAASF,OAAQmD,IAC9D,cAAC,GAAD,CAAa8B,SAAUA,EAAUC,SAAUA,EAAUC,UAAWA,EAAWC,UAAWA,EAAWE,aAAcA,UAIjH,sBAAKvrB,UAAU,aAAf,UACE,sBAAKA,UAAU,4BAA4BL,MAAO,CAACC,gBAAiB,UAAW0D,MAAM,OAArF,UAA6F,qBAAKtD,UAAU,sBAAsBL,MAAO,CAAEC,gBAAgB,WAA9D,SAA0E,mBAAGud,MAAM,gBAAgBxd,MAAO,CAAE2H,SAAS,YAAmB,qBAAKtH,UAAU,YAAf,uDACrO,sBAAKA,UAAU,sCAAsCL,MAAO,CAAEC,gBAAgB,UAAWyW,UAAU,kCAAmCtM,aAAa,OAAQzC,SAAS,SAAUzH,OAAO,QAArL,UACE,qBAAKG,UAAU,gCAAf,wCACA,qBAAKA,UAAU,6CAAf,SAA6D+mB,EAAkB/b,YAC/E,qBAAKhL,UAAU,gCAAf,wCACA,qBAAKA,UAAU,6CAAf,SAA6D+mB,EAAkBhb,OAC/E,qBAAK/L,UAAU,gCAAf,4BACA,qBAAKA,UAAU,6CAAf,SAA6D+mB,EAAkBxhB,MAC/E,qBAAKvF,UAAU,gCAAf,4BACA,qBAAKA,UAAU,gCAAf,SAAgD+mB,EAAkBlb,iBAEpE,qBAAK7L,UAAU,cAAf,SACE,qBAAKL,MAAO,CAAC2D,MAAM,MAAOhD,WAAW,MAArC,SAA6CwrB,EAAU,cAAC,GAAD,CAAW5F,UAAWA,EAAWC,QAASA,EAASiD,WAAYA,EAAYrC,kBAAmBA,EAAmB0B,UAAWA,EAAWU,QAASA,EAAS+C,aAAcA,IAC7N,sBAAKvsB,MAAO,CAACqK,UAAU,SAAU5J,MAAM,UAAWL,UAAU,QAA5D,UAAqE,8BAAK,mBAAGod,MAAM,uBAAuBxd,MAAO,CAAC2H,SAAS,aAAoB,qBAAK3H,MAAO,CAAC2H,SAAS,QAAtB,+EAIpJ,sBAAKtH,UAAU,aAAaL,MAAO,CAAC6sB,WAAW,qBAA/C,UACE,sBAAKxsB,UAAU,qBAAqBL,MAAO,CAACC,gBAAiB,UAAW0D,MAAM,OAA9E,UACE,qBAAKtD,UAAU,sBAAsBL,MAAO,CAAEC,gBAAgB,WAA9D,SACE,mBAAGud,MAAM,gBAAgBxd,MAAO,CAAE2H,SAAS,YAE7C,qBAAKtH,UAAU,YAAf,gDAGF,qBAAKA,UAAU,MAAML,MAAO,CAACE,OAAO,QACpC,qBAAKF,MAAO,CAACE,OAAO,OAApB,SACE,cAAC,GAAD,CAAYknB,kBAAmBA,EAAmB0B,UAAWA,EAAWU,QAASA,EAASjD,UAAWA,EAAWC,QAASA,EAASiD,WAAYA,MAEhJ,qBAAKzpB,MAAO,CAACE,OAAO,kBCvG9B,IAAM4sB,GACa,uEADbA,GAEW,iEAFXA,GAGiB,gGAHjBA,GAIQ,mEA2KCC,OAxKf,SAAkBhvB,GAChB,IAAMivB,EAAajtB,aAAY,SAACN,GAAW,OAAOA,EAAMD,YAAYX,cAD7C,EAEW+D,oBAAS,GAFpB,mBAEhBqqB,EAFgB,KAELC,EAFK,OAGkBtqB,mBAASkqB,IAH3B,mBAGhBK,EAHgB,KAGFC,EAHE,OAIsBxqB,mBAASkqB,IAJ/B,mBAIhBO,EAJgB,KAIAC,EAJA,OAKW1qB,oBAAS,GALpB,mBAKhB2qB,EALgB,KAKLC,EALK,OAMe5qB,oBAAS,GANxB,mBAMhB6qB,EANgB,KAMHC,EANG,OAOO9qB,oBAAS,GAPhB,mBAOhB+qB,EAPgB,KAOPC,EAPO,OAQOhrB,oBAAS,GARhB,mBAQhBiQ,EARgB,KAQPC,EARO,OASSlQ,mBAAS,CACvCjE,OAAO,GACPqQ,aAAa,GACb6e,gBAAgB,GAChBnoB,SAAS,GACTC,YAAY,GACZF,SAAS,GACTG,IAAI,eACJhH,eAAe,cACfC,WAAWmuB,IAlBU,mBAShBjC,EATgB,KASN+C,EATM,KAqBjBhrB,EAAe,SAACjB,GACM,eAAvBA,EAAMkB,OAAO/E,OACd4vB,GAAW,GACXE,GAAY,SAACC,GACX,OAAO,2BACFA,GADL,IAEEtoB,SAAS,QAGb/C,QAAQC,IAAIooB,IAEZ6C,GAAW,GAEbE,GAAY,SAACC,GACX,OAAO,2BACFA,GADL,kBAEGlsB,EAAMkB,OAAOC,KAAMnB,EAAMkB,OAAO/E,YAgEvC,OACE,eAACwF,EAAA,EAAD,CAAMwqB,YAAU,EAACf,UAAWA,EAAWxpB,SA5DpB,SAAC5B,GACpBiR,GAAW,GACX,ICtDiBmb,EDsDXC,EAAOrsB,EAAMssB,eACnBtsB,EAAMsB,iBACNtB,EAAMusB,mBACuB,IAAzBF,EAAKG,kBACPnB,GAAa,GACbpa,GAAW,GACXsa,EAAiBN,IACjBQ,EAAmBR,KAEhB/B,EAAS/b,eAAiB+b,EAAS8C,iBACpCH,GAAe,GACfJ,EAAmBR,IACnBU,GAAa,GACbJ,EAAiBN,IACjBgB,EAAY,2BACP/C,GADM,IAET8C,gBAAgB,MAElB/a,GAAW,KCxEEmb,ED0ESlD,ECzEV1sB,IAAM8D,KAAK,aAAc8rB,ID2EpC5oB,MAAK,SAACZ,GACL,IAAMhF,EAAQgF,EAASC,KAAKjF,MACf,YAAVA,GACD1B,EAAM4lB,UAAU,+EAChBmK,EAAY,CACVnvB,OAAO,GACPqQ,aAAa,GACb6e,gBAAgB,GAChBnoB,SAAS,GACTC,YAAY,GACZF,SAAS,GACTG,IAAI,eACJhH,eAAe,gBAEjB8uB,GAAe,GACfJ,EAAmBR,IACnBU,GAAa,GACbJ,EAAiBN,IACjB/uB,EAAMuwB,YACY,YAAV7uB,IACRiuB,GAAe,GACfJ,EAAmBR,IACnBU,GAAa,GACbJ,EAAiBN,QAElBrI,OAAM,SAACC,GACRhiB,QAAQC,IAAI+hB,MACX6J,SAAQ,WACTzb,GAAW,OAQjB,UACE,eAACtP,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,cAACrQ,EAAA,EAAKM,MAAN,iCACA,cAACN,EAAA,EAAKO,QAAN,CAAciS,UAAQ,EAAChT,KAAK,SAAS7D,KAAK,OAAOqvB,YAAY,UAAUxwB,MAAO+sB,EAASpsB,OAAQqF,SAAUlB,EAAcyqB,UAAWE,IAClI,cAACjqB,EAAA,EAAKO,QAAQ0qB,SAAd,CAAuBtvB,KAAK,UAA5B,SAAuCkuB,OAGzC,eAAC7pB,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,cAACrQ,EAAA,EAAKM,MAAN,uCACA,cAACN,EAAA,EAAKO,QAAN,CAAciS,UAAQ,EAAChT,KAAK,eAAe7D,KAAK,WAAWqvB,YAAY,WAAWxwB,MAAO+sB,EAAS/b,aAAchL,SAAUlB,IAC1H,cAACU,EAAA,EAAKO,QAAQ0qB,SAAd,CAAuBtvB,KAAK,UAA5B,qFAGF,eAACqE,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,cAACrQ,EAAA,EAAKM,MAAN,oDACA,cAACN,EAAA,EAAKO,QAAN,CAAciS,UAAQ,EAAChT,KAAK,kBAAkB7D,KAAK,WAAWqvB,YAAY,mBAAmBxwB,MAAO+sB,EAAS8C,gBAAiB7pB,SAAUlB,EAAcyqB,UAAWA,IACjK,cAAC/pB,EAAA,EAAKO,QAAQ0qB,SAAd,CAAuBtvB,KAAK,UAA5B,SAAuCguB,OAGzC,eAAC3pB,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,cAACrQ,EAAA,EAAKM,MAAN,2BACA,cAACN,EAAA,EAAKO,QAAN,CAAciS,UAAQ,EAAChT,KAAK,WAAW7D,KAAK,OAAOqvB,YAAY,YAAYxwB,MAAO+sB,EAASrlB,SAAU1B,SAAUlB,IAC/G,cAACU,EAAA,EAAKO,QAAQ0qB,SAAd,CAAuBtvB,KAAK,UAA5B,yEAGF,eAACqE,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,cAACrQ,EAAA,EAAKM,MAAN,uCACA,cAACN,EAAA,EAAKO,QAAN,CAAciS,UAAQ,EAAChT,KAAK,cAAc7D,KAAK,OAAOqvB,YAAY,eAAexwB,MAAO+sB,EAASplB,YAAa3B,SAAUlB,IACxH,cAACU,EAAA,EAAKO,QAAQ0qB,SAAd,CAAuBtvB,KAAK,UAA5B,qFAGF,eAACqE,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,8BACE,cAACrQ,EAAA,EAAKM,MAAN,6BAEF,cAACN,EAAA,EAAKkrB,MAAN,CAAY1Y,UAAQ,EAACrF,QAA0B,iBAAjBoa,EAASnlB,IAAcc,QAAM,EAACyiB,MAAM,eAAKnmB,KAAK,MAAM7D,KAAM,QAASnB,MAAM,eAAK2wB,SAAU,2DAAe3qB,SAAUlB,IAC/I,cAACU,EAAA,EAAKkrB,MAAN,CAAY1Y,UAAQ,EAACrF,QAA0B,iBAAjBoa,EAASnlB,IAAcc,QAAM,EAACyiB,MAAM,eAAKnmB,KAAK,MAAM7D,KAAM,QAASnB,MAAM,eAAK2wB,SAAU,2DAAe3qB,SAAUlB,IAC/I,cAACU,EAAA,EAAKO,QAAQ0qB,SAAd,CAAuBtvB,KAAK,UAA5B,yEAGF,eAACqE,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,8BACE,cAACrQ,EAAA,EAAKM,MAAN,6BAEF,cAACN,EAAA,EAAKkrB,MAAN,CAAY/d,QAAqC,gBAA5Boa,EAASnsB,eAAkCoX,UAAQ,EAACtP,QAAM,EAACyiB,MAAM,eAAKnmB,KAAK,iBAAiBhF,MAAM,cAAcmB,KAAM,QAASwvB,SAAU,2DAAe3qB,SAAUlB,IACvL,cAACU,EAAA,EAAKkrB,MAAN,CAAY/d,QAAqC,eAA5Boa,EAASnsB,eAAiCoX,UAAQ,EAACtP,QAAM,EAACyiB,MAAM,qBAAMnmB,KAAK,iBAAiBhF,MAAM,aAAamB,KAAM,QAASwvB,SAAU,2DAAe3qB,SAAUlB,IACtL,cAACU,EAAA,EAAKO,QAAQ0qB,SAAd,CAAuBtvB,KAAK,UAA5B,yEAGF,eAACqE,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,cAACrQ,EAAA,EAAKM,MAAN,iCACA,cAACN,EAAA,EAAKO,QAAN,CAAciS,UAAQ,EAAChT,KAAK,WAAW7D,KAAK,OAAOqvB,YAAY,iBAAiBxwB,MAAO+sB,EAAStlB,SAAUzB,SAAUlB,EAAckhB,SAAU2J,IAC5I,cAACnqB,EAAA,EAAKO,QAAQ0qB,SAAd,CAAuBtvB,KAAK,UAA5B,+EAIF,qBAAKkB,UAAU,aAAf,SACE,eAACK,EAAA,EAAD,CAAQL,UAAU,QAAQlB,KAAK,SAASyB,QAAQ,OAAhD,WACe,IAAZiS,EAAmB,cAACuB,GAAA,EAAD,CAAS/T,UAAU,OAAO4D,GAAG,OAAOoQ,UAAU,SAASH,KAAK,KAAKI,KAAK,WAAa,KADzG,qCEvKFwY,GACa,uEADbA,GAGiB,gGAHjBA,GAIQ,iEAmOC8B,OAhOf,SAAoB7wB,GAAQ,IAAD,EAES6E,oBAAS,GAFlB,mBAElBqqB,EAFkB,KAEPC,EAFO,OAGgBtqB,mBAASkqB,IAHzB,mBAGlBK,EAHkB,KAGJC,EAHI,OAISxqB,oBAAS,GAJlB,mBAIlB2qB,EAJkB,KAIPC,EAJO,OAKK5qB,oBAAS,GALd,mBAKlBiQ,EALkB,KAKTC,EALS,OAMOlQ,mBAAS,IANhB,mBAMlBmoB,EANkB,KAMR+C,EANQ,KAQnBhrB,EAAe,SAACjB,GACpBisB,EAAY,2BACP/C,GADM,kBAERlpB,EAAMkB,OAAOC,KAAMnB,EAAMkB,OAAO/E,UAiIrC,OA7HA2G,qBAAU,WACRmpB,EAAY,2BACP/vB,EAAM8wB,YADA,IAET7f,aAAa,GACb6e,gBAAgB,QAEjB,CAAC9vB,EAAM8wB,aAwHR,eAACrrB,EAAA,EAAD,CAAMwqB,YAAU,EAACf,UAAWA,EAAWxpB,SAtHpB,SAAC5B,GACpBiR,GAAW,GACX,IDxBuBmb,ECwBjBC,EAAOrsB,EAAMssB,eACnBtsB,EAAMsB,iBACNtB,EAAMusB,mBACuB,IAAzBF,EAAKG,kBACPnB,GAAa,GACbpa,GAAW,GACXsa,EAAiBN,KAEd/B,EAAS/b,eAAiB+b,EAAS8C,iBACpCL,GAAa,GACbJ,EAAiBN,IACjBgB,EAAY,2BACP/C,GADM,IAET8C,gBAAgB,MAElB/a,GAAW,KDvCQmb,EC0CSlD,EDzChB1sB,IAAM8D,KAAK,eAAgB8rB,IC0C9B5oB,MAAK,SAACZ,GACc,YAAxBA,EAASC,KAAKjF,OACf+tB,GAAa,GACbzvB,EAAM+wB,aAAY,GAClB/wB,EAAMgxB,WAAW,qEAEjBvB,GAAa,GACbJ,EAAiBN,QAElBrI,OAAM,SAACC,GACR8I,GAAa,GACbJ,EAAiBN,OAChByB,SAAQ,WACTzb,GAAW,OAoFjB,UACE,eAACtP,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,cAACrQ,EAAA,EAAKM,MAAN,iCACA,cAACN,EAAA,EAAKO,QAAN,CAAciS,UAAQ,EAAChT,KAAK,SAAS7D,KAAK,OAAOqvB,YAAY,UAAUxwB,MAAO+sB,EAASpsB,QAAU,GAAIqlB,UAAQ,OAG/G,eAACxgB,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,cAACrQ,EAAA,EAAKM,MAAN,uCACA,cAACN,EAAA,EAAKO,QAAN,CAAciS,UAAQ,EAAChT,KAAK,eAAe7D,KAAK,WAAWqvB,YAAY,WAAWxwB,MAAO+sB,EAAS/b,cAAgB,GAAIhL,SAAUlB,IAChI,cAACU,EAAA,EAAKO,QAAQ0qB,SAAd,CAAuBtvB,KAAK,UAA5B,qFAGF,eAACqE,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,cAACrQ,EAAA,EAAKM,MAAN,oDACA,cAACN,EAAA,EAAKO,QAAN,CAAciS,UAAQ,EAAChT,KAAK,kBAAkB7D,KAAK,WAAWqvB,YAAY,mBAAmBxwB,MAAO+sB,EAAS8C,iBAAmB,GAAI7pB,SAAUlB,EAAcyqB,UAAWA,IACvK,cAAC/pB,EAAA,EAAKO,QAAQ0qB,SAAd,CAAuBtvB,KAAK,UAA5B,SAAuCguB,OAGzC,eAAC3pB,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,cAACrQ,EAAA,EAAKM,MAAN,2BACA,cAACN,EAAA,EAAKO,QAAN,CAAciS,UAAQ,EAAChT,KAAK,WAAW7D,KAAK,OAAOqvB,YAAY,YAAYxwB,MAAO+sB,EAASrlB,UAAY,GAAIse,UAAQ,OAGrH,eAACxgB,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,cAACrQ,EAAA,EAAKM,MAAN,uCACA,cAACN,EAAA,EAAKO,QAAN,CAAcf,KAAK,cAAc7D,KAAK,OAAOqvB,YAAY,eAAexwB,MAAO+sB,EAASplB,aAAe,GAAIqe,UAAQ,OAGrH,eAACxgB,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,8BACE,cAACrQ,EAAA,EAAKM,MAAN,6BAEF,cAACN,EAAA,EAAKkrB,MAAN,CAAY/d,QAA0B,iBAAjBoa,EAASnlB,IAAcc,QAAM,EAACyiB,MAAM,eAAKnmB,KAAK,MAAM7D,KAAM,QAASnB,MAAM,eAAK2wB,SAAU,2DAAe3K,UAAQ,IACpI,cAACxgB,EAAA,EAAKkrB,MAAN,CAAY/d,QAA0B,iBAAjBoa,EAASnlB,IAAcc,QAAM,EAACyiB,MAAM,eAAKnmB,KAAK,MAAM7D,KAAM,QAASnB,MAAM,eAAK2wB,SAAU,2DAAe3K,UAAQ,IACpI,cAACxgB,EAAA,EAAKO,QAAQ0qB,SAAd,CAAuBtvB,KAAK,UAA5B,yEAGF,eAACqE,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,8BACE,cAACrQ,EAAA,EAAKM,MAAN,6BAEF,cAACN,EAAA,EAAKkrB,MAAN,CAAY/d,QAAqC,gBAA5Boa,EAASnsB,eAAkCoX,UAAQ,EAACtP,QAAM,EAACyiB,MAAM,eAAKnmB,KAAK,iBAAiBhF,MAAM,cAAcmB,KAAM,QAASwvB,SAAU,2DAAe3K,UAAQ,IACrL,cAACxgB,EAAA,EAAKkrB,MAAN,CAAY/d,QAAqC,eAA5Boa,EAASnsB,eAAiCoX,UAAQ,EAACtP,QAAM,EAACyiB,MAAM,qBAAMnmB,KAAK,iBAAiBhF,MAAM,aAAamB,KAAM,QAASwvB,SAAU,2DAAe3K,UAAQ,IACpL,cAACxgB,EAAA,EAAKO,QAAQ0qB,SAAd,CAAuBtvB,KAAK,UAA5B,yEAGF,eAACqE,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,cAACrQ,EAAA,EAAKM,MAAN,iCACA,cAACN,EAAA,EAAKO,QAAN,CAAcf,KAAK,WAAW7D,KAAK,OAAOqvB,YAAY,iBAAiBxwB,MAAO+sB,EAAStlB,UAAY,GAAIzB,SAAUlB,EAAckhB,UAAQ,OAGzI,eAACxgB,EAAA,EAAKI,MAAN,CAAY5D,MAAO,CAAC6T,aAAa,QAAjC,UACE,cAACrQ,EAAA,EAAKM,MAAN,2BACA,cAACN,EAAA,EAAKO,QAAN,CAAc5E,KAAK,OAAOnB,MAA+B,IAAxB+sB,EAAS9b,YAAmB,qBAAQ,2BAAQ+U,UAAQ,OAGvF,sBAAK3jB,UAAU,aAAf,UAC4B,IAAzB0qB,EAAS9b,YACV,eAACvO,EAAA,EAAD,CAAQL,UAAU,YAAYlB,KAAK,SAASyB,QAAQ,OAApD,WACa,IAAZiS,EAAmB,cAACuB,GAAA,EAAD,CAAS/T,UAAU,OAAO4D,GAAG,OAAOoQ,UAAU,SAASH,KAAK,KAAKI,KAAK,WAAa,KADvG,+BAIA,eAAC5T,EAAA,EAAD,CAAQL,UAAU,YAAYO,QAAQ,UAAUzB,KAAK,SAAS0B,QAzF9C,WAGlB,IDrGqBlC,GCmGkB,IAAtCqZ,OAAOiO,QAAQ,iFAChBnT,GAAW,IDpGUnU,ECqGOosB,EAASpsB,ODpGvBN,IAAMmP,IAAI,gBAAkB7O,ICqGjC0G,MAAK,SAACZ,GACc,YAAxBA,EAASC,KAAKjF,OACf+tB,GAAa,GACb1a,GAAW,GACX/U,EAAM+wB,aAAY,GAClB/wB,EAAMgxB,WAAW,yEACjBhxB,EAAMuwB,aAENd,GAAa,GACbJ,EAAiBN,IACjBha,GAAW,OAEZ2R,OAAM,SAACC,GACN8I,GAAa,GACbJ,EAAiBN,IACjBha,GAAW,QAsEb,WACa,IAAZD,EAAmB,cAACuB,GAAA,EAAD,CAAS/T,UAAU,OAAO4D,GAAG,OAAOoQ,UAAU,SAASH,KAAK,KAAKI,KAAK,WAAa,KADvG,wBAM0B,IAAzByW,EAAS9b,YACV,eAACvO,EAAA,EAAD,CAAQL,UAAU,OAAOO,QAAQ,SAASzB,KAAK,SAAS0B,QAxHvC,WAGnB,IDlFsBlC,GCgFkB,IAAvCqZ,OAAOiO,QAAQ,uFAChBnT,GAAW,IDjFWnU,ECkFOosB,EAASpsB,ODjFxBN,IAAMmP,IAAI,iBAAmB7O,ICkFlC0G,MAAK,SAACZ,GACc,YAAxBA,EAASC,KAAKjF,OACf+tB,GAAa,GACb1a,GAAW,GACX/U,EAAM+wB,aAAY,GAClB/wB,EAAMgxB,WAAW,+EACjBhxB,EAAMuwB,aAENd,GAAa,GACbJ,EAAiBN,IACjBha,GAAW,OAEZ2R,OAAM,SAACC,GACN8I,GAAa,GACbJ,EAAiBN,IACjBha,GAAW,QAqGb,WACa,IAAZD,EAAmB,cAACuB,GAAA,EAAD,CAAS/T,UAAU,OAAO4D,GAAG,OAAOoQ,UAAU,SAASH,KAAK,KAAKI,KAAK,WAAa,KADvG,8BAIA,eAAC5T,EAAA,EAAD,CAAQL,UAAU,OAAOO,QAAQ,SAASzB,KAAK,SAAS0B,QAtJxC,WAIlB,ID9DqBlC,GC4DgB,IAApCqZ,OAAOiO,QAAQ,0EAChBnT,GAAW,ID7DUnU,EC8DOosB,EAASpsB,OD7DvBN,IAAM8G,OAAO,gBAAkBxG,IC8DpC0G,MAAK,SAACZ,GACc,YAAxBA,EAASC,KAAKjF,OACf+tB,GAAa,GACb1a,GAAW,GACX/U,EAAM+wB,aAAY,GAClB/wB,EAAMgxB,WAAW,kEACjBhxB,EAAMuwB,aAENd,GAAa,GACbJ,EAAiBN,IACjBha,GAAW,OAEZ2R,OAAM,SAACC,GACN8I,GAAa,GACbJ,EAAiBN,IACjBha,GAAW,QAkIb,WACa,IAAZD,EAAmB,cAACuB,GAAA,EAAD,CAAS/T,UAAU,OAAO4D,GAAG,OAAOoQ,UAAU,SAASH,KAAK,KAAKI,KAAK,WAAa,KADvG,yBC3GO0a,OAjHf,SAAiBjxB,GAAQ,IAAD,EACE6E,oBAAS,GADX,mBACf1B,EADe,KACTkD,EADS,OAEkBxB,mBAAS,IAF3B,mBAEfqsB,EAFe,KAEDC,EAFC,OAGUtsB,oBAAS,GAHnB,mBAGfusB,EAHe,KAGLL,EAHK,OAIUlsB,mBAAS,IAJnB,mBAIfwsB,EAJe,KAIL5pB,EAJK,KAKtBb,qBAAU,WACR2pB,MACC,IAEH,IAAMA,EAAQ,uCAAG,4BAAAprB,EAAA,sEFNC7E,IAAMiE,IAAI,kBEMX,OACTmC,EADS,OAEfe,EAAYf,EAASC,MAFN,2CAAH,qDATQ,EAcc9B,mBAAS,IAdvB,mBAcfisB,EAde,KAcHQ,EAdG,KAqBhBC,EAAiB,SAACtJ,GACtBkJ,EAAgBlJ,GAChB5hB,GAAQ,IAQV,OACE,mCACE,sBAAK/D,UAAU,gBAAgBL,MAAO,CAACE,OAAO,SAA9C,UACE,qBAAKG,UAAU,YAAf,SACE,sBAAKA,UAAU,+BAA+BL,MAAO,CAACE,OAAO,OAAQ2T,aAAa,MAAQzT,UAAU,MAAQH,gBAAgB,WAA5H,UACE,sBAAKI,UAAU,kBAAkBL,MAAO,CAACE,OAAO,QAAhD,UAAyD,qBAAKG,UAAU,4BAA4BL,MAAO,CAAEC,gBAAgB,UAAW0D,MAAM,OAAQlD,MAAM,WAAnG,SAA+G,mBAAGJ,UAAU,8BAAoC,qBAAKA,UAAU,4BAAf,0CACzN,sBAAKA,UAAU,MAAML,MAAO,CAACE,OAAO,qBAApC,UACE,sBAAKG,UAAU,wCAAwCL,MAAO,CAACE,OAAO,OAAQO,MAAM,UAAWmH,WAAW,QAA1G,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,SACnB,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,6CACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,gCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,sCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,gCACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,OAAnB,0BACA,qBAAK3D,MAAO,CAAC2D,MAAM,YAErB,qBAAKtD,UAAU,uBAAuBL,MAAO,CAACE,OAAO,oBAArD,SACe,MAAZkvB,GACDA,EAASpqB,KAAI,SAACipB,GACZ,OACE,sBAAuB5tB,UAAU,gEAAgEL,MAAO,CAACE,OAAO,OAAQ0H,WAAW,QAAnI,UACE,qBAAK5H,MAAO,CAAC2D,MAAM,OAAnB,SACgB,iBAAbsqB,EAAKroB,IACJ,qBAAKlC,IAAI,eAAe4C,IAAI,MAAM3C,MAAM,KAAKzD,OAAO,OACpD,qBAAKwD,IAAI,eAAe4C,IAAI,QAAQ3C,MAAM,KAAKzD,OAAO,SAG1D,qBAAKF,MAAO,CAAC2D,MAAM,OAAnB,SAA4BsqB,EAAKtvB,SACjC,qBAAKqB,MAAO,CAAC2D,MAAM,OAAnB,SAA4BsqB,EAAKvoB,WACjC,qBAAK1F,MAAO,CAAC2D,MAAM,OAAnB,SAA4BsqB,EAAKtoB,cACjC,qBAAK3F,MAAO,CAAC2D,MAAM,OAAnB,SAA4BsqB,EAAKxoB,WACjC,qBAAKzF,MAAO,CAAC2D,MAAM,OAAnB,SAC2B,gBAAxBsqB,EAAKrvB,eAAmC,eAAO,uBAElD,qBAAKoB,MAAO,CAAC2D,MAAM,OAAnB,SACwB,IAArBsqB,EAAKhf,YAAoB,qBAAQ,6BAEpC,qBAAKjP,MAAO,CAAC2D,MAAM,OAAnB,SAA2B,wBAAQtD,UAAU,mCAAmCQ,QAAS,WApD3GwuB,EAoDyHpB,GAnDzHa,GAAY,IAmDiC,8BAjBnBb,EAAKtvB,qBA4B3B,qBAAK0B,UAAU,YAAf,SACE,sBAAKA,UAAU,+BAA+BL,MAAO,CAACE,OAAO,OAAQ2T,aAAa,MAAQzT,UAAU,MAAQH,gBAAgB,WAA5H,UACE,sBAAKI,UAAU,kBAAkBL,MAAO,CAACE,OAAO,QAAhD,UAAyD,qBAAKG,UAAU,4BAA4BL,MAAO,CAAEC,gBAAgB,UAAW0D,MAAM,OAAQlD,MAAM,WAAnG,SAA+G,mBAAGJ,UAAU,6BAAmC,qBAAKA,UAAU,4BAAf,SACvM,GAAZ8uB,EAAoB,4BAAU,iCACnC,qBAAK9uB,UAAU,OAAOL,MAAO,CAACE,OAAO,qBAArC,SACe,GAAZivB,EACD,cAAC,GAAD,CAAUxL,UAAW2L,EAAgBhB,SAAUA,IAE/C,cAAC,GAAD,CAAYO,WAAYA,EAAYP,SAAUA,EAAUQ,YAAaA,EAAaC,WAAYO,WAMpG,qBAAKtvB,MAAO,CAACkjB,SAAU,WAAYC,OAAQ,OAAQC,MAAO,QAA1D,SACE,cAACE,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKvjB,MAAO,CAAC2D,MAAM,SAAnB,SACE,eAAC6f,GAAA,EAAD,CAAOC,QAvED,WAChBrf,GAAQ,GACR8qB,EAAgB,KAqEqBhuB,KAAMA,EAAM0iB,MAAO,IAAMC,UAAQ,EAA5D,UACE,eAACL,GAAA,EAAMniB,OAAP,CAAcrB,MAAO,CAACC,gBAAgB,WAAtC,UACE,wBAAQI,UAAU,UAAUL,MAAO,CAACS,MAAM,SAA1C,qBACA,gDAEF,cAAC+iB,GAAA,EAAM9hB,KAAP,UAAautB,mB,OCnFdM,I,UCxBTphB,GAAe,CACnBqhB,MAAO,IAIHC,GAAU,iBAiBDC,GATS,WAAmC,IAAlCjwB,EAAiC,uDAAzB0O,GAAczO,EAAW,uCACxD,OAAGA,EAAOP,OAASswB,GACV,2BAAIhwB,GAAX,IAAkB+vB,MAAM9vB,EAAO8vB,QAExB/vB,GCUPkwB,GAAY,GAyODC,OAxOf,SAAkB7xB,GAAO,IAAD,EACI6E,mBAAS,UADb,gCAEcA,mBAAS,KAFvB,mBAEbqL,EAFa,KAEF4hB,EAFE,OAGuBjtB,mBAAS,IAHhC,mBAGbktB,EAHa,KAGEC,EAHF,OAIUntB,mBAAS,IAJnB,mBAIbojB,EAJa,KAIJgK,EAJI,KAKdC,EAAWlwB,aAAY,SAACN,GAAD,OAAUA,EAAMD,YAAYb,UALrC,EAMYiE,mBAAS,IANrB,mBAMbstB,EANa,KAMHC,EANG,KAOdC,EAAYtF,mBAPE,EAQcloB,qBARd,mBAQb/E,EARa,KAQFwyB,EARE,OASEztB,oBAAS,GATX,mBASb0tB,EATa,KASRC,EATQ,KAUd3wB,EAAWC,cAEjB8E,qBAAU,WACHyrB,EAAUlF,SACTkF,EAAUlF,QAAQsF,eAAe,CAAEC,SAAU,WAGjDd,GAAY1hB,IACd,CAACA,IAEH+J,OAAO0Y,eAAiB,SAASvqB,GAC5B6H,GAAaiiB,EAAUhiB,GAAW5I,MAAK,SAAC2G,GACpCtJ,QAAQC,IAAI,cACZD,QAAQC,IAAIqJ,EAAOtH,UAG5BC,qBAAU,WACN,IAAIgsB,EAAY,IAAKC,UAAU,0CAuE/B,OApEAD,EAAUE,OAAS,WzDtCpB,IAAsBlyB,EyDuCjB+D,QAAQC,IAAI,YzDvCKhE,EyDyCJsxB,EzDxChB5xB,IAAMiE,IAAIqL,GAAS,0BAA0BhP,IyDwClB0G,MAAK,SAAC2G,GAC1BtJ,QAAQC,IAAI,UACK,KAAdqJ,EAAOtH,OACNsH,EAAOtH,KAAO,IAEdmrB,EAAa7jB,EAAOtH,SAG5BhC,QAAQC,IAAI,aAAestB,G3D2EhC,SAAqBtxB,GAExB,OADeN,IAAMiE,IAAI,qBAAqB3D,G2D1EtCmyB,CAAYb,GAAW5qB,MAAK,SAAC2G,GAEO,gBAA7BA,EAAOtH,KAAK9F,eAA+BoN,EAAOtH,KAAK9F,eAAe,eACpC,eAA7BoN,EAAOtH,KAAK9F,eAA8BoN,EAAOtH,KAAK9F,eAAe,qBACxC,eAA7BoN,EAAOtH,KAAK9F,iBAA8BoN,EAAOtH,KAAK9F,eAAe,sBAC7EuxB,EAAYnkB,EAAOtH,MAEnBisB,EAAUI,KAAKljB,KAAKC,UAAU,CAC1BkjB,OAAO,QACPC,KAAKhB,EACLiB,eAAe,CAACvyB,OAAOsxB,EAAUvqB,SAASsG,EAAOtH,KAAKgB,SAASyrB,SAASnlB,EAAOtH,KAAK9F,eAAeyQ,OAAO,sBAC1G2W,QAAQ,UAKpB2K,EAAUS,QAAQ,WACd1uB,QAAQC,IAAI,aAEhBguB,EAAUU,UAAY,SAACxvB,GAGnB,IDrFmB2tB,ECqFf9qB,EAAOmJ,KAAKyjB,MAAMzvB,EAAM6C,MAC5BhC,QAAQC,IAAI,UAAY+B,EAAKssB,QAEZ,UAAdtsB,EAAKssB,QAKc,QAAdtsB,EAAKssB,OAHTjB,EAAkBrrB,EAAK6sB,gBAQL,QAAd7sB,EAAKssB,QAETtuB,QAAQC,IAAI,UACZD,QAAQC,IAAIsL,GACZ8hB,EAAkBrrB,EAAK6sB,iBAGL,aAAd7sB,EAAKssB,SACNtsB,EAAKusB,OAAOhB,GACXrwB,GD3GW4vB,EC2Ga,CAACxJ,QAAQthB,EAAK1B,KAAK,mED1GtD,CAAC7D,KAAKswB,GAAWD,WC4GVK,GAAa,SAAC2B,GACV,IAAMC,EAAU,CAACzuB,KAAK0B,EAAK1B,KAAMiuB,KAAKvsB,EAAKusB,KAAK3c,KAAK5P,EAAK4P,KAAK0R,QAAQthB,EAAKshB,QAAS0L,SAAShtB,EAAKgtB,SAASC,KAAKjtB,EAAKusB,OAAOhB,EAAW2B,SAAQ,GAEpJ,OAAOJ,EAAKre,OAAOse,QAI3BpB,EAAaM,GAEP,WACFjuB,QAAQC,IAAI,8BAChBqL,GAAaiiB,EAAUN,IAAWtqB,MAAK,SAAC2G,GACpCtJ,QAAQC,IAAI,cACZguB,EAAUkB,cAGhB,IAEF,IAQMC,EAAU,SAACjwB,GACA,KAAVmkB,IAEAsK,GACCyB,IAENl0B,EAAUkzB,KAAKljB,KAAKC,UAAU,CAC5BkjB,OAAO,WACPC,KAAKhB,EAELjtB,KAAKktB,EAASxqB,SAEd4O,KAAK4b,EAAStxB,eACd8yB,UAAS,IAAIruB,MAAO4J,iBACpB+Y,QAAQA,KAEZgK,EAAW,MAUL+B,EAAM,WACVxB,GAAQD,GACRzyB,EAAUkzB,KAAKljB,KAAKC,UAAU,CAC5BkjB,OAAO,MACPC,KAAKhB,EACLiB,eAAe,CAACvyB,OAAOsxB,EAAUvqB,SAASwqB,EAASxqB,SAASyrB,SAASjB,EAAStxB,eAAeyQ,OAAOihB,EAAI,qBAAM,4BAC9GtK,QAAQ,OAGZ,OACA,qCACA,eAAC,GAAD,CAAkB7a,YAAY,qBAAMD,WAAW,yBAAyBzK,MAAM,UAA9E,UACI,uBAAMJ,UAAU,OAAhB,kCACO4vB,EADP,qBAC0BC,EAASxqB,SADnC,IAC8CwqB,EAAStxB,eADvD,OAGA,wBAAQyB,UAAU,kCAAkCL,MAAO,CAACC,gBAAgBqwB,EAAI,QAAQ,MAAO7vB,MAAM,SAAUI,QAASkxB,EAAxH,SAA8HzB,EAAI,2BAAO,mCAEzI,wBAAQjwB,UAAU,kCAAkCL,MAAO,CAACC,gBAAgB,UAAWQ,MAAM,SAAUI,QAxB7F,WzD1JT,IAAuBlC,EyD2JxBkxB,EAAa,KzD3JWlxB,EyD4JVsxB,EzD3JX5xB,IAAMiE,IAAIqL,GAAS,2BAA2BhP,IyD2JxB0G,MAAK,SAAC2G,GAC3BtJ,QAAQC,IAAI,iBAqBhB,yCAGJ,sBAAKtC,UAAU,WAAf,UAEI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,kEAAkEL,MAAO,CAACE,OAAO,QAAhG,UAEO,+EACC,qBAAMG,UAAU,gEAAgEL,MAAO,CAACE,OAAO,OAA/F,SACK4vB,GAAgBA,EAAe9qB,KAAI,SAACuF,EAAKtF,GAC1C,OACI,sBAAK5E,UAAU,oCAAgDL,MAAO,CAAC2H,SAAS,OAAhF,UACI,qBAAKtH,UAAU,yBAAf,SACCkK,EAAK5L,SAEN,qBAAK0B,UAAU,yBAAf,SACCkK,EAAK7E,WAEN,qBAAKrF,UAAU,yBAAf,SACCkK,EAAK4mB,WAEN,qBAAK9wB,UAAU,YAAYL,MAAO,CAACC,gBAA8B,6BAAdsK,EAAK8E,OAAgB,MAAM,QAAS5O,MAAM,SAA7F,SACC8J,EAAK8E,WAX8CpK,aAwB5E,qBAAK5E,UAAU,aAAf,SACI,sBAAKA,UAAU,oCAAoCL,MAAO,CAACE,OAAO,QAAlE,UACI,qBAAMG,UAAU,qBAAqBL,MAAO,CAACE,OAAO,sBAApD,SAEA,qBAAMG,UAAU,4DAA4DL,MAAO,CAACgyB,UAAU,sBAA9F,SACK/jB,GAAWA,EAAUjJ,KAAI,SAACitB,EAAKhtB,GAAS,OACrC,qBAAKiC,IAAKkpB,EAAwB/vB,UAAW4xB,EAAKN,KAAK,8BAA8B,kCAArF,SACI,sBAAK3xB,MAAO,CAAEkyB,SAAS,OAAvB,UACI,sBAAKlyB,MAAO,CAACS,MAAM,SAAnB,UACKwxB,EAAKjvB,KADV,IACiBivB,EAAK3d,KADtB,OAGA,qBAAKjU,UAAU,UAAUL,MAAQ,CAACC,gBAAgBgyB,EAAKN,KAAK,SAAS,OAAOQ,UAAU,aAAtF,SACKF,EAAKjM,UAEV,qBAAKhmB,MAAO,CAAC2H,SAAS,QAAQlH,MAAM,SAApC,SACCwxB,EAAKP,SAASzkB,uBATGhI,UAgBlC,sBAAK5E,UAAU,yBAAf,UACI,uBAAOlB,KAAK,OAAOkB,UAAU,sBAAsB2C,KAAK,UAAUovB,WA3GhE,SAACjsB,GACJ,UAARA,EAAEqP,KACDsc,EAAQ3rB,IAyG0FnI,MAAOgoB,EAAShiB,SA9GlG,SAACnC,GACrBmuB,EAAWnuB,EAAMkB,OAAO/E,UA8GZ,wBAAQqC,UAAU,mCAAkCL,MAAO,CAACE,OAAO,SAAUyH,SAAS,UAAY9G,QAASixB,EAA3G,+CC9JLO,OA9Ef,SAA0Bt0B,GACtB,IAAMwZ,EAAqBxX,aAAY,SAACN,GAAD,OAAUA,EAAMiP,iBAAiBL,sBAClE+L,EAAgBra,aAAY,SAACN,GAAD,OAAUA,EAAMiP,iBAAiBN,iBAFvC,EAIiBxL,qBAJjB,mBAIrByX,EAJqB,KAIJC,EAJI,OAKwB1X,qBALxB,mBAKrB2X,EALqB,KAKDC,EALC,OAMC5X,oBAAS,GANV,mBAMrBiQ,EANqB,KAMbC,EANa,OAQIlQ,mBAAS,4BARb,mBAQrBwW,EARqB,KAQXC,EARW,KAUtBvW,EAAe,SAACjB,GAClBwX,EAAYxX,EAAMkB,OAAO/E,QA6B7B,OA3BA2G,qBAAU,WACNmO,GAAW,GACXxH,KAAmBjG,MAAK,SAAC2G,GAErB,IAAMwL,EAAWxL,EAAOtH,KAAK8S,SAEvBiD,EAAczO,EAAOtH,KAAK+V,YAC1BhD,EAAgBzL,EAAOtH,KAAK+S,cAAczS,KAAI,SAACuF,EAAMtF,GACvD,OAAO,2BAAIsF,GAAX,IAAiB2B,YAAYuO,EAAYxV,GAAOiH,YAAYxG,SAAS8R,EAASvS,GAAOS,cAEzF4U,EAAkB7C,GAClB3E,GAAW,QAEjB,CAACyE,IACH5S,qBAAU,WACNmO,GAAW,GACXvH,KAAuBlG,MAAK,SAAC2G,GACzBtJ,QAAQC,IAAIqJ,EAAOtH,MACnB,IAAM+V,EAAczO,EAAOtH,KAAK+V,YAC1BnE,EAAWtK,EAAOtH,KAAK4R,SAAStR,KAAI,SAACuF,EAAMtF,GAC7C,OAAO,2BAAIsF,GAAX,IAAiB2B,YAAYuO,EAAYxV,GAAOiH,iBAEpDsO,EAAsBlE,GACtBxD,GAAW,QAEjB,CAACsH,IAGC,qCACC,eAACX,GAAA,EAAD,CAAaC,QAAM,EAAnB,UACQ,cAACC,GAAA,EAAD,CAAcxa,KAAK,QAAQa,MAAO,CAACS,MAAM,SAAWG,QAAO,UAAmB,6BAAbwY,EAAsB,UAAY,IAAOpW,KAAK,OAAQ2N,QAAoB,6BAAXyI,EAAmBpb,MAAM,2BAAOgG,SAAUlB,EAA1K,SAAwL,qBAAKzC,UAAU,YAAf,sDACzL,cAACsZ,GAAA,EAAD,CAAcxa,KAAK,QAAQa,MAAO,CAACS,MAAM,SAAUG,QAAO,UAAkB,uBAAbwY,EAAqB,UAAY,IAAOpW,KAAK,OAAQ2N,QAAoB,uBAAXyI,EAAkBpb,MAAM,qBAAMgG,SAAUlB,EAArK,SAAmL,qBAAKzC,UAAU,YAAf,qCAE3L,sBAAKA,UAAU,mBAAmBL,MAAO,CAACE,OAAO,oBAAjD,UAGA,sBAAKG,UAAU,MAAML,MAAO,CAACE,OAAO,kBAAmBD,gBAAgB,QAAQwqB,QAAmB,6BAAXrR,EAAkB,QAAS,QAAlH,UACI,sBAAK/Y,UAAU,gCAAgCL,MAAO,CAACE,OAAO,qBAA9D,UACA,cAAC,GAAD,CAAkBiL,YAAY,2BAAOD,WAAW,0BAA0BzK,MAAM,UAAhF,SACCoS,EAAQ,cAACuB,GAAA,EAAD,CAASnQ,GAAG,OAAOoQ,UAAU,SAASzT,QAAQ,OAAOsT,KAAK,KAAKI,KAAK,SAASjU,UAAU,SAAS,OAGzG,cAAC,GAAD,CAAoBuZ,UAAU,EAAMM,cAAeG,OAEnD,sBAAKha,UAAU,qCAAqCL,MAAO,CAACE,OAAO,qBAAnE,UACA,cAAC,GAAD,CAAkBiL,YAAY,2BAAOD,WAAW,0BAA0BzK,MAAM,UAAhF,SACCoS,EAAQ,cAACuB,GAAA,EAAD,CAASnQ,GAAG,OAAOoQ,UAAU,SAASzT,QAAQ,OAAOsT,KAAK,KAAKI,KAAK,SAASjU,UAAU,SAAS,OAGzG,cAAC,GAAD,CAAeuZ,UAAU,EAAOjK,SAAU4K,UAI9C,qBAAKla,UAAU,MAAKL,MAAO,CAACE,OAAO,kBAAmBD,gBAAgB,QAAQwqB,QAAmB,uBAAXrR,EAAiB,QAAS,QAAhH,SACQ,cAAC,GAAD,aCtCDkZ,OAhCf,SAAev0B,GAEb,IAAMyxB,EAAQzvB,aAAY,SAACN,GAAD,OAAUA,EAAM8yB,aAAa/C,SAFpC,EAGc5sB,oBAAS,GAHvB,mBAGZ4vB,EAHY,KAGFC,EAHE,KAYnB,OANA9tB,qBAAU,WACL6qB,EAAMxJ,SACPyM,GAAa,KAEf,CAACjD,IAGH,qCACD,cAAC,SAAD,CAAMpM,OAAK,EAAEsP,iBAAkB,qBAAKhvB,IAAI,cAAgBC,MAAO,MAA/D,SACI,cAAC,GAAD,MAEH,qBAAK3D,MAAO,CAACkjB,SAAU,QAASC,OAAQ,OAAQC,MAAO,OAAOC,OAAO,QAArE,SACQ,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKvjB,MAAO,CAAC2D,MAAM,SAAnB,SACE,eAAC6f,GAAA,EAAD,CAAOC,QAhBK,WAAOgP,GAAcD,IAgBAtxB,KAAMsxB,EAAW5O,MAAO,IAAMC,UAAQ,EAAvE,UACE,cAACL,GAAA,EAAMniB,OAAP,CAAcrB,MAAO,CAACC,gBAAgB,WAAtC,SACE,wBAAQI,UAAU,UAAUL,MAAO,CAACS,MAAM,SAA1C,kCAEF,cAAC+iB,GAAA,EAAM9hB,KAAP,UAAa8tB,EAAMxJ,uBCmEpB2M,GA9FD,WAAM,MAIgB/vB,oBAAS,GAJzB,mBAIXgwB,EAJW,KAIAC,EAJA,OAMcjwB,mBAAS,cANvB,mBAMXkwB,EANW,aAOkBlwB,mBAAS,CAC3CmL,MAAO,aACPpM,QAAS,WATO,mBAOXoxB,EAPW,aAWcnwB,mBAAS,KAXvB,mBAWXowB,EAXW,KAWDC,EAXC,KAYZrzB,EAAWC,cAGjB8E,qBAAU,WACRjC,QAAQkgB,MAAM,6BACZlgB,QAAQC,IAAI,cAAeiwB,GAC3BlwB,QAAQC,IAAI,aAAcmwB,GAC1BpwB,QAAQC,IAAI,eAAgBowB,GAC5BrwB,QAAQC,IAAI,aAAcqwB,GAC5BtwB,QAAQwwB,cAMV,IAAInJ,EAAKe,iBAAO,MACVqI,EAAmB,WAGvBpJ,EAAGmB,QAAU,IAAI0F,UAAU,uCAE3B7G,EAAGmB,QAAQ2F,OAAS,WAClBnuB,QAAQC,IAAI,6BACZkwB,GAAa,GACbO,KAGFrJ,EAAGmB,QAAQkG,QAAU,WACnB1uB,QAAQC,IAAI,6BACZkwB,GAAa,IAGf9I,EAAGmB,QAAQmG,UAAY,SAACxvB,GACtBa,QAAQC,IAAI,mCACZ,I1D9BgC2L,EAPGF,EAIKC,E0DiCpCglB,EAAUxxB,EAAM6C,KAChBshB,EAAUnY,KAAKyjB,MAAMzjB,KAAKyjB,MAAM+B,IAGlB,cAAfrN,EAAQ7mB,MACTuD,QAAQC,IAAIqjB,GACZpmB,G1DvCsCyO,E0DuCD,CAAChD,UAAU2a,EAAQ3a,UAAWgE,OAAO2W,EAAQ3W,Q1DtC/E,CAAClQ,KAAKqP,GAAwBH,yB0DuCX,SAAf2X,EAAQ7mB,KACfS,G1D7CiCwO,E0D6CD,IAAI/K,K1D5CjC,CAAClE,KAAKoP,GAAmBH,mB0D6CN,eAAf4X,EAAQ7mB,MACfS,G1DxC8B0O,E0DwCD,CAACa,YAAY6W,EAAQ7W,a1DvC/C,CAAChQ,KAAKsP,GAAgBH,gB0D0C3B2kB,GAAY,SAACD,GACX,OAAOA,EAAS7f,OAAO6S,EAAQjY,MAAQ,KAAOiY,EAAQrkB,cAStDyxB,EAAe,WACnB,IAAIE,EAAO,CAACvlB,MAAM+kB,GACdO,EAAUxlB,KAAKC,UAAUwlB,GAC7BvJ,EAAGmB,QAAQ6F,KAAKsC,IAgBlB,OAVA1uB,qBAAU,WAER,OADAwuB,IACQ,WAdRpJ,EAAGmB,QAAQ2G,WAiBV,IAMD,8BC/CW0B,OAlCf,SAAcx1B,GAEZ,IAAM0E,EAAe1C,aAAY,SAACN,GAAW,OAAOA,EAAMD,YAAYb,UAErE,OAAmB,MAAhB8D,GAAyC,KAAjBA,EACnB,cAAC,IAAD,CAAUnC,GAAG,MAIpB,qCACE,cAACkzB,GAAD,IACA,qBAAKnzB,UAAU,wCAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,0CAA0CL,MAAO,CAACkjB,SAAS,WAAYjjB,gBAAgB,WAAtG,SACE,cAAC,EAAD,MAEF,cAAC,GAAD,IACA,qBAAKI,UAAU,mBAAf,SACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOozB,KAAK,aAAaC,UAAWhsB,IACpC,cAAC,IAAD,CAAO+rB,KAAK,kBAAkBC,UAAW7Y,KACzC,cAAC,IAAD,CAAO4Y,KAAK,kBAAkBC,UAAWnP,KACzC,cAAC,IAAD,CAAOkP,KAAK,aAAaC,UAAWjT,KACpC,cAAC,IAAD,CAAOgT,KAAK,gBAAgBC,UAAW1E,KACvC,cAAC,IAAD,CAAU1uB,GAAG,6BCpCzB,IAEIoE,GAAO,CACT,CACEivB,IAAI,EACJC,OAAO,aACPC,SAAS,2FACTC,QAAQ,qBACRC,MAAM,aACNC,UAAU,IAEZ,CACEL,IAAI,EACJC,OAAO,aACPC,SAAS,qFACTC,QAAQ,qBACRC,MAAM,aACNC,UAAU,IAGZ,CACEL,IAAI,EACJC,OAAO,aACPC,SAAS,2FACTC,QAAQ,qBACRC,MAAM,aACNC,UAAU,IAIZ,CACEL,IAAI,EACJC,OAAO,aACPC,SAAS,+EACTC,QAAQ,qBACRC,MAAM,aACNC,UAAU,KCJCC,OA5Bf,SAA8Bl2B,GAE5B,OACE,mCACE,eAACkD,EAAA,EAAD,CAAOoT,WAAW,EAAOnT,KAAMnD,EAAMmD,KAAMC,OAAQpD,EAAMqD,YAAa8S,KAAK,KAAKiJ,UAAQ,EAAxF,UACE,cAAClc,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAACtB,MAAO,CAACC,gBAAgB,WAAlD,SACE,cAACgB,EAAA,EAAMM,MAAP,CAAavB,MAAO,CAACS,MAAM,WAA3B,SAAuC,mDAEzC,cAACQ,EAAA,EAAMS,KAAP,UACE,sBAAKrB,UAAU,uBAAuBL,MAAO,CAACE,OAAO,SAArD,UACE,qBAAKG,UAAU,2CAA2CL,MAAO,CAACE,OAAO,QAAzE,SAAkF,6BAAKnC,EAAMyD,MAAMoyB,WACnG,qBAAKvzB,UAAU,+BAA+BL,MAAO,CAACS,MAAM,UAAUP,OAAO,QAA7E,SAAuFnC,EAAMyD,MAAMuyB,QACnG,qBAAK1zB,UAAU,MAAML,MAAO,CAACE,OAAO,SAApC,SACGnC,EAAMyD,MAAMqyB,gBAInB,cAAC5yB,EAAA,EAAMW,OAAP,UACE,cAAClB,EAAA,EAAD,CAAQE,QAAQ,YAAYsT,KAAK,KAAKrT,QAAS9C,EAAMqD,YAArD,kCCsCK8yB,OArDf,SAAwBn2B,GAAO,IAAD,EACJ6E,oBAAS,GADL,mBACrB1B,EADqB,KACfkD,EADe,OAEgBxB,mBAAS,IAFzB,mBAErB2B,EAFqB,KAELC,EAFK,OAIF5B,mBAAS,IAJP,mBAIrBpB,EAJqB,KAIdqB,EAJc,KAoB9B,OAbE8B,qBAAU,WACRH,EF4BKE,ME3BJ,IAYH,qCACA,yCAAW,qBAAKhB,IAAI,cAAcC,MAAM,KAAIzD,OAAO,UACnD,sBAAKG,UAAU,qBAAqBL,MAAO,CAACE,OAAO,SAAnD,UACE,uBAAOG,UAAU,yBAAyBL,MAAO,CAACC,gBAAgB,WAAlE,SACE,uBAAOI,UAAU,0BAAjB,SACE,+BACE,oBAAIsD,MAAM,SACV,oBAAIA,MAAM,QAAV,gCACA,oBAAIA,MAAM,QAAV,0BACA,oBAAIA,MAAM,QAAV,iCAIoB,GAAzBY,EAAeQ,QAChBR,EAAeS,KAAI,SAACxD,EAAOyD,GACzB,OACE,sBAAqBpE,QAAS,YA1BjB,SAACW,GAClB4C,GAAQ,GACRvB,EAASrB,GAwBgC0D,CAAW1D,IAASnB,UAAU,mCAAmCL,MAAO,CAACm0B,MAAM,OAAQjZ,OAAO,WAAnI,UACE,qBAAKlb,MAAO,CAAC2D,MAAM,OAAQiE,WAAW,OAAQsC,QAAQ,QAAtD,SAAgE1I,EAAMmyB,MACtE,qBAAK3zB,MAAO,CAAC2D,MAAM,QAASuG,QAAQ,QAApC,SAA8C1I,EAAMsyB,UACpD,qBAAK9zB,MAAO,CAAC2D,MAAM,QAASuG,QAAQ,QAApC,SAA8C1I,EAAMoyB,SACpD,qBAAK5zB,MAAO,CAAC2D,MAAM,QAASuG,QAAQ,QAApC,SAA8C1I,EAAMuyB,UAJ5CvyB,EAAMmyB,WAWtB,cAAC,GAAD,CAAsBnyB,MAAOA,EAAON,KAAMA,EAAME,YAhC5B,WAClBgD,GAAQ,UCZN0oB,GACS,uEADTA,GAEW,6EAFXA,GAGa,uEAHbA,GAIM,oHAJNA,GAKS,+EAyIAsH,OAtIf,SAAkBr2B,GAEhB,IAAM0E,EAAe1C,aAAY,SAACN,GAAW,OAAOA,EAAMD,YAAYb,UAChEiB,EAAWC,cAHM,EAKyB+C,mBAASkqB,IALlC,mBAKhBuH,EALgB,KAKEC,EALF,OAM6B1xB,mBAASkqB,IANtC,mBAMhByH,EANgB,KAMIC,EANJ,OAO0B5xB,mBAASkqB,IAPnC,mBAOhB2H,EAPgB,KAOMC,EAPN,OASmB9xB,oBAAS,GAT5B,mBAShB+xB,EATgB,KASDC,EATC,OAUuBhyB,oBAAS,GAVhC,mBAUhBiyB,EAVgB,KAUCC,EAVD,OAW2BlyB,oBAAS,GAXpC,mBAWhBmyB,EAXgB,KAWGC,EAXH,OAaWpyB,oBAAS,GAbpB,mBAahBqqB,EAbgB,KAaLC,EAbK,OAeWtqB,mBAAS,CACzC/D,WAAW,GACXF,OAAO,GACPqQ,aAAa,KAlBQ,mBAehBimB,EAfgB,KAeLC,EAfK,KAqBjBpyB,EAAe,SAACjB,GACpBqzB,EAAa,2BACRD,GADO,kBAETpzB,EAAMkB,OAAOC,KAAMnB,EAAMkB,OAAO/E,UAIrC,OAAmB,MAAhByE,GAAyC,KAAjBA,EAClB,cAAC,IAAD,CAAUnC,GAAG,eA8DpB,qBAAKN,MAAO,CAACE,OAAO,QAASi1B,gBAAgB,wBAAyBC,iBAAiB,aAAvF,SACE,qBAAK/0B,UAAU,SAAf,SACM,sBAAKA,UAAU,OAAOL,MAAO,CAAC2D,MAAM,MAAOzD,OAAO,MAAOS,WAAW,MAAOP,UAAU,OAArF,UACE,qBAAKC,UAAU,cAAcL,MAAO,CAACC,gBAAgB,mBAAoBQ,MAAM,QAASmH,WAAW,OAAQD,SAAS,QAApH,mBACE,sBAAKtH,UAAU,0BAA0BL,MAAO,CAACE,OAAO,SAAxD,UACE,qBAAKG,UAAU,QAAQL,MAAO,CAACE,OAAO,SAAtC,SACA,eAACsD,EAAA,EAAD,CAAMwqB,YAAU,EAACf,UAAWA,EAAWxpB,SAhEnC,SAAC5B,GAEnB,ICtDqBosB,EDsDfC,EAAOrsB,EAAMssB,eACnBtsB,EAAMsB,iBACNtB,EAAMusB,mBACuB,IAAzBF,EAAKG,kBACPiG,EAAoBxH,IACpB0H,EAAsB1H,IACtB4H,EAAiB5H,IACjBI,GAAa,KC7DMe,ED+DOgH,EC9Db52B,IAAM8D,KAAK,cAAc8rB,IDiEnC5oB,MAAK,SAACZ,GACsB,YAAxBA,EAASC,KAAKjF,OAGfG,EAASV,EAAsBuF,EAASC,KAAK/F,SAC7CiB,EAASR,EAAyBqF,EAASC,KAAKtG,YAChDwB,EAASN,EAAuBmF,EAASC,KAAK9F,iBAC9CgB,EAASP,EAA0BoF,EAASC,KAAK7F,aAGjDV,EAAcsG,EAASC,KAAKtG,WAG5B0C,eAAeu0B,QAAQ,SAAU5wB,EAASC,KAAK/F,QAC/CmC,eAAeu0B,QAAQ,YAAa5wB,EAASC,KAAKtG,WAClD0C,eAAeu0B,QAAQ,iBAAkB5wB,EAASC,KAAK9F,gBACvDkC,eAAeu0B,QAAQ,aAAc5wB,EAASC,KAAK7F,aAEnB,iBAAxB4F,EAASC,KAAKjF,QACtBm1B,GAAiB,GACjBE,GAAmB,GACnBE,GAAqB,GAErBV,EAAoBxH,IACpB0H,EAAsB1H,IACtB4H,EAAiB5H,QAGlBrI,OAAM,SAACC,GACRhiB,QAAQC,IAAI+hB,EAAMjgB,UACW,MAA1BigB,EAAMjgB,SAAS4K,SAChBmlB,EAAsB,IACtBE,EAAiB5H,IACjBgI,GAAmB,GACnBE,GAAqB,QAgBf,UAEI,eAACxxB,EAAA,EAAKI,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAY,qBAAK9D,MAAO,CAAC4H,WAAW,QAAxB,6BACZ,cAACpE,EAAA,EAAKO,QAAN,CAAciS,UAAQ,EAAC7W,KAAK,OAAO6D,KAAK,aAAawrB,YAAY,+EAAmBxwB,MAAOi3B,EAAUp2B,WAAYmF,SAAUlB,EAAcyqB,UAAWoH,IACpJ,cAACnxB,EAAA,EAAKO,QAAQ0qB,SAAd,CAAuBtvB,KAAK,UAA5B,SAAuCk1B,OAGzC,eAAC7wB,EAAA,EAAKI,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAY,qBAAK9D,MAAO,CAAC4H,WAAW,QAAxB,sBACZ,cAACpE,EAAA,EAAKO,QAAN,CAAciS,UAAQ,EAAC7W,KAAK,OAAO6D,KAAK,SAASwrB,YAAY,wDAAgBxwB,MAAOi3B,EAAUt2B,OAAQqF,SAAUlB,EAAcyqB,UAAWsH,IACzI,cAACrxB,EAAA,EAAKO,QAAQ0qB,SAAd,CAAuBtvB,KAAK,UAA5B,SAAuCo1B,OAGzC,eAAC/wB,EAAA,EAAKI,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UAAY,qBAAK9D,MAAO,CAAC4H,WAAW,QAAxB,wBACZ,cAACpE,EAAA,EAAKO,QAAN,CAAciS,UAAQ,EAAC7W,KAAK,WAAWm2B,aAAa,MAAMtyB,KAAK,eAAewrB,YAAY,iEAAexwB,MAAOi3B,EAAUjmB,aAAchL,SAAUlB,EAAcyqB,UAAWwH,IAC3K,cAACvxB,EAAA,EAAKO,QAAQ0qB,SAAd,CAAuBtvB,KAAK,UAA5B,SAAuCs1B,OAEzC,qBAAKp0B,UAAU,mBAAf,SACE,cAACK,EAAA,EAAD,CAAQE,QAAQ,OAAO0f,OAAK,EAACnhB,KAAK,SAAlC,uCAMN,qBAAKkB,UAAU,YAAYL,MAAO,CAAC6sB,WAAW,oBAAqB3sB,OAAO,WAC1E,qBAAKG,UAAU,QAAf,SACE,cAAC,GAAD,iB,OEzHLk1B,OAhBf,SAAax3B,GACX,OACE,qBAAKsC,UAAU,4BAA4BL,MAAO,CAAC2D,MAAM,SAAU1D,gBAAgB,WAAnF,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwzB,KAAK,IAAIlzB,OAAK,EAACmzB,UAAWU,KACjC,cAACt2B,EAAD,UACA,cAAC,IAAD,CAAO21B,KAAK,QAAQC,UAAWH,OAG/B,cAAC,IAAD,CAAUjzB,GAAG,YCLNk1B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrwB,MAAK,YAAkD,IAA/CswB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,0BCPRtnB,GAAe,CACnB0C,UAAW,IAKPmlB,GAAc,yBAkBLC,GATU,WAAmC,IAAlCx2B,EAAiC,uDAAzB0O,GAAczO,EAAW,uCACzD,OAAGA,EAAOP,OAAS62B,GACV,2BAAIv2B,GAAX,IAAkBoR,UAAUnR,EAAOmR,YAE5BpR,GCnBL0O,GAAe,CACnB+nB,SAAU,IAINC,GAAa,uBAkBJzG,GATS,WAAmC,IAAlCjwB,EAAiC,uDAAzB0O,GAAczO,EAAW,uCACxD,OAAGA,EAAOP,OAASg3B,GACV,2BAAI12B,GAAX,IAAkBy2B,SAASx2B,EAAOw2B,WAE3Bz2B,GCjBLf,GAAY,CACdb,UAAU,MAERu4B,GAAgB,0BAmBPC,GAZQ,WAA8B,IAA7B52B,EAA4B,uDAApBf,GAAUgB,EAAU,uCAChD,OAAOA,EAAOP,MACV,KAAKi3B,GACD,kCACO32B,GADP,IAEI5B,UAAU6B,EAAO7B,YAEzB,QACI,OAAO4B,ICEJ62B,GAZKC,2BAAgB,CAClCrd,kBACA+c,oBACAxjB,sBACA/D,oBACAlP,cACA62B,oBACA3G,mBACA6C,kB,UCFIiE,GAAQC,uBAAYH,GAAaI,kCAGvCF,GAAM52B,SAASP,EAA0ByB,eAAe61B,QAAQ,eAAiB,KACjFH,GAAM52B,SAASV,EAAsB4B,eAAe61B,QAAQ,WAAa,KACzEH,GAAM52B,SAASR,EAAyB0B,eAAe61B,QAAQ,cAAgB,KAC/EH,GAAM52B,SAASN,EAAuBwB,eAAe61B,QAAQ,mBAAqB,KAGlFx4B,EAAc2C,eAAe61B,QAAQ,cAErCC,IAASC,OAEP,cAAC,IAAD,UACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,GAAD,QAIJM,SAASC,eAAe,SAM1BvB,O","file":"static/js/main.1c7b9959.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AppContext = React.createContext({\r\n    websocket:null\r\n})\r\n\r\nexport function AppContextProvider(props){\r\n    const websocket = null;\r\n    const value = {\r\n        websocket:websocket\r\n    }\r\n    \r\n    return(\r\n        <AppContext.Provider value={value}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    ) \r\n}\r\n\r\nexport default AppContext;","import axios from \"axios\";\r\n//  axios.defaults.baseURL = \"http://kosa3.iptime.org:50006/\";\r\naxios.defaults.baseURL = \"http://localhost:8080/\";\r\nexport function addAuthHeader(authToken){\r\n    axios.defaults.headers.common[\"authToken\"] = authToken; \r\n  }\r\n  \r\n  export function removeAuthHeader(){\r\n    delete axios.defaults.headers.common[\"authToken\"]; \r\n  }","\r\nconst initState = {\r\n    userid:\"\",\r\n    role_authority:\"\",\r\n    authToken:\"\",\r\n    codenumber:\"\"\r\n}\r\nconst SET_USERID = \"auth/set_userid\"\r\nconst SET_AuthToken = \"auth/set_authtoken\"\r\nconst SET_CodeNumber = \"auth/set_codenumber\"\r\nconst SET_Authority = \"auth/set_role_authority\"\r\nexport const createSetUseridAction = (userid) => {\r\n    return { type:SET_USERID, userid}\r\n}\r\nexport const createSetAuthTokenAction = (authToken) => {\r\n    return {type:SET_AuthToken, authToken}\r\n}\r\n\r\nexport const createSetCodeNumberAction = (codenumber) => {\r\n    return {type:SET_CodeNumber, codenumber}\r\n}\r\n\r\nexport const createSetRoleAuthority = (authority) => {\r\n    return {type:SET_Authority, authority}\r\n}\r\nconst authReducer=(state = initState,action)=> {\r\n    switch(action.type){\r\n        case SET_USERID:\r\n            return {\r\n                ...state,\r\n                userid:action.userid\r\n            }\r\n        case SET_AuthToken:\r\n            return {\r\n                ...state,\r\n                authToken:action.authToken\r\n            }\r\n        case SET_CodeNumber:\r\n            return {\r\n                ...state,\r\n                codenumber:action.codenumber\r\n            }\r\n        case SET_Authority:\r\n            return {\r\n                ...state,\r\n                role_authority:action.authority\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;","\r\nimport { removeAuthHeader } from \"apis/axiosConfig\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { createSetAuthTokenAction, createSetCodeNumberAction, createSetRoleAuthority, createSetUseridAction } from \"redux/auth-rducer\";\r\n\r\n\r\nfunction AppMenu() {\r\n    const dispatch = useDispatch();\r\n\r\n    const globalUserRole = useSelector((state) => { return state.authReducer.role_authority });\r\n\r\n    const logout = () => {\r\n      //Redux를 이용\r\n      dispatch(createSetUseridAction(\"\"));\r\n      dispatch(createSetAuthTokenAction(\"\"));\r\n      dispatch(createSetCodeNumberAction(\"\"));\r\n      dispatch(createSetRoleAuthority(\"\"));\r\n\r\n      //요청헤더에 authToken제거\r\n      removeAuthHeader();\r\n\r\n      //SessionStorage에 인증 내용 제거\r\n      sessionStorage.removeItem(\"userid\");\r\n      sessionStorage.removeItem(\"authToken\");    \r\n      sessionStorage.removeItem(\"codenumber\");\r\n      sessionStorage.removeItem(\"role_authority\");\r\n    }\r\n\r\n    return (\r\n    <>\r\n    <div style={{backgroundColor:\"#1B296D\", height:\"58vh\", marginRight:\"-15px\"}}>\r\n    </div>\r\n    <div style={{marginTop:\"3vh\"}}>\r\n      <ul className=\"nav flex-column\" >\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"/main/home\" exact className=\"nav-link pt-2 pb-2 mt-3 mb-3\" activeStyle={{color:\"#FFFFFF\", backgroundColor:\"#2F4273\"}} style={{color:\"black\"}}>\r\n            <div className=\"row\">\r\n              <div className=\"col-5 text-right\"><i className=\"bi bi-house-door\"></i></div>\r\n              <div className=\"col-7 pl-0\">Home</div>\r\n            </div>\r\n          </NavLink>\r\n          {/* Link는 이걸 클릭하면 이동한다 라는 뜻 */}\r\n          {globalUserRole === \"ROLE_DOCTOR\" ? \r\n            null \r\n          : \r\n            <NavLink to=\"/main/reception\" className=\"nav-link pt-2 pb-2 mt-3 mb-3\" style={{color:\"black\"}} activeStyle={{color:\"#FFFFFF\", backgroundColor:\"#2F4273\"}}>\r\n            <div className=\"row\">\r\n                <div className=\"col-5 text-right\"><i className=\"bi bi-receipt\"></i></div>\r\n                <div className=\"col-7 pl-0\">Reception</div>\r\n              </div>\r\n            </NavLink>\r\n          }\r\n          {globalUserRole === \"ROLE_NURSE\" ? \r\n            null \r\n          :\r\n            <>\r\n              <NavLink to=\"/main/treatment\" className=\"nav-link pt-2 pb-2 mt-3 mb-3\" style={{color:\"black\"}} activeStyle={{color:\"#FFFFFF\", backgroundColor:\"#2F4273\"}}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 text-right\"><i className=\"bi bi-calendar-plus\"></i></div>\r\n                  <div className=\"col-7 pl-0\">Treatment</div>\r\n                </div>\r\n              </NavLink>\r\n              <NavLink to=\"/main/test\" className=\"nav-link pt-2 pb-2 mt-3 mb-3\" style={{color:\"black\"}} activeStyle={{color:\"#FFFFFF\", backgroundColor:\"#2F4273\"}}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-5 text-right\"><i className=\"bi bi-eyedropper\"></i></div>\r\n                  <div className=\"col-7 pl-0\">Test</div>\r\n                </div>\r\n              </NavLink>\r\n            </>\r\n          }\r\n          {globalUserRole === \"ROLE_ADMIN\" \r\n          ? \r\n            <NavLink to=\"/main/members\" className=\"nav-link pt-2 pb-2 mt-3 mb-3\" style={{color:\"black\"}} activeStyle={{color:\"#FFFFFF\", backgroundColor:\"#2F4273\"}}>\r\n              <div className=\"row\">\r\n                <div className=\"col-5 text-right\"><i className=\"bi bi-file-person\"></i></div>\r\n                <div className=\"col-7 pl-0\">Members</div>\r\n              </div>\r\n            </NavLink>\r\n          :\r\n            null\r\n          }\r\n\r\n          <Button style={{marginTop:\"20px\", marginLeft:\"35px\"}} variant=\"dark\" onClick={logout}>로그아웃</Button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    </>\r\n    );\r\n}\r\n\r\n\r\nexport default AppMenu;","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nfunction NoticeDetail(props) {\r\n  \r\n  const handleRemove =(event) =>{\r\n    props.deleteNoticeState(props.board.noticeid);\r\n    props.handleClose();\r\n    alert('공지사항을 삭제 하였습니다!');\r\n  };\r\n\r\n  return(\r\n    <>\r\n    <Modal show={props.show} onHide={props.handleClose}>\r\n    <Modal.Header closeButton style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>\r\n          <Modal.Title><strong>{props.board.title}</strong></Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{props.board.content}</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={props.handleClose}>\r\n              CLOSE\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={handleRemove}>\r\n              DELETE\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NoticeDetail;","import axios from \"axios\";\r\n\r\n//공지사항 가져오기\r\nexport function getNoticeList() {\r\n    const promise = axios.get(\"/main/NoticeList\");\r\n    return promise;\r\n}\r\n\r\n//공지사항 추가\r\nexport function noticeUpdate(newBoard){\r\n    const promise = axios.post(\"/main/noticeUpdate\", newBoard);\r\n    return promise;\r\n}\r\n\r\n//공지사항 삭제하기\r\nexport function deleteNotice(noticeid){\r\n    const promise = axios.delete(\"/main/delete/\" + noticeid);\r\n    return promise;\r\n}\r\n\r\n//유저정보 가져오기\r\nexport function getUserList() {\r\n    const promise = axios.get(\"/main/userList\");\r\n    return promise;\r\n}\r\n\r\n//스케쥴 가져오기\r\nexport function getScheduleList(startDate) {\r\n    const promise = axios.get(\"/main/ScheduleList/\" + startDate);\r\n    return promise;\r\n}\r\n\r\n//스케줄 등록\r\nexport function scheduleUpdate(newBoard) {\r\n    const promise = axios.post(\"/main/scheduleUpdate\", newBoard);\r\n    return promise;\r\n}\r\n\r\n//스케줄 삭제\r\nexport function deleteSchedule(scheduleid, startDate) {\r\n    const promise = axios.get(\"/main/scheduleDelete/\" + scheduleid + \"/\" + startDate);\r\n    return promise;\r\n}","import { noticeUpdate } from \"apis/Main\";\r\nimport { useState } from \"react\";\r\nimport { Modal, Form, Button } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction NoticeAdd(props) {\r\n\r\n  const globalUserid = useSelector((state) => {\r\n    return state.authReducer.userid;\r\n  });//리덕스에 있는 userid 사용\r\n  console.log(globalUserid);\r\n\r\n  const [board, setBoard] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setBoard({\r\n      ...board,\r\n      [event.target.name]: event.target.value //이벤트 받아오기\r\n    });\r\n  };\r\n\r\n  const handleAdd = async(event) => {\r\n    event.preventDefault(); //form 안에 submit 역할을 하는 버튼을 눌렀어도 새로 실행하지 않게\r\n    const newBoard = {...board};\r\n    newBoard.userid = globalUserid;\r\n    newBoard.date = new Date();\r\n    await noticeUpdate(newBoard);\r\n    props.handleClose1();\r\n    props.work();\r\n    alert('공지사항을 등록 하였습니다!');\r\n  };\r\n\r\n  return(\r\n    <>\r\n    <Modal show={props.show} onHide={props.handleClose1}>\r\n              <Form className=\"text-center\" onSubmit={handleAdd}> \r\n                <h4>NOTICE<img src=\"/pencil.png\"width=\"25\"height=\"25\"/></h4>\r\n                <hr></hr>\r\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                  <Form.Label><strong>제목</strong></Form.Label>\r\n                  <Form.Control type=\"text\" name=\"title\" value={board.title} onChange={handleChange}/>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                  <Form.Label><strong>내용</strong></Form.Label>\r\n                  <Form.Control as=\"textarea\" rows={3} name=\"content\" value={board.content} onChange={handleChange}/>\r\n                </Form.Group>\r\n              </Form>\r\n              <Modal.Footer>\r\n              <Button type=\"submit\" variant=\"primary\" onClick={handleAdd}>\r\n                  ADD\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={props.handleClose1}>\r\n                  CLOSE\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NoticeAdd;","import { Form, Modal } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button } from 'react-bootstrap';\r\nimport \"./scrollbar1.css\"\r\nimport NoticeDetail from \"./NoticeDetail\";\r\nimport NoticeAdd from \"./NoticeAdd\";\r\nimport { deleteNotice, getNoticeList } from \"apis/Main\";\r\nfunction Notice(props){\r\n  const [a, setA] = useState(1);//상태데이터 선언 문법\r\n  //자바에서 int a = 1;와 같음\r\n  //setA(바꿔주고싶은값)\r\n  //a = 2;(자바) setA(2)\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [show1, setShow1] = useState(false);\r\n  const [selectedNotice, setSelectedNotice] = useState([]);\r\n  //공지사항을 가져올 list \r\n  const [board, setBoard] = useState({});\r\n  \r\n  const work = async() => {\r\n    const response = await getNoticeList(); //백이랑 통신\r\n    console.log(response.data);\r\n    setSelectedNotice(response.data);\r\n  }\r\n\r\n  const deleteNoticeState=(noticeid)=>{\r\n    //boardlist에서 해당 noticeid의 notice 삭제 \r\n    deleteNotice(noticeid).then((response)=>{\r\n      console.log(noticeid)\r\n      console.log(response.data);\r\n      setSelectedNotice(response.data);\r\n    });\r\n   \r\n  }\r\n\r\n  useEffect(() => {\r\n    work();\r\n  }, [])\r\n\r\n  const handleShow =(board) => {\r\n    setShow(true);\r\n    setBoard(board);\r\n  }\r\n  \r\n  const handleClose = () => {\r\n    setShow(false);\r\n  }\r\n  \r\n\r\n  const handleClose1 = () => setShow1(false);\r\n  const handleShow1 = () => setShow1(true);\r\n\r\nreturn(\r\n  <>\r\n  <h5>NOTICE <img src=\"/pencil.png\"width=\"25\"height=\"25\"/>\r\n      <Button variant=\"outline-primary\" style={{float: \"right\"}} onClick={handleShow1}>\r\n      <img src=\"/pen.png\"width=\"25\"height=\"25\"/></Button>\r\n    </h5> \r\n    <NoticeAdd show={show1} handleClose1={handleClose1} work={work}></NoticeAdd>\r\n  <div className=\"scrollbar\" id=\"style-7\">\r\n    <div className=\"force-overflow-auto\">\r\n   <table className=\"table table-hover\">\r\n     <thead className=\"card-header\" style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>\r\n       <tr>\r\n         <th scope=\"col\">#</th>\r\n         <th scope=\"col\">작성자</th>\r\n         <th scope=\"col\">제목</th>\r\n         <th scope=\"col\">날짜</th>\r\n       </tr>\r\n     </thead>\r\n     <tbody>\r\n       {console.log(selectedNotice)}\r\n       {selectedNotice.length != 0 &&\r\n       selectedNotice.map((board,index) => {\r\n         return(\r\n           <tr key={board.noticeid} onClick={()=>{handleShow(board);}}>\r\n             <th style={{width:\"100px\"}}>{index}</th>\r\n             <th style={{width:\"200px\"}}>{board.userid}</th>\r\n             <th>{board.title}</th>\r\n             <th style={{width:\"200px\"}}>{board.date}</th>\r\n           </tr>\r\n         )\r\n       })}\r\n     </tbody>\r\n    </table>\r\n    </div>\r\n    </div>\r\n      \r\n    <NoticeDetail deleteNoticeState={deleteNoticeState} board={board} show={show} handleClose={handleClose}></NoticeDetail>\r\n  </>\r\n)\r\n}\r\n\r\nexport default Notice;","import { useEffect, useState } from \"react\";\r\nimport { getUserList } from \"apis/Main\";\r\n\r\nfunction User(props){\r\n\r\n  const [UserList, setUserList] = useState([]);\r\n\r\n  const work = async() => {\r\n    const response = await getUserList();    \r\n    setUserList(response.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    work();\r\n  },[])\r\n  \r\n  return(    \r\n    <>\r\n    <div className=\"scrollbar\" id=\"style-7\">\r\n      <div className=\"force-overflow-auto\">\r\n      <table className=\"table table-hover\">\r\n        <thead className=\"card-header\" style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>\r\n        <tr>\r\n          <th scope=\"col\">Room</th>\r\n          <th scope=\"col\">DOCTOR</th>\r\n          <th scope=\"col\">PHONE</th>\r\n          <th scope=\"col\">SEX</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody style={{backgroundColor:\"white\"}}>\r\n          {UserList.length != 0 &&\r\n          UserList.map((board) => {\r\n            return(\r\n                <tr>\r\n                  <th style={{width:\"100px\"}}>{board.userroom}</th>\r\n                  <th style={{width:\"110px\"}}>{board.username}</th>\r\n                  <th style={{width:\"210px\"}}>{board.phonenumber}</th>\r\n                  <th>{board.sex}</th>\r\n                </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n   </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default User;","import { useState } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\n\r\nfunction Photo(props){\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  return(\r\n    <Carousel activeIndex={index} onSelect={handleSelect}>\r\n      <Carousel.Item>\r\n        <img src=\"/123.JPG\" with=\"360\" height=\"280\"  className=\"d-block w-100\" alt=\"First slide\"/>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img src=\"/mask.JPG\" with=\"360\" height=\"280\" className=\"d-block w-100\" alt=\"Second slide\"/>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img src=\"/mask2.JPG\" with=\"360\" height=\"280\" className=\"d-block w-100\" alt=\"Third slide\"/>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default Photo;","import { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./datepickerHome.css\";\r\n\r\nfunction Calendar(props) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  return (\r\n    <>\r\n    <div className=\"text-center\">\r\n      <DatePicker\r\n      selected={startDate}\r\n      onChange={(date) => setStartDate(date)}\r\n      inline\r\n      />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calendar;","import { scheduleUpdate } from \"apis/Main\";\r\nimport React, { useState } from \"react\";\r\nimport { Form, Modal, Button } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction WeeklyWrite(props){\r\n\r\n  const globalUserid = useSelector((state) => {\r\n    return state.authReducer.userid;\r\n  });\r\n\r\n  const [board, setBoard] = useState({\r\n    content: \"\"\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setBoard({\r\n      ...board,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleAdd = async(event) => {\r\n    event.preventDefault();\r\n    const newBoard = {...board};\r\n    newBoard.userid = globalUserid;\r\n    newBoard.date = props.startDate;\r\n    await scheduleUpdate(newBoard);\r\n    props.handleClose1();\r\n    props.work();\r\n    alert('스케줄을 등록 하였습니다!');\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Modal show={props.show} onHide={props.handleClose}>\r\n              <Form onSubmit={handleAdd}>\r\n                <h4 className=\"text-center\">WEEKLY <img src=\"/weekly.png\"width=\"25\"height=\"25\"/></h4>\r\n                <hr></hr>\r\n                <Form.Group className=\"mb-3, text-center\" controlId=\"exampleForm.ControlTextarea1\">\r\n                  <Form.Label><strong>내용</strong></Form.Label>\r\n                  <Form.Control as=\"textarea\" rows={3} name=\"content\" value={board.content} onChange={handleChange}/>\r\n                </Form.Group>\r\n              </Form>\r\n              <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={handleAdd}>\r\n                  ADD\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={props.handleClose1}>\r\n                  CLOSE\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            </>\r\n  );\r\n};\r\n\r\nexport default WeeklyWrite;","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nfunction WeeklyDetail(props) {\r\n\r\n  const handleRemove = (event) => {\r\n    props.deleteScheduleState(props.board.scheduleid, props.board.date);\r\n    props.handleClose1();\r\n    alert('스케쥴을 삭제 하였습니다!');\r\n  };\r\n\r\n  return(\r\n    <>\r\n    <Modal show={props.show} onHide={props.handleClose}>\r\n    <Modal.Header closeButton style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>\r\n          <Modal.Title><strong>{props.board.userid}</strong></Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{props.board.content}</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={props.handleClose1}>\r\n              CLOSE\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={handleRemove}>\r\n              DELETE\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WeeklyDetail;","import { forwardRef, useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { deleteSchedule, getScheduleList } from \"apis/Main\";\r\nimport \"./scrollbar.css\";\r\nimport \"./boxstyle.css\";\r\nimport moment from \"moment\";\r\nimport WeeklyWrite from \"./WeeklyWrite\";\r\nimport WeeklyDetail from \"./WeeklyDetail\";\r\n\r\nfunction Weekly(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [show1, setShow1] = useState(false);\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\r\n    <button className=\"example-custom-input\" onClick={onClick} ref={ref}>\r\n      {value}\r\n    </button>\r\n  ));\r\n\r\n\r\n  const [scheduleList, setScheduleList] = useState([]);\r\n  const [board, setBoard] = useState({});\r\n\r\n  const work = async() => {\r\n    console.log(moment(startDate).format('YYYY-MM-DD'))\r\n    const formatDate = moment(startDate).format('YYYY-MM-DD');\r\n    const response = await getScheduleList(formatDate);\r\n\r\n    console.log(response.data);\r\n    setScheduleList(response.data);\r\n  }\r\n\r\n  const deleteScheduleState = (scheduleid, startDate) => {\r\n\r\n    deleteSchedule(scheduleid, startDate).then((response) => {\r\n      console.log(response.data);\r\n      setScheduleList(response.data);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    work();\r\n  }, [startDate])\r\n\r\n  const handleClose1 = () => setShow1(false);\r\n  const handleShow1 = () => setShow1(true);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (board) => { \r\n    setShow(true); \r\n    setBoard(board); \r\n  }\r\n  return(\r\n    <>\r\n    <h5>WEEKLY <img src=\"/appointment.png\"width=\"30\"height=\"30\"/>\r\n    <Button variant=\"outline-primary\" style={{float: \"right\"}} onClick={handleShow1}>\r\n      <img src=\"/pen.png\"width=\"25\"height=\"25\"/></Button>\r\n    <WeeklyWrite show={show1} handleClose1={handleClose1} work={work} startDate={startDate}></WeeklyWrite>\r\n    <div className=\"text-center p-4\">\r\n    <DatePicker\r\n      selected={startDate}\r\n      onChange={(date) => setStartDate(date)}\r\n      customInput={<ExampleCustomInput />}\r\n    />\r\n    </div>\r\n    </h5>\r\n    <div className=\"scrollbar\" id=\"style-7\">\r\n    <div className=\"force-overflow-auto\">\r\n   <table className=\"table table-hover\">\r\n     <thead className=\"card-header\" style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\"}}>\r\n       <tr>\r\n        <th scope=\"col\">날짜</th>\r\n        <th scope=\"col\">일정</th>\r\n         <th scope=\"col\">작성자</th>\r\n      \r\n        \r\n       </tr>\r\n     </thead>\r\n     <tbody>\r\n       {console.log(scheduleList)}\r\n       {scheduleList.length != 0 &&\r\n       scheduleList.map((board,index) => {\r\n         return(\r\n           <tr onClick={() => {handleShow(board);}}>\r\n            <th style={{width:\"200px\"}}>{board.date}</th>\r\n            <th>{board.content}</th>\r\n             <th style={{width:\"200px\"}}>{board.userid}</th>\r\n           </tr>\r\n          )\r\n       })}\r\n     </tbody>\r\n    </table>\r\n    </div>\r\n    </div>\r\n    {/* 함수명()  <- 함수를 실행하겠다는 뜻  */}\r\n\r\n    <WeeklyDetail deleteScheduleState = {deleteScheduleState} board={board} show={show} handleClose1={handleClose}></WeeklyDetail>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Weekly;","import Notice from \"./Notice\";\r\nimport User from \"./User\";\r\nimport Photo from \"./Photo\";\r\nimport Calendar from \"./Calendar\";\r\nimport Weekly from \"./Weekly\";\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"container-fluid row vh-100 p-3\">\r\n   <div className=\"col-8\">\r\n      <div className=\"col card p-3\" style={{height:\"30vh\"}}>\r\n      <Notice/>\r\n      </div>\r\n      <div className=\"p-2\"></div>\r\n      <div className=\"col card p-3\"style={{height:\"65vh\"}}>\r\n      <Weekly/>\r\n      </div>\r\n   </div>\r\n   <div className=\"col-4\">\r\n   <div className=\"col p-0 pt-0\" style={{height:\"30vh\"}}>\r\n      <Calendar/>\r\n      </div>\r\n      <div className=\"p-2\"></div>\r\n      <div className=\"col p-0 pl-2 pt-0 ml-4\"style={{height:\"30vh\"}}>\r\n      <div className=\"pb-1\" style={{fontSize:\"20px\", fontWeight:\"bold\"}}>Doctor's Contact Info: </div>\r\n      <User/>\r\n      </div>\r\n      <div className=\"p-2 pt-2\"></div>\r\n      <div className=\"col\"style={{height:\"33.7vh\"}}>\r\n        <div className=\"pb-1\" style={{fontSize:\"20px\", fontWeight:\"bold\"}}>COVID-19 Card News:</div>\r\n      <Photo/>\r\n      </div>\r\n   </div>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import { Carousel, Pagination } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\n//현재 DayIndex 구하기\r\nconst CalcDayIndex =(month) =>{\r\n    let today = new Date().getDate();\r\n    \r\n    let DayIndex = (today%7) -1\r\n    if(DayIndex<0){\r\n        DayIndex = DayIndex+7\r\n    }\r\n    return DayIndex;\r\n}\r\n\r\n// 달에 따른 슬라이드 배열 넣기\r\nconst CalcCitem = (month) =>{ \r\n    let lastDay = null;\r\n    // 해당 달의 마지막 날\r\n    lastDay = new Date(2021,month,0).getDate();\r\n    \r\n    let ItemBoard =[];\r\n    // 마지막 슬라이드를 제외하고 각 슬라이드의 배열에 들어갈 숫자넣기 \r\n    for(var i=1; i<=4; i++){\r\n        let Item = [];\r\n        for(var j=7*(i-1)+1; j<=7*i; j++){\r\n            Item.push(j);\r\n        }\r\n        ItemBoard.push(Item)\r\n    }\r\n    let Item = [];\r\n    // 마지막 슬라이드에 넣을것(해당 달의 마지막날 까지 배열에 추가)\r\n    for(var j=29; j<=lastDay; j++){\r\n        Item.push(j)\r\n    }\r\n    // 해당 슬라이드에 아무것도 없을때 슬라이드 안나오게\r\n    if(Item.length>0)\r\n    ItemBoard.push(Item);\r\n    return ItemBoard;\r\n}\r\nfunction Calendar(props){\r\n    // 현재 달 상태\r\n    const [month,setMonth] = useState(new Date().getMonth()+1)\r\n    // 현재 day index 상태\r\n    const [dayIndex, setDayIndex] = useState(()=>(CalcDayIndex(new Date().getMonth()+1)))\r\n    // 현재 슬라이드 인덱스\r\n    const [slideIndex, setSlideIndex] = useState(0);\r\n    // 현재 슬라이드 배열\r\n    const [CItem, setCItem] = useState(()=>(CalcCitem(month)));\r\n\r\n    //일자 선택 함수\r\n    const onChangeDaySelect =(index,e) =>{\r\n        setDayIndex(index);\r\n      \r\n    }\r\n    // 최종 결과 date set하는곳\r\n    useEffect(()=>{\r\n        const day = CItem[slideIndex][dayIndex];\r\n        const selectDate = new Date(new Date().getFullYear()+\"-\"+month+\"-\"+day)\r\n        props.setSelectDate(selectDate.toLocaleDateString()) \r\n\r\n    },[dayIndex,slideIndex,month])\r\n\r\n    // 현재 슬라이드 이동 함수\r\n  const handleSelect = (selectedIndex,e) => {\r\n    setSlideIndex(selectedIndex);\r\n  };\r\n\r\n  //현재 날짜의 슬라이드로 이동 초기화\r\n  useEffect(()=>{\r\n    const today = new Date().getDate()\r\n    let tmpSlideindex =parseInt(today/7)\r\n    if(today%7===0){\r\n        tmpSlideindex = parseInt(today/7)-1;\r\n    } \r\n    setSlideIndex(tmpSlideindex);\r\n  },[])\r\n\r\n  //달이 바뀔때 해당 달의 날짜배열 상태 변경\r\n  useEffect(()=>{\r\n   setCItem(CalcCitem(month)); \r\n  },[month])\r\n\r\n  //날짜에 따른 요일 매핑\r\n  var week = ['일', '월', '화', '수', '목', '금', '토']; \r\n\r\n  // 달 바꾸기(버튼에 따른 달 숫자 변경)\r\n    const ChangeMonth = (dir) =>{\r\n        let newMonth = month;\r\n        if(dir && newMonth<12){\r\n            newMonth++\r\n            setMonth(newMonth)\r\n        }else if(!dir && newMonth>1){\r\n            newMonth-- \r\n            setMonth(newMonth)\r\n        }\r\n    }\r\n  \r\n \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"d-flex flex-row\" style={{margin:\"10px 0px\"}}>\r\n                <button className=\"carousel-control-prev-icon bg-info\" style={{border:\"none\"}} onClick={()=>{ChangeMonth(false)}}/>\r\n                <label style={{fontWeight:\"bold\", margin:\"0px 10px\"}}>{month}월</label>\r\n                <button className=\"carousel-control-next-icon  bg-info \"style={{border:\"none\"}} onClick={()=>{ChangeMonth(true)}}/>\r\n            </div>\r\n            <Carousel interval={null}  variant=\"dark\"  prevIcon = {<span className=\"carousel-control-prev-icon bg-info\" />} nextIcon={<span className=\"carousel-control-next-icon  bg-info \" />} indicators={false} activeIndex={slideIndex} onSelect={handleSelect}>\r\n                {\r\n                    CItem.map((citem,index)=>{\r\n                        return(\r\n                            <Carousel.Item key={index}>\r\n                                    <div  className={index<4?\"row d-flex justify-content-between\":\"row d-flex\"}  style={{padding:\"0px 130px\"}}>\r\n                                \r\n                                 {citem.map((day,index)=>{return(\r\n                                       <button key={index} onClick={()=>{onChangeDaySelect(index)}} style={{backgroundColor:dayIndex!==index?\"white\":\"#F6FCFA\",border:dayIndex!==index?\"none\":\"2px solid skyblue\", borderRadius:\"15px\",marginLeft:\"5px\", width:\"50px\", textAlign:\"center\"}}>\r\n                                        {day}<br/>\r\n                                       {week[new Date(new Date().getFullYear()+\"-\"+month+\"-\"+day).getDay()]}\r\n                                        </button>       \r\n                                )\r\n                                })}\r\n                               </div>\r\n                            </Carousel.Item>\r\n                        )\r\n                    })\r\n                }\r\n \r\n            </Carousel>\r\n            \r\n        </div>\r\n\r\n        \r\n            \r\n    )\r\n}\r\n\r\nexport default Calendar;","import React from \"react\";\r\nimport { useEffect,  useState } from \"react\";\r\n\r\nfunction Item(props) {\r\n\r\n  const item = props.item\r\n  const property = props.property\r\n  const order = props.order\r\n  const [itemArray, setItemArray] = useState([]);\r\n  useEffect(()=>{\r\n    let itemarray = [];\r\n    if(order!=null){\r\n      itemarray.push(order)\r\n    }\r\n    if(property==null){\r\n      for(var ip in item){\r\n        itemarray.push(item[ip])\r\n      }\r\n    }\r\n    else{\r\n      for(var i=0; i<property.length; i++){\r\n        itemarray.push(item[property[i]]); \r\n       }\r\n    }\r\n      setItemArray(itemarray);\r\n},[item])\r\n  \r\n  return (\r\n    <>\r\n     <style jsx=\"true\">{`\r\n     \r\n        .test:focus {\r\n          background: #B3E283;\r\n          color:black;\r\n        }\r\n        \r\n      `}</style>\r\n    <div tabIndex=\"-1\" onClick={(event)=>{if(props.onClick)props.onClick(item); }} className={\"test ml-2 mr-2 mb-2 pt-2 pb-2 d-flex align-items-center border-bottom  \"} style={{ fontSize: \"13px\" }}>\r\n    {itemArray.map((item,index)=>{\r\n      return(\r\n        <div key={index}  className=\"col pl-0 pr-0 text-center\">\r\n          {item}\r\n        </div>\r\n      )\r\n    })}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Item);\r\n\r\n\r\n\r\n\r\n","function ReceptionHeader(props) {\r\n  return (\r\n    <>\r\n      <div className=\" d-flex justify-content-between \" style={{height:\"46px\"}}>\r\n        <div className=\"d-flex \" style={{height:\"46px\"}}>\r\n        <div className=\"col-auto justify-content-start  text-center p-0 pt-2\" style={{ backgroundColor:props.color, width:\"40px\", color:\"#FFFFFF\"}}>\r\n          <i className={props.iclassName}></i>\r\n        </div>\r\n        <div className=\"p-2 col align-self-center\">{props.headertitle}</div>\r\n        </div>\r\n        <div className=\"align-self-center\"> \r\n        {props.children}\r\n        </div>\r\n        \r\n    \r\n      </div>    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReceptionHeader;","import axios from \"axios\";\r\n\r\n//예약정보 가져오기\r\nexport function GetReservationList(){\r\n    const result = axios.get(\"reception/reservationlist\");\r\n    return result;\r\n}\r\n//예약정보 등록하기\r\nexport function RegisterReservation(reservation, testlist){\r\n    const result = axios.post(\"reception/registerreservation\",[reservation,testlist],{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n    return result;\r\n}\r\n//예약정보 삭제하기\r\nexport function RemoveReservation(reservationid){\r\n    const result = axios.delete(\"reception/removereservation\", {\r\n        data: { \r\n          reservationid \r\n        }\r\n      });\r\n    return result;\r\n}\r\n//예약정보 수정하기\r\nexport function UpdateReservation(reservation){\r\n    let result = axios.put(\"reception/updatereservation\",reservation);\r\n    return result;\r\n}\r\n//특정 환자정보가져오기\r\nexport function getPatient(patientid) {\r\n    const result = axios.get(\"reception/getpatient\",{\r\n        params:{    \r\n            patientid\r\n        }\r\n    });\r\n    return result;\r\n  }\r\n//환자정보가져오기\r\nexport function GetPatientList(){\r\n    const result = axios.get(\"reception/patientlist\");\r\n    return result;\r\n}\r\n//환자등록하기\r\nexport function RegisterPatient(patient){\r\n    const result = axios.post(\"reception/registerpatient\",patient,{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n    return result;\r\n}\r\n//환자수정하기\r\nexport function UpdatePatient(patient){\r\n    const result = axios.put(\"reception/updatepatient\",patient,{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n    return result;\r\n}\r\n\r\n//환자의 진료정보 가져오기\r\nexport function GetTreatmentListBypatientid(patientid){\r\n    const result = axios.get(\"reception/treatments/\"+patientid);\r\n    return result;\r\n}\r\n\r\n//환자의 진료상세정보 가져오기\r\nexport function GetTreatmentDetail(treatmentid){\r\n    const result = axios.get(\"reception/treatmentdetail\",{\r\n        params:{    \r\n            treatmentid\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\n//처방받은 검사데이터 가져오기\r\nexport function PrescriptionTest(patientid){\r\n    const result = axios.get(\"reception/prescriptiontest\",{\r\n        params:{    \r\n            patientid\r\n        }\r\n    });\r\n    return result;\r\n}\r\n//검사 접수하기\r\nexport function ReceptionTest(receptiontestarg){\r\n    const result = axios.post(\"reception/receptiontest\",receptiontestarg,{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n    return result;\r\n}\r\n// 진료접수하기\r\nexport function ReceptionTreatment(treatment){\r\n    const result = axios.post(\"reception/receptiontreatment\",treatment,{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n    return result;\r\n}\r\n\r\n//검사접수 삭제하기\r\nexport function DeleteReceptionTest(testreceptionid){\r\n    const result = axios.delete(\"reception/removetestreception\", {\r\n        data: { \r\n            testreceptionid\r\n        }\r\n      });\r\n    return result;\r\n}\r\n\r\n\r\n//진료접수 삭제하기\r\nexport function DeleteReceptionTreatment(treatmentid){\r\n    const result = axios.delete(\"reception/removereceptiontreatment\", {\r\n        data: { \r\n            treatmentid \r\n        }\r\n      });\r\n    return result;\r\n}\r\n\r\n//그날의 진료접수정보 가져오기\r\nexport function GetTreatmentList(){\r\n    const result = axios.get(\"reception/treatmentlist\");\r\n    return result;\r\n}\r\n//그날의 검사접수정보 가져오기\r\nexport function GetTestReceptionList(){\r\n    const result = axios.get(\"reception/testreceptionlist\");\r\n    return result;\r\n}\r\n\r\n//임직원 정보 가져오기(usertype)\r\nexport function GetUsersData(usertype){\r\n    const result = axios.get(\"user/userlist\",{\r\n        params:{    \r\n            usertype\r\n        }\r\n    });\r\n    return result;\r\n}\r\n//임직원 정보 가져오기(userid)\r\nexport function GetUserData(userid){\r\n    const result = axios.get(\"reception/getuser/\"+userid);\r\n    return result;\r\n}\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport ReactDatePicker, {} from \"react-datepicker\";\r\nimport \"../SearchPatient/datepickerReservation.css\";\r\nimport { getPatient, UpdateReservation } from \"apis/Reception\";\r\n\r\n\r\nfunction UpdateReservationModal(props){\r\n    //예약 리스트\r\n    //const [reservationList, setReservationList] = useState([]);\r\n    //선택된 날짜 상태\r\n    const [startDate, setStartDate] = useState(new Date())\r\n\r\n    //예약된 시간상태\r\n    //const [reservatedTimes,setReservatedTimes] = useState([]); \r\n\r\n    //진료인지 날짜인지 예약 타입상태 -> true이면 진료, false이면 예약\r\n    const [reservationType, setReservationType] = useState(true)\r\n    //예약상태 결정하는 함수\r\n    const handleReservation = (type) =>{\r\n        setReservationType(type)\r\n    }\r\n    //const dispatch = useDispatch();\r\n    //선택된 검사리스트 (초기값으로 DB에서 불러온 처방검사리스트 들어감)\r\n    //const [testList,setTestList] = useState([]);\r\n    //선택된 환자\r\n    const [patient, setPatient] = useState();\r\n\r\n\r\n    //처방된 검사 선택\r\n    // const handleTestList = (event, index) =>{\r\n    //     const modify = testList.map((item,i)=>{\r\n    //         if(i===index){\r\n    //             item.ischeck = event.target.checked\r\n    //         }\r\n    //         return item;\r\n    //     })\r\n    //     setTestList(modify);\r\n    // }\r\n\r\n    // const GetTimeIndex=(date)=>{\r\n    //     let hour = date.getHours()*10\r\n    //     let minute = date.getMinutes()\r\n    //     if(minute===0){\r\n    //         minute = 0;\r\n    //     }else if(minute===30){\r\n    //         minute = 5;\r\n    //     }\r\n    //     const Index = (hour+minute)/5-18\r\n    //     return Index\r\n    // }\r\n    // const GetTime=(Index)=>{\r\n    //     let num = (Index+18)*5\r\n    //     let hour = num/10\r\n    //     let minute = num%10===5?30:0\r\n    //     const date = new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate(),hour,minute)\r\n    //     return date;\r\n    // }\r\n    useEffect(()=>{\r\n        if(props.selectedReservation){\r\n            getPatient(props.selectedReservation.patientid).then((result)=>{\r\n                console.log(result.data)\r\n                setPatient(result.data)\r\n            })\r\n        }\r\n        \r\n    },[props.selectedReservation])\r\n    useEffect(()=>{\r\n        // var reservationlist = getAllReservationsData();\r\n        // setReservationList(reservationlist)\r\n        //var testlist = getAllTestsGroupData(props.selectedReservation.patientid);\r\n        //setTestList(testlist);\r\n        //선택된 예약정보 가져오기 타입, 시간\r\n        setReservationType(props.selectedReservation.type===\"진료\"?true:false)\r\n        setStartDate(new Date(props.selectedReservation.reservationdate))\r\n        //console.log(GetTime(GetTimeIndex(new Date(new Date().getFullYear(),new Date().getMonth(),29,15,30))))\r\n        //  let Times=new Array(18);\r\n        //     Times[GetTimeIndex(new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),13,0))] = true;\r\n        //     Times[GetTimeIndex(new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),13,30))] = true;\r\n        //     for(var i=0; i<reservationlist.length; i++){\r\n        //         if(reservationlist[i].reservationdate){\r\n        //             Times[GetTimeIndex(reservationlist[i].reservationdate)] = true;\r\n        //         }\r\n        //     }\r\n         \r\n        \r\n            //처음 들어갈시간 넣기\r\n        //  setStartDate(props.selectedReservation.rdate);\r\n\r\n        //  let excludeTime = new Array(12)\r\n        //  for(var i=0; i<12; i++){\r\n        //      var lastday = new Date(new Date().getFullYear(),i+1,0).getDate();\r\n        //     excludeTime[i] = new Array(lastday)\r\n        //     for(var j=0; j<lastday; j++){\r\n        //         excludeTime[i][j] = new Array();\r\n        //     }\r\n        //  }\r\n         //exclude에 들어갈 월별 시간 구하기\r\n        \r\n        //     for(var i=0; i<reservationlist.length; i++){\r\n        //         //수정된 예약의 시간은 다시선택할수있게함\r\n        //         if(reservationlist[i].reservationid===props.selectedReservation.reservationid){\r\n        //             continue;\r\n        //         }\r\n        //         var month = reservationlist[i].reservationdate.getMonth()+1\r\n        //         var day = reservationlist[i].reservationdate.getDate()\r\n        //         excludeTime[month-1][day-1].push(reservationlist[i].reservationdate)\r\n        //         console.log(month + \",\"+day+\",\"+reservationlist[i].reservationdate)\r\n        //      }\r\n         \r\n         \r\n        // console.log(excludeTime)\r\n        // setReservatedTimes(excludeTime)  \r\n      \r\n      \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n    },[startDate])\r\n    const getReservationDate= () =>{\r\n        var newDateOptions = {\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour:\"2-digit\",\r\n            minute:\"2-digit\"\r\n        }\r\n        const origin = startDate.toLocaleString(\"ko-kr\",newDateOptions);\r\n        let date = new Date(startDate);\r\n        date.setMinutes(date.getMinutes()+30)\r\n        if(startDate.getTime()){\r\n            \r\n            return origin+\" ~ \"+date.toLocaleString(\"ko-kr\",newDateOptions)\r\n        }else{\r\n            return \"시간을 선택해 주세요\"\r\n        }\r\n       \r\n    }\r\n    \r\n    //예약 수정함수\r\n    const UpdateReservationClickBtn=()=>{\r\n        let newreservation;\r\n        //reservationType이 true가 진료 / false가 검사\r\n       \r\n            newreservation = {...props.selectedReservation,reservationdate:startDate.getTime(),type:reservationType?\"진료\":\"검사\"};\r\n            //DB에 새로운 예약정보로 업데이트 \r\n            UpdateReservation(newreservation).then((result)=>{\r\n                //부모함수 불러서 ui변경\r\n                props.UpdateReservation(newreservation)\r\n                //모달 닫기\r\n                props.closeModal(\"ReservationUpdateModal\")\r\n            })\r\n           \r\n        \r\n      \r\n            //DB에 해당 patient, startDate, testList로 해당 시간에 검사예약\r\n            // const checkedtestlist = testList.filter((test)=>(test.ischeck===true))\r\n            //이 안에는 검사리스트도 같이 있음\r\n            // newreservation = UpdateReservation({reservationdate:startDate,patientid:props.selectedPatient.patientid,status:\"대기\",type:\"검사\" }, checkedtestlist)\r\n        \r\n \r\n    }\r\n    return(\r\n        <div className=\"conatainer\" style={{height:\"50vh\"}}>\r\n            <div style={{height:\"15%\"}}>\r\n               <div className=\"row d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\"}}>\r\n                    <div style={{width:\"10%\"}}>ID</div>\r\n                    <div style={{width:\"15%\"}}>이름</div>\r\n                    <div style={{width:\"10%\"}}>성별</div>\r\n                    <div style={{width:\"10%\"}}>나이</div>\r\n                    <div style={{width:\"30%\"}}>주민번호</div>\r\n                    <div style={{width:\"25%\"}}>Phone</div>\r\n                </div>\r\n                \r\n                <div className=\"row d-flex justify-content-between text-center  \" style={{borderRadius:\"15px\"}}>\r\n                    <div style={{width:\"10%\"}}>{patient&&patient.patientid}</div>\r\n                    <div style={{width:\"15%\"}}>{patient&&patient.patientname}</div>\r\n                    <div style={{width:\"10%\"}}>{patient&&patient.sex}</div>\r\n                    <div style={{width:\"10%\"}}>{patient&&patient.age}</div>\r\n                    <div style={{width:\"30%\"}}>{patient&&(patient.ssn1 + \" - \" + patient.ssn2)}</div>\r\n                    <div style={{width:\"25%\"}}>{patient&&patient.phonenumber}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\" style={{height:\"90%\"}}>\r\n                    <div className=\"col-6 text-center\" style={{margin:\"10px\",marginTop:\"2%\", height:\"100%\"}} >\r\n                        <ReactDatePicker \r\n                        selected={startDate}\r\n                        onChange={(date) => setStartDate(date)}\r\n                        showTimeSelect\r\n                        timeFormat=\"HH:mm\"\r\n                        popperPlacement=\"bottom\" \r\n                        minDate={new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate())}\r\n                        minTime={new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),9,0)}\r\n                        maxTime={new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),17,30)}\r\n                        //excludeTimes={reservatedTimes.length>1&&reservatedTimes[startDate.getMonth()][startDate.getDate()-1]}\r\n                        inline\r\n                        dateFormat=\"yyyy-MM-dd hh:mm\"\r\n                        />\r\n                      \r\n                    </div>                \r\n                    <div className=\"col-5 \" style={{margin:\"10px\", height:\"100%\", padding:\"0px\" ,marginTop:\"2%\"  }}>\r\n                    <div className=\"border text-center mb-4\" style={{borderRadius:\"15px\"}}> \r\n                            예약날짜<br/>{getReservationDate()}\r\n                    </div>\r\n                        \r\n                        <button onClick={()=>{handleReservation(true)}} style={{backgroundColor:reservationType? \"#ffcd82\":\"white\",border:\"2px solid #ffcd82\",borderRadius:\"15px\",width:\"47%\",height:\"30%\", fontSize:\"1.8em\"}} className=\"  mr-1 \">진료</button>\r\n                        <button onClick={()=>{handleReservation(false)}}  style={{backgroundColor:!reservationType? \"#ffcd82\":\"white\",border:\"2px solid #ffcd82\",borderRadius:\"15px\",width:\"47%\",height:\"30%\", fontSize:\"1.8em\"}} className=\" \">검사</button>   \r\n             \r\n                        {/* {!reservationType&&\r\n                            testList&&testList.map((item,index)=>{return(\r\n                                <div key={index}>\r\n                                <input type=\"checkbox\" onChange={(e)=>{handleTestList(e,index)}} value={testList[index].ischeck}/>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.groupcode}</label>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.groupname}</label>\r\n                                </div>\r\n                            )})\r\n                        } */}\r\n\r\n                        <button className=\"btn btn-dark btn-sm mt-4\" style={{borderRadius:\"15px\",  marginTop:\"10px\", width:\"100%\", fontSize:\"1.3em\"}} /*disabled={reservationType===false&&(testList==null || (testList.filter((item)=>(item.ischeck===true)).length<1)) }*/  onClick={UpdateReservationClickBtn}>수정</button>\r\n             \r\n                    </div>                   \r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n\r\nexport default UpdateReservationModal;","import axios from \"axios\";\r\n//const BASE_URL = \"http://localhost:8080/\";\r\n const BASE_URL =\"http://kosa3.iptime.org:50006/\";\r\nexport function sendRedisMessage(content) {\r\n    content =JSON.stringify(content)\r\n    return axios.get(BASE_URL+\"reception/sendRedisMessage\", {params:{topic:\"/reception\", content}});\r\n  }\r\n\r\n  export function clearChatting(userid) {\r\n    return axios.get(BASE_URL+\"reception/clearchatting/\"+userid);\r\n  }\r\n\r\nexport function saveChatting(userid,chatArray) {\r\n  var chatArrayst = JSON.stringify(chatArray)\r\n  return axios.post(BASE_URL+\"reception/savechatting\",{userid,chatArray:chatArrayst},{\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }});\r\n}\r\n\r\nexport function loadChatting(userid) {\r\n  return axios.get(BASE_URL+\"reception/loadchatting/\"+userid);\r\n}","\r\n\r\n\r\n\r\n//환자 정보\r\nlet patientslist=[];\r\nfor(var i=1; i<10; i++){\r\n    const TR = {patientid:\"patientid\"+i, patientname:\"name\"+i, sex:i%2?\"남자\":\"여자\",age:i,ssn1:\"950328\",ssn2:\"111111\"\r\n    ,phonenumber:\"01024967236\",registerday:new Date().toLocaleDateString(),lasttreatment:new Date().toLocaleDateString() } \r\n    patientslist.push(TR);\r\n}\r\n//전체 환자 가져오기\r\nexport function getAllPatientsData(){\r\n    return patientslist;\r\n}\r\n//특정 환자 가져오기\r\nexport function getPatientData(patient_id){\r\n    return patientslist.filter((item)=>{return item.patientid===patient_id})[0]\r\n    \r\n}\r\n//환자 등록\r\nexport function insertPatientData(patient){\r\n    const i = patientslist.length+1;\r\n    patientslist.push({patientid:\"patientid\"+i, patientname:patient.patientname, sex:patient.sex,\r\n    age:patient.age,ssn1:patient.ssn1,ssn2:patient.ssn2\r\n    ,phonenumber:patient.phonenumber,registerday:new Date().toLocaleDateString(),lasttreatment:\"-\"})\r\n    return \"patient\"+i;\r\n}\r\n//환자 수정\r\nexport function updatePatientData(patient){\r\n    var index = patientslist.findIndex((item)=>(item.patientid===patient.patientid))\r\n    patientslist.splice(index,1,{patientid:index,...patient})\r\n}\r\n\r\n\r\n\r\n//병원임직원정보\r\nlet userslist=[];\r\nfor(var i=1; i<3; i++){\r\n    const TR = {userid:\"userid\"+i, username:\"name\"+i,userroom:\"room\"+i,role_authority:\"role_doctor\",userpassword:\"12345\",phonenumber:\"01024967236\",userenabled:\"1\" } \r\n    userslist.push(TR);\r\n}\r\n//의사리스트 불러오기\r\nexport function getAllDoctorData(){\r\n    const doctorlist = userslist.filter((item)=>(item.role_authority===\"role_doctor\"))\r\n    return doctorlist;\r\n}\r\n\r\n\r\n//진료정보\r\nlet treatmentslist=[];\r\nfor(var i=1; i<1; i++){\r\n    const TR = {treatmentid:\"treatmentid\"+i, memo:\"memo\"+i,treatmentdate:new Date().toLocaleDateString(),patientid:\"patientid\"+i,userid:\"userid\"+i,status:\"대기\" } \r\n    treatmentslist.push(TR);\r\n}\r\n//진료정보 가져오기\r\nexport function getAllTreatmentsData(){\r\n    return treatmentslist;\r\n}\r\n//진료접수 가능한지 확인 \r\nexport function isReceptionTreatment(patient_id){\r\n    return treatmentslist.filter((item)=>(item.patientid===patient_id &&item.status===\"대기\" )).length<1?true:false\r\n}\r\n//접수된 진료 삭제하기\r\nexport function DeleteReceptionTreatment(treatment_id){\r\n    const index = treatmentslist.findIndex((item)=>(item.treatmentid===treatment_id))\r\n    if(index>=0){\r\n        treatmentslist.splice(index,1)\r\n    }\r\n}\r\n\r\n//진료생성하기\r\nexport function ReceptionTreatment(patient_id, user_id){\r\n    const tid = treatmentslist.length+1\r\n    const newTreatment = {treatmentid:\"treatmentid\"+tid, memo:\"\",treatmentdate:new Date().toLocaleDateString(),patientid:patient_id,userid:user_id,status:\"대기\" }\r\n    treatmentslist.push(newTreatment)\r\n    return newTreatment;\r\n}\r\n\r\n\r\n//약데이터\r\nlet drugslist=[];\r\nfor(var i=1; i<10; i++){\r\n    const TR = {treatmentid:\"treatmentid\"+i,drugid:\"drugid\"+i,description:\"description\"+i } \r\n    drugslist.push(TR);\r\n}\r\ndrugslist.push({treatmentid:\"treatmentid\"+1,drugid:\"drugid\"+2,description:\"description\"+1 });\r\n//해당 진료의 처방된 약데이터 가져오기\r\nexport function getDrugsData(treatment_id){\r\n    var prescriptionlist = drugslist.filter((drugs)=>(drugs.treatmentid===treatment_id))\r\n    return prescriptionlist;\r\n}\r\n\r\n\r\n//예약정보\r\nlet reservationslist=[];\r\nfor(var i=1; i<1; i++){\r\n    const TR = {reservationid:\"reservationid\"+i,\r\n     reservationdate:new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate(),8+i,0),\r\n    patientid:\"patientid\"+i,status:\"대기\",type:i%2===0?\"진료\":\"검사\",testList:[] } \r\n    reservationslist.push(TR);\r\n}\r\n//예약 가져오기\r\nexport function getAllReservationsData(){   \r\n    const newreservationlist = reservationslist.map((item)=>(item))\r\n    return newreservationlist;\r\n}\r\n//특정 예약 가져오기\r\nexport function getReservationData(reservation_id){\r\n    return reservationslist.filter((item)=>{return item.reservationid===reservation_id})[0]\r\n    \r\n}\r\n//예약 취소\r\nexport function cancelReservationData(reservation_id){\r\n    const index = reservationslist.findIndex((item)=>(item.reservationid===reservation_id))\r\n    if(index>=0){\r\n        reservationslist.splice(index,1);\r\n    }\r\n   \r\n}\r\n\r\n\r\n//예약 등록\r\nexport function insertReservationData(reservation,selectedtestlist){\r\n    const i = reservationslist.length+1;\r\n    reservationslist.push({reservationid:\"reservationid\"+i, reservationdate:reservation.reservationdate\r\n    ,patientid:reservation.patientid,status:reservation.status,type:reservation.type } )\r\n    if(reservation.type===\"검사\"){\r\n        // 예약타입이 검사일때 검사테이블 돌면서 선택된 그룹코드들과 같은 검사들의 예약id에 해당 예약id 넣어줌+ 환자아이디 같아야하고 해당 검사의 상태가 접수대기 여야함\r\n        for(var c=0; c<testslist.length; c++){\r\n            for(var j=0; j<selectedtestlist.length; j++){\r\n                if(selectedtestlist[j].groupcode===testslist[c].groupcode && reservation.patientid===testslist[c].patientid && testslist[c].status===\"접수대기\" ){\r\n                    testslist[c].reservationid = \"reservationid\"+i;\r\n                }\r\n    \r\n            }\r\n        }\r\n    }\r\n    return \"reservationid\"+i;\r\n}\r\n//예약 수정\r\nexport function updateReservationData(reservation){\r\n    var index = reservationslist.findIndex((item)=>(item.reservationid===reservation.reservationid))\r\n    reservationslist.splice(index,1,{reservationid:index,...reservation})\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//검사 접수 정보\r\nlet testreceptionslist=[];\r\nfor(var i=1; i<1; i++){\r\n    const TR = {testreceptionid:\"testreceptionid\"+i, testdate:new Date().toLocaleDateString(),patientid:\"patientid\"+i,status:\"대기\"} \r\n    testreceptionslist.push(TR);\r\n}\r\n//검사 접수 가져오기\r\nexport function getAllTestsReceptionData(){\r\n    return testreceptionslist;\r\n}\r\n//접수된 검사 삭제하기\r\nexport function DeleteReceptionTest(testreception_id){\r\n    //접수된 검사테이블 상태 변경\r\n    for(var i=0; i<testslist.length; i++){\r\n        if(testslist[i].testreceptionid===testreception_id){\r\n            testslist[i].testreceptionid = \"\"\r\n            testslist[i].status = \"접수대기\"\r\n        }\r\n    }\r\n    const index = testreceptionslist.findIndex((item)=>(item.testreceptionid===testreception_id))\r\n    if(index>=0){\r\n        testreceptionslist.splice(index,1)\r\n    }\r\n}\r\n//검사접수하기\r\nexport function ReceptionTest(patient_id,grouplist){\r\n    //검사접수데이터 만들기\r\n    const trid = testreceptionslist.length+1;\r\n    const tmpTestReceptiondata = {testreceptionid:\"testreceptionid\"+trid, testdate:new Date().toLocaleDateString(),patientid:patient_id,status:\"대기\"}\r\n    testreceptionslist.push(tmpTestReceptiondata)\r\n    //testReceptionid 채우기\r\n    for(var i=0; i< testslist.length; i++){\r\n        for(var j=0; j< grouplist.length; j++){\r\n            if(grouplist[j].ischeck===true&&testslist[i].groupcode ===grouplist[j].groupcode &&testslist[i].patientid ===patient_id  ){\r\n                testslist[i].testreceptionid = \"testreceptionid\"+trid\r\n                testslist[i].status = \"접수완료\"\r\n            }\r\n        }    \r\n        \r\n    } \r\n    return {...tmpTestReceptiondata};\r\n}\r\n\r\n\r\n\r\n\r\n//검사 정보\r\nlet testslist=[];\r\nfor(var i=1; i<4; i++){\r\n    const TR = {groupcode:\"groupcode\"+i,groupname:\"groupname\"+i,result:\"result\"+i,status:\"접수대기\",testreceptionid:\"\",testdataid:\"testdata\"+i,reservationid:0,treatmentid:\"treatmentid\"+i,patientid:\"patientid\"+i,userid:\"userid\"+i} \r\n    testslist.push(TR);\r\n}\r\nconst TR = {groupcode:\"groupcode\"+1,groupname:\"groupname\"+1,result:\"result\"+1,status:\"접수대기\",testreceptionid:\"\",testdataid:\"testdata\"+1,reservationid:0,treatmentid:\"treatmentid\"+1,patientid:\"patientid\"+1,userid:\"userid\"+1} \r\ntestslist.push(TR);\r\n\r\n//특정 환자가 처방받은 검사중  특정 예약의 검사 체크해서 가져오기\r\nexport function getCheckedTestsGroupData(patient_id, reservation_id){\r\n    testslist.sort(function(a, b) {\r\n        if(a.groupcode<b.groupcode){\r\n            return -1;\r\n        }\r\n        else if(a.groupcode>b.groupcode){\r\n            return 1;\r\n        }else{\r\n            return 0;    \r\n        }\r\n    });\r\n    //중복되는 그룹코드 제거하여 그룹코드와 그룹이름 객체배열 반환\r\n    var grouplist=[]\r\n    const testslist2 = testslist.filter((test)=>(test.patientid===patient_id))\r\n    if(testslist2.length===0){return null}\r\n    var tmp =testslist2[0].reservationid===reservation_id? {groupcode:testslist2[0].groupcode, groupname:testslist2[0].groupname,ischeck:true}:{groupcode:testslist2[0].groupcode, groupname:testslist2[0].groupname,ischeck:false}\r\n    grouplist.push(tmp);\r\n    for(var i=1; i<testslist2.length; i++){\r\n        if(testslist2[i].groupcode!==tmp.groupcode){\r\n            var tmps =testslist2[i].reservationid===reservation_id? {groupcode:testslist2[i].groupcode, groupname:testslist2[i].groupname,ischeck:true}: {groupcode:testslist2[i].groupcode, groupname:testslist2[i].groupname,ischeck:false}\r\n            grouplist.push(tmps)\r\n        }\r\n    }\r\n \r\n   return grouplist;\r\n    \r\n}\r\n\r\n\r\n//특정 환자의 처방검사 그룹가져오기\r\nexport function getAllTestsGroupData(patient_id){\r\n   testslist.sort(function(a, b) {\r\n        if(a.groupcode<b.groupcode){\r\n            return -1;\r\n        }\r\n        else if(a.groupcode>b.groupcode){\r\n            return 1;\r\n        }else{\r\n            return 0;    \r\n        }\r\n    });\r\n    //중복되는 그룹코드 제거하여 그룹코드와 그룹이름 객체배열 반환  \r\n    var grouplist=[]\r\n    const testslist2 = testslist.filter((test)=>(test.patientid===patient_id && test.status===\"접수대기\"))\r\n    if(testslist2.length===0){return null}\r\n    var tmp = {groupcode:testslist2[0].groupcode, groupname:testslist2[0].groupname,treatmentid:testslist2[0].treatmentid };\r\n    grouplist.push(tmp);\r\n    for(var i=1; i<testslist2.length; i++){\r\n        if(testslist2[i].groupcode!==tmp.groupcode){\r\n            var tmps = {groupcode:testslist2[i].groupcode, groupname:testslist2[i].groupname,treatmentid:testslist2[i].treatmentid}\r\n            grouplist.push(tmps)\r\n        }\r\n    }\r\n    return grouplist;\r\n}\r\n\r\n\r\n","const initialState = {\r\n    testreception: {},\r\n    treatmentreception:{},\r\n    testresult:{}\r\n  }\r\n  \r\n  //액션 타입 선언\r\n  const SET_TESTRECEPTION=\"reception/setTestReception\";\r\n  const SET_TREATMENTRECEPTION=\"reception/setTreatmentReception\";\r\n  const SET_TESTRESULT=\"reception/setTestResult\";\r\n  \r\n  \r\n  //액션 생성 함수 선언\r\n  export const createSetTestReception = (testreception) => {\r\n    return {type:SET_TESTRECEPTION, testreception};\r\n  } \r\n\r\n  export const createSetTreatmentReception = (treatmentreception) => {\r\n    return {type:SET_TREATMENTRECEPTION, treatmentreception};\r\n  } \r\n  export const createSetTestResult = (testresult) => {\r\n    return {type:SET_TESTRESULT, testresult};\r\n  } \r\n  \r\n  //리듀스 선언\r\n  const receptionReducer = (state = initialState, action) => {\r\n    if(action.type === SET_TESTRECEPTION) {\r\n      return {...state, testreception:action.testreception};\r\n    }else if(action.type === SET_TREATMENTRECEPTION) {\r\n      return {...state, treatmentreception:action.treatmentreception};\r\n    }else if(action.type === SET_TESTRESULT){\r\n      return {...state, testresult:action.testresult};\r\n    }else {\r\n      return state;\r\n    }\r\n  }\r\n  \r\n  \r\n  export default receptionReducer;","import { GetUsersData } from \"apis/Reception\";\r\nimport { sendRedisMessage } from \"apis/Redis\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createSetTreatmentReception } from \"redux/reception-reducer\";\r\nimport {isReceptionTreatment} from \"views/Reception/BackEnd/index\"\r\nimport { ReceptionTreatment} from \"apis/Reception\";\r\nimport moment from 'moment';\r\nfunction DoctorSelectorModal(props){\r\n    //의사리스트\r\n    const [doctorList,setDoctorList] = useState([]);\r\n    //의사 선택\r\n    const [selectedDoctor, setselectedDoctor] = useState();\r\n    const handleInputChange = (event,doctor) => {\r\n      setselectedDoctor(doctor);\r\n    };\r\n    const dispatch = useDispatch();\r\n    // 진료접수 가능한지 여부\r\n    const[disable,setDisable]  = useState(false)\r\n    //처음 컴포넌트 시작시 의사 목록 불러오기\r\n    useEffect(()=>{\r\n        props.controlLoading(true);\r\n        GetUsersData(\"의사\").then((result)=>{\r\n            setDoctorList(result.data);\r\n            //진료접수 가능한지 여부 체크\r\n            //setDisable(isReceptionTreatment(props.selectedPatient.patientid))\r\n            props.controlLoading(false);\r\n        })\r\n    },[])\r\n    \r\n   \r\n\r\n   //진료접수\r\n   const ResisterTreatment = () =>{\r\n    let treatmentdate = new Date().getTime()\r\n    const newTreatment = {memo:\"\",treatmentdate:treatmentdate,patientid:props.selectedPatient.patientid,userid:selectedDoctor.userid,status:\"진료 대기\" }\r\n    //만약 예약된거라면 예약에서 지우기\r\n    if(props.CancelReservation){\r\n        props.CancelReservation()\r\n    }\r\n    \r\n    //DB에 진료생성\r\n    ReceptionTreatment(newTreatment).then((result)=>{\r\n       console.log(moment(treatmentdate).format(\"HH:mm\"));\r\n        //redux에 접수된 진료넘기기\r\n        //dispatch(createSetTreatmentReception(result.data))\r\n        //실시간으로 데이터 넘기기\r\n\r\n        sendRedisMessage({type:\"treatment\",patientid:props.selectedPatient.patientid, status:\"접수\"})\r\n\r\n        props.closeModal(\"DoctorSelectorModal\")\r\n    })\r\n   \r\n    // if(props.modifyReservationList){\r\n    //     props.modifyReservationList()\r\n    // }\r\n    \r\n\r\n}\r\n\r\n    return(\r\n    <div className=\"conatainer\" style={{height:\"400px\"}}>\r\n      <div className=\"col border\" style={{overflow:\"auto\" ,borderRadius:\"15px\",  marginTop:\"15px\", height:\"70%\"}}> \r\n                        {doctorList&&doctorList.map((item,index)=>{return(\r\n                                <div key={index}>\r\n                                <input type=\"radio\" onChange={(e)=>{handleInputChange(e,item)}} checked={selectedDoctor&&item.userid===selectedDoctor.userid} value={item.userid}/>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.userid}</label>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.username}</label>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.userroom}</label>\r\n                                </div>\r\n                            )})\r\n                        }\r\n        </div>\r\n        <div className=\"col d-flex justify-content-end\" style={{borderRadius:\"15px\",  marginTop:\"10px\"}}> \r\n            <button disabled={selectedDoctor?false:true} className=\"btn btn-outline-dark btn-sm\" onClick={ResisterTreatment}>진료접수</button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DoctorSelectorModal;","import { PrescriptionTest ,ReceptionTest} from \"apis/Reception\";\r\nimport { sendRedisMessage } from \"apis/Redis\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction TestSelectorModal(props){\r\n    //처방된 검사리스트\r\n    const [testList,setTestList] = useState([]);\r\n\r\n\r\n    //처음 컴포넌트 시작시 처방검사 목록 불러오기\r\n    useEffect(()=>{\r\n        props.controlLoading(true);\r\n        PrescriptionTest(props.selectedPatient.patientid).then((result)=>{\r\n           var entry = Object.entries(result.data)\r\n           for(var en of entry){\r\n               en[\"ischeck\"] = false\r\n           }\r\n\r\n            setTestList(entry);\r\n            props.controlLoading(false);\r\n        })\r\n    },[])\r\n    //처방된 검사 선택\r\n    const handleTestList = (event, index) =>{\r\n   \r\n        const modify = testList.map((item,i)=>{\r\n            if(i===index){\r\n                item.ischeck = event.target.checked\r\n            }\r\n            return item;\r\n        })\r\n        setTestList(modify);\r\n    }\r\n\r\n    const ResisterTest = () =>{\r\n        //만약 예약된거라면 예약에서 지우기\r\n        if(props.CancelReservation){\r\n            props.CancelReservation()\r\n        }\r\n        //DB에 검사 생성\r\n        let testdataidlist=[]\r\n        for(var testdataArray of testList){\r\n            if(testdataArray.ischeck){\r\n                for(var data of testdataArray[1]){\r\n                    testdataidlist.push(data.testdataid);\r\n                }\r\n            }\r\n        }\r\n        const testreceptionarg = {patientid:props.selectedPatient.patientid, testdataidlist}\r\n        ReceptionTest(testreceptionarg).then((result)=>{\r\n            console.log(result.data)\r\n            //redux에 접수된 검사넘기기\r\n            //dispatch(createSetTestReception(result.data))\r\n            sendRedisMessage({type:\"test\"})\r\n            props.closeModal(\"TestSelectorModal\")\r\n        })\r\n       \r\n    }\r\n    return(\r\n    <div className=\"conatainer\" style={{height:\"400px\"}} >\r\n      <div className=\"col border\" style={{overflow:\"auto\" ,  marginTop:\"15px\", height:\"70%\", padding:0}}> \r\n                        {/* testList => {groupcode1:[testdata1, testdata2],groupcode2:[testdata3, testdata4]... } */}\r\n                        \r\n                        <table className=\"table\">\r\n                                    <thead  style={{backgroundColor:\"#e9ecef\"}}>\r\n                                        <tr>\r\n                                            <th>체크</th>\r\n                                            <th>그룹코드</th>\r\n                                            <th >검사명</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                <tbody>\r\n                        {testList&&testList.map((item,index)=>{\r\n                            \r\n                            return(\r\n                                <>\r\n                                <tr>\r\n                                    <td rowSpan={item[1].length+1} ><input type=\"checkbox\" onChange={(e)=>{handleTestList(e,index)}} value={testList[index].ischeck}/></td>\r\n                                    <td className=\"border-right  border-bottom-0   \" rowSpan={item[1].length+1}>{item[0]}</td>\r\n                                </tr>\r\n                                    \r\n                                {item[1].map((data,index2)=>{\r\n                                    return(\r\n                                    <tr>\r\n                                        <td>{data.testdataname}</td>\r\n                                    </tr>\r\n                                        \r\n                                        )\r\n                                })}\r\n                                </>\r\n                            )})\r\n                            \r\n                        }\r\n        </tbody>\r\n        </table>\r\n        </div>\r\n        <div className=\"col d-flex justify-content-end\" style={{borderRadius:\"15px\",  marginTop:\"10px\"}}> \r\n            <button disabled={testList&&testList.filter((test)=>(test.ischeck===true)).length>0?false:true} className=\"btn btn-outline-dark btn-sm\" onClick={ResisterTest}>검사접수</button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default TestSelectorModal;","import Calendar from \"../SearchPatient/Calendar\"\r\nimport Item from \"views/components/Item\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ReceptionHeader from \"../components/ReceptionHeader\";\r\nimport {useSelector } from \"react-redux\";\r\nimport { Modal,Spinner } from \"react-bootstrap\";\r\nimport ReservationUpdateModal from \"./ReservationUpdateModal\";\r\nimport DoctorSelectorModal from \"../SearchPatient/DoctorSelectorModal\";\r\nimport { GetReservationList,RemoveReservation } from \"apis/Reception\";\r\nimport moment from 'moment';\r\nimport TestSelectorModal from \"../SearchPatient/TestSelectorModal\";\r\nfunction Reservation(props){\r\n    const [reservationUpdateModalshow, setReservationUpdateModalshow] = useState(false);\r\n    const [doctorSelectorModalshow, setDoctorSelectorModalshow] = useState(false);\r\n\r\n\r\n    const property = [\"patientid\",\"patientname\",\"type\",\"reservationuidate\"]\r\n    const [selectDate,setSelectDate] = useState(new Date().toLocaleDateString());\r\n    const [reservationList, setReservationList] = useState([])\r\n    const reservationReducer = useSelector((state)=>(state.reservationReducer))\r\n\r\n    const [selectedReservation, setSelectedReservation] = useState();\r\n    const [testSelectorModalshow, setTestSelectorModalshow] = useState(false);\r\n    const [loading,setLoading] = useState(false);\r\n    const click = (focusItem) =>{\r\n        setSelectedReservation(focusItem)\r\n    }\r\n     //모달창 닫는 함수\r\n     const closeModal= (modalname) =>{\r\n        // 모달일때 모달종류에 따라 닫아줌\r\n          if(modalname===\"ReservationUpdateModal\"){\r\n            setReservationUpdateModalshow(false)\r\n          }else if(modalname===\"TestSelectorModal\"){\r\n            setTestSelectorModalshow(false)\r\n          }else if(modalname===\"DoctorSelectorModal\"){\r\n                setDoctorSelectorModalshow(false)\r\n          }\r\n        }\r\n    //예약정보가져옴\r\n    useEffect(()=>{\r\n      GetReservationList().then((result)=>{\r\n        setReservationList(result.data)\r\n       });\r\n    },[])\r\n    //리듀서로 가져온 예약정보를 ui에 추가해줌 + 예약날짜순 정렬\r\n    useEffect(()=>{\r\n        if(reservationReducer.reservation.reservationid){\r\n            const newreservationlist = reservationList.concat(reservationReducer.reservation)         \r\n            newreservationlist.sort((r1,r2)=>{\r\n                return Number(new Date(r1.reservationdate)) - Number(new Date(r2.reservationdate))\r\n            }) \r\n            setReservationList(newreservationlist)\r\n        }\r\n       \r\n    },[reservationReducer])\r\n\r\n    //로딩 스피너 끄고 키는 함수\r\n  const ControlLoading=(bool)=>{\r\n    setLoading(bool)\r\n  }\r\n\r\n    //자식인 예약수정 컴포넌트에 넘길 예약수정함수(부모의 예약 리스트를 바꿔야하기에 부모컴포넌트에서 수행해줌) \r\nconst UpdateReservation=(newreservation)=>{\r\n    if(selectedReservation){\r\n        //UI에서 해당 예약을 새로운 예약으로 교체\r\n        const index = reservationList.findIndex((item)=>(item.reservationid===selectedReservation.reservationid))\r\n        let tmplist = [...reservationList]\r\n        if(index>=0){\r\n            tmplist.splice(index,1,newreservation);\r\n        }\r\n        tmplist.sort((r1,r2)=>{\r\n            return Number(new Date(r1.reservationdate)) - Number(new Date(r2.reservationdate))\r\n        }) \r\n        setReservationList(tmplist)\r\n    }\r\n    \r\n}\r\n\r\n//예약 취소\r\nconst CancelReservation=()=>{\r\n    if(selectedReservation){\r\n        //DB변경\r\n        RemoveReservation(selectedReservation.reservationid).then((result)=>{\r\n            //ui변경\r\n            const index = reservationList.findIndex((item)=>(item.reservationid===selectedReservation.reservationid))\r\n            let tmplist = [...reservationList]\r\n            if(index>=0){\r\n                tmplist.splice(index,1);\r\n            }\r\n            tmplist.sort((r1,r2)=>{\r\n                return Number(new Date(r1.reservationdate)) - Number(new Date(r2.reservationdate))\r\n            }) \r\n            setReservationList(tmplist)\r\n        })\r\n            \r\n        \r\n    }\r\n    \r\n\r\n}\r\n\r\n    //검사접수하기\r\n    const ResisterTest = () =>{\r\n      //모달창 open\r\n      setTestSelectorModalshow(true)\r\n        \r\n    }\r\n\r\n  //진료접수시 상태변경함수\r\n  // const modifyReservationList = () =>{\r\n  //   const modify = reservationList.map((item)=>{\r\n        \r\n  //     if(item.reservationid===selectedReservation.reservationid){\r\n  //         item.status=\"접수완료\"\r\n  //     }\r\n  //     return item;      \r\n      \r\n  //   })\r\n  //   //상태변경된 예약 수정\r\n  //   setReservationList(modify)\r\n  // }\r\n    //진료접수하기\r\n    const ResisterTreatment = () =>{\r\n             //모달창 open\r\n             setDoctorSelectorModalshow(true)\r\n    }\r\n\r\n\r\n    return(\r\n    <div className=\"pl-3 pr-3 pb-3 border border-dark\" style={{height:\"50vh\", backgroundColor:\"white\"}}>\r\n        <ReceptionHeader headertitle=\"예약\" iclassName=\"bi bi-calendar-event \" color=\"#ffcd82\">\r\n            <button style={{marginRight:\"10px\"}} disabled={!(selectedReservation)}onClick={()=>{setReservationUpdateModalshow(true)}} className=\"btn btn-dark btn-sm\">예약수정</button>\r\n            <button style={{marginRight:\"10px\"}} disabled={!(selectedReservation&&selectedReservation.type===\"검사\" &&selectedReservation.status===\"대기\" )} onClick={ResisterTest} className=\"btn btn-dark btn-sm\">검사접수</button>\r\n            <button style={{marginRight:\"10px\"}} disabled={!(selectedReservation&&selectedReservation.type===\"진료\"&&selectedReservation.status===\"대기\" )} onClick={ResisterTreatment} className=\"btn btn-dark btn-sm\">진료접수</button>\r\n            <button style={{marginRight:\"10px\"}} disabled={!(selectedReservation)}onClick={CancelReservation} className=\"btn btn-dark btn-sm\">예약취소</button>\r\n        </ReceptionHeader>\r\n        <Calendar setSelectDate = {(date)=>{setSelectDate(date)}}/>\r\n        <div className=\"rounded-lg justify-content-center\">\r\n            <div className=\"d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\",marginTop:\"10px\",marginBottom:\"10px\"}}>\r\n                <div style={{width:\"20%\"}}>순번</div>\r\n                <div style={{width:\"20%\"}}>환자ID</div>\r\n                <div style={{width:\"20%\"}}>이름</div>\r\n                <div style={{width:\"20%\"}}>예약타입</div>\r\n                <div style={{width:\"20%\"}}>예약시간</div>\r\n            </div>\r\n            <div className=\"overflow-auto  justify-content-center\" style={{height:\"calc(50vh - 230px)\"}} >\r\n                 {reservationList&&reservationList.map((item,index)=>{\r\n                     \r\n                     \r\n                     let rdate = new Date(item.reservationdate).toLocaleDateString() \r\n                     const item2 = {...item, reservationuidate:moment(item.reservationdate).format(\"HH:mm\")}\r\n                     if(rdate===selectDate){\r\n                        return(\r\n                            <div key={index}>\r\n                                    <Item onClick={click} item ={item2} property={property} order={index}/>\r\n                            </div>                         \r\n                            )\r\n                        }\r\n                     })} \r\n            </div>\r\n        </div>\r\n        <Modal backdrop=\"static\" size=\"lg\" show={reservationUpdateModalshow}  onHide={()=>{setReservationUpdateModalshow(false)}}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>예약수정</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><ReservationUpdateModal closeModal={closeModal} selectedReservation={selectedReservation} UpdateReservation={UpdateReservation}/></Modal.Body>\r\n        </Modal>\r\n        <Modal  backdrop=\"static\" show={testSelectorModalshow} onHide={()=>{setTestSelectorModalshow(false)}}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>검사선택</Modal.Title>\r\n          {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n        </Modal.Header>\r\n        <Modal.Body><TestSelectorModal CancelReservation={CancelReservation} controlLoading={ControlLoading} closeModal={closeModal} selectedPatient={selectedReservation}/></Modal.Body>\r\n      </Modal>\r\n        <Modal  backdrop=\"static\" show={doctorSelectorModalshow} onHide={()=>{setDoctorSelectorModalshow(false)}}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>의사선택</Modal.Title>\r\n          {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n        </Modal.Header>\r\n        <Modal.Body><DoctorSelectorModal CancelReservation={CancelReservation} controlLoading={ControlLoading} closeModal={closeModal} selectedPatient={selectedReservation}/></Modal.Body>\r\n      </Modal>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Reservation;","import { useEffect, useState } from \"react\";\r\nimport Item from \"views/components/Item\";\r\nimport {GetPatientList} from \"apis/Reception\"\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nfunction SearchPatientModal(props){\r\n    const property = [\"patientid\",\"patientname\",\"ssn1\",\"lasttreatment\",\"registerday\"]\r\n    const selectname = [\"ID\",\"이름\",\"생년월일\",\"최종진료일\",\"등록일\"]\r\n    const [keyword, setKeyword] = useState(\"\");\r\n    const [select, setSelect] = useState(property[0]);\r\n    //원본 list\r\n    const [patientList,setPatientList] = useState([]);\r\n    let focusItem;\r\n    //처음 컴포넌트 시작시 목록 불러옴\r\n    useEffect(()=>{\r\n        //스피너 on\r\n        props.controlLoading(true);\r\n        //DB 불러옴\r\n        GetPatientList().then((result)=>{\r\n            //DB불러온거 상태저장\r\n            setPatientList(result.data)\r\n            //스피너 off\r\n            props.controlLoading(false);\r\n        })\r\n        //모달 닫을때 호출\r\n        return(()=>{\r\n        })\r\n},[])\r\n\r\n    // keyword 적을때 불리는 함수\r\n    const ChangeKeyword = (event) =>{\r\n        setKeyword(event.target.value)\r\n    }\r\n    // Select 바꿀때 불리는 함수\r\n    const ChangeSelect = (event)=>{\r\n        setSelect(event.target.value);\r\n    }\r\n    // 선택 버튼 누를떄 불리는 함수\r\n    const SelectPatient = () =>{\r\n        //선택된 환자상태에 저장\r\n       props.setSelectedPatient(focusItem)\r\n       //모달 닫기\r\n       props.closeModal(\"SearchPatientModal\")\r\n       \r\n    }\r\n    // 환자 div 포커스 선택\r\n    const click = (item) =>{\r\n        focusItem = item; \r\n    }\r\n    return(\r\n    <div className=\"conatainer\" style={{height:\"400px\"}}>\r\n          \r\n        <div className=\"d-flex justify-content-between\">\r\n            <div >\r\n                <label style={{marginRight:\"10px\"}}>검색</label>\r\n                <select onChange={ChangeSelect} style={{marginRight:\"10px\"}}>\r\n                    {property.map((item,index)=>{return(\r\n                        <option key={index} value={item}>{selectname[index]}</option>\r\n                    )\r\n                    })}\r\n                </select>\r\n                <input style={{marginRight:\"10px\"}} onChange={ChangeKeyword} value={keyword} />\r\n              </div>\r\n\r\n            <div >\r\n                  <button className=\"btn btn-outline-dark btn-sm\" onClick={SelectPatient}>선택</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"rounded-lg justify-content-center\">\r\n            <div className=\"d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\",marginTop:\"10px\",marginBottom:\"10px\"}}>\r\n                <div style={{width:\"20%\"}}>순번</div>\r\n                <div style={{width:\"20%\"}}>ID</div>\r\n                <div style={{width:\"20%\"}}>이름</div>\r\n                <div style={{width:\"20%\"}}>생년월일</div>\r\n                <div style={{width:\"20%\"}}>최종진료일</div>\r\n                <div style={{width:\"20%\"}}>등록일</div>\r\n            </div>\r\n            \r\n            <div className=\" justify-content-center\" style={{height:\"300px\"}} >\r\n            {/* Autosize최적화 */}\r\n            <AutoSizer disableHeight>\r\n            {({width, height}) => {\r\n                \r\n                let tmp = patientList.filter((item)=>{\r\n                    if(item[select]!=null){\r\n                        return item[select].toString().indexOf(keyword)!=-1    \r\n                    }else{\r\n                        var empty=\"\"\r\n                        return empty.indexOf(keyword)!=-1\r\n                    }\r\n                    \r\n                })\r\n                return(\r\n                <List width={width} height={300}\r\n                        list={tmp}\r\n                        rowCount={tmp.length}\r\n                        rowHeight={50}\r\n                        rowRenderer={({index, key, style}) => {\r\n                            return (\r\n                                <div key={key} style={style}>\r\n                                <Item onClick={click} item ={tmp[index]} property={property} order={index}/>\r\n                                </div>   \r\n                            );\r\n                            }}\r\n                        overscanRowCount={5}/>\r\n                )\r\n            }}\r\n            </AutoSizer>\r\n\r\n\r\n                   {/* {patientList.map((item,index)=>{\r\n                     if(item[select].toString().indexOf(keyword)!=-1){\r\n                        return(\r\n                            <div key={index}>\r\n                                    <Item onClick={click} item ={item} property={property} order={index}/>\r\n                            </div>                         \r\n                            )    \r\n                     }\r\n                         \r\n                     })}   */}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SearchPatientModal;","import { RegisterPatient } from \"apis/Reception\";\r\nimport { useForm } from \"react-hook-form\";\r\nfunction RegisterPatientModal(props){\r\n    const { register, handleSubmit,  errors } = useForm();\r\n  \r\n    const onSubmit=(patient)=>{\r\n        //상태가 아닌 고정값 지정\r\n        patient[\"registerday\"] = new Date()\r\n        patient[\"codenumber\"]=1\r\n        patient[\"enabled\"]=1\r\n        //DB에 저장\r\n       RegisterPatient(patient).then((result)=>{\r\n        patient[\"patientid\"] = result.data\r\n        patient[\"lasttreatment\"] = \"-\"\r\n        patient[\"registerday\"] = patient[\"registerday\"].toLocaleDateString()\r\n        // 해당 상태 부모로 빼고 모달 닫기\r\n        props.setSelectedPatient(patient)\r\n        props.closeModal(\"RegisterPatientModal\")\r\n        })\r\n       \r\n    }\r\n\r\n    return(\r\n        <>\r\n      <div>\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"mb-2\">\r\n        <label>이름 : </label>\r\n        <input className=\"ml-2\" name=\"patientname\" ref={register({ required: true })} />\r\n        {errors.patientname && <div style={{color:\"red\"}}>이름을 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>성별 : </label>\r\n      <select className=\"ml-2\" name=\"sex\" ref={register({ required: true })}>\r\n        <option value=\"남자\">남자</option>\r\n        <option value=\"여자\">여자</option>\r\n      </select>\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>나이 : </label>\r\n      <input className=\"ml-2\" name=\"age\" type=\"number\" ref={register({ required: true })} />\r\n      {errors.age && <div style={{color:\"red\"}}>나이를 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>주민등록번호 : </label>\r\n <br/>\r\n      <input className=\"mr-2\" name=\"ssn1\" type=\"number\" ref={register({required: true, pattern: /[0-9]{6}/})} />\r\n\r\n  \r\n      -\r\n   \r\n      <input className=\"ml-2\" name=\"ssn2\" type=\"number\" ref={register({required: true, pattern: /[0-9]{7}/})} />\r\n      {(errors.ssn2?.type === \"required\" || errors.ssn1?.type === \"required\")  && <div style={{color:\"red\"}}>주민번호를 입력해 주세요</div>}\r\n      {(errors.ssn2?.type === \"pattern\" ||errors.ssn1?.type === \"pattern\")  && <div style={{color:\"red\"}}>주민번호 13자리를 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>핸드폰번호 : </label>\r\n      <input className=\"ml-2\" name=\"phonenumber\" type=\"number\" ref={register({ required: true })} />\r\n      {errors.phonenumber && <div style={{color:\"red\"}}>핸드폰 번호를 입력해 주세요</div>}\r\n      </div>\r\n\r\n      \r\n\r\n\r\n      <div className=\"d-flex justify-content-end\">\r\n      <input  type=\"submit\" />\r\n      </div>\r\n\r\n    </form>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterPatientModal;","import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {UpdatePatient} from \"apis/Reception\"\r\nfunction RegisterPatientModal(props){\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n  \r\n    const onSubmit=(patient)=>{\r\n        patient[\"patientid\"] = props.selectedPatient.patientid\r\n        patient[\"lasttreatment\"] = props.selectedPatient.lasttreatment===\"-\"?null:props.selectedPatient.lasttreatment\r\n        //등록일은 수정한 날짜로 갱신\r\n        patient[\"registerday\"] = new Date()\r\n\r\n        //DB에 저장\r\n        UpdatePatient(patient).then((result)=>{\r\n          patient[\"registerday\"] =  patient[\"registerday\"].toLocaleDateString()\r\n          // 해당 상태 부모로 빼고 모달 닫기\r\n          props.setSelectedPatient(patient)\r\n          props.closeModal(\"UpdatePatientModal\")        \r\n        })\r\n       \r\n    }\r\n\r\n    return(\r\n        <>\r\n      <div>\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"mb-2\">\r\n        <label>이름 : </label>\r\n        <input className=\"ml-2\" name=\"patientname\" defaultValue={props.selectedPatient.patientname} ref={register({ required: true })} />\r\n        {errors.patientname && <div style={{color:\"red\"}}>이름을 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>성별 : </label>\r\n      <select className=\"ml-2\" name=\"sex\" ref={register({ required: true })} defaultValue={props.selectedPatient.sex}>\r\n        <option  value=\"남자\">남자</option>\r\n        <option value=\"여자\">여자</option>\r\n      </select>\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>나이 : </label>\r\n      <input className=\"ml-2\" name=\"age\" type=\"number\" defaultValue={props.selectedPatient.age} ref={register({ required: true })} />\r\n      {errors.age && <div style={{color:\"red\"}}>나이를 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>주민등록번호 : </label>\r\n <br/>\r\n      <input className=\"mr-2\" name=\"ssn1\" type=\"number\" defaultValue={props.selectedPatient.ssn1}  ref={register({required: true, pattern: /[0-9]{6}/})} />\r\n\r\n  \r\n      -\r\n   \r\n      <input className=\"ml-2\" name=\"ssn2\" type=\"number\" defaultValue={props.selectedPatient.ssn2} ref={register({required: true, pattern: /[0-9]{7}/})} />\r\n      {(errors.ssn2?.type === \"required\" || errors.ssn1?.type === \"required\")  && <div style={{color:\"red\"}}>주민번호를 입력해 주세요</div>}\r\n      {(errors.ssn2?.type === \"pattern\" ||errors.ssn1?.type === \"pattern\")  && <div style={{color:\"red\"}}>주민번호 13자리를 입력해 주세요</div>}\r\n      </div>\r\n\r\n      <div className=\"mb-2\">\r\n      <label>핸드폰번호 : </label>\r\n      <input className=\"ml-2\" name=\"phonenumber\" type=\"number\" defaultValue={props.selectedPatient.phonenumber} ref={register({ required: true })} />\r\n      {errors.phonenumber && <div style={{color:\"red\"}}>핸드폰 번호를 입력해 주세요</div>}\r\n      </div>\r\n      <div className=\"d-flex justify-content-end\">\r\n      <input  type=\"submit\" />\r\n      </div>\r\n    </form>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterPatientModal;","const initialState = {\r\n  reservation: {}\r\n}\r\n//액션 타입 선언\r\nconst SET_RESERVATION=\"reservation/setReservation\";\r\n\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetReservation = (reservation) => {\r\n  return {type:SET_RESERVATION, reservation};\r\n} \r\n\r\n//리듀스 선언\r\nconst reservationReducer = (state = initialState, action) => {\r\n  if(action.type === SET_RESERVATION) {\r\n    return {...state, reservation:action.reservation};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\n\r\nexport default reservationReducer;","import { useEffect, useState } from \"react\";\r\nimport ReactDatePicker, {} from \"react-datepicker\";\r\nimport \"./datepickerReservation.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createSetReservation } from \"redux/reservation-reducer\";\r\nimport { RegisterReservation } from \"apis/Reception\";\r\n\r\nfunction RegisterReservationModal(props){\r\n    // //예약 리스트\r\n    // const [reservationList, setReservationList] = useState([]);\r\n    //선택된 날짜 상태\r\n    const [startDate, setStartDate] = useState(new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate(),9,0))\r\n\r\n    // //예약된 시간상태\r\n    // const [reservatedTimes,setReservatedTimes] = useState([]); \r\n\r\n    //진료인지 날짜인지 예약 타입상태 -> true이면 진료, false이면 예약\r\n    const [reservationType, setReservationType] = useState(true)\r\n    //예약상태 결정하는 함수\r\n    const handleReservation = (type) =>{\r\n        setReservationType(type)\r\n    }\r\n    const dispatch = useDispatch();\r\n    ////선택된 검사리스트 (초기값으로 DB에서 불러온 처방검사리스트 들어감)\r\n    // const [testList,setTestList] = useState([]);\r\n    // //처방된 검사 선택\r\n    // const handleTestList = (event, index) =>{\r\n    //     const modify = testList.map((item,i)=>{\r\n    //         if(i===index){\r\n    //             item.ischeck = event.target.checked\r\n    //         }\r\n    //         return item;\r\n    //     })\r\n    //     setTestList(modify);\r\n    // }\r\n\r\n    //날짜를 넣으면 인데스 나옴\r\n    // const GetTimeIndex=(date)=>{\r\n    //     let hour = date.getHours()*10\r\n    //     let minute = date.getMinutes()\r\n    //     if(minute===0){\r\n    //         minute = 0;\r\n    //     }else if(minute===30){\r\n    //         minute = 5;\r\n    //     }\r\n    //     const Index = (hour+minute)/5-18\r\n    //     return Index\r\n    // }\r\n    //인덱스를 넣으면 날짜가 나오는 함수\r\n    // const GetTime=(Index)=>{\r\n    //     let num = (Index+18)*5\r\n    //     let hour = num/10\r\n    //     let minute = num%10===5?30:0\r\n    //     const date = new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate(),hour,minute)\r\n    //     return date;\r\n    // }\r\n    useEffect(()=>{\r\n        //예약정보불러오기\r\n        // var reservationlist = getAllReservationsData();\r\n        // setReservationList(reservationlist)\r\n        // var testlist = getAllTestsGroupData(props.selectedPatient.patientid);\r\n        // setTestList(testlist);\r\n         \r\n       //첫번째로 가능한 예약시간을 구하기위해 datepicker의 Time테이블 형식(30분단위)에 맞춰서 해당 날짜의 1차원배열구성\r\n        // let Times=new Array(18);\r\n        //     Times[GetTimeIndex(new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),13,0))] = true;\r\n        //     Times[GetTimeIndex(new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),13,30))] = true;\r\n        //     for(var i=0; i<reservationlist.length; i++){\r\n        //         if(reservationlist[i].reservationdate){\r\n        //             Times[GetTimeIndex(reservationlist[i].reservationdate)] = true;\r\n        //         }\r\n        //     }\r\n         \r\n        \r\n\r\n         //첫번째 들어갈 시간 구하기\r\n        //  for(var i=0; i<Times.length; i++){\r\n        //      if(!Times[i]){\r\n        //          setStartDate(GetTime(i))\r\n        //          break;\r\n        //      }\r\n        //      //만약 모든 시간이 차있으면 예외처리\r\n        //      if(i===Times.length-1){\r\n                \r\n        //      }\r\n        //  }\r\n\r\n          //예약된 정보를  일,시간,분 3차원배열구성\r\n        //  let excludeTime = new Array(12)\r\n        //  for(var i=0; i<12; i++){\r\n        //      var lastday = new Date(new Date().getFullYear(),i+1,0).getDate();\r\n        //     excludeTime[i] = new Array(lastday)\r\n        //     for(var j=0; j<lastday; j++){\r\n        //         excludeTime[i][j] = new Array();\r\n        //     }\r\n        //  }\r\n        \r\n        //     for(var i=0; i<reservationlist.length; i++){\r\n        //         var month = reservationlist[i].reservationdate.getMonth()+1\r\n        //         var day = reservationlist[i].reservationdate.getDate()\r\n        //         excludeTime[month-1][day-1].push(reservationlist[i].reservationdate)\r\n        //         console.log(month + \",\"+day+\",\"+reservationlist[i].reservationdate)\r\n        //      }\r\n         \r\n         \r\n        // console.log(excludeTime)\r\n        // setReservatedTimes(excludeTime)  \r\n      \r\n      \r\n    },[])\r\n\r\n    //선택된 날짜~ +30분 가져오기\r\n    const getReservationDate= () =>{\r\n        var newDateOptions = {\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour:\"2-digit\",\r\n            minute:\"2-digit\"\r\n        }\r\n        const origin = startDate.toLocaleString(\"ko-kr\",newDateOptions);\r\n        let date = new Date(startDate);\r\n        date.setMinutes(date.getMinutes()+30)\r\n        if(startDate.getTime()){\r\n            \r\n            return origin+\" ~ \"+date.toLocaleString(\"ko-kr\",newDateOptions)\r\n        }else{\r\n            return \"시간을 선택해 주세요\"\r\n        }\r\n       \r\n    }\r\n    \r\n    //예약 등록함수\r\n    const ResisterReservation=()=>{\r\n        //let newreservation;\r\n            //DB에 해당 patient, startDate로 해당 시간에 진료예약\r\n            RegisterReservation({reservationdate:startDate.getTime(),patientid:props.selectedPatient.patientid,patientname:props.selectedPatient.patientname,status:\"대기\",type:reservationType?\"진료\":\"검사\" }).then((result)=>{\r\n                //redux 저장\r\n                dispatch(createSetReservation(result.data))\r\n                //모달 닫기\r\n                props.closeModal(\"RegisterReservationModal\")\r\n            })\r\n    }\r\n    return(\r\n        <div className=\"conatainer\" style={{height:\"50vh\"}}>\r\n            <div style={{height:\"15%\"}}>\r\n               <div className=\"row d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\"}}>\r\n                    <div style={{width:\"10%\"}}>ID</div>\r\n                    <div style={{width:\"10%\"}}>이름</div>\r\n                    <div style={{width:\"10%\"}}>성별</div>\r\n                    <div style={{width:\"10%\"}}>나이</div>\r\n                    <div style={{width:\"35%\"}}>주민번호</div>\r\n                    <div style={{width:\"25%\"}}>Phone</div>\r\n                </div>\r\n                \r\n                <div className=\"row d-flex justify-content-between text-center  \" style={{borderRadius:\"15px\"}}>\r\n                  \r\n                    <div style={{width:\"10%\"}}>{props.selectedPatient.patientid}</div>\r\n                    <div style={{width:\"10%\"}}>{props.selectedPatient.patientname}</div>\r\n                    <div style={{width:\"10%\"}}>{props.selectedPatient.sex}</div>\r\n                    <div style={{width:\"10%\"}}>{props.selectedPatient.age}</div>\r\n                    <div style={{width:\"35%\"}}>{props.selectedPatient.ssn1 + \" - \" + props.selectedPatient.ssn2}</div>\r\n                    <div style={{width:\"25%\"}}>{props.selectedPatient.phonenumber}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\" style={{height:\"90%\"}}>\r\n                <div className=\"col-6 text-center\" style={{margin:\"10px\",marginTop:\"2%\", height:\"100%\"}} >\r\n                    <ReactDatePicker \r\n                    selected={startDate}\r\n                    onChange={(date) => setStartDate(date)}\r\n                    showTimeSelect\r\n                    timeFormat=\"HH:mm\"\r\n                    popperPlacement=\"bottom\" \r\n                    minDate={new Date(new Date().getFullYear(),new Date().getMonth(),new Date().getDate())}\r\n                    minTime={new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),9,0)}\r\n                    maxTime={new Date(startDate.getFullYear(),startDate.getMonth(),startDate.getDate(),17,30)}\r\n                    // excludeTimes={reservatedTimes.length>1&&reservatedTimes[startDate.getMonth()][startDate.getDate()-1]}\r\n                    inline\r\n                    dateFormat=\"yyyy-MM-dd hh:mm\"\r\n                    />\r\n                </div>                \r\n                <div className=\"col-5 \" style={{margin:\"10px\", height:\"100%\", padding:\"0px\" ,marginTop:\"2%\"  }}>\r\n                    <div className=\"border text-center mb-4\" style={{borderRadius:\"15px\"}}> \r\n                        예약날짜<br/>{getReservationDate()}\r\n                   </div>\r\n                    <button onClick={()=>{handleReservation(true)}} style={{backgroundColor:reservationType? \"#ffcd82\":\"white\",border:\"2px solid #ffcd82\",borderRadius:\"15px\",width:\"47%\",height:\"30%\", fontSize:\"1.8em\"}} className=\"  mr-1 \">진료</button>\r\n                        \r\n                        \r\n                    <button onClick={()=>{handleReservation(false)}}  style={{backgroundColor:!reservationType? \"#ffcd82\":\"white\",border:\"2px solid #ffcd82\",borderRadius:\"15px\",width:\"47%\",height:\"30%\", fontSize:\"1.8em\"}} className=\" \">검사</button>\r\n\r\n                        {/* {!reservationType&&\r\n                            testList&&testList.map((item,index)=>{return(\r\n                                <div key={index}>\r\n                                <input type=\"checkbox\" onChange={(e)=>{handleTestList(e,index)}} value={testList[index].ischeck}/>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.groupcode}</label>\r\n                                <label style={{marginLeft:\"5px\"}}>{item.groupname}</label>\r\n                                </div>\r\n                            )})\r\n                        } */}\r\n                   \r\n                    <button className=\"btn btn-dark btn-sm mt-4\" style={{borderRadius:\"15px\",  marginTop:\"10px\", width:\"100%\", fontSize:\"1.3em\"}} /*disabled={reservationType===false&&(testList==null || (testList.filter((item)=>(item.ischeck===true)).length<1)) }*/  onClick={ResisterReservation}>예약</button>\r\n                   \r\n                </div>\r\n\r\n            </div>\r\n       \r\n\r\n                      \r\n        </div>\r\n\r\n        )\r\n    }\r\n\r\nexport default RegisterReservationModal;","function PatientProfile(props) {\r\n\r\n    \r\n  return (\r\n    <>\r\n      <div className=\"\" style={{height:\"calc(35vh - 50px)\"}}>\r\n        <div className=\"d-flex ml-0 mr-0\" style={{height:\"25%\", minWidth:\"200px\"}}>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>이름</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.patientname}</div>\r\n          </div>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>나이</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.age}세</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex flex-column justify-content-center\" style={{height:\"25%\"}}>\r\n          <div className=\"mt-2 mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\", paddingLeft:\"15px\"}}><span>주민등록 번호</span></div>\r\n          <div className=\"ml-0 mr-0 row\">\r\n            <div className=\"col \">\r\n              <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.ssn1}</div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center\">-</div>\r\n            <div className=\"col\">\r\n              <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.ssn2}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row ml-0 mr-0\" style={{height:\"25%\"}}>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mt-2 mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>성별</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.sex}</div>\r\n          </div>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mt-2 mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>전화번호</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.phonenumber}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row ml-0 mr-0\" style={{height:\"25%\"}}>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mt-2 mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>등록일</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.registerday}</div>\r\n          </div>\r\n          <div className=\"col d-flex flex-column justify-content-center\">\r\n            <div className=\"mt-2 mb-1\" style={{fontSize:\"15px\", fontWeight:\"bold\"}}><span>최종진료일</span></div>\r\n            <div className=\"text-center pt-1 pb-1 ml-0 mr-0\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"10px\", fontSize:\"14px\"}}>{props.selectedPatient.lasttreatment}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  } \r\n  \r\n  export default PatientProfile;","import { GetTreatmentListBypatientid,GetTreatmentDetail } from \"apis/Reception\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport Item from \"views/components/Item\";\r\nfunction PatientHistory(props) {\r\n  const[selectedTreatment, setSelectedTreatment] = useState();\r\n  const[treatmentData, setTreatmentData] = useState([])\r\n  const[testData, setTestData] = useState([])\r\n  const[drugsData, setDrugsData] = useState([])\r\n  const[diagnosesData, setDiagnosesData] = useState([])\r\n  const [loading,setLoading] = useState(false);\r\n  \r\n  const treatmentReception = useSelector((state)=>(state.receptionReducer.treatmentreception)) \r\n  useEffect(()=>{\r\n    if(props.selectedPatient.patientid ){\r\n        setLoading(true)\r\n        //히스토리 상세기록 초기화해주기\r\n        setSelectedTreatment(null)\r\n        //해당 환자의 진료기록 불러오기\r\n        GetTreatmentListBypatientid(props.selectedPatient.patientid).then((result)=>{\r\n         //userlist도 불러와서 userid에 맞는 username 가져옴\r\n          const userlist = result.data.userlist;\r\n         const treatmentlist = result.data.treatmentlist\r\n         const data = treatmentlist.map((item,index)=>\r\n         {return {...item,patientname:props.selectedPatient.patientname,username:userlist[index].username}})\r\n          setTreatmentData(data)\r\n          setLoading(false)\r\n        })\r\n        \r\n    }\r\n  },[props.selectedPatient])\r\n  useEffect(()=>{\r\n    if(treatmentReception.patientid === props.selectedPatient.patientid ){\r\n        setLoading(true)\r\n        //히스토리 상세기록 초기화해주기\r\n        setSelectedTreatment(null)\r\n        //해당 환자의 진료기록 불러오기\r\n        GetTreatmentListBypatientid(props.selectedPatient.patientid).then((result)=>{\r\n         //userlist도 불러와서 userid에 맞는 username 가져옴\r\n          const userlist = result.data.userlist;\r\n         const treatmentlist = result.data.treatmentlist\r\n         const data = treatmentlist.map((item,index)=>\r\n         {return {...item,patientname:props.selectedPatient.patientname,username:userlist[index].username}})\r\n          setTreatmentData(data)\r\n          setLoading(false)\r\n        })\r\n        \r\n    }\r\n  },[treatmentReception])\r\n  useEffect(()=>{\r\n    if(selectedTreatment){\r\n      setLoading(true)\r\n      GetTreatmentDetail(selectedTreatment.treatmentid).then((result)=>{\r\n        //데이터 배열의 첫번째가 진단, 두번째가 약, 세번째가 테스트 그룹임\r\n        setDiagnosesData(result.data.treatmentdetail[0])\r\n        setDrugsData(result.data.treatmentdetail[1]);\r\n        setTestData(result.data.treatmentdetail[2]);\r\n        setLoading(false)\r\n      })\r\n    }\r\n    \r\n  },[selectedTreatment])\r\n  const click =useCallback( (focusItem) =>{\r\n    setSelectedTreatment(focusItem);\r\n  },[])\r\n\r\n    const treatmentProperty = [\"treatmentid\",\"patientname\",\"username\",\"status\",\"treatmentdate\"]  \r\n  return (\r\n    <>\r\n      <div className=\"p-2 pt-3\" style={{height:\"60vh\"}}>\r\n        <div style={{fontSize:\"20px\", fontWeight:\"bold\", borderBottom:\"1px solid\"}}><label style={{height:\"100%\"}}>환자 히스토리</label> {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}</div>\r\n        <div className=\"mt-3 p-1\">\r\n          <div className=\"rounded-lg justify-content-center\">\r\n            <div className=\"d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\",marginTop:\"10px\",marginBottom:\"10px\"}}>\r\n                <div style={{width:\"20%\"}}>순번</div>\r\n                <div style={{width:\"20%\"}}>진료ID</div>\r\n                <div style={{width:\"20%\"}}>환자</div>\r\n                <div style={{width:\"20%\"}}>진료자</div>\r\n                <div style={{width:\"20%\"}}>접수상태</div>\r\n                <div style={{width:\"20%\"}}>접수시간</div>\r\n            </div>\r\n            <div className=\"  justify-content-center\" style={{height:\"calc(25vh - 70px)\"}} >\r\n            {/* Autosize최적화 */}\r\n            <AutoSizer disableHeight>\r\n                        {({width, height}) => {\r\n                            return(\r\n                            \r\n                            <List width={width} height={Math.round(window.innerHeight / (100 / 25))-70}\r\n                                    list={treatmentData}\r\n                                    rowCount={treatmentData.length}\r\n                                    rowHeight={50}\r\n                                    rowRenderer={({index, key, style}) => {\r\n                                      return (\r\n                                          <div key={key} style={style}>\r\n                                          <Item onClick={click} item ={treatmentData[index]} property={treatmentProperty} order={index}/>\r\n                                          </div>   \r\n                                      );\r\n                                      }}\r\n                                    overscanRowCount={5}/>\r\n                            )\r\n                        }}\r\n              </AutoSizer>\r\n\r\n\r\n\r\n                  {/* {treatmentData.map((item,index)=>{\r\n                    if(item.patientid===props.selectedPatient.patientid){\r\n                      return(\r\n                        <div key={index}>\r\n                                <Item onClick={click} item ={item} property={treatmentProperty} order={index}/>\r\n                        </div>                         \r\n                        )\r\n                    }\r\n                        \r\n                  })}   */}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex  mt-4\" style={{height:\"calc(35vh - 65px)\"}}>\r\n           <div className=\"col-4\">\r\n           진단기록\r\n           <div className=\"overflow-auto  justify-content-center border\" style={{height:\"calc(35vh - 100px)\"}} >\r\n          \r\n                {selectedTreatment&&diagnosesData&&diagnosesData.map((item,index)=>{\r\n                      return(\r\n                          <div className=\"row m-0 border-bottom text-center\" key={index} style={{fontSize:\"0.8em\"}}>\r\n                            <div className=\"col-3 p-0 border-right\">\r\n                            {item.diagnosesdataid}\r\n                            </div>\r\n                            <div className=\"col-9 p-0\">\r\n                            {item.diagnosesdataname}\r\n                            </div>\r\n                           \r\n                          </div>                         \r\n                          )\r\n                      })}  \r\n          </div>\r\n          </div>\r\n           <div className=\"col-4\">\r\n            처방검사\r\n           <div className=\"overflow-auto  justify-content-center border\" style={{height:\"calc(35vh - 100px)\"}} >\r\n                {selectedTreatment&&testData&&testData.map((item,index)=>{\r\n                    return(\r\n                      <div className=\"row m-0 border-bottom text-center\" key={index} style={{fontSize:\"0.8em\"}}>\r\n                      <div className=\"col-3 p-0 border-right\">\r\n                      {item.testdataid}\r\n                      </div>\r\n                      <div className=\"col-9 p-0\">\r\n                      {item.testdataname}\r\n                      </div>\r\n                     \r\n                    </div>                             \r\n                      )\r\n                })}  \r\n          </div>\r\n          </div>\r\n           <div className=\"col-4\">\r\n             처방약\r\n           <div className=\"overflow-auto  justify-content-center border\" style={{height:\"calc(35vh - 100px)\"}} >\r\n                \r\n                {selectedTreatment&&drugsData&&drugsData.map((item,index)=>{\r\n                      return(\r\n                        <div className=\"row m-0 border-bottom text-center\" key={index} style={{fontSize:\"0.8em\"}}>\r\n                          <div className=\"col-3 p-0 border-right\">\r\n                          {item.drugid}\r\n                          </div>\r\n                          <div className=\"col-9 p-0\">\r\n                          {item.drugname}\r\n                          </div>\r\n                         \r\n                        </div>                         \r\n                        )\r\n                      })}  \r\n          </div>\r\n           </div>\r\n\r\n        </div>\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  } \r\n  \r\n  export default PatientHistory;","import { Modal, Spinner } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SearchPatientModal from \"./SearchPatientModal\";\r\nimport TestSelectorModal from \"./TestSelectorModal\";\r\nimport RegisterPatientModal from \"./RegisterPatientModal\";\r\nimport UpdatePatientModal from \"./UpdatePatientModal\";\r\nimport RegisterReservationModal from \"./RegisterReservationModal\";\r\nimport PatientProfile from \"./PatientProfile\";\r\nimport ReceptionHeader from \"../components/ReceptionHeader\";\r\nimport PatientHistory from \"./PatientHistory\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport DoctorSelectorModal from \"./DoctorSelectorModal\";\r\nfunction SearchPatient(props){\r\n    const [searchModalshow, setSearchModalshow] = useState(false);\r\n    const [reservationRegisterhModalshow, setreservationRegisterhModalshow] = useState(false);\r\n    const [patientRegisterhModalshow, setPatientRegisterhModalshow] = useState(false);\r\n    const [patientUpdateModalshow, setPatientUpdateModalshow] = useState(false);\r\n    const [testSelectorModalshow, setTestSelectorModalshow] = useState(false);\r\n    const [doctorSelectorModalshow, setDoctorSelectorModalshow] = useState(false);\r\n    const [loading,setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    // 모달창에서 선택된 환자 상태\r\n    const [selectedPatient, setSelectedPatient] = useState({\r\n      patientname:\"-\", \r\n      ssn1:\"-\", \r\n      ssn2:\"-\", \r\n      sex: \"-\",\r\n      age:\"-\",\r\n      phonenumber: \"-\", \r\n      lasttreatment:\"-\",\r\n      registerday:\"-\"\r\n    });\r\n    //모달창 닫는 함수\r\n    const closeModal= (modalname) =>{\r\n    // 모달일때 모달종류에 따라 닫아줌\r\n      if(modalname===\"RegisterPatientModal\"){\r\n        setPatientRegisterhModalshow(false)\r\n      }\r\n      else if(modalname===\"UpdatePatientModal\"){\r\n        setPatientUpdateModalshow(false);\r\n      }\r\n      else if(modalname===\"SearchPatientModal\"){\r\n        setSearchModalshow(false);\r\n      }\r\n      else if(modalname===\"RegisterReservationModal\"){\r\n        setreservationRegisterhModalshow(false)\r\n      }\r\n      else if(modalname===\"TestSelectorModal\"){\r\n        setTestSelectorModalshow(false)\r\n      } else if(modalname===\"DoctorSelectorModal\"){\r\n        setDoctorSelectorModalshow(false)\r\n      }\r\n    \r\n    }\r\n\r\n   // 환자 프로필에 변수저장 \r\n   const setPatient = (patient)=>{\r\n   \r\n     if(patient){\r\n      const tmpPatient = {\r\n        patientid:patient.patientid,\r\n        patientname:patient.patientname, \r\n        ssn1:patient.ssn1, \r\n        ssn2:patient.ssn2, \r\n        sex: patient.sex,\r\n        age:patient.age,\r\n        phonenumber: patient.phonenumber, \r\n        registerday: patient.registerday,\r\n        lasttreatment: patient.lasttreatment?patient.lasttreatment:\"-\"\r\n      }\r\n      setSelectedPatient(tmpPatient)\r\n     }\r\n  }\r\n  //로딩 스피너 끄고 키는 함수\r\n  const ControlLoading=(bool)=>{\r\n    setLoading(bool)\r\n  }\r\n   \r\n    return(\r\n   <div className=\"pl-3 pr-3 pb-3 border border-dark\" style={{height:\"96vh\", backgroundColor:\"white\"}} >\r\n        <ReceptionHeader headertitle=\"환자정보\" iclassName=\"bi bi-person-square \" color=\"#9ACAA1\">\r\n                <button  style={{marginRight:\"10px\"}} className=\"btn btn-dark btn-sm\" onClick={()=>{setSearchModalshow(true)}}>환자검색</button>\r\n                 <button disabled={selectedPatient.patientname!==\"-\"?false:true} style={{marginRight:\"10px\"}} className=\"btn btn-dark btn-sm\" onClick={()=>{setreservationRegisterhModalshow(true)}}>예약</button>\r\n                 <button style={{marginRight:\"10px\"}} className=\"btn btn-dark btn-sm\" onClick={()=>{setPatientRegisterhModalshow(true)}}>신규등록</button>\r\n               <button disabled={selectedPatient.patientname!==\"-\"?false:true} style={{marginRight:\"10px\"}} className=\"btn btn-dark btn-sm\" onClick={()=>{setPatientUpdateModalshow(true)}}>환자수정</button>\r\n                <button disabled={selectedPatient.patientname!==\"-\"?false:true} style={{marginRight:\"10px\"}} className=\"btn btn-dark btn-sm\" onClick={()=>{setTestSelectorModalshow(true)}}>검사접수</button>\r\n                 <button disabled={selectedPatient.patientname!==\"-\"?false:true} style={{marginRight:\"10px\"}} className=\"btn btn-dark btn-sm\" onClick={()=>{setDoctorSelectorModalshow(true)}}>진료접수</button>\r\n        </ReceptionHeader>\r\n        <PatientProfile className=\"mt-1\" selectedPatient={selectedPatient}/>\r\n        <PatientHistory selectedPatient={selectedPatient}/> \r\n        \r\n      <Modal backdrop=\"static\" size=\"lg\" show={searchModalshow}  onHide={()=>{setSearchModalshow(false)}}>\r\n        <Modal.Header style={{backgroundColor:\"rgb(27, 41, 109)\"}}  closeButton>\r\n          <Modal.Title  style={{color:\"white\"}}>환자검색</Modal.Title>\r\n          {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n         \r\n        </Modal.Header>\r\n        <Modal.Body><SearchPatientModal controlLoading={ControlLoading} closeModal={closeModal} setSelectedPatient={setPatient}/></Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal  backdrop=\"static\" size=\"lg\" show={reservationRegisterhModalshow} onHide={()=>{setreservationRegisterhModalshow(false)}}>\r\n        <Modal.Header style={{backgroundColor:\"rgb(27, 41, 109)\"}}  closeButton>\r\n          <Modal.Title  style={{color:\"white\"}}>예약등록</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><RegisterReservationModal closeModal={closeModal} selectedPatient={selectedPatient}/></Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal  backdrop=\"static\"  show={patientRegisterhModalshow} onHide={()=>{setPatientRegisterhModalshow(false)}}>\r\n        <Modal.Header style={{backgroundColor:\"rgb(27, 41, 109)\"}}  closeButton>\r\n          <Modal.Title  style={{color:\"white\"}}>신규등록</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><RegisterPatientModal closeModal={closeModal} setSelectedPatient={setPatient}/></Modal.Body>\r\n      </Modal>\r\n      <Modal  backdrop=\"static\"  show={patientUpdateModalshow} onHide={()=>{setPatientUpdateModalshow(false)}}>\r\n        <Modal.Header style={{backgroundColor:\"rgb(27, 41, 109)\"}} closeButton>\r\n          <Modal.Title  style={{color:\"white\"}}>환자수정</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><UpdatePatientModal closeModal={closeModal} selectedPatient={selectedPatient} setSelectedPatient={setPatient}/></Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal size=\"lg\"  backdrop=\"static\" show={testSelectorModalshow} onHide={()=>{setTestSelectorModalshow(false)}}>\r\n        <Modal.Header style={{backgroundColor:\"rgb(27, 41, 109)\"}} closeButton>\r\n          <Modal.Title style={{color:\"white\"}}>검사선택</Modal.Title>\r\n          {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n          </Modal.Header>\r\n        <Modal.Body><TestSelectorModal controlLoading={ControlLoading} closeModal={closeModal} selectedPatient={selectedPatient}/></Modal.Body>\r\n      </Modal>\r\n      <Modal  backdrop=\"static\" show={doctorSelectorModalshow} onHide={()=>{setDoctorSelectorModalshow(false)}}>\r\n        <Modal.Header style={{backgroundColor:\"rgb(27, 41, 109)\"}} closeButton>\r\n          <Modal.Title  style={{color:\"white\"}}>의사선택</Modal.Title>\r\n          {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n           </Modal.Header>\r\n        <Modal.Body><DoctorSelectorModal controlLoading={ControlLoading} closeModal={closeModal} selectedPatient={selectedPatient}/></Modal.Body>\r\n      </Modal>\r\n        \r\n    </div>\r\n\r\n        \r\n            \r\n    )\r\n}\r\n\r\nexport default SearchPatient;","const initialState = {\r\n  patient: { \r\n    patientname:\"환자이름\", \r\n    ssn1:\"-\", \r\n    ssn2:\"-\", \r\n    sex: \"성별\",\r\n    age:\"-\",\r\n    phonenumber: \"-\", \r\n  }\r\n}\r\n\r\n//액션 타입 선언\r\nconst SET_PATIENT=\"patient/setPatient\";\r\n\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetPatient = (patient) => {\r\n  return {type:SET_PATIENT, patient};\r\n} \r\n\r\n//리듀스 선언\r\nconst patientReducer = (state = initialState, action) => {\r\n  if(action.type === SET_PATIENT) {\r\n    return {...state, patient:action.patient};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\n\r\nexport default patientReducer;","import { useState } from \"react\";\r\nimport { ToggleButton } from \"react-bootstrap\";\r\nimport { ButtonGroup } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Item from \"views/components/Item\";\r\nimport {createSetPatient} from\"redux/patient-reducer\"\r\nimport moment from 'moment';\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nfunction TestReception(props){\r\n    const [listtype, setListtype] = useState(\"all\");\r\n    const [selectedTestReception,setSelectedTestReception] = useState()\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setListtype(event.target.value);\r\n      }\r\n      const click = (item) =>{\r\n        dispatch(createSetPatient({patientid:item.patientid}))\r\n        setSelectedTestReception(item)\r\n    }\r\n    //검사접수삭제\r\n    const deleteReceptionTest = () =>{\r\n        if(selectedTestReception){\r\n            props.deleteTestReception(selectedTestReception.testreceptionid)\r\n        }\r\n       \r\n    }\r\n    const testProperty = [\"testreceptionid\",\"patientname\",\"status\",\"testdate\",]\r\n    \r\n    return(\r\n        <div className=\"pl-3 pr-3 pb-3\" style={{backgroundColor:\"white\"}}>\r\n        <div className=\"mt-3 d-flex justify-content-between\">\r\n            <ButtonGroup toggle>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"all\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"all\"} value=\"all\" onChange={handleChange}><div className=\"ml-5 mr-5\">전체</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"대기중\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"대기중\"} value=\"대기중\" onChange={handleChange}><div className=\"ml-5 mr-5\">대기중</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"진행중\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"진행중\"} value=\"진행중\" onChange={handleChange}><div className=\"ml-5 mr-5\">진행중</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"검사완료\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"검사완료\"} value=\"검사완료\" onChange={handleChange}><div className=\"ml-5 mr-5\">검사완료</div></ToggleButton>\r\n            </ButtonGroup>\r\n            <div>\r\n                {props.isDrawer===false&&<button style={{marginRight:\"10px\"}} onClick={deleteReceptionTest} className=\"btn btn-dark btn-sm\">취소</button>}\r\n            </div>\r\n        </div>\r\n        <div className=\"rounded-lg justify-content-center\">\r\n            <div className=\"d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\",marginTop:\"10px\",marginBottom:\"10px\"}}>\r\n                <div style={{width:\"20%\"}}>순번</div>\r\n                <div style={{width:\"20%\"}}>검사ID</div>\r\n                <div style={{width:\"20%\"}}>환자</div>\r\n                <div style={{width:\"20%\"}}>접수상태</div>\r\n                <div style={{width:\"20%\"}}>접수시간</div>\r\n            </div>\r\n            <div className=\" justify-content-center\" style={{height:\"calc(40vh - 200px)\"}} >\r\n               \r\n            {props.testList?\r\n            <AutoSizer disableHeight>\r\n                        {({width, height}) => {\r\n                            let result = props.testList.filter((item)=>listtype===\"all\"||item.status===listtype) \r\n                            return(\r\n                            <List width={width} height={Math.round(window.innerHeight / (100 / 40))-200}\r\n                                    list={result}\r\n                                    rowCount={result.length}\r\n                                    rowHeight={50}\r\n                                    rowRenderer={({index, key, style}) => {\r\n                                        const item2 = {...result[index],testdate:moment(result[index].testdate).format(\"HH:mm\")}\r\n                                        return (\r\n                                            <div key={key} style={style}>\r\n                                            <Item onClick={click} item ={item2} property={testProperty} order={index}/>\r\n                                            </div>   \r\n                                        );\r\n                                        }}\r\n                                    overscanRowCount={5}/>\r\n                            )\r\n                        }}\r\n            </AutoSizer>\r\n            :\r\n            null\r\n            }\r\n\r\n\r\n                 {/* {props.testList&&props.testList.map((item,index)=>{\r\n                     const item2 = {...item,testdate:moment(item.testdate).format(\"HH:mm\")}\r\n                      if(listtype===\"all\"||item.status===listtype){\r\n                     return(\r\n                                    <div key={index}>\r\n                                            <Item onClick={click} item ={item2} property={testProperty} order={index}/>\r\n                                    </div>                         \r\n                 )\r\n                }})}  */}\r\n            </div>\r\n        </div>\r\n                    \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default TestReception;","import {  useState } from \"react\";\r\nimport { ToggleButton } from \"react-bootstrap\";\r\nimport { ButtonGroup } from \"react-bootstrap\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport Item from \"views/components/Item\";\r\nimport {createSetPatient} from\"redux/patient-reducer\"\r\nimport moment from 'moment';\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nfunction TreatmentReception(props){\r\n    const [listtype, setListtype] = useState(\"all\");\r\n    const [selectedTreatmetReception,setSelectedTreatmetReception] = useState()\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setListtype(event.target.value);\r\n      }\r\n      const click = (item) =>{\r\n        dispatch(createSetPatient({patientid:item.patientid}))\r\n        setSelectedTreatmetReception(item)\r\n    }\r\n    //진료접수삭제\r\n    const deleteReceptionTreatment = () =>{\r\n        if(selectedTreatmetReception){\r\n            props.deleteTreatmentReception(selectedTreatmetReception.treatmentid)\r\n        }\r\n    }\r\n    \r\n    const treatmentProperty = [\"treatmentid\",\"patientname\",\"username\",\"status\",\"treatmentdate\"]  \r\n    return(\r\n        <div className=\"pl-3 pr-3 pb-3\" style={{ backgroundColor:\"white\"}}>\r\n        <div className=\"mt-3 d-flex justify-content-between\">\r\n            <ButtonGroup toggle>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"all\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"all\"} value=\"all\" onChange={handleChange}><div className=\"ml-5 mr-5\">전체</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"진료 대기\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"진료 대기\"} value=\"진료 대기\" onChange={handleChange}><div className=\"ml-5 mr-5\">진료 대기</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" variant={`${listtype === \"진료 완료\" ? \"secondary\" : \"light\" }`} name=\"type\"  checked={listtype===\"진료 완료\"} value=\"진료 완료\" onChange={handleChange}><div className=\"ml-5 mr-5\">진료 완료</div></ToggleButton>\r\n            </ButtonGroup>\r\n            <div>\r\n                {props.isDrawer===false&&<button style={{marginRight:\"10px\"}} onClick={deleteReceptionTreatment} className=\"btn btn-dark btn-sm\">취소</button>}\r\n            </div>\r\n        </div>\r\n        <div className=\"rounded-lg justify-content-center\">\r\n            <div className=\"d-flex justify-content-between text-center border \" style={{borderRadius:\"15px\",marginTop:\"10px\",marginBottom:\"10px\"}}>\r\n                <div style={{width:\"20%\"}}>순번</div>\r\n                <div style={{width:\"20%\"}}>진료ID</div>\r\n                <div style={{width:\"20%\"}}>환자</div>\r\n                <div style={{width:\"20%\"}}>진료자</div>\r\n                <div style={{width:\"20%\"}}>접수상태</div>\r\n                <div style={{width:\"20%\"}}>접수시간</div>\r\n        \r\n        \r\n            </div>\r\n            <div className=\"justify-content-center\" style={{height:\"calc(40vh - 200px)\"}} >\r\n            {props.treatmentList?\r\n            <AutoSizer disableHeight>\r\n                        {({width, height}) => {\r\n                            let result = props.treatmentList.filter((item)=>listtype===\"all\"||item.status===listtype) \r\n                            return(\r\n                            <List width={width} height={Math.round(window.innerHeight / (100 / 40))-200}\r\n                                    list={result}\r\n                                    rowCount={result.length}\r\n                                    rowHeight={50}\r\n                                    rowRenderer={({index, key, style}) => {\r\n                                        const item2 = {...result[index],treatmentdate:moment(result[index].treatmentdate).format(\"HH:mm\")}\r\n                                        return (\r\n                                            <div key={key} style={style}>\r\n                                            <Item onClick={click} item ={item2} property={treatmentProperty} order={index}/>\r\n                                            </div>   \r\n                                        );\r\n                                        }}\r\n                                    overscanRowCount={5}/>\r\n                            )\r\n                        }}\r\n            </AutoSizer>\r\n            :\r\n            null\r\n            }\r\n            \r\n\r\n\r\n                 {/* {props.treatmentList&&props.treatmentList.map((item,index)=>{\r\n                      const item2 = {...item,treatmentdate:moment(item.treatmentdate).format(\"HH:mm\")}\r\n                      if(listtype===\"all\"||item.status===listtype){\r\n                     return(\r\n                                    <div key={index}>\r\n                                        \r\n                                        \r\n                                            <Item onClick={click} item ={item2} property={treatmentProperty} order={index}/>\r\n                                    </div>                         \r\n                 )\r\n                }})}  */}\r\n            </div>\r\n        </div>\r\n                    \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default TreatmentReception;","import { useEffect, useState } from \"react\";\r\nimport ReceptionHeader from \"../components/ReceptionHeader\";\r\nimport TestReception from \"./TestReception\";\r\nimport TreatmentReception from \"./TreatmentReception\";\r\n\r\nimport {useSelector } from \"react-redux\";\r\nimport { GetTreatmentList,GetTestReceptionList,DeleteReceptionTreatment,DeleteReceptionTest } from \"apis/Reception\";\r\nimport { sendRedisMessage } from \"apis/Redis\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction PatientReception(props){\r\n   const [select, setSelect] = useState(\"treatmentreception\");\r\n   const onChangeSelect=(event)=>{\r\n       setSelect(event.target.value)\r\n       \r\n    }\r\n    const treatmentReception = useSelector((state)=>(state.receptionReducer.treatmentreception)) \r\n    const testReception = useSelector((state)=>(state.receptionReducer.testreception))\r\n    const [treatementsData, setTreatmentsData] = useState()\r\n    const [testReceptionsData, setTestReceptionsData] = useState()\r\n    const [loading,setLoading] = useState(false);\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        GetTreatmentList().then((result)=>{\r\n            const userlist = result.data.userlist;\r\n            \r\n            const patientlist = result.data.patientlist;\r\n            const treatmentlist = result.data.treatmentlist.map((item, index)=>{\r\n                return {...item, patientname:patientlist[index].patientname,username:userlist[index].username }\r\n            })\r\n            setTreatmentsData(treatmentlist);\r\n            setLoading(false)\r\n        })\r\n    },[treatmentReception])\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        GetTestReceptionList().then((result)=>{\r\n            const patientlist = result.data.patientlist;\r\n            const testlist = result.data.testlist.map((item, index)=>{\r\n                return {...item, patientname:patientlist[index].patientname }\r\n            })\r\n            setTestReceptionsData(testlist);\r\n            setLoading(false)\r\n        })\r\n    },[testReception])\r\n    //진료접수삭제\r\n    const deleteTreatmentsData=(treatment_id)=>{\r\n        let modify = []\r\n        let selectedtreatment= null\r\n        for(var i=0; i<treatementsData.length; i++){\r\n            if(treatementsData[i].treatmentid!==treatment_id){\r\n                modify.push(treatementsData[i]);\r\n            }else{\r\n                selectedtreatment = treatementsData[i]\r\n            }\r\n        }\r\n        //DB에서 삭제\r\n        DeleteReceptionTreatment(treatment_id).then(()=>{\r\n            setTreatmentsData(modify)\r\n            sendRedisMessage({type:\"treatment\", patientid:selectedtreatment.patientid , status:\"취소\"})\r\n            \r\n        })\r\n        \r\n        \r\n    }\r\n    //검사접수 삭제\r\n    const deleteTestsData=(testreception_id)=>{\r\n        let modify = []\r\n        for(var i=0; i<testReceptionsData.length; i++){\r\n            if(testReceptionsData[i].testreceptionid!==testreception_id){\r\n                modify.push(testReceptionsData[i]);\r\n            }\r\n        }\r\n        //DB에서 삭제\r\n        DeleteReceptionTest(testreception_id).then(()=>{\r\n            setTestReceptionsData(modify)\r\n            sendRedisMessage({type:\"test\"})\r\n        })\r\n        \r\n        \r\n    }\r\n    return(\r\n        <div className=\"pl-3 pr-3 pb-3 border border-dark\" style={{height:\"calc(45vh - 10px)\", backgroundColor:\"white\"}}>    \r\n            <ReceptionHeader headertitle=\"당일 접수목록\" iclassName=\"bi bi-droplet \" color=\"#E89677\">\r\n            {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n             <select onChange={onChangeSelect} className=\"ml-2\" name=\"reception\" >\r\n                    <option value=\"treatmentreception\">진료접수</option>\r\n                    <option value=\"testreception\">검사접수</option>\r\n                </select>\r\n            </ReceptionHeader> \r\n          \r\n            {select===\"treatmentreception\"?<TreatmentReception isDrawer={false} deleteTreatmentReception={deleteTreatmentsData} treatmentList={treatementsData}/>:<TestReception isDrawer={false} deleteTestReception={deleteTestsData} testList={testReceptionsData}/>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientReception;","import Reservation from \"./Reservation\";\r\nimport SearchPatient from\"./SearchPatient\";\r\nimport \"./font.css\"\r\nimport PatientReception from \"./PatientReception\";\r\n\r\n\r\nfunction Reception(props){\r\n\r\n    return( \r\n    <>\r\n    <div className=\"container-fluid  d-flex p-0 \" style={{minWidth:\"1200px\", fontFamily:\"Noto Sans KR\"}}>\r\n    <div className=\" col-6 \" style={{height:\"100vh\"}}>\r\n            <div className=\"p-2\" >\r\n                <SearchPatient />\r\n            </div>           \r\n    </div>\r\n    <div className=\" col-6 \" style={{height:\"100vh\"}}>\r\n            <div className=\"row-6 p-2\">\r\n                <Reservation/>         \r\n            </div>\r\n            <div className=\"row-6 p-2 \">\r\n                <PatientReception/>\r\n            </div>\r\n    </div>\r\n        \r\n    </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Reception;","function ButtonHeader(props) {\r\n  return (\r\n    <>\r\n    <style>\r\n    </style>\r\n      <div className=\"row pb-1\" style={{height:\"50px\"}}>\r\n        <div className=\"col-10 row\"><div className=\"p-2 ml-3 mr-2 text-center\" style={{ backgroundColor:props.color, width:\"40px\", color:\"#FFFFFF\"}}><i className={props.iclassName}></i></div><div className=\"d-flex align-items-center\">{props.headertitle}</div></div>\r\n        <div className=\"col-2 d-flex align-items-center justify-content-end mr-2\"><i onClick={props.onclick} className={`${props.btnicon}`} style={{cursor:\"pointer\", fontSize: \"1.5rem\", marginTop:\"10px\", }}></i></div>\r\n      </div>    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default ButtonHeader;","import { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction DiagnosesItem(props) {\r\n  \r\n  return (\r\n    <>\r\n    <div tabIndex=\"-1\" onClick={(event)=>{if(props.onClick)props.onClick(props.item); }} className={\"test ml-2 mr-2 mb-2 pt-2 pb-2 d-flex align-items-center\"} style={{ boxShadow: \"rgb(0 0 0 / 8%) 0px 0px 5px 2px\",borderRadius:\"7px\",fontSize: \"13px\" }}>\r\n        <div className={\"col text-center\"}>{props.item.diagnosesdataid}</div>\r\n        <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{props.item.diagnosesdataname}</Tooltip>}>\r\n          <div className={\"col text-center border-left\"} style={{whiteSpace:\"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.diagnosesdataname}</div>\r\n        </OverlayTrigger>\r\n        <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{props.item.diagnosesdataename}</Tooltip>}>\r\n          <div className={\"col text-center border-left\"} style={{whiteSpace:\"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.diagnosesdataename}</div>\r\n        </OverlayTrigger>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DiagnosesItem;\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction PrescriptionDiagnosesItem(props) {\r\n\r\n  return (\r\n    <div className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n      <div style={{width:\"25%\"}}>{props.item.diagnosesdataid}</div>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.diagnosesdataname}</Tooltip>}>\r\n        <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.diagnosesdataname}</div>\r\n      </OverlayTrigger>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.diagnosesdataename}</Tooltip>}>\r\n        <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.diagnosesdataename}</div>\r\n      </OverlayTrigger>\r\n      <div style={{width:\"25%\"}}><button className=\"btn btn-success btn-sm\" onClick={() => {props.addItem(props.item)}}>추가</button></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PrescriptionDiagnosesItem);","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Modal, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport PrescriptionDiagnosesItem from \"./PrescriptionDiagnosesItem\";\r\n\r\nfunction PrescriptionDiagnosesModal(props) {\r\n\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [prescriptionItems, setPrescriptionItems] = useState([]);\r\n  const [searchList, setSearchList] = useState([]);\r\n  const [searchType, setSearchType] = useState(\"dataid\");\r\n\r\n  const handleSearchName = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(props.show === true){\r\n      setPrescriptionItems(props.itemList);\r\n      setSearchList(props.staticItemList);\r\n      setSearchName(\"\");\r\n    }\r\n  },[props]);\r\n\r\n  const prescribe = useCallback((items) => {\r\n    props.prescribe(items);\r\n    props.handleClose();\r\n  }, [props]);\r\n\r\n  const addItem = useCallback((item) => {\r\n      setPrescriptionItems((prevItems) => {\r\n        const compare = prevItems.findIndex((obj) => obj.diagnosesdataid === item.diagnosesdataid);\r\n        if(compare >= 0){\r\n          alert(\"이미 처방받았습니다.\");\r\n          return prevItems;\r\n        } else {\r\n          const newItem = {\r\n            ...item,\r\n            treatmentid:props.treatment.treatmentid\r\n          }\r\n          const newItems = prevItems.concat(newItem);\r\n          return newItems;\r\n        }\r\n      });\r\n  },[props.treatment]);\r\n\r\n  const removeItem = useCallback((item) => {\r\n    setPrescriptionItems((prevItems) => {\r\n      const newItems = prevItems.filter(prevItem => prevItem.diagnosesdataid !== item.diagnosesdataid);\r\n      return newItems;\r\n    })\r\n  }, [])\r\n\r\n  const selectType = useCallback((event) => {\r\n    setSearchType(event.target.value);\r\n  }, []);\r\n\r\n  const search = useCallback((search, searchType) => {\r\n    let newItems = [];\r\n    search = search.toUpperCase();\r\n    setSearchList(() => {\r\n      if(searchType === \"dataid\") {\r\n        newItems = props.staticItemList.filter(diagnosis => (diagnosis.diagnosesdataid.toUpperCase()).indexOf(search) !== -1)\r\n      } else if(searchType === \"kname\") {\r\n        newItems = props.staticItemList.filter(diagnosis => diagnosis.diagnosesdataname.indexOf(search) !== -1)\r\n      } else if(searchType === \"ename\") {\r\n        newItems = props.staticItemList.filter(diagnosis => (diagnosis.diagnosesdataename.toUpperCase()).indexOf(search) !== -1)\r\n      }\r\n      return newItems;\r\n    })\r\n\r\n  },[props.staticItemList]);\r\n\r\n  const rowRenderer = ({index, key, style}) => {\r\n    return (\r\n      <div key={key} style={style}>\r\n        <PrescriptionDiagnosesItem item={searchList[index]} addItem={addItem}></PrescriptionDiagnosesItem>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <Modal animation={false} show={props.show} onHide={props.handleClose} size=\"xl\" centered>\r\n      <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"}}>\r\n        <Modal.Title style={{color:\"#FFFFFF\"}}>상병 목록</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body >\r\n        <div className=\"input-group d-flex pb-2 justify-content-end border-bottom\">\r\n          <div className=\"d-flex\">\r\n          <select className=\"custom-select\" style={{width:\"110px\"}} onChange={selectType}>\r\n            <option value=\"dataid\" selected={searchType ===\"dataid\"}>질병코드</option>\r\n            <option value=\"kname\" selected={searchType ===\"kname\"}>질병명(한글)</option>\r\n            <option value=\"ename\" selected={searchType ===\"ename\"}>질병명(영어)</option>\r\n          </select>\r\n            <input type=\"text\" onChange={handleSearchName}/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={ () => search(searchName ,searchType)}>검색</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{height:\"500px\"}} className=\"d-flex\">\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\"}}>\r\n            <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n              <div style={{width:\"25%\"}}>질병코드</div>\r\n              <div style={{width:\"25%\"}}>질병명(한글)</div>\r\n              <div style={{width:\"25%\"}}>질병명(영어)</div>\r\n              <div style={{width:\"25%\"}}></div>\r\n            </div>\r\n            <div className=\"overflow-auto border\" style={{height:\"450px\"}}>\r\n            {prescriptionItems != null &&\r\n            prescriptionItems.map ((item, index) => {\r\n              return (\r\n                <div key={item.diagnosesdataid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n                  <div style={{width:\"25%\"}}>{item.diagnosesdataid}</div>\r\n                  <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{item.diagnosesdataname}</Tooltip>}>\r\n                    <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{item.diagnosesdataname}</div>\r\n                  </OverlayTrigger>\r\n                  <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{item.diagnosesdataename}</Tooltip>}>\r\n                    <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{item.diagnosesdataename}</div>\r\n                  </OverlayTrigger>\r\n                  <div style={{width:\"25%\"}}><button className=\"btn btn-danger btn-sm\" onClick={() => {removeItem(item)}}>제거</button></div>\r\n                </div>\r\n              );\r\n            })} \r\n            </div>\r\n          </div> \r\n\r\n          <div className=\"col-1 d-flex align-items-center justify-content-center\">\r\n            <i className=\"bi bi-arrow-left-square\" style={{fontSize:\"30px\"}}></i>\r\n          </div>\r\n\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\"}}>\r\n            <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n              <div style={{width:\"25%\"}}>질병코드</div>\r\n              <div style={{width:\"25%\"}}>질병명(한글)</div>\r\n              <div style={{width:\"25%\"}}>질병명(영어)</div>\r\n              <div style={{width:\"25%\"}}></div>\r\n            </div>\r\n            <div className=\"border\" style={{height:\"450px\"}}>\r\n              {searchList.length === 0 ? \r\n              <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                <i className=\"bi bi-x-octagon mr-2\"></i>  검색 결과가 없습니다.\r\n              </div>\r\n              :\r\n              <AutoSizer>\r\n                {\r\n                  ({width, height}) => {\r\n                    return(\r\n                      <List width={width} height={height}\r\n                        rowCount={searchList.length}\r\n                        rowHeight={50}\r\n                        rowRenderer={rowRenderer}\r\n                        overscanRowCount={5}\r\n                      />\r\n                    )\r\n                  }\r\n                }\r\n              </AutoSizer>\r\n              }\r\n            </div>\r\n          </div> \r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" size=\"sm\" onClick={props.handleClose}>\r\n          닫기\r\n        </Button>\r\n        <Button variant=\"outline-primary\" size=\"sm\" onClick={() => { prescribe(prescriptionItems) } }>\r\n          선택 완료\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PrescriptionDiagnosesModal;","import { useState } from \"react\";\r\nimport ButtonHeader from \"./components/ButtonHeader\";\r\nimport DiagnosesItem from \"./components/Diagnoses/DiagnosesItem\";\r\nimport PrescriptionDiagnosesModal from \"./components/Diagnoses/PrescriptionDiagnosesModal\";\r\n\r\n\r\nfunction DiagnosisList(props) {\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const info = () => {\r\n    alert(\"대기중인 진료를 선택해주세요.\");\r\n  }\r\n  const prescribeDiagnoses =  (prescriptionItems) => {\r\n    props.prescribeDiagnoses(prescriptionItems);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ButtonHeader headertitle=\"상병 목록\" iclassName=\"bi bi-check2-square\" color=\"#D27E7B\" btnicon=\"bi bi-plus-square\" onclick={props.treatment.status===\"진료 대기\"? handleShow : info}/>\r\n      <PrescriptionDiagnosesModal show={show} treatment={props.treatment} handleClose={handleClose} staticItemList={props.staticDignoses} itemList={props.treatmentDiagnoses} prescribe={prescribeDiagnoses}></PrescriptionDiagnosesModal>\r\n      <div className=\"overflow-auto p-3\" style={{height:\"calc(100% - 50px\"}}>\r\n\r\n      \r\n      {\r\n        props.treatment.treatmentid == null ? \r\n        <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n          <div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"2px\"}}><div><i class=\"bi bi-folder-check\" style={{fontSize:\"100px\"}}></i></div><div style={{fontSize:\"16px\"}}>진료를 선택해주세요.</div></div>\r\n        </div>\r\n        :\r\n        (\r\n          props.loading === true ? \r\n          <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n            <div className=\"spinner-border text-success\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n          :\r\n          (\r\n            props.treatmentDiagnoses.length !==0 ? \r\n            props.treatmentDiagnoses.map (diagnosis => {\r\n              return (\r\n                <DiagnosesItem key={diagnosis.diagnosesdataid} item={diagnosis}></DiagnosesItem>\r\n              );\r\n            })\r\n            :\r\n            <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n              <div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"2px\"}}><div><i class=\"bi bi-plus-square\" style={{fontSize:\"100px\"}}></i></div><div style={{fontSize:\"16px\"}}>처방 받은 내역이 없습니다.</div></div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n      </div>\r\n\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default DiagnosisList;","import React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction PrescriptionDrugItem(props) {\r\n\r\n  const handleChange = (event) => {\r\n    props.onChangeQuantity(event, props.quantityArr);\r\n  }\r\n\r\n  return (\r\n    <div key={props.item.drugid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n      <div style={{width:\"25%\"}}>{props.item.drugid}</div>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.drugname}</Tooltip>}>\r\n        <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.drugname}</div>\r\n      </OverlayTrigger>\r\n      <div className=\"d-flex\" style={{width:\"25%\"}}>\r\n        <div style={{width:\"60%\", marginRight:\"3px\"}}>\r\n          <input min={1} type=\"number\" name={props.item.drugid} value={props.quantityArr[props.item.drugid] || 1} onChange={handleChange} className=\"form-control\"></input>\r\n        </div>\r\n        <div style={{width:\"40%\"}}>{props.item.drugunit}</div>\r\n      </div>\r\n      <div style={{width:\"25%\"}}><button className=\"btn btn-success btn-sm\" onClick={() => {props.addItem(props.item, props.quantityArr[props.item.drugid], props.quantityArr)}}>추가</button></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PrescriptionDrugItem);","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Modal, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport PrescriptionDrugsItem from \"./PrescriptionDrugItem\"\r\n\r\nfunction PrescriptionDrugsModal(props) {\r\n\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [searchList, setSearchList] = useState([]);\r\n  const [searchType, setSearchType] = useState(\"drugid\");\r\n\r\n  const [quantityArr, setQuantityArr] = useState({});\r\n  const [prescriptionItems, setPrescriptionItems] = useState([]);\r\n  \r\n  const handleSearchName = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n  \r\n  const onChangeQuantity = useCallback((e, quantityArr) => {\r\n    setQuantityArr({\r\n      ...quantityArr,\r\n      [e.target.name]:e.target.value\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(props.show === true){\r\n      setPrescriptionItems(props.itemList);\r\n      setQuantityArr({});\r\n      setSearchName(\"\");\r\n      setSearchList(props.staticItemList);\r\n    }\r\n  },[props]);\r\n\r\n  const prescribe = useCallback((items) => {\r\n    props.prescribe(items);\r\n    props.handleClose();\r\n  }, [props]);\r\n\r\n\r\n  const addItem = useCallback((item, quantity=1, quantityArr) => {\r\n    if(quantity <=0){\r\n      quantity = 1;\r\n    }\r\n    setPrescriptionItems((prevItems) => {\r\n      const compare = prevItems.findIndex((obj) => obj.drugid === item.drugid);\r\n      if(compare >= 0){\r\n        alert(\"이미 처방받았습니다.\");\r\n        return prevItems;\r\n      } else {\r\n        const newItem = {\r\n          ...item,\r\n          quantity:quantity,\r\n          treatmentid:props.treatment.treatmentid\r\n        }\r\n        const newItems = prevItems.concat(newItem);\r\n        setQuantityArr({\r\n          ...quantityArr,\r\n          [item.drugid] : 0\r\n        })\r\n        return newItems;\r\n      }\r\n    });\r\n\r\n  }, [props.treatment]);\r\n\r\n  const removeItem = useCallback((item) => {\r\n    setPrescriptionItems(prevItems => {\r\n      const newItems = prevItems.filter(prevItem => prevItem.drugid != item.drugid);\r\n      return newItems;\r\n    })\r\n  }, []);\r\n\r\n  const selectType = useCallback((event) => {\r\n    setSearchType(event.target.value);\r\n  }, []);\r\n\r\n  const search = useCallback((search, searchType) => {\r\n    let newItems = [];\r\n    search = search.toUpperCase();\r\n    setSearchList(() => {\r\n      if(searchType === \"drugid\") {\r\n        newItems = props.staticItemList.filter(drug => (drug.drugid.toUpperCase()).indexOf(search) !== -1)\r\n      } else if(searchType === \"drugname\") {\r\n        newItems = props.staticItemList.filter(drug => (drug.drugname.toUpperCase()).indexOf(search) !== -1)\r\n      } \r\n      return newItems;\r\n    })\r\n\r\n  },[props.staticItemList]);\r\n\r\n  const rowRenderer = ({index, key, style}) => {\r\n    return (\r\n      <div key={key} style={style}>\r\n        <PrescriptionDrugsItem item={searchList[index]} addItem={addItem} quantityArr={quantityArr} onChangeQuantity={onChangeQuantity}></PrescriptionDrugsItem>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal animation={false} show={props.show} onHide={props.handleClose} size=\"xl\" centered>\r\n      <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"} }>\r\n        <Modal.Title style={{color:\"#FFFFFF\"}}>약 처방</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n\r\n        <div className=\"input-group d-flex pb-2 justify-content-end border-bottom\">\r\n          <div className=\"d-flex\">\r\n            <select className=\"custom-select\" style={{width:\"110px\"}} onChange={selectType}>\r\n              <option value=\"drugid\" selected={searchType ===\"drugid\"}>약품코드</option>\r\n              <option value=\"drugname\" selected={searchType ===\"drugname\"}>약품명</option>\r\n            </select>\r\n            <input type=\"text\" onChange={handleSearchName}/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={ () => search(searchName, searchType)}>검색</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{height:\"500px\"}} className=\"d-flex\">\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\"}}>\r\n            <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n              <div style={{width:\"25%\"}}>약품코드</div>\r\n              <div style={{width:\"25%\"}}>약품명</div>\r\n              <div style={{width:\"25%\"}}>수량</div>\r\n              <div style={{width:\"25%\"}}></div>\r\n            </div>\r\n            <div className=\"overflow-auto border\" style={{height:\"450px\"}}>\r\n            {prescriptionItems != null &&\r\n            prescriptionItems.map ((item, index) => {\r\n              return (\r\n                <div key={item.drugid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n                  <div style={{width:\"25%\"}}>{item.drugid}</div>\r\n                  <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{item.drugname}</Tooltip>}>\r\n                    <div style={{width:\"25%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{item.drugname}</div>\r\n                  </OverlayTrigger>\r\n                  <div style={{width:\"25%\"}}>{item.quantity} {item.drugunit}</div>\r\n                  <div style={{width:\"25%\"}}><button className=\"btn btn-danger btn-sm\" onClick={() => {removeItem(item)}}>제거</button></div>\r\n                </div>\r\n              );\r\n            })} \r\n            </div>\r\n          </div>\r\n          <div className=\"col-1 d-flex align-items-center justify-content-center\">\r\n            <i className=\"bi bi-arrow-left-square\" style={{fontSize:\"30px\"}}></i>\r\n          </div>\r\n\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\"}}>\r\n            <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n              <div style={{width:\"25%\"}}>약품코드</div>\r\n              <div style={{width:\"25%\"}}>약품명</div>\r\n              <div style={{width:\"25%\"}}>수량</div>\r\n              <div style={{width:\"25%\"}}></div>\r\n            </div>\r\n            <div className=\"border\" style={{height:\"450px\"}}>\r\n              {searchList.length === 0 ? \r\n              <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                <i className=\"bi bi-x-octagon mr-2\"></i>  검색 결과가 없습니다.\r\n              </div>\r\n              :\r\n              <AutoSizer>\r\n                {\r\n                  ({width, height}) => {\r\n                    return (\r\n                      <List width={width} height={height}\r\n                        rowCount={searchList.length}\r\n                        rowHeight={50}\r\n                        rowRenderer={rowRenderer}\r\n                        overscanRowCount={5}\r\n                      />\r\n                    )\r\n                  }\r\n                }\r\n              </AutoSizer>\r\n              }\r\n            </div>\r\n          </div> \r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" size=\"sm\" onClick={props.handleClose}>\r\n          닫기\r\n        </Button>\r\n        <Button variant=\"outline-success\" size=\"sm\" onClick={() => { prescribe(prescriptionItems) } }>\r\n          선택 완료\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PrescriptionDrugsModal;","import { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction DrugsItem(props) {\r\n  \r\n  return (\r\n    <>\r\n    <div tabIndex=\"-1\" onClick={(event)=>{if(props.onClick)props.onClick(props.item); }} className={\"test ml-2 mr-2 mb-2 pt-2 pb-2 d-flex align-items-center\"} style={{ boxShadow: \"rgb(0 0 0 / 8%) 0px 0px 5px 2px\",borderRadius:\"7px\",fontSize: \"13px\" }}>\r\n        <div className={\"col text-center\"}>{props.item.drugid}</div>\r\n        <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{props.item.drugname}</Tooltip>}>\r\n          <div className={\"col text-center border-left\"} style={{whiteSpace:\"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.drugname}</div>\r\n        </OverlayTrigger>\r\n        <div className={\"col text-center border-left\"} style={{whiteSpace:\"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.drugtype}</div>\r\n        <div className={\"col text-center border-left\"} style={{whiteSpace:\"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.quantity} {props.item.drugunit}</div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DrugsItem;\r\n\r\n\r\n\r\n\r\n","\r\nimport { useState } from \"react\";\r\n\r\nimport PrescriptionModal from \"./components/Drugs/PrescriptionDrugsModal\"\r\nimport ButtonHeader from \"./components/ButtonHeader\";\r\nimport DrugsItem from \"./components/Drugs/DrugsItem\";\r\n\r\nfunction DrugList(props) {\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  const info = () => {\r\n    alert(\"대기중인 진료를 선택해주세요.\");\r\n  }\r\n\r\n  const prescribeDrugs = (prescriptionItems) => {\r\n    props.prescribeDrugs(prescriptionItems);\r\n  }\r\n  return (\r\n    <>\r\n    <ButtonHeader headertitle=\"처방약 목록\" iclassName=\"bi bi-bag-plus\" color=\"#FFCD82\" btnicon=\"bi bi-plus-square\" onclick={props.treatment.status===\"진료 대기\"? handleShow : info}/>\r\n    <PrescriptionModal show={show} treatment={props.treatment} handleClose={handleClose} staticItemList={props.staticDrugs} itemList={props.treatmentDrugs} prescribe={prescribeDrugs}></PrescriptionModal>\r\n    <div className=\"overflow-auto p-3\" style={{height:\"calc(100% - 50px\"}}>\r\n      {\r\n        props.treatment.treatmentid == null ? \r\n        <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n          <div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"2px\"}}><div><i class=\"bi bi-folder-check\" style={{fontSize:\"100px\"}}></i></div><div style={{fontSize:\"16px\"}}>진료를 선택해주세요.</div></div>\r\n        </div>\r\n        :\r\n        ( \r\n          props.loading === true ? \r\n          <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n            <div className=\"spinner-border text-success\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n          :\r\n          ( \r\n            props.treatmentDrugs.length !== 0 ?\r\n          \r\n            props.treatmentDrugs !=null &&\r\n            props.treatmentDrugs.map (drug => {\r\n              return (\r\n                <DrugsItem key={drug.drugid} item={drug}></DrugsItem>\r\n              );\r\n            })\r\n            :\r\n            <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n              <div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"2px\"}}><div><i class=\"bi bi-plus-square\" style={{fontSize:\"100px\"}}></i></div><div style={{fontSize:\"16px\"}}>처방 받은 내역이 없습니다.</div></div>\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n    </div>\r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default DrugList;","import { Badge } from \"react-bootstrap\";\r\n\r\nfunction TreatmentItem(props) {\r\n\r\n  return (\r\n    <>\r\n     {/* <style jsx>{`\r\n        .test:focus {\r\n          background: #B3E283;\r\n          color:black;\r\n        }\r\n        \r\n      `}</style> */}\r\n    <div tabIndex=\"-1\" onClick={(event)=>{if(props.onClick)props.onClick(props.item); }} \r\n        className={\"test ml-2 mr-2 mb-2 pt-2 pb-2 d-flex align-items-center\"} style={{ cursor:\"pointer\", boxShadow: \"rgb(0 0 0 / 8%) 0px 0px 5px 2px\",borderRadius:\"7px\",fontSize: \"13px\" }}>\r\n    {props.property.map((prop,index)=>{\r\n      return(\r\n        <div key={index}  className={index===0?\"col pl-0 pr-0  text-center\":\"col pl-0 pr-0 text-center border-left\"}>\r\n          {props.item[prop]}\r\n          {props.item.status === \"진료 대기\" && index === props.property.length - 1 ? <Badge variant=\"success\" className=\"ml-1\">new</Badge> : null}\r\n        </div>\r\n      )\r\n    })}\r\n\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TreatmentItem;\r\n\r\n\r\n\r\n\r\n","import { useCallback, useEffect } from \"react\";\r\nimport TreatmentItem from \"./components/TreatmentItem\";\r\nimport moment from 'moment';\r\nfunction PatientTreatment(props) {\r\n\r\n  const selectTreatment = useCallback((treatment) => {\r\n    props.selectTreatment(treatment);\r\n  }, [props])\r\n\r\n  useEffect(() => {\r\n  }, [props.treatment])\r\n  return (\r\n    <>\r\n      <div className=\"d-flex row pb-1\" style={{height:\"50px\"}}><div className=\"p-2 ml-3 mr-2 text-center\" style={{ backgroundColor:\"#887BD2\", width:\"40px\", color:\"#FFFFFF\"}}><i className=\"bi bi-calendar2-check\"></i></div><div className=\"d-flex align-items-center\">진료 내역</div></div>\r\n      <div className=\"d-flex align-items-center pb-1 justify-content-center\" style={{height:\"50px\", width:\"100%\"}}>\r\n        현재 선택한 진료: {props.treatment.treatmentid}  {props.treatment.treatmentdate} </div>\r\n      {\r\n      props.selectedPatient.patientid != null ? \r\n      <>\r\n        <div className=\"overflow-auto p-3\" style={{height:\"calc(100% - 100px)\"}}>\r\n          {\r\n            props.loading === true ? \r\n            <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n              <div className=\"spinner-border text-success\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            </div>\r\n            :\r\n            (\r\n              (props.patientTreatments == null || props.patientTreatments.length === 0) ?  \r\n              <div className=\"overflow-auto p-3 border-top justify-content-center d-flex align-items-center\" style={{height:\"100%\"}}>\r\n                <span><div style={{textAlign:\"center\", color:\"#999999\"}}><div><i class=\"bi bi-clipboard-x\" style={{fontSize:\"120px\"}}></i></div><div style={{fontSize:\"16px\"}}>선택한 환자의 진료내역이 없습니다.</div></div></span>\r\n              </div>\r\n              : \r\n              props.patientTreatments.map (treatment => {\r\n\r\n                return (\r\n                  <TreatmentItem key={treatment.treatmentid} item={{...treatment, treatmentdate: moment(treatment.treatmentdate).format(\"YYYY-MM-DD\")}} property={[\"treatmentid\", \"treatmentdate\", \"status\"]} onClick={selectTreatment}></TreatmentItem>\r\n                );\r\n              })\r\n            )\r\n          }\r\n        </div>\r\n      </>\r\n      :\r\n      <div className=\"overflow-auto p-3 border-top justify-content-center d-flex align-items-center\" style={{height:\"calc(100% - 100px)\"}}>\r\n        <span><div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"2px\"}}><div><i class=\"bi bi-person-x\" style={{fontSize:\"100px\"}}></i></div><div style={{fontSize:\"20px\"}}>환자를 선택해주세요</div></div></span>\r\n      </div>\r\n      }\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PatientTreatment;\r\n\r\n\r\n\r\n\r\n// selectedTreatment.treatmentid === treatment.treatmentid ?  {cursor:\"pointer\", backgroundColor:\"#38B2AC\"} : ","import axios from \"axios\";\r\n\r\n//treatment관련\r\nexport function getAllTreatments(patientid){\r\n    const result = axios.get(\"treatment/treatments/\"+patientid);\r\n    return result;\r\n}\r\n\r\n//처방하기\r\nexport function prescribeTreatment(prescription) {\r\n  const result = axios.post(\"treatment/prescribetreatment\", prescription);\r\n  return result;\r\n}\r\n\r\n\r\n//약 목록 가져오기\r\nexport function getStaticDrugs() {\r\n  const result = axios.get(\"treatment/staticdrugs\");\r\n  return result;\r\n}\r\n\r\n//질병 목록 가져오기\r\nexport function getStaticDiagnoses() {\r\n  const result = axios.get(\"treatment/staticdiagnoses\");\r\n  return result;\r\n}\r\n\r\n//검사 목록 가져오기\r\nexport function getStaticTests() {\r\n  const result = axios.get(\"treatment/statictests\");\r\n  return result;\r\n}\r\n\r\n//처방 목록 가져오기\r\nexport function getPrescriptionList(treatmentid) {\r\n  const result = axios.get(\"treatment/getprescription/\" + treatmentid);\r\n  return result;\r\n}\r\n\r\n//실시간을 위해 테스트 리스트 가져오기\r\nexport function getTestList(treatmentid) {\r\n  const result = axios.get(\"treatment/gettestlist/\" + treatmentid);\r\n  return result;\r\n}\r\n\r\n//환자 목록 가져오기\r\nexport function getPatientList() {\r\n  const result = axios.get(\"treatment/getpatientlist\");\r\n  return result;\r\n}\r\n\r\n//\r\nexport function getPatient(patientid) {\r\n  const result = axios.get(\"treatment/getpatient/\"+patientid);\r\n  return result;\r\n}\r\n\r\nexport function getTestImgs(treatmentid, testdataid) {\r\n  const result = axios.get(\"treatment/getimgList\", {params: {treatmentid, testdataid}});\r\n  return result;\r\n}","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nfunction ImgDetailModal(props) {\r\n  return (\r\n    <Modal animation={false} show={props.show} onHide={props.closeImgModal} size=\"xl\" centered>\r\n      <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"}}>\r\n        <Modal.Title style={{color:\"#FFFFFF\"}}>사진 상세</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body >\r\n        {props.selectedImg.imgid != null ? \r\n        <a href={`http://kosa3.iptime.org:50006/treatment/imgdownload/${props.selectedImg.imgid}`}>\r\n          <img width={\"100%\"} height={\"100%\"} alt=\"xray\"  src={`http://kosa3.iptime.org:50006/treatment/imgdownload/${props.selectedImg.imgid}`}></img>\r\n        </a>\r\n        :\r\n        null\r\n        }\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" size=\"sm\" onClick={props.closeImgModal}>\r\n          닫기\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ImgDetailModal;","import { useEffect, useState } from \"react\";\r\nimport { Accordion, Alert, Badge, Button, Card, Carousel } from \"react-bootstrap\";\r\nimport { getTestImgs } from \"apis/Treatment\"\r\nimport ImgDetailModal from \"./ImgDetailModal\";\r\n\r\nfunction PackageImgTest(props) {\r\n\r\n  const [imgList, setImgList] = useState([]);\r\n  const [selectedImg, setSelectedImg] = useState({});\r\n  const [imgShow, setImgShow] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const test = props.groupTest.tests[0];\r\n    if(test.result != null && test.result === \"첨부완료\"){\r\n      work(test.treatmentid, test.testdataid);\r\n    } \r\n  },[props.groupTest])\r\n\r\n  const work = async(treatmentid, testdataid) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await getTestImgs(treatmentid, testdataid);\r\n      setImgList(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n   \r\n  }\r\n\r\n  const showImgModal = (img) => {\r\n    setSelectedImg(img);\r\n    setImgShow(true);\r\n  }\r\n\r\n  const closeImgModal = () => {\r\n    setSelectedImg({});\r\n    setImgShow(false)\r\n\r\n  };\r\n  return (\r\n    <>\r\n      <Accordion className=\"mb-3\">\r\n        <Card>\r\n          <Accordion.Toggle as={Alert} variant=\"dark\" className=\"mb-0\" eventKey=\"0\">\r\n          <span style={{fontWeight:\"bold\"}}>\r\n          {props.groupTest.groupname}&nbsp;&nbsp;</span>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body>\r\n              {props.groupTest.tests.map(test => {\r\n                return (\r\n                  <Accordion key={test.testdataid} className=\"mb-3\" defaultActiveKey={\"0\"}>\r\n                    <Card border=\"secondary\">\r\n                      <Card.Header>\r\n                        <Accordion.Toggle block as={Button} size=\"sm\" variant=\"outline-light\" eventKey=\"0\">\r\n                          <span style={{fontSize:\"14px\", fontWeight:\"bold\", color:\"black\"}}>{test.testdataname}\t&nbsp;&nbsp; {props.groupTest.tests[0].result ===\"첨부완료\" ? <Badge variant=\"primary\">입력완료</Badge> : <Badge variant=\"danger\">미입력</Badge>}\r\n                          </span>\r\n                        </Accordion.Toggle>\r\n                      </Card.Header>\r\n                      <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                        {props.groupTest.tests[0].result ===\"첨부완료\" ?\r\n                          <Carousel interval={null} prevIcon={<span className=\"carousel-control-prev-icon bg-dark\"/>} nextIcon={<span className=\"carousel-control-next-icon bg-dark\"/>}>\r\n                            {\r\n                            loading ===true ? \r\n                            <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n                              <div className=\"spinner-border text-success\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                              </div>\r\n                            </div>\r\n                            :\r\n                            imgList != null &&\r\n                            imgList.map((img) => {\r\n                              return(\r\n                                <Carousel.Item key={img.imgid}>\r\n                                  <img\r\n                                    className=\"d-block\"\r\n                                    src={`http://kosa3.iptime.org:50006/treatment/imgdownload/${img.imgid}`}\r\n                                    width=\"100%\"\r\n                                    height=\"536px\"\r\n                                    onClick={() => { showImgModal(img) }}\r\n                                    style={{cursor:\"pointer\"}}\r\n                                    alt=\"xray\"\r\n                                  />\r\n                                </Carousel.Item>\r\n                              )\r\n                            })}\r\n                          </Carousel>\r\n                          :\r\n                          \"결과 미입력\"\r\n                        }\r\n                        </Card.Body>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                  </Accordion>\r\n                );\r\n              })}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n      <ImgDetailModal show={imgShow} closeImgModal={closeImgModal} selectedImg={selectedImg}></ImgDetailModal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PackageImgTest;","\r\nimport { Accordion, Badge, Button, Card, Table } from \"react-bootstrap\";\r\n\r\nfunction Test(props) {\r\n  return (\r\n    <Accordion className=\"mb-3\" defaultActiveKey={\"0\"}>\r\n    <Card border=\"secondary\">\r\n      <Card.Header>\r\n        <Accordion.Toggle block as={Button} size=\"sm\" variant=\"outline-light\" eventKey=\"0\">\r\n          <span style={{fontSize:\"14px\", fontWeight:\"bold\", color:\"black\"}}>{props.test.testdataid}\t&nbsp;&nbsp;{props.test.testname}\r\n            &nbsp;&nbsp;<span style={{color:props.test.testcontainer===\"EDTA\"? \"purple\" : \"red\", marginRight:\"8px\"}}>{props.test.testcontainer}</span>\r\n           {(props.test.result != null && props.test.result !==\"\") ? <Badge variant=\"primary\">입력완료</Badge> : <Badge variant=\"danger\">미입력</Badge>} \r\n          </span>\r\n        </Accordion.Toggle>\r\n      </Card.Header>\r\n      <Accordion.Collapse eventKey=\"0\">\r\n        <Card.Body>\r\n          {(props.test.result != null && props.test.result !==\"\") ? \r\n            <Table striped hover className=\"text-center table-bordered\">\r\n              <thead></thead>\r\n              <tbody>\r\n                <tr>\r\n                  <th>하한치</th>\r\n                  <th>검사결과</th>\r\n                  <th>상한치</th>\r\n                </tr>\r\n                <tr>\r\n                  <td>{props.test.min}</td>\r\n                  <td className={(props.test.result < props.test.min || props.test.result > props.test.max) ? \"table-danger\" : \"table-primary\"}>{props.test.result == null ? 0 : props.test.result}&nbsp;&nbsp;{props.test.testunit}</td>\r\n                  <td>{props.test.max}</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n            : \r\n            \"결과 미입력\"}\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default Test;","import { Accordion, Alert, Card } from \"react-bootstrap\";\r\nimport Test from \"../Test\";\r\n\r\nfunction PackageTest(props) {\r\n  return (\r\n    <Accordion className=\"mb-3\">\r\n      <Card >\r\n        <Accordion.Toggle as={Alert} variant=\"dark\" className=\"mb-0\" eventKey=\"0\">\r\n        <span style={{fontWeight:\"bold\"}}>\r\n        {props.groupTest.groupcode}&nbsp;&nbsp;{props.groupTest.groupname}</span>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"0\">\r\n          <Card.Body>\r\n            {props.groupTest.tests.map(test => {\r\n              return (\r\n                <Test key={test.testdataid} test={test}/>\r\n              );\r\n            })}\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default PackageTest;","import React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction PrescriptionPackageItem(props) {\r\n  return (\r\n    <div key={props.item.groupcode} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n      <div style={{width:\"40%\"}}>{props.item.groupcode}</div>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.groupname}</Tooltip>}>\r\n        <div style={{width:\"40%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.groupname}</div>\r\n      </OverlayTrigger>\r\n      <div style={{width:\"20%\"}}><button className=\"btn btn-success btn-sm\" onClick={() => {props.addPackage(props.item)}}>추가</button></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PrescriptionPackageItem);","import React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction PrescriptionTestItem(props) {\r\n  return (\r\n    <div key={props.item.testdataid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n      <div style={{width:\"20%\"}}>{props.item.groupcode}</div>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.groupname}</Tooltip>}>\r\n        <div style={{width:\"20%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.groupname}</div>\r\n      </OverlayTrigger>\r\n      <div style={{width:\"20%\"}}>{props.item.testdataid}</div>\r\n      <OverlayTrigger placement=\"right\"\r\n          overlay={<Tooltip>{props.item.testdataname}</Tooltip>}>\r\n        <div style={{width:\"20%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{props.item.testdataname}</div>\r\n      </OverlayTrigger>\r\n      <div style={{width:\"20%\"}}><button className=\"btn btn-success btn-sm\" onClick={() => {props.addItem(props.item)}}>추가</button></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(PrescriptionTestItem);","import { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Modal, Nav, OverlayTrigger, Tab, Tooltip } from \"react-bootstrap\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport PrescriptionPackageItem from \"./PrescriptionPackageItem\";\r\nimport PrescriptionTestItem from \"./PrescriptionTestItem\";\r\n\r\nfunction PrescriptionTestsModal(props) {\r\n\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [searchType, setSearchType] = useState(\"groupcode\");\r\n  const [eventKey, setEventKey] = useState(\"test\")\r\n\r\n  const [prescriptionItems, setPrescriptionItems] = useState([]);\r\n  const [groupTests, setGroupTests] = useState([]);\r\n  const [searchGroupTests, setSearchGroupTests] = useState([]);\r\n  const [searchList, setSearchList] = useState([]);\r\n\r\n  const handleSearchName = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(props.show === true){\r\n      setPrescriptionItems(props.itemList);\r\n      setSearchName(\"\");\r\n      setSearchList(props.staticItemList);\r\n      setSearchGroupTests(groupTests);\r\n    }\r\n  },[props, groupTests]);\r\n\r\n  useEffect(() => {\r\n    const groupList = [];\r\n    props.staticItemList.reduce((gt, t) => {\r\n      if(!gt[t.groupcode]){\r\n        gt[t.groupcode] = {};\r\n        gt[t.groupcode].groupcode = t.groupcode;\r\n        gt[t.groupcode].groupname = t.groupname;\r\n        gt[t.groupcode].tests = [];\r\n        gt[t.groupcode].tests.push(t);\r\n        groupList.push(gt[t.groupcode]);\r\n      } else {\r\n        gt[t.groupcode].tests.push(t);\r\n      }\r\n      return gt;\r\n    }, {});\r\n    setGroupTests(groupList);\r\n    setSearchGroupTests(groupList);\r\n  }, [props.staticItemList])\r\n\r\n  const prescribe = useCallback((items) => {\r\n    props.prescribe(items);\r\n    props.handleClose();\r\n  },[props]);\r\n\r\n  const addItem = useCallback((item) => {  \r\n      setPrescriptionItems((prevItems) => {\r\n        const compare = prevItems.findIndex((obj) => obj.testdataid === item.testdataid);\r\n        if(compare >= 0){\r\n          alert(\"이미 처방받았습니다.\");\r\n          return prevItems;\r\n        } else {\r\n          const newItems = prevItems.concat(item);\r\n          return newItems;\r\n        }\r\n      });\r\n\r\n  },[])\r\n\r\n  const addPackage = useCallback((item) => {\r\n    setPrescriptionItems((prevItems) => {\r\n      let newItems = prevItems.filter(prevItem => prevItem.groupcode !== item.groupcode);\r\n      newItems = newItems.concat(item.tests);\r\n      return newItems;\r\n    })\r\n  },[]);\r\n\r\n  const removeItem = useCallback((item) => {\r\n    setPrescriptionItems((prevItems) => {\r\n      const newItems = prevItems.filter(prevItem => prevItem.testdataid !== item.testdataid);\r\n      return newItems;\r\n    })\r\n  }, [])\r\n  \r\n  const search = useCallback((search, searchType, eventKey) => {\r\n    let newTests = [];\r\n    search = search.toUpperCase();\r\n    if(eventKey === \"test\"){\r\n\r\n      setSearchList(() => {\r\n        if(searchType === \"dataid\") {\r\n          newTests = props.staticItemList.filter(test => (test.testdataid.toUpperCase()).indexOf(search) !== -1);\r\n        } else if (searchType === \"dataname\") {\r\n          newTests = props.staticItemList.filter(test => (test.testdataname.toUpperCase()).indexOf(search) !== -1);\r\n        } else if (searchType === \"groupcode\") {\r\n          newTests = props.staticItemList.filter(test => (test.groupcode.toUpperCase()).indexOf(search) !== -1);\r\n        } else if (searchType === \"groupname\") {\r\n          newTests = props.staticItemList.filter(test => (test.groupname.toUpperCase()).indexOf(search) !== -1);\r\n        } \r\n        return newTests;\r\n      });\r\n    } else if(eventKey === \"package\") {\r\n\r\n      setSearchGroupTests(() => {\r\n        if (searchType === \"groupcode\") {\r\n          newTests = groupTests.filter(test => (test.groupcode.toUpperCase()).indexOf(search) !== -1);\r\n        } else if (searchType === \"groupname\") {\r\n          newTests = groupTests.filter(test => (test.groupname.toUpperCase()).indexOf(search) !== -1);\r\n        }\r\n        return newTests;\r\n      })\r\n    }\r\n\r\n  }, [props.staticItemList, groupTests]);\r\n\r\n  const selectType = useCallback((event) => {\r\n    setSearchType(event.target.value);\r\n  }, []);\r\n\r\n  const selectNav = useCallback((key) => {\r\n    setEventKey(key);\r\n\r\n    setSearchType(\"groupcode\");\r\n    setSearchName(\"\");\r\n\r\n    setSearchList(props.staticItemList);\r\n    setSearchGroupTests(groupTests);\r\n  }, [props.staticItemList, groupTests]);\r\n\r\n  const rowRenderer = ({index, key, style}) => {\r\n    return (\r\n      <div key={key} style={style}>\r\n        <PrescriptionTestItem item={searchList[index]} addItem={addItem}></PrescriptionTestItem>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const rowRendererPackage = ({index, key, style}) => {\r\n    return (\r\n      <div key={key} style={style}>\r\n        <PrescriptionPackageItem item={searchGroupTests[index]} addPackage={addPackage}></PrescriptionPackageItem>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal animation={false} show={props.show} onHide={props.handleClose} size=\"xl\" centered>\r\n      <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"} }>\r\n        <Modal.Title style={{color:\"#FFFFFF\"}}>검사 처방</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body >\r\n        <div className=\"input-group d-flex pb-2 mb-1 justify-content-end border-bottom\">\r\n          <div className=\"d-flex\">\r\n          <select className=\"custom-select\" style={{width:\"110px\"}} onChange={selectType}>\r\n            <option value=\"groupcode\" selected={searchType ===\"groupcode\"}>묶음코드</option>\r\n            <option value=\"groupname\" selected={searchType ===\"groupname\"}>묶음명</option>\r\n            {eventKey !== \"package\"? \r\n              <>\r\n                <option value=\"dataid\" selected={searchType ===\"dataid\"}>처방코드</option>\r\n                <option value=\"dataname\" selected={searchType ===\"dataname\"}>처방명</option>\r\n              </>\r\n              :\r\n              null\r\n            }\r\n          </select>\r\n            <input type=\"text\" value={searchName} onChange={handleSearchName}/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={ () => search(searchName, searchType, eventKey, )}>검색</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{height:\"550px\"}} className=\"d-flex\">\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\", marginTop:\"50px\"}}>\r\n            <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n              <div style={{width:\"20%\"}}>묶음코드</div>\r\n              <div style={{width:\"20%\"}}>묶음명</div>\r\n              <div style={{width:\"20%\"}}>처방코드</div>\r\n              <div style={{width:\"20%\"}}>처방명</div>\r\n              <div style={{width:\"20%\"}}></div>\r\n            </div>\r\n            <div className=\"overflow-auto border\" style={{height:\"460px\"}}>\r\n            {prescriptionItems != null &&\r\n            prescriptionItems.map ((item, index) => {\r\n              return (\r\n                <div key={item.testdataid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"50px\", fontWeight:\"bold\"}}>\r\n                  <div style={{width:\"20%\"}}>{item.groupcode}</div>\r\n                  <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{item.groupname}</Tooltip>}>\r\n                    <div style={{width:\"20%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{item.groupname}</div>\r\n                  </OverlayTrigger>\r\n                  <div style={{width:\"20%\"}}>{item.testdataid}</div>\r\n                  <OverlayTrigger placement=\"right\"\r\n                      overlay={<Tooltip>{item.testdataname}</Tooltip>}>\r\n                    <div style={{width:\"20%\", whiteSpace: \"nowrap\",overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{item.testdataname}</div>\r\n                  </OverlayTrigger>\r\n                  <div style={{width:\"20%\"}}><button className=\"btn btn-danger btn-sm\" onClick={() => {removeItem(item)}}>제거</button></div>\r\n                </div>\r\n              );\r\n            })} \r\n            </div>\r\n          </div> \r\n\r\n          <div className=\"col-1 d-flex align-items-center justify-content-center\">\r\n            <i className=\"bi bi-arrow-left-square\" style={{fontSize:\"30px\"}}></i>\r\n          </div>\r\n\r\n          <div className=\"pl-0 pr-0\" style={{width:\"506px\"}}>\r\n            <div style={{height:\"550px\"}}>\r\n              <Tab.Container defaultActiveKey={eventKey}>\r\n                <Nav fill variant=\"tabs\" onSelect={selectNav} >\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"test\">개별 처방</Nav.Link>\r\n                  </Nav.Item>\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey=\"package\">묶음 처방</Nav.Link>\r\n                  </Nav.Item>\r\n                </Nav>\r\n                <Tab.Content  style={{height:\"500px\"}}>\r\n                  <Tab.Pane eventKey= \"test\" className=\"pt-1\">\r\n                  <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n                    <div style={{width:\"20%\"}}>묶음코드</div>\r\n                    <div style={{width:\"20%\"}}>묶음명</div>\r\n                    <div style={{width:\"20%\"}}>처방코드</div>\r\n                    <div style={{width:\"20%\"}}>처방명</div>\r\n                    <div style={{width:\"20%\"}}></div>\r\n                  </div>\r\n                  <div className=\"border\" style={{height:\"460px\"}}>\r\n                    {searchList.length === 0 ? \r\n                      <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                        <i className=\"bi bi-x-octagon mr-2\"></i>  검색 결과가 없습니다.\r\n                      </div>\r\n                      :\r\n                      <AutoSizer>\r\n                        {\r\n                          ({width, height}) => {\r\n                            return (\r\n                              <List width={width} height={height}\r\n                                rowCount={searchList.length}\r\n                                rowHeight={50}\r\n                                rowRenderer={rowRenderer}\r\n                                overscanRowCount={5}\r\n                              />\r\n                            )\r\n                          }\r\n                        }\r\n                      </AutoSizer>\r\n                    }\r\n                  </div>\r\n                  </Tab.Pane>\r\n\r\n                  <Tab.Pane eventKey=\"package\" className=\"pt-1\">\r\n                    <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n                      <div style={{width:\"40%\"}}>묶음코드</div>\r\n                      <div style={{width:\"40%\"}}>묶음명</div>\r\n                      <div style={{width:\"20%\"}}></div>\r\n                    </div>\r\n                    <div className=\"border\" style={{height:\"460px\"}}>\r\n                    {searchGroupTests.length === 0 ? \r\n                      <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                        <i className=\"bi bi-x-octagon mr-2\"></i>  검색 결과가 없습니다.\r\n                      </div>\r\n                      :\r\n                      <AutoSizer>\r\n                        {\r\n                          ({width, height}) => {\r\n                            return (\r\n                              <List width={width} height={height}\r\n                                rowCount={searchGroupTests.length}\r\n                                rowHeight={50}\r\n                                rowRenderer={rowRendererPackage}\r\n                                overscanRowCount={5}\r\n                              />\r\n                            )\r\n                          }\r\n                        }\r\n                      </AutoSizer>\r\n                    }\r\n                    </div>\r\n                  </Tab.Pane>\r\n                </Tab.Content>\r\n              </Tab.Container>\r\n            </div>\r\n          </div> \r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" size=\"sm\" onClick={props.handleClose}>\r\n          닫기\r\n        </Button>\r\n        <Button variant=\"outline-primary\" size=\"sm\" onClick={() => { prescribe(prescriptionItems) } }>\r\n          선택 완료\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PrescriptionTestsModal;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Col, Row, Toast } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ButtonHeader from \"./components/ButtonHeader\";\r\nimport PackageImgTest from \"./components/Tests/PackageImgTest\";\r\nimport PackageTest from \"./components/Tests/PackageTest\";\r\nimport PrescriptionTestsModal from \"./components/Tests/PrescriptionTestsModal\";\r\n\r\nfunction TestList(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [groupTests, setGroupTests] = useState({});\r\n\r\n  const [receptionToast, setReceptionToast] = useState(false);\r\n  const receptionToastShow = () => setReceptionToast(true);\r\n  const receptionToastClose = () => setReceptionToast(false);\r\n\r\n  const treatmentReception = useSelector((state)=>(state.receptionReducer.treatmentreception)) \r\n\r\n  const info = () => {\r\n    alert(\"대기중인 진료를 선택해주세요.\");\r\n  }\r\n\r\n  const toastClose = () => {\r\n    props.closeShow();\r\n  }\r\n\r\n  const prescribeTests = (prescriptionItems) => {\r\n    props.prescribeTests(prescriptionItems);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const group = props.treatmentTests.reduce((gt, t) => {\r\n      if(!gt[t.groupcode]){\r\n        gt[t.groupcode] = {};\r\n        gt[t.groupcode].groupcode = t.groupcode;\r\n        gt[t.groupcode].groupname = t.groupname;\r\n        gt[t.groupcode].testtype = t.testtype;\r\n        gt[t.groupcode].tests = [];\r\n        gt[t.groupcode].tests.push(t);\r\n      } else {\r\n        gt[t.groupcode].tests.push(t);\r\n      }\r\n      return gt;\r\n    }, {});\r\n    setGroupTests(group);\r\n  }, [props.treatmentTests])\r\n\r\n  useEffect(() => {\r\n    console.log(treatmentReception);\r\n    if(treatmentReception.status === \"접수\"){\r\n      receptionToastShow();\r\n    }\r\n  }, [treatmentReception])\r\n\r\n  return (\r\n    <>\r\n      <ButtonHeader headertitle=\"검사 목록\" iclassName=\"bi bi-droplet\" color=\"#E89677\" btnicon=\"bi bi-plus-square\" onclick={props.treatment.status===\"진료 대기\"? handleShow : info}/>\r\n      <PrescriptionTestsModal show={show} handleClose={handleClose} staticItemList={props.staticTests} itemList={props.treatmentTests} prescribe={prescribeTests}></PrescriptionTestsModal>\r\n      <div className=\"overflow-auto p-3\" style={{height:\"calc(100% - 50px)\"}}>\r\n        {\r\n          props.treatment.treatmentid == null ? \r\n          <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n            <div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"2px\"}}><div><i class=\"bi bi-folder-check\" style={{fontSize:\"170px\"}}></i></div><div style={{fontSize:\"19px\"}}>진료를 선택해주세요.</div></div>\r\n          </div>\r\n          :\r\n          (\r\n            props.loading === true ? \r\n            <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n              <div className=\"spinner-border text-success\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            </div>\r\n            :\r\n            (\r\n              props.treatmentTests.length !== 0 ?\r\n              Object.values(groupTests).map(groupTest => {\r\n                return (\r\n                  groupTest.testtype === \"진단검사\" ?\r\n                  <PackageTest key={groupTest.groupcode}  groupTest={groupTest}/>\r\n                  :\r\n                  <PackageImgTest key={groupTest.groupcode} groupTest={groupTest}></PackageImgTest>\r\n                );\r\n              })\r\n              :\r\n              <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                <div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"2px\"}}><div><i class=\"bi bi-plus-square\" style={{fontSize:\"140px\"}}></i></div><div style={{fontSize:\"16px\"}}>처방 받은 내역이 없습니다.</div></div>\r\n              </div>\r\n            )\r\n          )\r\n        }\r\n        <div style={{position: \"absolute\", bottom: \"40px\", right: \"30px\", zIndex:\"1000\"}}>\r\n          <Row>\r\n            <Col style={{width:\"400px\"}}>\r\n              <Toast onClose={toastClose} show={props.toastShow} delay={5000} autohide>\r\n                <Toast.Header style={{backgroundColor:\"#1B296D\"}}>\r\n                  <strong className=\"mr-auto\" style={{color:\"white\"}}>Message</strong>\r\n                  <small>complete</small>\r\n                </Toast.Header>\r\n                <Toast.Body style={{backgroundColor:\"white\"}}>진료 완료!</Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <div style={{position: \"absolute\", bottom: \"40px\", right: \"30px\", zIndex:\"990\"}}>\r\n          <Row>\r\n            <Col style={{width:\"400px\"}}>\r\n              <Toast onClose={receptionToastClose} show={receptionToast} delay={4000} autohide>\r\n                <Toast.Header style={{backgroundColor:\"green\"}}>\r\n                  <strong className=\"mr-auto\" style={{color:\"white\"}}>Message</strong>\r\n                </Toast.Header>\r\n                <Toast.Body>진료가 접수 되었습니다.</Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n  \r\n}\r\n\r\nexport default TestList;","import { useEffect, useState } from \"react\";\r\n\r\nfunction TreatmentMemo(props) {\r\n\r\n  const handlechange = (event) => {\r\n    props.setMemo(event.target.value);\r\n  }\r\n\r\n  return (\r\n  <>\r\n    <div className=\"d-flex row pb-1\" style={{height:\"50px\"}}><div className=\"p-2 ml-3 mr-2 text-center\" style={{ backgroundColor:\"#887BD2\", width:\"40px\", color:\"#FFFFFF\"}}><i className=\"bi bi-clipboard-plus\"></i></div><div className=\"d-flex align-items-center\">진료 메모</div></div>\r\n    <div className=\"p-3\" style={{height:\"calc(100% - 50px)\"}}>\r\n      <textarea value={props.treatment.status === \"진료 대기\" ? \r\n      props.memo\r\n      : \r\n      (props.treatment.memo == null ? \"\" : props.treatment.memo)} onChange={props.treatment.status !== \"진료 대기\" ? null : handlechange} readOnly={props.treatment.status !== \"진료 대기\"? true : false} className=\"h-100 w-100 \" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"15px\", height:\"50px\", outline:0}} >\r\n      </textarea>\r\n      {/* treatmentstate가 진료 대기이면 가능 완료이면 readonly*/}\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default TreatmentMemo;","import { getPatientList } from \"apis/Treatment\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport Item from \"views/components/Item\";\r\nfunction SearchPatient(props) {\r\n  const property = [\"patientid\", \"patientname\", \"age\", \"sex\", \"phonenumber\", \"lasttreatment\", \"registerday\"];\r\n\r\n  const [checkedPatient, setCheckedPatient] = useState({\r\n    patientname:\"환자이름\", \r\n    ssn1:\"\", \r\n    ssn2:\"\", \r\n    sex: \"성별\",\r\n    age:\"-\",\r\n    phonenumber: \"-\", \r\n  });\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [patientList, setPatientList] = useState([]);\r\n  const [searchList, setSearchList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const work = async() => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await getPatientList();\r\n        setPatientList(response.data);\r\n        setSearchList(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    work();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setCheckedPatient({\r\n      patientname:\"환자이름\", \r\n      ssn1:\"\", \r\n      ssn2:\"\", \r\n      sex: \"성별\",\r\n      age:\"-\",\r\n      phonenumber: \"-\", \r\n    })\r\n    setSearchList(patientList);\r\n    setSearchName(\"\");\r\n  }, [props.show, patientList])\r\n\r\n  const checkPatient = (patient) => {\r\n    setCheckedPatient(patient);\r\n  }\r\n\r\n  const selectedComplete = (patient) => {\r\n    props.selectPatient(patient); \r\n    props.handleClose();\r\n  }\r\n\r\n  const handleSearchName = (event) => {\r\n    setSearchName(event.target.value);\r\n  };\r\n\r\n  const search = useCallback((name, patientList) => {\r\n    setSearchList(() => {\r\n      const newPatient = patientList.filter(patient => patient.patientname.indexOf(name) !== -1);\r\n      return newPatient;\r\n    })\r\n  }, []);//useCallback로 받으면 () =>      ()괄호안에 매개변수를 받아야함\r\n\r\n  const rowRenderer = ({index, key, style}) => {\r\n    return (\r\n      <div key={key} style={style}>\r\n        <Item item={searchList[index]} property={property} onClick={checkPatient}></Item>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={props.show} onHide={props.handleClose} size=\"lg\">\r\n        <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"}}>\r\n          <Modal.Title style={{color:\"#FFFFFF\"}}>환자 검색</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"input-group mb-3\">\r\n            <input type=\"search\" value={searchName} onChange={handleSearchName} style={{width:\"300px\"}}/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-secondary btn-sm\" type=\"button\" onClick={ () => search(searchName, patientList)}>검색</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <div style={{fontWeight:\"bold\"}}>현재 선택한 환자:  </div>\r\n            {checkedPatient.patientname}\r\n          </div>\r\n          <div style={{height:\"400px\"}} className=\"overflow-auto pt-1\">\r\n            {\r\n              loading === true ? \r\n              <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n                <div class=\"spinner-border text-success\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n              </div>\r\n              :\r\n              <AutoSizer>\r\n                {\r\n                  ({width, height}) => {\r\n                    return (\r\n                      <List width={width} height={height}\r\n                        rowCount={searchList.length}\r\n                        rowHeight={50}\r\n                        rowRenderer={rowRenderer}\r\n                        overscanRowCount={5}\r\n                      />\r\n                    )\r\n                  }\r\n                }\r\n              </AutoSizer>\r\n              // searchList.map ( patient => {\r\n              //   return (\r\n              //     <Item key={patient.patientid}  item={patient} property={property} onClick={checkPatient}></Item>\r\n              //   );\r\n              // })\r\n            }\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" size=\"sm\" onClick={props.handleClose}>\r\n            닫기\r\n          </Button>\r\n          <Button variant=\"outline-success\" size=\"sm\" onClick={() => { selectedComplete(checkedPatient) } }>\r\n            선택 완료\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchPatient;\r\n\r\n","import { useState } from \"react\";\r\nimport SearchPatient from \"./SearchPatient\";\r\n\r\n\r\nfunction PatientProfile(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const selectPatient = (patient) => {\r\n    props.selectPatient(patient);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"h-100 pl-3 pr-3 d-flex align-items-center\" style={{backgroundColor:\"#15367B\", marginRight:\"15px\", marginLeft:\"15px\"}}>\r\n        {/* 8vh */}\r\n        <div className=\"d-flex col\">\r\n          <div className=\"col-2 pl-0 pr-0 d-flex align-items-center text-center\" >\r\n            <div className=\"col-4 pl-0 pr-0\" style={{fontWeight:\"bold\", color:\"#FBFBFB\"}}>이름</div>\r\n            <div className=\"text-center pl-0 pr-0 pt-1 pb-1 ml-0 mr-0 col-8\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"7px\", fontSize:\"14px\", backgroundColor:\"#FFFFFF\"}}>{props.selectedPatient.patientname}</div>\r\n          </div>\r\n          <div className=\"col-2 pl-3 pr-0 d-flex align-items-center text-center\">\r\n            <div className=\"col-4 pl-0 pr-0\" style={{fontWeight:\"bold\", color:\"#FBFBFB\"}}>나이</div>\r\n            <div className=\"text-center pl-0 pr-0 pt-1 pb-1 ml-0 mr-0 col-8\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"7px\", fontSize:\"14px\", backgroundColor:\"#FFFFFF\"}}>{props.selectedPatient.age}세</div>\r\n          </div>\r\n          <div className=\"col-2 pl-3 pr-0 d-flex align-items-center text-center\">\r\n            <div className=\"col-4 pl-0 pr-0\" style={{fontWeight:\"bold\", color:\"#FBFBFB\"}}>성별</div>\r\n            <div className=\"text-center pl-0 pr-0 pt-1 pb-1 ml-0 mr-0 col-8\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"7px\", fontSize:\"14px\", backgroundColor:\"#FFFFFF\"}}>{props.selectedPatient.sex}</div>\r\n          </div>\r\n          <div className=\"col-4 pl-3 pr-0 d-flex align-items-center text-center\">\r\n            <div className=\"col-3 pl-0 pr-0\" style={{fontWeight:\"bold\", color:\"#FBFBFB\"}}>주민등록번호</div>\r\n            <div className=\"text-center pt-1 pb-1 pl-0 pr-0 ml-0 mr-0 col-6\" style={{boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"7px\", fontSize:\"14px\", backgroundColor:\"#FFFFFF\"}}>{props.selectedPatient.ssn1} - {props.selectedPatient.ssn2}</div>\r\n          </div>\r\n          <div className=\"col-2 pl-3 pr-0  text-right\">\r\n              <button className=\"btn btn-light btn-sm\" style={{fontWeight:\"bold\", fontSize:\"15px\"}} onClick={handleShow}>환자 검색</button>\r\n              <button className={`btn btn-primary btn-sm ml-2 mr-5`} disabled={props.treatment.status === \"진료 대기\"? false : true} onClick={props.saveTreatment}>저장</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <SearchPatient show={show} handleClose={handleClose} selectPatient={selectPatient}></SearchPatient>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PatientProfile;","import DiagnosisList from \"./DiagnosisList\";\r\nimport DrugList from \"./DrugList\";\r\nimport PatientTreatment from \"./PatientTreatment\";\r\nimport TestList from \"./TestList\";\r\nimport TreatmentMemo from \"./TreatmentMemo\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PatientProfile from \"./components/PatientProfile\";\r\nimport { getPatient, getStaticDiagnoses, getStaticDrugs, getPrescriptionList, prescribeTreatment, getAllTreatments, getStaticTests, getTestList } from \"apis/Treatment\";\r\nimport { sendRedisMessage } from \"apis/Redis\";\r\nimport { Col, Row, Toast } from \"react-bootstrap\";\r\n\r\nfunction Treatment(props) {\r\n\r\n  const globalPatient = useSelector((state) => {\r\n    return state.patientReducer.patient;\r\n  })\r\n  const globalUserid = useSelector((state) => {return state.authReducer.userid});\r\n\r\n  const [patient, setPatient] = useState({\r\n\r\n    patientname:\"환자이름\", \r\n    ssn1:\"\", \r\n    ssn2:\"\", \r\n    sex: \"성별\",\r\n    age:\"-\",\r\n    phonenumber: \"-\", \r\n  });\r\n  \r\n  const selectPatient = useCallback((patient) => {\r\n    setPatient(patient);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(globalPatient.patientid != null){\r\n      const response = getPatient(globalPatient.patientid);\r\n      response.then((response) => {\r\n        setPatient(response.data);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      })\r\n      \r\n    }\r\n  }, [globalPatient]) \r\n\r\n  const [treatment, setTreatment] = useState({})\r\n\r\n  const selectTreatment = useCallback((treatment) => {\r\n    if(treatment.userid !== globalUserid && treatment.status === \"진료 대기\"){\r\n      alert(\"해당 진료를 처방할 수 없습니다.\");\r\n    } else {\r\n      setTreatment(treatment);\r\n    }\r\n  }, [globalUserid])\r\n\r\n  const [patientTreatments, setPatientTreatments] = useState([]);\r\n  const [treatmentDrugs, setTreatmentDrugs] = useState([]);\r\n  const [treatmentDiagnoses, setTreatmentDiagnoses] = useState([]);\r\n  const [treatmentTests, setTreatmentTests] = useState([]);\r\n  const [memo, setMemo] = useState(\"\");\r\n\r\n  const [staticDrugs, setStaticDrugs] = useState([]);\r\n  const [staticDignoses, setStaticDignoses] = useState([]);\r\n  const [staticTests, setStaticTests] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [prescribeLoading, setPrescribeLoading] = useState(false);\r\n  const [treatmentsLoading, setTreatmentLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const work = async() => {\r\n      try {\r\n        const drugResponse = await getStaticDrugs();\r\n        const diagnosesResponse = await getStaticDiagnoses();\r\n        const testResponse = await getStaticTests();\r\n        setStaticDrugs(drugResponse.data);\r\n        setStaticDignoses(diagnosesResponse.data);\r\n        setStaticTests(testResponse.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    work();\r\n  },[])//정적 데이터 불러오기\r\n\r\n  useEffect(() => {\r\n    if(treatment.status===\"진료 완료\"){\r\n      const work = async() => {\r\n        try {\r\n          setPrescribeLoading(true);\r\n          const response = await getPrescriptionList(treatment.treatmentid);\r\n          setTreatmentDrugs(() => response.data.drugsList);\r\n          setTreatmentDiagnoses(() => response.data.diagnosesList);\r\n          setTreatmentTests(() => response.data.testsList);\r\n        } catch (error) {\r\n          console.log(error);\r\n        } finally {\r\n          setPrescribeLoading(false);\r\n        }\r\n\r\n      }\r\n      work();\r\n    }\r\n    return (() => {\r\n      setTreatmentDrugs([]);\r\n      setTreatmentDiagnoses([]);\r\n      setTreatmentTests([]);\r\n      setMemo(\"\");\r\n      })\r\n  }, [treatment]);//선택한 진료 변경시 그 진료가 처방받은 약, 상병, 테스트 가져오기\r\n\r\n  const testResult = useSelector((state) => {\r\n    return state.receptionReducer.testresult;\r\n  })\r\n\r\n  //testResult가 바뀔 때 \r\n  useEffect(() => {\r\n    if(testResult.treatmentid != null && testResult.treatmentid === treatment.treatmentid){\r\n      const response = getTestList(treatment.treatmentid);\r\n      response.then((response) => {\r\n        setTreatmentTests(response.data);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      })\r\n    }\r\n  }, [testResult]);\r\n\r\n\r\n  useEffect(() => {\r\n    const work = async() => {\r\n      try {\r\n        setTreatmentLoading(true);\r\n        const response = await getAllTreatments(patient.patientid);\r\n        if(response.data){\r\n          setPatientTreatments(() => {\r\n            return response.data\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setTreatmentLoading(false);\r\n      }\r\n    }\r\n    work();\r\n    setMemo(\"\");\r\n    setTreatment({});\r\n  }, [patient])\r\n\r\n  const prescribeDrugs = useCallback((prescriptionItems) => {\r\n    setTreatmentDrugs(prescriptionItems) \r\n  }, []);\r\n //약 처방 함수\r\n\r\n  const prescribeDiagnoses = useCallback((prescriptionItems) => {\r\n    setTreatmentDiagnoses(prescriptionItems)\r\n  },[]);\r\n  //증상 처방 함수\r\n\r\n  const prescribeTests = useCallback((prescriptionItems) => {\r\n    setTreatmentTests(prescriptionItems);\r\n  }, [])//검사 처방 함수\r\n\r\n  const prescribeList = async() => {\r\n    try {\r\n      let prescription = {};\r\n\r\n      let time = new Date(treatment.treatmentdate).getTime();\r\n      let newTreatment = {\r\n        ...treatment,\r\n        treatmentdate:time,\r\n        memo:memo\r\n      }\r\n\r\n      prescription.treatmentDrugs = [...treatmentDrugs];\r\n      prescription.treatmentDiagnoses = [...treatmentDiagnoses];\r\n\r\n      prescription.treatmentTests = [...treatmentTests];\r\n      prescription.treatment = newTreatment;\r\n      prescription.userid = globalUserid;\r\n      prescription.patientid = patient.patientid;\r\n      const response = await prescribeTreatment(prescription);\r\n      if(response.data === \"success\"){\r\n        const response = await getAllTreatments(patient.patientid);\r\n\r\n        if(response.data){\r\n          setMemo(\"\");\r\n          setPatientTreatments(response.data);\r\n          const message = {\r\n            type:\"treatment\",\r\n            patientid:patient.patientid\r\n          };\r\n          newTreatment.status = \"진료 완료\"\r\n          sendRedisMessage(message);//진료가 완료 되었다는 사실을 접수처에 알림\r\n          setTreatment(newTreatment);\r\n        }\r\n        \r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const saveTreatment = () => {\r\n    if(window.confirm(\"처방을 완료 하시겠습니까?\") === true){\r\n      prescribeList();\r\n      setShow(true);\r\n    }\r\n  }\r\n  const closeShow = () => {\r\n    setShow(false)\r\n  }\r\n  return (\r\n    <>        \r\n      <div style={{height:\"5vh\", marginBottom:\"2vh\",  marginTop:\"1vh\"}}>\r\n        <PatientProfile selectedPatient={patient} treatment={treatment} selectPatient={selectPatient} saveTreatment={saveTreatment} ></PatientProfile>\r\n      </div>\r\n      <div className=\"row ml-0 mr-0\" style={{heighn:\"92vh\"}}>\r\n        <div className=\"col-3 h-100 border-right\">\r\n          <div className=\"pl-3 pr-3 pt-0 pb-1 border border-dark\" style={{height:\"46vh\", marginBottom:\"2vh\", backgroundColor:\"#FFFFFF\"}}>\r\n            <PatientTreatment loading={treatmentsLoading} selectedPatient={patient} treatment={treatment} selectTreatment={selectTreatment} patientTreatments={patientTreatments}/>\r\n          </div>\r\n          <div className=\"pl-3 pr-3 pt-0 pb-1 border border-dark\" style={{height:\"42vh\",marginBottom:\"2vh\", backgroundColor:\"#FFFFFF\"}}>\r\n            <TreatmentMemo treatment={treatment} setMemo={setMemo} memo={memo}/>\r\n          </div> \r\n        </div>\r\n        <div className=\"col-4 h-100 border-right\">\r\n          <div className=\"pl-3 pr-3 pb-3 pt-0 border border-dark\" style={{height:\"46vh\", backgroundColor:\"#FFFFFF\", marginBottom:\"2vh\"}}>\r\n            <DiagnosisList loading={prescribeLoading} treatment={treatment} treatmentDiagnoses={treatmentDiagnoses}\r\n                  staticDignoses={staticDignoses} prescribeDiagnoses={prescribeDiagnoses}/>\r\n          </div>\r\n          <div className=\"pl-3 pr-3 pt-0 pb-1 border border-dark\" style={{height:\"42vh\",marginBottom:\"2vh\",  backgroundColor:\"#FFFFFF\"}}>\r\n            <DrugList loading={prescribeLoading} treatment={treatment} treatmentDrugs={treatmentDrugs} \r\n                  staticDrugs={staticDrugs} prescribeDrugs={prescribeDrugs}/>\r\n          </div>             \r\n        </div>\r\n        <div className=\"col-5 h-100\">\r\n          <div className=\"pl-3 pr-3 pb-3 pt-0 border border-dark\" style={{height:\"90vh\",marginBottom:\"2vh\", backgroundColor:\"#FFFFFF\"}}>\r\n            <TestList loading={prescribeLoading} treatment={treatment} treatmentTests = {treatmentTests}\r\n                  staticTests={staticTests} prescribeTests={prescribeTests} closeShow={closeShow} toastShow={show}></TestList>\r\n          </div>                \r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Treatment;","import { useState, forwardRef } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"views/style/datepicker.css\";\r\nimport { registerLocale } from \"react-datepicker\";  // 한국어적용\r\nimport ko from 'date-fns/locale/ko'; // 한국어적용\r\n\r\nregisterLocale(\"ko\", ko) // 한국어적용\r\n\r\nfunction PeriodSearch({change, startdate, enddate}) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [btnClicked, setBtnClicked] = useState(\"당일\");\r\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\r\n    <div className=\"example-custom-input\" onClick={onClick} ref={ref}>\r\n      <div className=\"mr-1\">\r\n      <i className=\"bi bi-calendar-day mr-3\"></i>              \r\n      {value}\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  const dateSubmit = () => {\r\n    \r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n    change(startDate, endDate) //mysql between 이상~초과 여서 인식불가. 1일 추가해줘야함\r\n  }\r\n\r\n  const handleBtnClicked = (e) => {\r\n    const { value } = e.target;\r\n    setBtnClicked(value);\r\n    const currentDate = new Date(); \r\n    // 오늘 날짜\r\n    if (value === \"당일\") {\r\n      setStartDate(new Date());\r\n      setEndDate(new Date());\r\n    }\r\n    // 3일 전부터 오늘까지의 기간\r\n    if (value === \"3일\") {\r\n      let threeDaysAgo = new Date(\r\n        currentDate.getTime() - 3 * 24 * 60 * 60 * 1000\r\n      );\r\n      setStartDate(threeDaysAgo);\r\n      setEndDate(new Date());\r\n    }\r\n    // 1주일 전부터 오늘까지의 기간\r\n    if (value === \"1주일\") {\r\n      let weekAgo = new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n      setStartDate(weekAgo);\r\n      setEndDate(new Date());\r\n    }\r\n    // 1개월 전부터 오늘까지의 기간\r\n    if (value === \"1개월\") {\r\n      let oneMonthAgo = new Date(\r\n        new Date().getFullYear(),\r\n        new Date().getMonth() - 1,\r\n        new Date().getDate()\r\n      );\r\n      setStartDate(oneMonthAgo);\r\n      setEndDate(new Date());\r\n    }\r\n    // 3개월 전부터 오늘까지의 기간\r\n    if (value === \"3개월\") {\r\n      let threeMonthAgo = new Date(\r\n        new Date().getFullYear(),\r\n        new Date().getMonth() - 3,\r\n        new Date().getDate()\r\n      );\r\n      setStartDate(threeMonthAgo);\r\n      setEndDate(new Date());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n            <div className=\"mt-3 mb-3\" style={{backgroundColor: \"#EDECEA\"}}>\r\n              <div className=\"ml-3 pt-2\">\r\n                <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" value=\"당일\" onClick={ handleBtnClicked }>당일</button>\r\n                <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" value=\"3일\" onClick={ handleBtnClicked }>3일</button>\r\n                <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" value=\"1주일\" onClick={ handleBtnClicked }>1주일</button>\r\n                <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" value=\"1개월\" onClick={ handleBtnClicked }>1개월</button>\r\n                <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" value=\"1개월\" onClick={ handleBtnClicked }>3개월</button>\r\n              </div>\r\n              <div className=\"row ml-3 mt-3 mb-2 pb-2\">\r\n              <div className=\"row ml-1\">\r\n                <div className=\"mr-4\">\r\n                  <div>From: </div>\r\n                <DatePicker\r\n                  selected={startDate}\r\n                  onChange={(date) => setStartDate(date)}\r\n                  customInput={<ExampleCustomInput />}\r\n                  dateFormat=\"yyyy-MM-dd\"\r\n                  locale={ko}\r\n                />\r\n                </div>\r\n              </div>\r\n              <div className=\"row ml-3\">\r\n                <div className=\"mr-4\">\r\n                <div>To: </div>\r\n                <div className=\"row ml-0\">\r\n                <DatePicker\r\n                  selected={endDate}\r\n                  onChange={(date) => setEndDate(date)}\r\n                  customInput={<ExampleCustomInput />}\r\n                  dateFormat=\"yyyy-MM-dd\"\r\n                  locale={ko}\r\n                />\r\n                </div>\r\n                </div>\r\n              </div>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-dark btn-block\" onClick={ dateSubmit }>Submit</button>\r\n            </div>\r\n          </div>\r\n  );\r\n}\r\nexport default PeriodSearch;","import React from 'react';\r\nimport { useBarcode } from 'react-barcodes';\r\nimport moment from 'moment';\r\n\r\nfunction Print({selectpatientinfo, grouplist}) {\r\n  const { inputRef } = useBarcode({\r\n    value: selectpatientinfo.patientid+\"_\"+selectpatientinfo.testreceptionid+moment().format('YYYYMMDD'),\r\n    options: {\r\n      background: '#ffffff',\r\n    }\r\n  });\r\n\r\n  return (\r\n    <img ref={inputRef} />\r\n  );\r\n}\r\nexport default Print;","import axios from \"axios\";\r\n\r\nexport function testlistByDate(startdate, enddate) {\r\n  const promise = axios.get(\"test/patientbytestdate\", {params:{startdate, enddate}})\r\n  return promise\r\n}\r\nexport function testlistByPatientid(patientid) {\r\n  const promise = axios.get(\"test/testreceptionbypatientid\", {params: {patientid}})\r\n  return promise\r\n}\r\n\r\nexport function testlistByReceptionid(testreceptionid) {\r\n  const promise = axios.get(\"test/testlistbyreceptionid\", {params: {testreceptionid}})\r\n  return promise\r\n}\r\n\r\nexport function createXray(multipartFormData) {\r\n  console.log(multipartFormData)\r\n  return axios.post(\"test/xray\", multipartFormData); \r\n}\r\n\r\nexport function insertResult(test){\r\n  console.log(test)\r\n  const promise = axios.put(\"test/result\", test) \r\n  return promise;\r\n}\r\n\r\nexport function resultStatus(testreceptionid) {\r\n  const promise = axios.put(\"test/resultstatus/\"+testreceptionid)\r\n  return promise\r\n}\r\n\r\nexport function startTests(checkedList) {\r\n  //console.log(checkedList)\r\n  const tests = [];\r\n  JSON.stringify(checkedList, (key, val) => {\r\n    if (key === 'tests') {\r\n      tests.push(val);\r\n    }\r\n    return val;\r\n  });\r\n  const promise = axios.put(\"test/starttest\", tests);\r\n  \r\n  return promise;\r\n}\r\n\r\nexport function startPatient(testreceptionid) {\r\n  console.log(testreceptionid)\r\n  const promise = axios.put(\"test/teststartpatient/\"+testreceptionid)\r\n  return promise\r\n}\r\n\r\nexport function cancelTests(checkedList) {\r\n  console.log(checkedList)\r\n  const tests = [];\r\n  JSON.stringify(checkedList, (key, val) => {\r\n    if (key === 'tests') {\r\n      tests.push(val);\r\n    }\r\n    return val;\r\n  });\r\n  const promise = axios.put(\"test/canceltest\", tests);\r\n  \r\n  return promise;\r\n}\r\n\r\nexport function cancelPatient(testreceptionid) {\r\n  console.log(testreceptionid)\r\n  const promise = axios.put(\"test/testcancelpatient/\"+testreceptionid)\r\n  return promise\r\n}\r\n\r\nexport function finishTests(checkedList) {\r\n  console.log(checkedList)\r\n  const tests = [];\r\n  JSON.stringify(checkedList, (key, val) => {\r\n    if (key === 'tests') {\r\n      tests.push(val);\r\n    }\r\n    return val;\r\n  });\r\n  const promise = axios.put(\"test/finishtest\", tests);\r\n  console.log(promise)\r\n  return promise;\r\n}\r\n\r\nexport function finishPatient(testreceptionid) {\r\n  console.log(testreceptionid)\r\n  const promise = axios.put(\"test/testfinishpatient/\"+testreceptionid)\r\n  return promise\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Badge, Button, Modal, Accordion, Card  } from \"react-bootstrap\";\r\nimport xlsx from 'xlsx';\r\nimport React from 'react';\r\nimport Print from \"./Print\";\r\nimport \"./scrollbar.css\";\r\nimport { startTests, cancelTests, finishTests, startPatient, cancelPatient, finishPatient, insertResult, resultStatus } from \"apis/test\";\r\nimport { sendRedisMessage } from \"apis/Redis\";\r\n\r\nfunction TestGroup(props) {\r\n  const [open, setOpen] = useState(false); //모달 열림/닫힘 상태\r\n  const [groupList, setGroupList] = useState({}); //제일 바깥\r\n  const [excel, setExcel] = useState([]);\r\n  const [resultlist, setResultlist] = useState({}); \r\n\r\n  useEffect(()=>{ \r\n    group();\r\n    setResultlist({})\r\n  }, [props.testdatas, props.selectpatientinfo.testreceptionid])\r\n\r\n  const group = () => {\r\n    setExcel(props.testdatas)\r\n\r\n    const group = [];\r\n        for(var i=0; i<props.testdatas.length; i++){\r\n          group.push(props.testdatas[i].groupcode)    \r\n        }\r\n\r\n        const set = new Set(group)\r\n        const title = [...set]; //묶음 코드 중복 제거\r\n\r\n        let obj = {};//나중에 groupList가 데이터 가공후 리스트에 추가\r\n        for(var i=0; i<title.length; i++){\r\n            for(var j=0; j<props.testdatas.length; j++){\r\n              if(title[i] === props.testdatas[j].groupcode) {\r\n                if(obj[title[i]]){ //그룹코드이름으로 된 속성이 있을 때\r\n                  obj[title[i]].tests.push(props.testdatas[j]);\r\n                } else {\r\n                  obj[title[i]]={}; //묶음코드 하나하나 객체\r\n                  obj[title[i]].groupcode=props.testdatas[j].groupcode;\r\n                  obj[title[i]].groupname=props.testdatas[j].groupname;\r\n                  obj[title[i]].status=props.testdatas[j].status;\r\n                  obj[title[i]].chkresult=false;\r\n                  obj[title[i]].ischeck=false;\r\n                  if(props.testdatas[j].status === \"검사완료\") {\r\n                    obj[title[i]].saveBtn=false;\r\n                    obj[title[i]].label = \"danger\";\r\n                    obj[title[i]].tcolor = \"red\";\r\n                  } else if (props.testdatas[j].status === \"진행중\") {\r\n                    obj[title[i]].saveBtn=true;\r\n                    obj[title[i]].label = \"primary\";\r\n                    obj[title[i]].tcolor = \"blue\";\r\n                  } else {\r\n                    obj[title[i]].saveBtn=true;\r\n                    obj[title[i]].label = \"success\";\r\n                    obj[title[i]].tcolor = \"black\";\r\n                  };\r\n                  obj[title[i]].tests=[];\r\n                  obj[title[i]].tests.push(props.testdatas[j]);\r\n                }\r\n              }\r\n          }\r\n        }\r\n        setGroupList(obj);\r\n  }\r\n\r\n  const handleExcel =() => { //엑셀 버튼 클릭 시, 동작하는 함수\r\n    const ws = xlsx.utils.json_to_sheet(excel); //안에 배열의 객체 넣으면 그대로 출력\r\n    const wb = xlsx.utils.book_new();\r\n    xlsx.utils.book_append_sheet(wb, ws, \"Sheet1\");\r\n    xlsx.writeFile(wb, \"환자차트번호:\"+props.selectpatientinfo.patientid+\"_\"+props.selectpatientinfo.testdate+\".xlsx\");\r\n  }\r\n\r\n  const changeHandler = (e, groupcode) => { //체크버튼 선택 시, ischeck 변경해줌 \r\n    const modify = Object.values(groupList).map((group)=>{\r\n      if(group.groupcode===groupcode){\r\n        group.ischeck = e.target.checked\r\n      }\r\n      return group;\r\n    })\r\n    setGroupList(modify)\r\n  }\r\n\r\n  const handleStart = async(groupList) => {\r\n    let checkedList = [];\r\n    let flag = 0;\r\n \r\n    const newGroupList = Object.values(groupList).map ((group) => {\r\n\r\n      if(group.ischeck === true){\r\n        group.ischeck = false;\r\n        if(group.status === \"대기중\"){\r\n          checkedList.push(group);\r\n        } else {\r\n          alert(\"검사가 이미 진행중이거나 완료 되었습니다.\")\r\n          flag = 1;\r\n        }\r\n      }\r\n    \r\n      return group;\r\n    });\r\n\r\n    if(flag === 0){\r\n      try {\r\n        startTests(checkedList).then(()=>{props.gettest(props.selectpatientinfo.testreceptionid); group()});\r\n        startPatient(props.selectpatientinfo.testreceptionid).then(()=>{ \r\n          props.getpatient(props.startdate, props.enddate)\r\n          sendRedisMessage({type:\"test\"})\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n\r\n    }\r\n    \r\n    setGroupList(newGroupList);\r\n\r\n  }\r\n\r\n  \r\n  const handlePrint = async(groupList) => { \r\n    let checkedList = [];\r\n    let flag = 0;\r\n \r\n    const newGroupList = Object.values(groupList).map ((group) => {\r\n      if(group.ischeck === true){\r\n        setOpen(true);\r\n        group.ischeck = false;\r\n        if(group.status === \"대기중\"){\r\n          checkedList.push(group);\r\n        } else {\r\n          alert(\"검사가 이미 진행중이거나 완료 되었습니다.\")\r\n          setOpen(false);\r\n          flag = 1;\r\n        }\r\n      }\r\n      return group;\r\n    });\r\n\r\n    if(flag === 0){\r\n      try {\r\n        startTests(checkedList).then(()=>{props.gettest(props.selectpatientinfo.testreceptionid); group()});\r\n        startPatient(props.selectpatientinfo.testreceptionid).then(()=>{\r\n          props.getpatient(props.startdate, props.enddate)\r\n          sendRedisMessage({type:\"test\"})\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    setGroupList(newGroupList);\r\n  }\r\n  const handleExit = () => setOpen(false); //바코드 모달 닫힘\r\n\r\n  const handleCancel = async(groupList) => { \r\n    let checkedList = [];\r\n    let flag = 0;\r\n    \r\n    const newGroupList = Object.values(groupList).map ((group) => {\r\n      if(group.ischeck === true){\r\n        group.ischeck = false;\r\n        if(group.status === \"진행중\"){\r\n          checkedList.push(group);\r\n        } else {\r\n          if(group.status === \"대기중\") {\r\n            alert(\"검사가 대기중입니다..\")\r\n          } else {\r\n            alert(\"검사가 이미 완료되었습니다.\")\r\n          }\r\n          flag = 1;\r\n        }\r\n      }\r\n      return group;\r\n    });\r\n    if(flag === 0){\r\n      try {\r\n        cancelTests(checkedList).then(()=>{props.gettest(props.selectpatientinfo.testreceptionid); group()})\r\n        let count = 0;\r\n        console.log(\"클릭한 검사그룹 갯수\", groupList.length)\r\n        if(groupList.length > 0) {\r\n          for(let i=0; i<groupList.length; i++){\r\n            console.log(groupList[i].status)\r\n          if(groupList[i].status === \"대기중\"){\r\n            count++;\r\n            console.log(count)\r\n          }\r\n        }\r\n\r\n        if(checkedList.length === 1 ) {\r\n          if(count === groupList.length-1) {\r\n            console.log(count)\r\n            cancelPatient(props.selectpatientinfo.testreceptionid).then(()=>{\r\n              props.getpatient(props.startdate, props.enddate)\r\n              sendRedisMessage({type:\"test\"})\r\n            }) \r\n          }\r\n        } else {\r\n          if(count === groupList.length-checkedList.length) {\r\n            cancelPatient(props.selectpatientinfo.testreceptionid).then(()=>{\r\n              props.getpatient(props.startdate, props.enddate)\r\n              sendRedisMessage({type:\"test\"})\r\n            }) \r\n          }\r\n        }\r\n      }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n     \r\n    }\r\n    setGroupList(newGroupList);\r\n  }\r\n\r\n  const handleFinish = async(groupList) => { \r\n    let checkedList = [];\r\n    let flag = 0;\r\n    \r\n    const newGroupList = Object.values(groupList).map ((group) => {\r\n      if(group.ischeck === true){\r\n        group.ischeck = false;\r\n        if(group.status === \"진행중\"){\r\n          checkedList.push(group);\r\n        } else {\r\n          if(group.status === \"대기중\") {\r\n            alert(\"검사를 먼저 시작해주세요\")\r\n          } else {\r\n            alert(\"검사가 이미 완료되었습니다.\")\r\n          }\r\n          flag = 1;\r\n        }\r\n      }\r\n      return group;\r\n    });\r\n    if(flag === 0){\r\n      try {\r\n        finishTests(checkedList).then(()=>{props.gettest(props.selectpatientinfo.testreceptionid); group()})\r\n        let count = 0;\r\n        console.log(\"클릭한 검사그룹 갯수\", groupList.length)\r\n        if(groupList.length > 0) {\r\n          for(let i=0; i<groupList.length; i++){\r\n            console.log(groupList[i].status)\r\n          if(groupList[i].status === \"검사완료\"){\r\n            count++;\r\n            console.log(count)\r\n          }\r\n        }\r\n\r\n        if(checkedList.length === 1 ) {\r\n          if(count === groupList.length-1) {\r\n            console.log(count)\r\n            finishPatient(props.selectpatientinfo.testreceptionid).then(()=>{\r\n              props.getpatient(props.startdate, props.enddate)\r\n              sendRedisMessage({type:\"test\"})\r\n            })\r\n          }\r\n        } else {\r\n          if(count === groupList.length-checkedList.length) {\r\n            finishPatient(props.selectpatientinfo.testreceptionid).then(()=>{\r\n              props.getpatient(props.startdate, props.enddate)\r\n              sendRedisMessage({type:\"test\"})\r\n            })\r\n          }\r\n        }\r\n        }\r\n        \r\n       \r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    setGroupList(newGroupList);\r\n  }\r\n\r\n  const handleAdd = async(event, test) => {\r\n    event.preventDefault();\r\n    test.result = resultlist[test.testdataid]\r\n    insertResult(test).then(()=>{\r\n      setResultlist({...resultlist});//이전에 입력한 결과값 초기화 \r\n      group();\r\n\r\n      let count = 0;\r\n      console.log(props.testdatas)\r\n      if(props.testdatas.length > 0) {\r\n        for(let i=0; i<props.testdatas.length; i++){\r\n          console.log(props.testdatas[i].result)\r\n        if(props.testdatas[i].result !== null || props.testdatas[i].result === \"\"){\r\n          count++;\r\n          console.log(count)\r\n        }\r\n      }\r\n        if(count === props.testdatas.length) {\r\n          console.log(\"전체 입력완료\")\r\n          resultStatus(props.selectpatientinfo.testreceptionid).then(()=>{props.getpatient(props.startdate, props.enddate)})\r\n        }\r\n      }\r\n    });\r\n    alert(\"입력되었습니다.\")\r\n    sendRedisMessage({type:\"testresult\", treatmentid:test.treatmentid})//----------------redis 메세지\r\n    //다시 검사리스트 가져오기\r\n  }\r\n \r\n  const handleChange = (event, index, test) => { //사용자 입력시 상태 변경을 위해\r\n    setResultlist({\r\n      ...resultlist,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n  console.log(groupList)\r\n  return (\r\n    <>\r\n    <div>\r\n      <div className=\"mt-2 mb-2 text-right\">\r\n        <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" onClick={ () => { handleStart(groupList) }} value=\"검사시작\">검사시작</button>\r\n        <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" onClick={ () => {handlePrint(groupList) }} value=\"바코드출력\">바코드출력</button>\r\n        <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" onClick={ () => {handleCancel(groupList) }} value=\"접수취소\">접수취소</button>\r\n        <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" onClick={ handleExcel}>엑셀저장</button>\r\n        <button type=\"button\" className=\"btn btn-dark btn-sm mr-1\" onClick={ () => {handleFinish(groupList) }} value=\"검사완료\">검사완료</button>\r\n      </div> \r\n      <div>검사접수번호: {props.selectpatientinfo.testreceptionid}</div>\r\n      <div className=\"overflow-auto\" id=\"style-7\" style={{height:\"700px\"}}>\r\n        <Accordion defaultActiveKey=\"0\">\r\n        {groupList !=={} &&\r\n        Object.values(groupList).map((group, index)=> {\r\n          return (\r\n            <Card key={group.groupcode}>\r\n            <Card.Header className=\"row p-0 pl-4\" style={{backgroundColor:\"#D5D5D5\", height:\"50px\", alignItems:\"center\"}}>\r\n            <input className=\"mr-2\" type=\"checkbox\"  onChange={e => {changeHandler(e, group.groupcode)}} checked={group.ischeck}/>\r\n              <Accordion.Toggle as={Card.Header} eventKey={index.toString()}>\r\n                {/* checked: 체크박스 체크 유무 */}\r\n                <div className=\"row\">그룹코드:<div style={{fontSize:\"16px\", fontWeight:\"bold\", paddingLeft:\"8px\"}}> {group.groupcode}</div> <Badge className=\"ml-3 pt-2\" variant={group.label}  style={{fontSize:\"12px\"}}>{group.status}</Badge></div>\r\n              </Accordion.Toggle>\r\n              <div></div>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey={index.toString()}>\r\n              <Card.Body>\r\n                <div className=\"pt-2 pb-2 mb-2 d-flex align-items-center\" style={{ fontWeight:\"bold\", fontSize:\"14.5px\", borderBottom:\"1px solid #a6a6a6\"}}>\r\n                  <div className=\"col-2 p-0 text-center\">처방코드</div>\r\n                  <div className=\"col-3 p-0 text-center\">검사명</div>\r\n                  <div className=\"col-1 p-0 text-center\">용기</div>\r\n                  <div className=\"col-2 p-0 text-center\">상태</div>\r\n                  <div className=\"col-4 p-0 text-center\">결과값</div>\r\n                </div>\r\n                {group.tests.map((test, index) => {\r\n                  return (\r\n                    <div key={test.testdataid} className=\"pt-2 pb-2 mb-2 d-flex align-items-center\" style={{fontSize:\"14.5px\", borderBottom:\"1px solid #a6a6a6\"}}>\r\n                      <div className=\"col-2 p-0 text-center\" style={{fontWeight:\"bold\"}}>{test.testdataid}</div>\r\n                      <div className=\"col-3 p-0 text-center\">{test.testdataname}</div>\r\n                      <div className=\"col-1 p-0 text-center\" style={{ color:test.testcontainer == \"EDTA\"?\"orange\":\"purple\", fontWeight:\"bold\", fontSize:\"16px\"}}>{test.testcontainer}</div>\r\n                      <div className=\"col-2 p-0 text-center\" style={{color:group.tcolor, fontWeight:\"bold\"}}>{test.status}</div>\r\n                      {test.testdataid === \"xray\"?\r\n                      <div style={{marginLeft:\"80px\"}}>{test.result}</div>:\r\n                      <div className=\"col-4 p-0 pl-2 text-center\" style={{display:\"inline-flex\"}}>\r\n                      <form onSubmit={ event => {handleAdd(event, test)}}>\r\n                        {group.saveBtn?\"\":<div style={{float:\"left\", width:\"60%\"}}><input type=\"text\" className=\"form-control\" name={test.testdataid} value={test.result == resultlist.result ? (resultlist[test.testdataid] || \"\") : test.result} onChange={e => {handleChange(e, index, test)}}/></div>}\r\n                        {group.saveBtn?\"\":<div style={{float:\"right\"}}><input type=\"submit\" className=\"btn btn-primary btn-sm mr-2\"  disabled={group.saveBtn} value=\"추가\"/></div>}\r\n                      </form>\r\n                    </div>\r\n                      }\r\n                    </div>\r\n                  )\r\n                })}\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n          )\r\n        })}\r\n        </Accordion>\r\n      </div>\r\n    </div>\r\n\r\n    <Modal show={open} onHide={handleExit} animation={false}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>바코드 생성</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n      <Print selectpatientinfo={props.selectpatientinfo} grouplist={groupList} />\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleExit}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\r\n  </>\r\n  );\r\n}\r\nexport default TestGroup;","import { Carousel } from \"react-bootstrap\";\r\n\r\nfunction Banner() {\r\n  return (\r\n    <Carousel>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src=\"/1.png\"\r\n          alt=\"Second slide\"\r\n          height=\"227px\"\r\n          border=\"1px solid gray\"\r\n        />\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src=\"/process.png\"\r\n          alt=\"Second slide\"\r\n          height=\"227px\"\r\n          border=\"1px solid gray\"\r\n        />\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src=\"/2.png\"\r\n          alt=\"First slide\"\r\n          height=\"227px\"\r\n          border=\"1px solid gray\"\r\n        />\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  );\r\n}\r\nexport default Banner;","import { sendRedisMessage } from \"apis/Redis\";\r\nimport { createXray, resultStatus } from \"apis/test\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport Banner from \"./Banner\";\r\n\r\nfunction TestResult(props) { \r\n  const [show, setShow] = useState();\r\n  const [treatmentid, setTreatmentid] = useState();\r\n  \r\n  useEffect(()=>{ \r\n    group();\r\n    \r\n  }, [props.testdatas])\r\n\r\n  const group = () => {\r\n    for(let i=0; i<props.testdatas.length; i++){ //전체 testdata 리스트의 testdataid 조회\r\n      if(props.testdatas[i]){ \r\n        if(props.testdatas[i].testdataid === \"xray\") {\r\n          setTreatmentid(props.testdatas[i].treatmentid);\r\n          setShow(true); //testdataid가 xray일 경우에만 보이기\r\n        } else {\r\n          setShow(false)\r\n        }\r\n     }\r\n    } \r\n  }\r\n\r\n  const [testimg, setTestimg] = useState({\r\n    treatmentid:\"\",\r\n    testdataid:\"\"\r\n  }); \r\n\r\n  const inputFile = useRef();\r\n\r\n  const handleAdd = async(event) => {\r\n    event.preventDefault(); //고유 동작을 중단\r\n    try{\r\n      const formData = new FormData(); //multipart로 만드는법\r\n      formData.append(\"treatmentid\", treatmentid);\r\n      formData.append(\"testdataid\", \"xray\");\r\n      formData.append(\"battach\", inputFile.current.files[0]);\r\n      createXray(formData).then(()=>{\r\n        props.gettest(props.selectpatientinfo.testreceptionid);\r\n        sendRedisMessage({type:\"testresult\", treatmentid:treatmentid})//----------------redis 메세지\r\n        alert(\"사진첨부 완료\")\r\n      });\r\n    }catch(error){\r\n      console.log(error);\r\n    }\r\n    \r\n\r\n    inputFile.current.value = ''; //저장후 값 클리어\r\n\r\n    let count = 0;\r\n      console.log(props.testdatas)\r\n      if(props.testdatas.length > 0) {\r\n        for(let i=0; i<props.testdatas.length; i++){\r\n          console.log(props.testdatas[i].result)\r\n        if(props.testdatas[i].result !== null || props.testdatas[i].result === \"\"){\r\n          count++;\r\n          console.log(count)\r\n        }\r\n      }\r\n        if(count+1 === props.testdatas.length) {\r\n          console.log(\"전체 입력완료\")\r\n          resultStatus(props.selectpatientinfo.testreceptionid).then(()=>{props.getpatient(props.startdate, props.enddate)})\r\n        }\r\n      }\r\n  }\r\n\r\n  const handleChange = (event) => { //사용자 입력시 상태 변경을 위해\r\n    setTestimg({\r\n      ...testimg,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div style={{marginBottom:\"160px\", height:\"67%\"}}>\r\n    {show ?\r\n    <div className=\"card\">\r\n      <div className=\"card-header\" style={{fontWeight:\"bold\"}}>\r\n        X-RAY 결과 입력창\r\n      </div>\r\n      <div className=\"card-body mt-4\">\r\n        <div>\r\n          <div>접수번호: {props.selectpatientinfo.testreceptionid}</div>\r\n        </div>\r\n        <hr/>\r\n        <form onSubmit={handleAdd}>\r\n          <div className=\"form-group row\">\r\n            <label htmlFor=\"treatmentid\" className=\"col-sm-3 col-form-label\">treatmentid</label>\r\n            <div className=\"col-sm-8\">\r\n              <input type=\"text\" className=\"form-control\" name=\"treatmentid\" value={treatmentid}/>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label htmlFor=\"testdataid\" className=\"col-sm-3 col-form-label\">testdataid</label>\r\n            <div className=\"col-sm-8\">\r\n              <input type=\"text\" className=\"form-control\" name=\"testdataid\" value=\"xray\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n              <label htmlFor=\"battach\" className=\"col-sm-3 col-form-label\">사진첨부</label>\r\n              <div className=\"col-sm-8\">\r\n                <input id=\"battach\" name=\"battach\" type=\"file\" className=\"form-control-file\" ref={inputFile}/>\r\n              </div>\r\n          </div> \r\n          <div className=\"form-group row\">\r\n            <div className=\"col-sm-12 mt-3 d-flex justify-content-center\">\r\n              <input type=\"submit\" className=\"btn btn-dark btn-m mr-2 btn-block\" value=\"추가\"/>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    :<div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"30px\"}}><div><i class=\"bi bi-cloud-arrow-up\" style={{fontSize:\"180px\"}}></i></div><div style={{fontSize:\"40px\"}}>검사 없음</div></div>}\r\n   </div>\r\n    <div style={{height:\"15%\"}}>\r\n      <div style={{fontSize:\"22px\", fontWeight:\"bold\", marginBottom:\"3px\"}}><i class=\"bi bi-exclamation-octagon-fill\" style={{color:\"orange\"}}></i> 검사실 주의사항</div>\r\n      <div style={{border:\"1px solid black\"}}><Banner/></div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TestResult;","import { Nav, Row, Tab, Badge } from \"react-bootstrap\";\r\nimport moment from 'moment';\r\n\r\nfunction PatientList(props) {\r\n  return (\r\n    <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"wait\">\r\n          <Nav fill variant=\"tabs\" className=\"flex-column mb-2\">\r\n            <Row className=\"ml-0 mr-0\">\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"total\">전체<diV>{props.patients.length}</diV></Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"wait\">대기<diV>{props.waitings.length}</diV></Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"progress\">진행중<diV>{props.progresss.length}</diV></Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"complete\">완료<diV>{props.completes.length}</diV></Nav.Link>\r\n              </Nav.Item>\r\n            </Row>\r\n          </Nav>\r\n          \r\n          <div className=\"pt-2 pb-2 mb-2 d-flex align-items-center\" style={{ backgroundColor:\"#D5D5D5\", color:\"black\", borderBottom:\"1px solid gray\", borderTop:\"1px solid gray\", fontSize:\"14.5px\"}}>\r\n            <div className=\"col-2 p-0 pt-1 pb-1 text-center\">접수번호</div>\r\n            <div className=\"col-3 p-0 text-center\">생년월일</div>\r\n            <div className=\"col-2 p-0 text-center\">이름</div>\r\n            <div className=\"col-3 p-0 text-center\">검사날짜</div>\r\n            <div className=\"col-2 p-0 text-center\">상태</div>\r\n          </div>\r\n\r\n          <Tab.Content className=\"overflow-auto\" id=\"style-7\" style={{height:\"550px\"}}>\r\n            {props.patients.length === 0? \r\n            <Tab.Pane eventKey= \"total\" className=\"pt-1\">\r\n              <div style={{textAlign:\"center\", color:\"#999999\"}}><div><i class=\"bi bi-person-x\" style={{fontSize:\"180px\"}}></i></div><div style={{fontSize:\"30px\"}}>해당되는 환자가 없습니다.</div></div>\r\n            </Tab.Pane>\r\n            :\r\n              <Tab.Pane eventKey= \"total\" className=\"pt-1\">\r\n              {props.patients.map((item, index)=>{return(\r\n                <div key={item.testreceptionid} className=\"pt-2 pb-2 mb-2 d-flex align-items-center\" onClick={ e => {props.ClickPatient(e, item, index) }} style={{ fontSize:\"13px\", borderBottom:\"1px solid #a6a6a6\"}}>\r\n                  <div className=\"col-2 p-0 pt-1 pb-1 text-center\">{item.testreceptionid}</div>\r\n                  <div className=\"col-3 p-0 text-center\">{item.ssn1}</div>\r\n                  <div className=\"col-2 p-0 text-center\">{item.patientname}</div>\r\n                  <div className=\"col-3 p-0 text-center\">{moment(item.testdate).format('YYYY-MM-DD')}</div>\r\n                  <div className=\"col-2 p-0 text-center\" style={{fontSize:\"17px\"}}><Badge variant={(item.resultstatus == \"입력완료\")?\"info\":\"warning\"}>{item.resultstatus}</Badge></div>\r\n                </div>\r\n              )})}\r\n              </Tab.Pane>}\r\n\r\n              {props.waitings.length === 0? \r\n            <Tab.Pane eventKey= \"wait\" className=\"pt-1\">\r\n              <div style={{textAlign:\"center\", color:\"#999999\"}}><div><i class=\"bi bi-person-x\" style={{fontSize:\"180px\"}}></i></div><div style={{fontSize:\"30px\"}}>대기중인 환자가 없습니다.</div></div>\r\n            </Tab.Pane>\r\n            :\r\n              <Tab.Pane eventKey= \"wait\" className=\"pt-1\">\r\n              {props.waitings.map((item, index)=>{return(\r\n                  <div key={item.testreceptionid} className=\"pt-2 pb-2 mb-2 d-flex align-items-center\" onClick={ e => {props.ClickPatient(e, item) }} style={{ fontSize:\"13px\", borderBottom:\"1px solid #a6a6a6\"}} >\r\n                  <div className=\"col-2 p-0 pt-1 pb-1 text-center\">{item.testreceptionid}</div>\r\n                  <div className=\"col-3 p-0 text-center\">{item.ssn1}</div>\r\n                  <div className=\"col-2 p-0 text-center\">{item.patientname}</div>\r\n                  <div className=\"col-3 p-0 text-center\">{moment(item.testdate).format('YYYY-MM-DD')}</div>\r\n                  <div className=\"col-2 p-0 text-center\" style={{fontSize:\"15px\"}}><Badge className=\"mr-1\" variant=\"success\">{item.status}</Badge><Badge variant={(item.resultstatus == \"입력완료\")?\"info\":\"warning\"}>{item.resultstatus}</Badge></div>\r\n                  </div>\r\n              )})}\r\n              </Tab.Pane>}\r\n\r\n              {props.progresss.length === 0? \r\n            <Tab.Pane eventKey= \"progress\" className=\"pt-1\">\r\n              <div style={{textAlign:\"center\", color:\"#999999\"}}><div><i class=\"bi bi-person-x\" style={{fontSize:\"180px\"}}></i></div><div style={{fontSize:\"30px\"}}>진행중인 환자가 없습니다</div></div>\r\n            </Tab.Pane>\r\n            :\r\n              <Tab.Pane eventKey= \"progress\" className=\"pt-1\">\r\n              {props.progresss.map((item, index)=>{return(\r\n                <div key={item.testreceptionid} className=\"pt-2 pb-2 mb-2 d-flex align-items-center\" onClick={ e => {props.ClickPatient(e, item) }} style={{ fontSize:\"13px\", borderBottom:\"1px solid #a6a6a6\", backgroundColor:\"color\"}}>\r\n                <div className=\"col-2 p-0 pt-1 pb-1 text-center\">{item.testreceptionid}</div>\r\n                <div className=\"col-3 p-0 text-center\">{item.ssn1}</div>\r\n                <div className=\"col-2 p-0 text-center\">{item.patientname}</div>\r\n                <div className=\"col-3 p-0 text-center\">{moment(item.testdate).format('YYYY-MM-DD')}</div>\r\n                <div className=\"col-2 p-0 text-center\" style={{fontSize:\"15px\"}}><Badge className=\"mr-1\" variant=\"primary\">{item.status}</Badge><Badge variant={(item.resultstatus == \"입력완료\")?\"info\":\"warning\"}>{item.resultstatus}</Badge></div>\r\n              </div>\r\n              )})}\r\n              </Tab.Pane>}\r\n\r\n              {props.completes.length === 0? \r\n            <Tab.Pane eventKey= \"complete\" className=\"pt-1\">\r\n              <div style={{textAlign:\"center\", color:\"#999999\"}}><div><i class=\"bi bi-person-x\" style={{fontSize:\"180px\"}}></i></div><div style={{fontSize:\"30px\"}}>완료된 환자가 없습니다.</div></div>\r\n            </Tab.Pane>\r\n            :\r\n              <Tab.Pane eventKey= \"complete\" className=\"pt-1\">\r\n              {props.completes.map((item, index)=>{return(\r\n                <div key={item.testreceptionid} className=\"pt-2 pb-2 mb-2 d-flex align-items-center\" onClick={ e => {props.ClickPatient(e, item) }} style={{ fontSize:\"13px\", borderBottom:\"1px solid #a6a6a6\", backgroundColor:\"color\"}}>\r\n                <div className=\"col-2 p-0 pt-1 pb-1 text-center\">{item.testreceptionid}</div>\r\n                <div className=\"col-3 p-0 text-center\">{item.ssn1}</div>\r\n                <div className=\"col-2 p-0 text-center\">{item.patientname}</div>\r\n                <div className=\"col-3 p-0 text-center\">{moment(item.testdate).format('YYYY-MM-DD')}</div>\r\n                <div className=\"col-2 p-0 text-center\" style={{fontSize:\"15px\"}}><Badge className=\"mr-1\" variant=\"danger\">{item.status}</Badge><Badge variant={(item.resultstatus == \"입력완료\")?\"info\":\"warning\"}>{item.resultstatus}</Badge></div>\r\n              </div>\r\n              )})}\r\n              </Tab.Pane>}\r\n            </Tab.Content>\r\n          </Tab.Container>\r\n  );\r\n}\r\nexport default PatientList;","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PeriodSearch from \"./PeriodSearch\";\r\nimport TestGroup from \"./TestGroup\";\r\nimport TestResult from \"./TestResult\";\r\nimport { testlistByDate, testlistByReceptionid } from \"apis/test\";\r\nimport moment from 'moment';\r\nimport PatientList from \"./PatientList\";\r\n\r\nfunction TestPage(props) {  \r\n  console.log(\"리렌더링\")\r\n  const [patients, setPatient] = useState([]) //전체 환자\r\n  const [waitings, setWaiting] = useState([]) //대기 환자\r\n  const [progresss, setProgress] = useState([]) //진행 환자\r\n  const [completes, setComplete] = useState([]) //완료 환자\r\n\r\n  const [selectpatientinfo, setSelectpatientinfo] = useState({}) //클릭한 검사접수번호의 환자의 정보\r\n \r\n  const [groupshow, setGroupShow] = useState(false) //testgroup 보여주는 show\r\n \r\n  const [startdate, setStartdate] = useState(new Date());\r\n  const [enddate, setEnddate] = useState(new Date());\r\n\r\n  const [testdatas, setTestdatas] = useState([]);\r\n\r\n  const testReception = useSelector((state)=>(state.receptionReducer.testreception)) //--------------redis\r\n  \r\n  useEffect(()=>{ //맨처음 기본설정 당일, testReception 바뀔때마다 랜더링\r\n    getpatient(moment().format('YYYY-MM-DD'), moment().format('YYYY-MM-DD'))\r\n  },[testReception]);\r\n  \r\n  const getpatient = async(startdate, enddate) => { //함수로 만든이유는 나중에 클릭할때도 사용\r\n    try { \r\n      setStartdate(startdate)\r\n      setEnddate(enddate)\r\n      const response = await testlistByDate(moment(startdate).format('YYYY-MM-DD'), moment(new Date(enddate).getTime() + 1 * 24 * 60 * 60 * 1000).format('YYYY-MM-DD'));\r\n      const patient = response.data;\r\n      setPatient(response.data);\r\n      const waiting = patient.filter(patient => patient.status === \"대기중\");\r\n      setWaiting(waiting)\r\n      const progress = patient.filter(patient => patient.status === \"진행중\");\r\n      setProgress(progress)\r\n      const complete = patient.filter(patient => patient.status === \"검사완료\");\r\n      setComplete(complete)\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  const gettest = (testreceptionid) => { //testreceptionid로 test 리스트를 가져옴\r\n    if(selectpatientinfo.testreceptionid != null){\r\n      testlistByReceptionid(selectpatientinfo.testreceptionid).then((response)=>{\r\n      setTestdatas(response.data); //가져온 리스트 상태 저장\r\n      })\r\n   }\r\n  }\r\n\r\n  const ClickPatient = async(e, item, index) => {\r\n    setSelectpatientinfo(item) //클릭한 환자 검사 접수 저장\r\n \r\n    setGroupShow(true) //클릭시 show\r\n  }\r\n  \r\n  useEffect(()=>{ //환자접수 id가 바뀔때마다 가져와지는 데이터들이 다름\r\n    gettest();\r\n  }, [selectpatientinfo.testreceptionid])\r\n\r\n  return (\r\n    <div className=\"vh-100\" style={{minWidth:\"1000px\"}}>\r\n      <div className=\"row m-0\">\r\n      <div className=\"col-3 pt-3\" style={{borderRight:\"1px solid #dadada\"}}>\r\n          <div className=\"row pl-3 ml-0\" style={{backgroundColor: \"#ffffff\", width:\"85%\"}}><div className=\"pr-3 pl-3 pt-2 pb-2\" style={{ backgroundColor:\"#FF8C64\"}}><i class=\"bi bi-calendar4-week\" style={{ fontSize:\"22px\"}}></i></div><div className=\"ml-4 pt-2\">검사 대기 목록</div></div>\r\n          <div style={{height:\"88vh\"}}>\r\n          <PeriodSearch startdate={startdate} enddate={enddate} change={getpatient}/>\r\n          <PatientList patients={patients} waitings={waitings} progresss={progresss} completes={completes} ClickPatient={ClickPatient}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-5 pt-3\">\r\n          <div className=\"d-flex pl-3 ml-0 mb-3 p-0\" style={{backgroundColor: \"#ffffff\", width:\"85%\"}}><div className=\"pr-3 pl-3 pt-2 pb-2\" style={{ backgroundColor:\"#F2E18D\"}}><i class=\"bi bi-droplet\" style={{ fontSize:\"22px\"}}></i></div><div className=\"ml-4 pt-2\">검사 처방 목록</div></div>\r\n          <div className=\"d-flex align-items-center pl-3 pr-3\" style={{ backgroundColor:\"#ffffff\", boxShadow:\"rgb(0 0 0 / 8%) 0px 0px 5px 2px\", borderRadius:\"15px\", fontSize:\"14.5px\", height:\"40px\"}}>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center\">차트번호 :</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center border-right\">{selectpatientinfo.patientid}</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center\">생년월일 :</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center border-right\">{selectpatientinfo.ssn1}</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center\">성별 :</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center border-right\">{selectpatientinfo.sex}</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center\">이름 :</div>\r\n            <div className=\"col p-0 pt-1 pb-1 text-center\">{selectpatientinfo.patientname}</div>\r\n          </div>\r\n          <div className=\"d-flex pt-3\">\r\n            <div style={{width:\"96%\", marginLeft:\"2%\"}}>{groupshow?<TestGroup startdate={startdate} enddate={enddate} getpatient={getpatient} selectpatientinfo={selectpatientinfo} testdatas={testdatas} gettest={gettest} setTestdatas={setTestdatas}/>\r\n            :<div style={{textAlign:\"center\", color:\"#999999\", marginTop:\"90px\"}}><div><i class=\"bi bi-clipboard-plus\" style={{fontSize:\"180px\"}}></i></div><div style={{fontSize:\"35px\"}}>환자를 선택해주세요</div></div>}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-4 pt-3\" style={{borderLeft:\"1px solid #dadada\"}}>\r\n          <div className=\"row pl-3 10vh ml-0\" style={{backgroundColor: \"#ffffff\", width:\"85%\"}}>\r\n            <div className=\"pr-3 pl-3 pt-2 pb-2\" style={{ backgroundColor:\"#3EB2A2\"}}>\r\n              <i class=\"bi bi-display\" style={{ fontSize:\"22px\"}}></i>\r\n            </div>\r\n            <div className=\"ml-4 pt-2\">X-RAY 결과 입력</div>\r\n          </div>\r\n\r\n          <div className=\"row\" style={{height:\"2%\"}}></div>\r\n          <div style={{height:\"65%\"}}>\r\n            <TestResult selectpatientinfo={selectpatientinfo} testdatas={testdatas} gettest={gettest} startdate={startdate} enddate={enddate} getpatient={getpatient}/>\r\n          </div>\r\n          <div style={{height:\"10%\"}}></div>\r\n        </div>\r\n\r\n      </div> \r\n    </div>\r\n  );\r\n}\r\nexport default TestPage;","import { join } from \"apis/User\";\r\nimport { useState } from \"react\";\r\nimport { Button, Form, Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst errorMsg = {\r\n  password_empty : '비밀번호를 입력해주세요.',\r\n  userid_empty : '아이디를 입력해주세요.',\r\n  err_confirmPassword: '비밀번호확인을 다시 입력해주세요.',\r\n  err_userid: '이미 존재하는 userID 입니다.'\r\n}\r\n\r\nfunction JoinForm(props) { \r\n  const globalcode = useSelector((state) => {return state.authReducer.codenumber});\r\n  const [validated, setValidated] = useState(false);\r\n  const [errorMessage, setErrorMesssage] = useState(errorMsg.password_empty);\r\n  const [errorMessageID, setErrorMesssageID] = useState(errorMsg.userid_empty);\r\n  const [isInvalid, setIsInvalid] = useState(false);\r\n  const [isInvalidID, setIsInvalidID] = useState(false);\r\n  const [isNurse, setIsNurse] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    userid:\"\",\r\n    userpassword:\"\",\r\n    confirmpassword:\"\",\r\n    username:\"\",\r\n    phonenumber:\"\",\r\n    userroom:\"\",\r\n    sex:\"남자\",\r\n    role_authority:\"ROLE_DOCTOR\",\r\n    codenumber:globalcode\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    if(event.target.value === \"ROLE_NURSE\"){\r\n      setIsNurse(true);\r\n      setFormData((prevData) => {\r\n        return {\r\n          ...prevData,\r\n          userroom:\"\"\r\n        }\r\n      })\r\n      console.log(formData);\r\n    } else {\r\n      setIsNurse(false);\r\n    }\r\n    setFormData((prevData) => {\r\n      return {\r\n        ...prevData,\r\n        [event.target.name]:event.target.value\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    setLoading(true);\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (form.checkValidity() === false) {//빈칸이 있을경우\r\n      setValidated(true);\r\n      setLoading(false);\r\n      setErrorMesssage(errorMsg.password_empty);\r\n      setErrorMesssageID(errorMsg.userid_empty);\r\n    } else { //빈칸이 없을경우\r\n      if(formData.userpassword !== formData.confirmpassword){//비밀번호, 비밀번호 확인이 다르면\r\n        setIsInvalidID(false);\r\n        setErrorMesssageID(errorMsg.userid_empty);\r\n        setIsInvalid(true);\r\n        setErrorMesssage(errorMsg.err_confirmPassword);\r\n        setFormData({\r\n          ...formData,\r\n          confirmpassword:\"\"\r\n        })\r\n        setLoading(false);\r\n      } else {\r\n        const response = join(formData);\r\n        response\r\n        .then((response) => {\r\n          const state = response.data.state\r\n          if(state === \"success\"){\r\n            props.toastShow(\"직원 등록이 완료되었습니다.\");\r\n            setFormData({\r\n              userid:\"\",\r\n              userpassword:\"\",\r\n              confirmpassword:\"\", \r\n              username:\"\",\r\n              phonenumber:\"\",\r\n              userroom:\"\",\r\n              sex:\"남자\",\r\n              role_authority:\"ROLE_DOCTOR\"\r\n            });\r\n            setIsInvalidID(false);\r\n            setErrorMesssageID(errorMsg.userid_empty);\r\n            setIsInvalid(false);\r\n            setErrorMesssage(errorMsg.password_empty);\r\n            props.getUsers();\r\n          } else if(state === \"failure\"){\r\n            setIsInvalidID(true);\r\n            setErrorMesssageID(errorMsg.err_userid);\r\n            setIsInvalid(false);\r\n            setErrorMesssage(errorMsg.password_empty);\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error);\r\n        }).finally(() => {\r\n          setLoading(false);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>아이디</Form.Label>\r\n        <Form.Control required name=\"userid\" type=\"text\" placeholder=\"User ID\" value={formData.userid} onChange={handleChange} isInvalid={isInvalidID}/>\r\n        <Form.Control.Feedback type=\"invalid\">{errorMessageID}</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>비밀번호</Form.Label>\r\n        <Form.Control required name=\"userpassword\" type=\"password\" placeholder=\"Password\" value={formData.userpassword} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">비밀번호를 입력해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>비밀번호 확인</Form.Label>\r\n        <Form.Control required name=\"confirmpassword\" type=\"password\" placeholder=\"Confirm Password\" value={formData.confirmpassword} onChange={handleChange} isInvalid={isInvalid}/>\r\n        <Form.Control.Feedback type=\"invalid\">{errorMessage}</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>이름</Form.Label>\r\n        <Form.Control required name=\"username\" type=\"text\" placeholder=\"User Name\" value={formData.username} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">이름을 입력해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>전화번호</Form.Label>\r\n        <Form.Control required name=\"phonenumber\" type=\"test\" placeholder=\"Phone Number\" value={formData.phonenumber} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">전화번호를 입력해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <div>\r\n          <Form.Label>성별</Form.Label>\r\n        </div>\r\n        <Form.Check required checked={formData.sex === \"남자\"} inline label=\"남자\" name=\"sex\" type={\"radio\"} value=\"남자\" feedback={\"성별을 선택해주세요.\"} onChange={handleChange}/>\r\n        <Form.Check required checked={formData.sex === \"여자\"} inline label=\"여자\" name=\"sex\" type={\"radio\"} value=\"여자\" feedback={\"성별을 선택해주세요.\"} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">성별을 선택해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <div>\r\n          <Form.Label>직책</Form.Label>\r\n        </div>\r\n        <Form.Check checked={formData.role_authority === \"ROLE_DOCTOR\"} required inline label=\"의사\" name=\"role_authority\" value=\"ROLE_DOCTOR\" type={\"radio\"} feedback={\"직책을 선택해주세요.\"} onChange={handleChange}/>\r\n        <Form.Check checked={formData.role_authority === \"ROLE_NURSE\"} required inline label=\"간호사\" name=\"role_authority\" value=\"ROLE_NURSE\" type={\"radio\"} feedback={\"직책을 선택해주세요.\"} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">직책을 선택해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>진료실</Form.Label>\r\n        <Form.Control required name=\"userroom\" type=\"text\" placeholder=\"Treatment Room\" value={formData.userroom} onChange={handleChange} readOnly={isNurse}/>\r\n        <Form.Control.Feedback type=\"invalid\">진료실을 입력해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n\r\n      <div className=\"text-right\">\r\n        <Button className=\"w-100\" type=\"submit\" variant=\"dark\">\r\n          {loading === true ? <Spinner className=\"mr-1\" as=\"span\" animation=\"border\" size=\"sm\" role=\"status\"/> : null}\r\n            직원 등록</Button>\r\n      </div>\r\n    </Form>\r\n\r\n  );\r\n}\r\n\r\nexport default JoinForm;","import axios from \"axios\";\r\n\r\nexport function join(user) {\r\n    const promise = axios.post(\"/user/join\", user);\r\n    return promise;\r\n}\r\n\r\nexport function getUserList() {\r\n    const promise = axios.get(\"/user/userlist\");\r\n    return promise;\r\n}\r\n\r\nexport function updateForm(user) {\r\n    const promise = axios.post(\"/user/update\", user);\r\n    return promise;\r\n}\r\n\r\nexport function deleteUser(userid) {\r\n    const promise = axios.delete(\"/user/delete/\" + userid);\r\n    return promise;\r\n}\r\n\r\nexport function disableUser(userid) {\r\n    const promise = axios.put(\"/user/disable/\" + userid);\r\n    return promise;\r\n}\r\n\r\nexport function enableUser(userid) {\r\n    const promise = axios.put(\"/user/enable/\" + userid);\r\n    return promise;\r\n}\r\n\r\n ","import { useEffect, useState } from \"react\";\r\nimport { Button, Form, Spinner } from \"react-bootstrap\";\r\nimport { updateForm, deleteUser, disableUser, enableUser } from \"apis/User\";\r\n\r\nconst errorMsg = {\r\n  password_empty : '비밀번호를 입력해주세요.',\r\n  userid_empty : '아이디를 입력해주세요.',\r\n  err_confirmPassword: '비밀번호확인을 다시 입력해주세요.',\r\n  fail_update:\"수정을 실패하였습니다.\"\r\n}\r\n\r\nfunction UpdateForm(props) {\r\n \r\n  const [validated, setValidated] = useState(false);\r\n  const [errorMessage, setErrorMesssage] = useState(errorMsg.password_empty);\r\n  const [isInvalid, setIsInvalid] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]:event.target.value\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFormData({\r\n      ...props.updateUser,\r\n      userpassword:\"\",\r\n      confirmpassword:\"\"\r\n    })\r\n  }, [props.updateUser]);\r\n\r\n  const handleSubmit = (event) => {\r\n    setLoading(true);\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (form.checkValidity() === false) {//빈칸이 있을경우\r\n      setValidated(true);\r\n      setLoading(false);\r\n      setErrorMesssage(errorMsg.password_empty);\r\n    } else { //빈칸이 없을경우\r\n      if(formData.userpassword !== formData.confirmpassword){//비밀번호, 비밀번호 확인이 다르면\r\n        setIsInvalid(true);\r\n        setErrorMesssage(errorMsg.err_confirmPassword);\r\n        setFormData({\r\n          ...formData,\r\n          confirmpassword:\"\"\r\n        })\r\n        setLoading(false);\r\n      } else {\r\n        \r\n        const response = updateForm(formData);\r\n        response.then((response) => {\r\n          if(response.data.state === \"success\") {\r\n            setIsInvalid(false);\r\n            props.setIsUpdate(false);\r\n            props.updateShow(\"수정이 완료 되었습니다.\");\r\n          } else {\r\n            setIsInvalid(true);\r\n            setErrorMesssage(errorMsg.fail_update);\r\n          }\r\n        }).catch((error) => {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n        }).finally(() => {\r\n          setLoading(false);\r\n\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteUserFun = () => {\r\n\r\n    if(window.confirm(\"직원을 삭제하시겠습니까?\") === true){\r\n      setLoading(true);\r\n      const response = deleteUser(formData.userid);\r\n      response.then((response) => {\r\n        if(response.data.state === \"success\"){\r\n          setIsInvalid(false);\r\n          setLoading(false);\r\n          props.setIsUpdate(false);\r\n          props.updateShow(\"삭제가 완료되었습니다.\");\r\n          props.getUsers();\r\n        } else {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n        }\r\n      }).catch((error) => {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  const disableUserFun = () => {\r\n    if(window.confirm(\"직원을 비활성화 시키겠습니까?\") === true){\r\n      setLoading(true);\r\n      const response = disableUser(formData.userid);\r\n      response.then((response) => {\r\n        if(response.data.state === \"success\"){\r\n          setIsInvalid(false);\r\n          setLoading(false);\r\n          props.setIsUpdate(false);\r\n          props.updateShow(\"직원이 비활성화 되었습니다.\");\r\n          props.getUsers();\r\n        } else {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n        }\r\n      }).catch((error) => {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n      })\r\n    }\r\n  }\r\n\r\n  const enableUserFun = () => {\r\n    if(window.confirm(\"직원을 활성화 시키겠습니까?\") === true){\r\n      setLoading(true);\r\n      const response = enableUser(formData.userid);\r\n      response.then((response) => {\r\n        if(response.data.state === \"success\"){\r\n          setIsInvalid(false);\r\n          setLoading(false);\r\n          props.setIsUpdate(false);\r\n          props.updateShow(\"직원이 활성화 되었습니다.\");\r\n          props.getUsers();\r\n        } else {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n        }\r\n      }).catch((error) => {\r\n          setIsInvalid(true);\r\n          setErrorMesssage(errorMsg.fail_update);\r\n          setLoading(false);\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>아이디</Form.Label>\r\n        <Form.Control required name=\"userid\" type=\"text\" placeholder=\"User ID\" value={formData.userid || \"\"} readOnly/>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>비밀번호</Form.Label>\r\n        <Form.Control required name=\"userpassword\" type=\"password\" placeholder=\"Password\" value={formData.userpassword || \"\"} onChange={handleChange}/>\r\n        <Form.Control.Feedback type=\"invalid\">비밀번호를 입력해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>비밀번호 확인</Form.Label>\r\n        <Form.Control required name=\"confirmpassword\" type=\"password\" placeholder=\"Confirm Password\" value={formData.confirmpassword || \"\"} onChange={handleChange} isInvalid={isInvalid}/>\r\n        <Form.Control.Feedback type=\"invalid\">{errorMessage}</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>이름</Form.Label>\r\n        <Form.Control required name=\"username\" type=\"text\" placeholder=\"User Name\" value={formData.username || \"\"} readOnly/>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>전화번호</Form.Label>\r\n        <Form.Control name=\"phonenumber\" type=\"test\" placeholder=\"Phone Number\" value={formData.phonenumber || \"\"} readOnly/>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <div>\r\n          <Form.Label>성별</Form.Label>\r\n        </div>\r\n        <Form.Check checked={formData.sex === \"남자\"} inline label=\"남자\" name=\"sex\" type={\"radio\"} value=\"남자\" feedback={\"성별을 선택해주세요.\"} readOnly/>\r\n        <Form.Check checked={formData.sex === \"여자\"} inline label=\"여자\" name=\"sex\" type={\"radio\"} value=\"여자\" feedback={\"성별을 선택해주세요.\"} readOnly/>\r\n        <Form.Control.Feedback type=\"invalid\">성별을 선택해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <div>\r\n          <Form.Label>직책</Form.Label>\r\n        </div>\r\n        <Form.Check checked={formData.role_authority === \"ROLE_DOCTOR\"} required inline label=\"의사\" name=\"role_authority\" value=\"ROLE_DOCTOR\" type={\"radio\"} feedback={\"직책을 선택해주세요.\"} readOnly/>\r\n        <Form.Check checked={formData.role_authority === \"ROLE_NURSE\"} required inline label=\"간호사\" name=\"role_authority\" value=\"ROLE_NURSE\" type={\"radio\"} feedback={\"직책을 선택해주세요.\"} readOnly/>\r\n        <Form.Control.Feedback type=\"invalid\">직책을 선택해주세요.</Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>진료실</Form.Label>\r\n        <Form.Control name=\"userroom\" type=\"text\" placeholder=\"Treatment Room\" value={formData.userroom || \"\"} onChange={handleChange} readOnly/>\r\n      </Form.Group>\r\n\r\n      <Form.Group style={{marginBottom:\"10px\"}}>\r\n        <Form.Label>상태</Form.Label>\r\n        <Form.Control type=\"text\" value={formData.userenabled ===1 ? \"활성화\" : \"비활성화\"} readOnly/>\r\n      </Form.Group>\r\n\r\n      <div className=\"text-right\">\r\n        {formData.userenabled === 1 ? \r\n        <Button className=\"w-25 mr-3\" type=\"submit\" variant=\"dark\">\r\n        {loading === true ? <Spinner className=\"mr-2\" as=\"span\" animation=\"border\" size=\"sm\" role=\"status\"/> : null}\r\n          수정 완료</Button>\r\n        : \r\n        <Button className=\"w-25 mr-3\" variant=\"primary\" type=\"button\" onClick={enableUserFun}>\r\n        {loading === true ? <Spinner className=\"mr-2\" as=\"span\" animation=\"border\" size=\"sm\" role=\"status\"/> : null}\r\n          활성화</Button>\r\n        }\r\n\r\n\r\n        {formData.userenabled === 1 ? \r\n        <Button className=\"w-25\" variant=\"danger\" type=\"button\" onClick={disableUserFun}>\r\n        {loading === true ? <Spinner className=\"mr-2\" as=\"span\" animation=\"border\" size=\"sm\" role=\"status\"/> : null}\r\n          비활성화</Button>\r\n        :\r\n        <Button className=\"w-25\" variant=\"danger\" type=\"button\" onClick={deleteUserFun}>\r\n        {loading === true ? <Spinner className=\"mr-2\" as=\"span\" animation=\"border\" size=\"sm\" role=\"status\"/> : null}\r\n          삭제</Button>\r\n        }\r\n        \r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default UpdateForm;","import { getUserList } from \"apis/User\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Col, Row, Toast } from \"react-bootstrap\";\r\nimport JoinForm from \"./JoinForm\";\r\nimport UpdateForm from \"./UpdateForm\";\r\nfunction Members(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [toastMessage, setToastMessage] = useState(\"\");\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [userList, setUserList] = useState([]);\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const getUsers = async() => {\r\n    const response = await getUserList();\r\n    setUserList(response.data);\r\n  }\r\n\r\n  const [updateUser, setUpdateUser] = useState({});\r\n\r\n  const update = (selectUser) => {\r\n    setUpdateUser(selectUser);\r\n    setIsUpdate(true);\r\n  }\r\n\r\n  const completeUpdate = (message) => {\r\n    setToastMessage(message);\r\n    setShow(true);\r\n  }\r\n\r\n  const closeShow = () => {\r\n    setShow(false)\r\n    setToastMessage(\"\"); \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row ml-0 mr-0\" style={{height:\"100vh\"}}>\r\n        <div className=\"col h-100\">\r\n          <div className=\"border border-dark pl-3 pr-3\" style={{height:\"96vh\", marginBottom:\"2vh\",  marginTop:\"2vh\" , backgroundColor:\"#FFFFFF\"}}>\r\n            <div className=\"d-flex row pb-1\" style={{height:\"50px\"}}><div className=\"p-2 ml-3 mr-2 text-center\" style={{ backgroundColor:\"#887BD2\", width:\"40px\", color:\"#FFFFFF\"}}><i className=\"bi bi-person-lines-fill\"></i></div><div className=\"d-flex align-items-center\">직원 목록</div></div>\r\n            <div className=\"p-4\" style={{height:\"calc(100% - 50px)\"}}>\r\n              <div className=\"d-flex text-center align-items-center\" style={{height:\"40px\", color:\"#88888D\", fontWeight:\"bold\"}}>\r\n                <div style={{width:\"10%\"}}></div>\r\n                <div style={{width:\"12%\"}}>직원 아이디</div>\r\n                <div style={{width:\"15%\"}}>직원명</div>\r\n                <div style={{width:\"18%\"}}>전화번호</div>\r\n                <div style={{width:\"10%\"}}>진료실</div>\r\n                <div style={{width:\"15%\"}}>직책</div>\r\n                <div style={{width:\"10%\"}}>상태</div>\r\n                <div style={{width:\"10%\"}}></div>\r\n              </div>\r\n              <div className=\"overflow-auto border\" style={{height:\"calc(100% - 40px\"}}>\r\n                {userList != null &&\r\n                userList.map((user) => {\r\n                  return (\r\n                    <div key={user.userid} className=\"d-flex text-center pt-1 pb-1 align-items-center border-bottom\" style={{height:\"60px\", fontWeight:\"bold\"}}>\r\n                      <div style={{width:\"10%\"}}>\r\n                        {user.sex === \"남자\" ? \r\n                          <img src=\"/doctor2.png\" alt=\"man\" width=\"30\" height=\"30\"/> :\r\n                          <img src=\"/doctor3.png\" alt=\"woman\" width=\"30\" height=\"30\"/>\r\n                        }  \r\n                      </div>\r\n                      <div style={{width:\"12%\"}}>{user.userid}</div>\r\n                      <div style={{width:\"15%\"}}>{user.username}</div>\r\n                      <div style={{width:\"18%\"}}>{user.phonenumber}</div>\r\n                      <div style={{width:\"10%\"}}>{user.userroom}</div>\r\n                      <div style={{width:\"15%\"}}>\r\n                        {user.role_authority === \"ROLE_DOCTOR\" ? \"의사\" : \"간호사\"}\r\n                      </div>\r\n                      <div style={{width:\"10%\"}}>\r\n                        {user.userenabled === 1 ? \"활성화\" : \"비활성화\"}\r\n                      </div>\r\n                      <div style={{width:\"10%\"}}><button className=\"btn btn-sm btn-outline-secondary\" onClick={() => {update(user)}}>수정</button></div>\r\n                    </div>\r\n                  )\r\n                })\r\n                }\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col h-100\">\r\n          <div className=\"border border-dark pl-3 pr-3\" style={{height:\"96vh\", marginBottom:\"2vh\",  marginTop:\"2vh\" , backgroundColor:\"#FFFFFF\"}}>\r\n            <div className=\"d-flex row pb-1\" style={{height:\"50px\"}}><div className=\"p-2 ml-3 mr-2 text-center\" style={{ backgroundColor:\"#887BD2\", width:\"40px\", color:\"#FFFFFF\"}}><i className=\"bi bi-person-plus-fill\"></i></div><div className=\"d-flex align-items-center\">\r\n                {isUpdate == false ? \"직원 등록\" : \"직원 수정\"}</div></div>\r\n            <div className=\"pt-4\" style={{height:\"calc(100% - 50px)\"}}>\r\n              {isUpdate == false ? \r\n              <JoinForm toastShow={completeUpdate} getUsers={getUsers}/> \r\n              : \r\n              <UpdateForm updateUser={updateUser} getUsers={getUsers} setIsUpdate={setIsUpdate} updateShow={completeUpdate}></UpdateForm> }\r\n                \r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{position: \"absolute\", bottom: \"40px\", right: \"30px\"}}>\r\n          <Row>\r\n            <Col style={{width:\"400px\"}}>\r\n              <Toast onClose={closeShow} show={show} delay={3000} autohide>\r\n                <Toast.Header style={{backgroundColor:\"#1B296D\"}}>\r\n                  <strong className=\"mr-auto\" style={{color:\"white\"}}>Message</strong>\r\n                  <small>complete</small>\r\n                </Toast.Header>\r\n                <Toast.Body>{toastMessage}</Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Members;","import { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"views/Home\";\r\nimport Reception from \"views/Reception\";\r\nimport Treatment from \"views/Treatment\";\r\nimport Test from \"views/Test\";\r\nimport Members from \"views/Members\";\r\n\r\n\r\n//jsconfig로 하면 src가 기본 경로로 되어있음\r\n\r\nfunction AppRoute(props) {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${props.match.url}/home`} exact component={Home}/>\r\n      <Route path={`${props.match.url}/reception`} exact component={Reception}/>\r\n      <Route path={`${props.match.url}/treatment`} exact component={Treatment}/>\r\n      <Route path={`${props.match.url}/test`} exact component={Test}/>\r\n      <Route path={`${props.match.url}/members`} exact component={Members}/>\r\n      <Redirect to={`${props.match.url}/home`} />\r\n      {/* 어느 누구도 해당하지 않으면 home으로 감  */}\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default AppRoute;\r\n","const initialState = {\r\n  toast: {}\r\n}\r\n\r\n//액션 타입 선언\r\nconst SET_TOAST=\"toast/setToast\";\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetToast = (toast) => {\r\n  return {type:SET_TOAST, toast};\r\n} \r\n\r\n//리듀스 선언\r\nconst realtimeReducer = (state = initialState, action) => {\r\n  if(action.type === SET_TOAST) {\r\n    return {...state, toast:action.toast};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\n\r\nexport default realtimeReducer;","import { GetUserData } from \"apis/Reception\";\r\nimport { loadChatting, saveChatting, clearChatting } from \"apis/Redis\";\r\nimport {  useEffect, useRef, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { createSetToast } from \"redux/toast-reducer\";\r\nimport ReceptionHeader from \"views/Reception/components/ReceptionHeader\";\r\n\r\n// const initChatArray=  () =>{ \r\n//     const chatArray=[];\r\n//     for(var i=0; i<5; i++){\r\n//         const chatObj = {username:\"user\"+i, message:\"messageasdfdsafd\"+i, dateTime:new Date(),isMe:i%2===0, enabled:true}\r\n//         chatArray.push(chatObj)\r\n//     }\r\n//     return chatArray;\r\n// }\r\n\r\n// const initConnectionArray=  () =>{ \r\n//     const connectionArray=[];\r\n//     for(var i=0; i<10; i++){\r\n//         const connectionObj = {userid:\"userid\"+i,username:\"name\"+i,userrole:\"role\"+i,status:\"connect\"}\r\n//         connectionArray.push(connectionObj)\r\n//     }\r\n//     return connectionArray;\r\n// }\r\n\r\n\r\n//나중에 로그아웃때 넘길 chatArray 값\r\nlet chatarray = [];\r\nfunction Chatting(props){\r\n    const [test, setTest] = useState(\"test!!\")\r\n    const [chatArray, setChatArray] = useState([]);\r\n    const [connectionList,setConnectionList] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const globalUid= useSelector((state)=>(state.authReducer.userid))\r\n    const [userInfo, setUserInfo] = useState({})\r\n    const scrollRef = useRef();\r\n    const [websocket, setWebsocket] = useState();\r\n    const [brb, setBRB] = useState(false);\r\n    const dispatch = useDispatch();\r\n    // 채팅칠때 스크롤 내리기\r\n    useEffect(()=>{\r\n        if(scrollRef.current){\r\n            scrollRef.current.scrollIntoView({ behavior: 'smooth'});\r\n        }\r\n        //나중에 로그아웃때 넘길 chatArray 값 저장\r\n        chatarray = chatArray;\r\n    },[chatArray])\r\n\r\n    window.onbeforeunload = function(e) {\r\n         saveChatting(globalUid,chatArray).then((result)=>{\r\n             console.log(\"!!! save!!\")\r\n             console.log(result.data)\r\n     })\r\n      };\r\n    useEffect(()=>{\r\n        let webSocket = new  WebSocket('ws://localhost:8080/websocket/chatting')\r\n        // let webSocket = new WebSocket(\"ws://kosa3.iptime.org:50006/websocket/chatting\")\r\n      \r\n        webSocket.onopen = () =>{\r\n            console.log(\"open!!!\")\r\n            //Back-end에서 이전 채팅기록 가져오기\r\n            loadChatting(globalUid).then((result)=>{\r\n                console.log(\"load!!\")\r\n                if(result.data===\"\"){\r\n                    result.data = [];\r\n                }\r\n                    setChatArray(result.data )\r\n            })\r\n\r\n            console.log(\"sendHELLO!\" + globalUid)\r\n            //유저정보 불러오기\r\n            GetUserData(globalUid).then((result)=>{\r\n                //유저 role 한글로 바꿔주기\r\n                if(result.data.role_authority===\"ROLE_DOCTOR\")result.data.role_authority=\"의사\"\r\n                else if(result.data.role_authority===\"ROLE_NURSE\")result.data.role_authority=\"간호사\"\r\n                else if(result.data.role_authority===\"ROLE_ADMIN\")result.data.role_authority=\"관리자\"\r\n                setUserInfo(result.data)\r\n                //접속되면 처음 내 정보를 서버에 보내줌\r\n                webSocket.send(JSON.stringify({\r\n                    header:\"HELLO\",\r\n                    from:globalUid,\r\n                    connectioninfo:{userid:globalUid,username:result.data.username,userrole:result.data.role_authority,status:\"접속중\"},\r\n                    message:\"\"\r\n                }))\r\n            })\r\n            \r\n        }\r\n        webSocket.onclose=()=>{\r\n            console.log(\"sendBYE!\")\r\n        }\r\n        webSocket.onmessage = (event) =>{\r\n           \r\n            \r\n            var data = JSON.parse(event.data);\r\n            console.log(\"receive\" + data.header)\r\n            //접속 패킷 받았을때\r\n            if(data.header===\"HELLO\"){\r\n                //동기화할 유저정보 리스트\r\n                setConnectionList(data.connectionlist)\r\n            }\r\n            //자리 비움패킷 받았을때\r\n            else if(data.header===\"BRB\"){\r\n                //동기화할 유저정보 리스트\r\n                setConnectionList(data.connectionlist)\r\n            }\r\n            //접속종료패킷 받았을때\r\n            else if(data.header===\"BYE\"){\r\n                //동기화할 유저정보 리스트\r\n                console.log(\"byte!!\")\r\n                console.log(chatArray)\r\n                setConnectionList(data.connectionlist)\r\n            }\r\n            //채팅 패킷 받았을때\r\n            else if(data.header===\"CHATTING\"){\r\n                if(data.from!==globalUid){\r\n                    dispatch(createSetToast({message:data.name+\"님으로 부터 메시지 도착\"}))\r\n                }\r\n                setChatArray((prev)=>{\r\n                    const chatObj = {name:data.name, from:data.from,role:data.role,message:data.message, dateTime:data.dateTime,isMe:data.from===globalUid, enabled:true}\r\n\r\n                return prev.concat(chatObj) \r\n                })\r\n            }\r\n        }\r\n        setWebsocket(webSocket)\r\n\r\n        return()=>{\r\n            console.log(\"로그아웃??\")\r\n        saveChatting(globalUid,chatarray).then((result)=>{\r\n            console.log(\"!!! save!!\")\r\n            webSocket.close();\r\n        })}\r\n\r\n    },[])\r\n\r\n    const onChangeMessage = (event) =>{\r\n        setMessage(event.target.value);\r\n    } \r\n    const onKeyPress =(e)=>{\r\n        if(e.key===\"Enter\"){\r\n            sendMsg(e);\r\n        }\r\n    }\r\n    const sendMsg = (event) =>{\r\n        if(message===\"\")return;\r\n        //만약 자리비움 상태에서 채팅보냈으면 접속중으로 바꿔주기\r\n        if(brb){\r\n            BRB();\r\n        }\r\n      websocket.send(JSON.stringify({\r\n        header:\"CHATTING\",\r\n        from:globalUid,\r\n\r\n        name:userInfo.username,\r\n\r\n        role:userInfo.role_authority,\r\n        dateTime:new Date().toLocaleString(),\r\n        message:message\r\n    }))\r\n    setMessage(\"\");\r\n    }\r\n    //채팅 내역 초기화\r\n    const clear = () =>{\r\n        setChatArray([]);\r\n        clearChatting(globalUid).then((result)=>{\r\n            console.log(\"!!! clear\")\r\n    })\r\n    }\r\n    //자리비움, 온라인 onoff\r\n    const BRB = () =>{\r\n      setBRB(!brb)\r\n      websocket.send(JSON.stringify({\r\n        header:\"BRB\",\r\n        from:globalUid,\r\n        connectioninfo:{userid:globalUid,username:userInfo.username,userrole:userInfo.role_authority,status:brb?\"접속중\":\"자리비움\"},\r\n        message:\"\"\r\n    }))\r\n    }\r\n    return(\r\n    <>\r\n    <ReceptionHeader  headertitle=\"메신저\" iclassName=\" bi bi-chat-dots-fill \" color=\"#ffc107\">\r\n        <span className=\"mr-5\">\r\n        아이디 : {globalUid} , 이름 : {userInfo.username}({userInfo.role_authority}) \r\n        </span>\r\n        <button className=\"btn  btn-sm align-self-end mr-4\" style={{backgroundColor:brb?\"green\":\"red\" ,color:\"white\"}} onClick={BRB}>{brb?\"접속하기\":\"자리비우기\"}</button>\r\n\r\n        <button className=\"btn  btn-sm align-self-end mr-4\" style={{backgroundColor:\"#ffc107\" ,color:\"white\"}} onClick={clear}>내역삭제</button>\r\n    </ReceptionHeader>\r\n\r\n    <div className=\"row mt-2\">\r\n        \r\n        <div className=\"col-6 pr-0\">\r\n            <div className=\"pl-2 pr-2 pb-3 border-bottom border-left border-top border-dark\" style={{height:\"100%\"}}>\r\n\r\n                   <label>접속직원리스트</label>\r\n                    <div  className=\"overflow-auto mb-2 border border-dark  justify-content-center\" style={{height:\"95%\"}}>\r\n                        {connectionList&&connectionList.map((item,index)=>{\r\n                        return(\r\n                            <div className=\"row m-0 border-bottom text-center\" key={index} style={{fontSize:\"1em\"}}>\r\n                                <div className=\"col-3 p-0 border-right\">\r\n                                {item.userid}\r\n                                </div>\r\n                                <div className=\"col-3 p-0 border-right\">\r\n                                {item.username}\r\n                                </div>\r\n                                <div className=\"col-3 p-0 border-right\">\r\n                                {item.userrole}\r\n                                </div>\r\n                                <div className=\"col-3 p-0\" style={{backgroundColor:item.status===\"자리비움\"?\"red\":\"green\" ,color:\"white\"}}>\r\n                                {item.status}\r\n                                </div>\r\n                            </div>                         \r\n                            )\r\n                        })}  \r\n                    </div>\r\n                    {/* <label>네트워크 상태</label>\r\n                    <div  className=\"overflow-auto border border-dark\" style={{height:\"45%\"}}>\r\n                    \r\n                    </div> */}\r\n\r\n            </div>\r\n        </div>\r\n        <div className=\"col-6 pl-0\">\r\n            <div className=\"pl-1 pr-1 pb-3 border border-dark\" style={{height:\"100%\"}}>\r\n                <div  className=\"overflow-auto mt-3\" style={{height:\"calc(92vh - 136px)\"}}>\r\n                \r\n                <div  className=\" d-flex flex-column justify-content-end bg-dark pl-3 pr-3\" style={{minHeight:\"calc(92vh - 136px)\"}}>\r\n                    {chatArray&&chatArray.map((chat,index)=>{return(\r\n                        <div ref={scrollRef} key={index}  className={chat.isMe?\"row p-1 justify-content-end\":\"row  p-1  justify-content-start\"}>\r\n                            <div style={{ maxWidth:\"70%\"}}>\r\n                                <div style={{color:\"white\"}}>\r\n                                    {chat.name}({chat.role})\r\n                                </div>\r\n                                <div className=\"border \" style={ {backgroundColor:chat.isMe?\"yellow\":\"gray\",wordBreak:\"break-all\" }}>\r\n                                    {chat.message}\r\n                                </div>\r\n                                <div style={{fontSize:\"0.5em\",color:\"white\"}}>\r\n                                {chat.dateTime.toLocaleString()}\r\n                                </div>\r\n                            </div>\r\n                        </div>)\r\n                    })}\r\n                </div>\r\n                </div>\r\n                <div className=\"align-items-end d-flex\" >\r\n                    <input type=\"text\" className=\"col-10 form-control\" name=\"message\" onKeyPress={onKeyPress} value={message} onChange={onChangeMessage} />\r\n                    <button className=\"col-2 btn btn-warning btn-sm p-0\"style={{height:\"2.5rem\", fontSize:\"0.9rem\"}}  onClick={sendMsg}>보내기</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n    );\r\n}\r\nexport default Chatting;","import { useEffect, useState } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport TestReception from \"views/Reception/PatientReception/TestReception\";\r\nimport TreatmentReception from \"views/Reception/PatientReception/TreatmentReception\";\r\nimport { GetTestReceptionList, GetTreatmentList } from \"apis/Reception\";\r\nimport Chatting from \"./Messenger/Chatting\";\r\nimport ReceptionHeader from \"views/Reception/components/ReceptionHeader\";\r\nimport { ButtonGroup, Spinner, ToggleButton } from \"react-bootstrap\";\r\n\r\nfunction DrawerReceptions(props){\r\n    const treatmentReception = useSelector((state)=>(state.receptionReducer.treatmentreception)) \r\n    const testReception = useSelector((state)=>(state.receptionReducer.testreception))\r\n\r\n    const [treatementsData, setTreatmentsData] = useState()\r\n    const [testReceptionsData, setTestReceptionsData] = useState()\r\n    const [loading,setLoading] = useState(false);\r\n    \r\n    const [listtype, setListtype] = useState(\"접수목록\");\r\n\r\n    const handleChange = (event) => {\r\n        setListtype(event.target.value);\r\n      }\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        GetTreatmentList().then((result)=>{\r\n             \r\n            const userlist = result.data.userlist;\r\n            \r\n            const patientlist = result.data.patientlist;\r\n            const treatmentlist = result.data.treatmentlist.map((item, index)=>{\r\n                return {...item, patientname:patientlist[index].patientname,username:userlist[index].username }\r\n            })\r\n            setTreatmentsData(treatmentlist);\r\n            setLoading(false)\r\n        })\r\n    },[treatmentReception])\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        GetTestReceptionList().then((result)=>{\r\n            console.log(result.data)\r\n            const patientlist = result.data.patientlist;\r\n            const testlist = result.data.testlist.map((item, index)=>{\r\n                return {...item, patientname:patientlist[index].patientname }\r\n            })\r\n            setTestReceptionsData(testlist);\r\n            setLoading(false)\r\n        })\r\n    },[testReception])\r\n\r\n    return(\r\n        <>\r\n         <ButtonGroup toggle>\r\n                 <ToggleButton type=\"radio\" style={{color:\"white\"}}  variant= {`${listtype === \"접수목록\" ? \"success\" : \"\" }`} name=\"type\"  checked={listtype===\"접수목록\"} value=\"접수목록\" onChange={handleChange}><div className=\"ml-5 mr-5\">접수목록(당일)</div></ToggleButton>\r\n                <ToggleButton type=\"radio\" style={{color:\"white\"}} variant={`${listtype === \"메신저\" ? \"success\" : \"\" }`} name=\"type\"  checked={listtype===\"메신저\"} value=\"메신저\" onChange={handleChange}><div className=\"ml-5 mr-5\">메신저</div></ToggleButton>\r\n        </ButtonGroup>\r\n        <div className=\"bg-white row p-2\" style={{height:\"calc(100vh-38px)\"}}>\r\n            \r\n            \r\n        <div className=\"col\" style={{height:\"calc(92vh-38px)\", backgroundColor:\"white\",display:listtype===\"접수목록\"?\"block\": \"none\"}}>\r\n            <div className=\"pl-3 pr-1  border border-dark\" style={{height:\"calc(48vh - 25px)\"}}>   \r\n            <ReceptionHeader  headertitle=\"진료접수\" iclassName=\" bi bi-clipboard-check \" color=\"#e89677\">\r\n            {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n            </ReceptionHeader>\r\n           \r\n            <TreatmentReception isDrawer={true} treatmentList={treatementsData}/> \r\n            </div>\r\n            <div className=\"mt-3 pl-3 pr-1  border border-dark\" style={{height:\"calc(48vh - 25px)\"}}>    \r\n            <ReceptionHeader  headertitle=\"검사접수\" iclassName=\" bi bi-clipboard-check \" color=\"#e89677\">\r\n            {loading?<Spinner as=\"span\" animation=\"border\" variant=\"info\" size=\"lg\" role=\"status\" className=\"ml-2\"/>:null}\r\n            </ReceptionHeader>\r\n           \r\n            <TestReception isDrawer={true}  testList={testReceptionsData}/>\r\n            </div>\r\n        </div>\r\n        \r\n        <div className=\"col\"style={{height:\"calc(92vh-38px)\", backgroundColor:\"white\",display:listtype===\"메신저\"?\"block\": \"none\"}}>\r\n                <Chatting/>\r\n        </div>\r\n            \r\n            \r\n            \r\n           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DrawerReceptions;","import \"../style/menu.css\"\r\nimport {slide as Menu}  from \"react-burger-menu\";\r\nimport DrawerReceptions from \"./DrawerReceptions\";\r\nimport { Col, Row, Toast } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Menus(props){\r\n  \r\n  const toast = useSelector((state)=>(state.toastReducer.toast))\r\n  const [showToast,setShowToast] = useState(false); \r\n  const toggleShowToast = () => {setShowToast(!showToast);}\r\n  //리덕스 올때마다 토스트 켜줌\r\n  useEffect(()=>{\r\n    if(toast.message){\r\n      setShowToast(true)\r\n    }\r\n  },[toast])\r\n\r\n  return (\r\n  <>\r\n <Menu right  customBurgerIcon={<img src=\"/menu.svg\" />} width={\"40%\"}>\r\n     <DrawerReceptions/>\r\n  </Menu>\r\n  <div style={{position: \"fixed\", bottom: \"30px\", right: \"40px\",zIndex:\"1000\"}}>\r\n          <Row>\r\n            <Col style={{width:\"400px\"}}>\r\n              <Toast onClose={toggleShowToast} show={showToast} delay={5000} autohide>\r\n                <Toast.Header style={{backgroundColor:\"#ffc107\"}}>\r\n                  <strong className=\"mr-auto\" style={{color:\"white\"}}>메신저</strong>\r\n                </Toast.Header>\r\n                <Toast.Body>{toast.message}</Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n  </>\r\n  );\r\n}\r\nexport default Menus;","import { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createSetTestReception, createSetTestResult, createSetTreatmentReception } from \"redux/reception-reducer\";\r\n\r\nconst Redis = () => {\r\n  //-------------------------------------------------------------  \r\n  //상태 선언\r\n  //-------------------------------------------------------------\r\n  const [connected, setConnected] = useState(false);\r\n  //로그인 될때마다 토픽을 바꿔줘야함\r\n  const [subTopic, setSubTopic] = useState(\"/reception\");\r\n  const [pubMessage, setPubMessage] = useState({\r\n    topic: \"/reception\",\r\n    content: \"Hello\"\r\n  });\r\n  const [contents, setContents] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  //상태 변경 내용 출력\r\n  useEffect(() => {\r\n    console.group(\"상태 변경\");\r\n      console.log(\"connected: \", connected);\r\n      console.log(\"subTopic: \", subTopic);\r\n      console.log(\"pubMessage: \", pubMessage);\r\n      console.log(\"contents: \", contents);\r\n    console.groupEnd();\r\n  }); \r\n\r\n  //-------------------------------------------------------------\r\n  //버튼 이벤트 처리\r\n  //-------------------------------------------------------------\r\n  let ws = useRef(null);\r\n  const connectWebSocket = () => {\r\n \r\n    //  ws.current = new WebSocket(\"ws://kosa3.iptime.org:50006/websocket/redis\");\r\n    ws.current = new WebSocket(\"ws://localhost:8080/websocket/redis\");\r\n\r\n    ws.current.onopen = () => {\r\n      console.log(\"접속 성공\");\r\n      setConnected(true);\r\n      sendSubTopic();\r\n    };\r\n    \r\n    ws.current.onclose = () => {\r\n      console.log(\"접속 끊김\");\r\n      setConnected(false);\r\n    };\r\n    \r\n    ws.current.onmessage = (event) => { \r\n      console.log(\"메시지 수신\");\r\n      var strJson = event.data;\r\n      var message = JSON.parse(JSON.parse(strJson));\r\n      // 여기서 각 topic에 따라 dispatch!!\r\n      //{type: , treatmentid: , newDate()}\r\n      if(message.type===\"treatment\"){\r\n        console.log(message);\r\n        dispatch(createSetTreatmentReception({patientid:message.patientid, status:message.status}))\r\n      }else if(message.type===\"test\"){\r\n        dispatch(createSetTestReception(new Date()))\r\n      }else if(message.type===\"testresult\"){\r\n        dispatch(createSetTestResult({treatmentid:message.treatmentid}))\r\n      }\r\n\r\n      setContents((contents) => {\r\n        return contents.concat(message.topic + \": \" + message.content);\r\n      });\r\n    } \r\n  };\r\n\r\n  const disconnectWebSocket = () => {\r\n    ws.current.close();\r\n  };\r\n\r\n  const sendSubTopic = () => {\r\n    var json = {topic:subTopic};\t\t\r\n    var strJson = JSON.stringify(json);\r\n    ws.current.send(strJson);\r\n  }\r\n\r\n  //-------------------------------------------------------------\r\n  //마운트 및 언마운트에 실행할 내용\r\n  //-------------------------------------------------------------\r\n  useEffect(() => {\r\n    connectWebSocket();\r\n    return (() => {\r\n      disconnectWebSocket();\r\n    });\r\n  }, []);\r\n\r\n  //-------------------------------------------------------------\r\n  //렌더링 내용\r\n  //-------------------------------------------------------------\r\n  return (\r\n    <>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Redis;\r\n\r\n","import AppMenu from \"AppMenu\";\r\nimport AppRoute from \"AppRoute\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Menus from \"views/components/Menu\";\r\nimport Home from \"views/Home\";\r\nimport Reception from \"views/Reception\";\r\nimport Treatment from \"views/Treatment\";\r\nimport Test from \"views/Test\";\r\nimport Members from \"views/Members\";\r\nimport Redis from \"views/components/Redis\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Main(props) {\r\n  \r\n  const globalUserid = useSelector((state) => {return state.authReducer.userid});\r\n   //유저 아이디가 없다면 다시 로그인 페이지로 이동\r\n   if(globalUserid == null || globalUserid === \"\") {\r\n    return <Redirect to=\"/\"></Redirect>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menus ></Menus>\r\n      <div className=\"flex-grow-1 container-fluid pl-0 pr-0\">\r\n        <div className=\"row h-100 mr-0 ml-0\">\r\n          <div className=\"col-1 pl-0 border-right align-items-end\" style={{position:\"relative\", backgroundColor:\"#FFFFFF\"}}>\r\n            <AppMenu/>\r\n          </div>\r\n          <Redis/>\r\n          <div className=\"col-11 pl-0 pr-0\" >\r\n          <Switch>\r\n            <Route path=\"/main/home\" component={Home}/>\r\n            <Route path=\"/main/reception\" component={Reception}/>\r\n            <Route path=\"/main/treatment\" component={Treatment}/>\r\n            <Route path=\"/main/test\" component={Test}/>\r\n            <Route path=\"/main/members\" component={Members}/>\r\n            <Redirect to=\"/main/home\"/>\r\n          {/* 어느 누구도 해당하지 않으면 home으로 감  */}\r\n          </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;","let lastBno = 3;\r\n\r\nlet data = [\r\n  {\r\n    bno:4, \r\n    btitle:\"Ver. 1.1.5\", \r\n    bcontent:\"직원등록 기능이 추가 되었습니다.\", \r\n    bwriter:\"관리자\", \r\n    bdate:\"2021-06-30\", \r\n    bhitcount:15\r\n  },\r\n  {\r\n    bno:3, \r\n    btitle:\"Ver. 1.1.4\", \r\n    bcontent:\"실시간 기능이 추가 되었습니다.\", \r\n    bwriter:\"관리자\", \r\n    bdate:\"2021-06-20\", \r\n    bhitcount:18\r\n  },\r\n\r\n  {\r\n    bno:2, \r\n    btitle:\"Ver. 1.1.3\", \r\n    bcontent:\"사진추가 기능이 추가 되었습니다.\", \r\n    bwriter:\"관리자\", \r\n    bdate:\"2021-06-12\", \r\n    bhitcount:15\r\n  },\r\n\r\n\r\n  {\r\n    bno:1, \r\n    btitle:\"Ver. 1.1.2\", \r\n    bcontent:\"채팅 기능이 추가 되었습니다.\", \r\n    bwriter:\"관리자\", \r\n    bdate:\"2021-05-20\", \r\n    bhitcount:12\r\n  },\r\n\r\n];\r\n\r\n\r\nexport function getBoardList() {\r\n  return data;\r\n}\r\n\r\nexport function getBoard(bno) {\r\n  const newBoard = data.find(board => {\r\n    return board.bno === bno\r\n  });\r\n  return newBoard;\r\n}","import { Button, Form, Modal } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getBoard } from \"./data/Data\";\r\nfunction HospitalNoticeDetail(props){\r\n  \r\n  return(\r\n    <>\r\n      <Modal animation={false} show={props.show} onHide={props.handleClose} size=\"lg\" centered>\r\n        <Modal.Header closeButton style={{backgroundColor:\"#1B296D\"} }>\r\n          <Modal.Title style={{color:\"#FFFFFF\"}}><h5>NOTICE DETAIL</h5></Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body >\r\n          <div className=\"overflow-auto border\" style={{height:\"718px\"}}>\r\n            <div className=\"mr-4 ml-4 d-flex align-items-center pt-3\" style={{height:\"50px\"}}><h4>{props.board.btitle}</h4></div>\r\n            <div className=\"ml-4 mr-4 border-bottom pb-3\" style={{color:\"#A8A8A8\",height:\"40px\"}}>{props.board.bdate}</div>\r\n            <div className=\"p-3\" style={{height:\"580px\"}}>\r\n              {props.board.bcontent}\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" size=\"sm\" onClick={props.handleClose}>\r\n            닫기\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HospitalNoticeDetail;","import { Form, Modal } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button } from 'react-bootstrap';\r\nimport Item from \"views/components/Item\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getBoardList } from \"./data/Data\";\r\nimport HospitalNoticeDetail from \"./HospitalNoticeDetail\";\r\nfunction HospitalNotice(props){\r\n  const [show, setShow] = useState(false);\r\n  const [selectedNotice, setSelectedNotice] = useState([]);\r\n  //공지사항을 가져올 list \r\n  const [board, setBoard] = useState({});\r\n\r\n\r\n  useEffect(() => {\r\n    setSelectedNotice(getBoardList());\r\n  }, [])\r\n\r\n  const handleShow = (board) => {\r\n    setShow(true);\r\n    setBoard(board);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  }\r\n\r\nreturn(\r\n  <>\r\n  <h5>NOTICE <img src=\"/pencil.png\" width=\"25\"height=\"25\"/></h5> \r\n  <div className=\"overflow-auto mt-3\" style={{height:\"345px\"}}>\r\n    <table className=\"table table-hover mb-0\" style={{backgroundColor:\"#f6f6f6\"}}>\r\n      <thead className=\"card-header text-center\">\r\n        <tr>\r\n          <th width=\"90px\"></th>\r\n          <th width=\"153px\">작성자</th>\r\n          <th width=\"170px\">제목</th>\r\n          <th width=\"170px\">날짜</th>\r\n        </tr>\r\n      </thead>\r\n    </table>\r\n    {selectedNotice.length != 0 &&\r\n    selectedNotice.map((board, index) => {\r\n      return (\r\n        <div key={board.bno} onClick={() => {handleShow(board)}} className=\"border-bottom d-flex text-center\" style={{heght:\"40px\", cursor:\"pointer\"}}>\r\n          <div style={{width:\"90px\", fontWeight:\"bold\", padding:\"12px\"}}>{board.bno}</div>\r\n          <div style={{width:\"153px\", padding:\"12px\"}}>{board.bwriter}</div>\r\n          <div style={{width:\"170px\", padding:\"12px\"}}>{board.btitle}</div>\r\n          <div style={{width:\"170px\", padding:\"12px\"}}>{board.bdate}</div>\r\n        </div>\r\n      )\r\n    })\r\n    }\r\n  </div>\r\n\r\n  <HospitalNoticeDetail board={board} show={show} handleClose={handleClose}></HospitalNoticeDetail>\r\n  </>\r\n)\r\n}\r\n\r\nexport default HospitalNotice;","import { LoginApi, LoginCode } from \"apis/Auth\";\r\nimport { addAuthHeader } from \"apis/axiosConfig\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {  Link, Redirect, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { createSetAuthTokenAction, createSetCodeNumberAction, createSetRoleAuthority, createSetUseridAction } from \"redux/auth-rducer\";\r\nimport Treatment from \"views/Treatment\";\r\nimport HospitalNotice from \"./HospitalNotice\";\r\nimport HospitalNoticeDetail from \"./HospitalNoticeDetail\";\r\n\r\nconst errorMsg = {\r\n  code_empty : '병원코드를 입력해주세요.',\r\n  userid_empty : '직원아이디를 입력해주세요.',\r\n  password_empty : '비밀번호를 입력해주세요.',\r\n  err_login:\"아이디 비밀번호를 다시 한번 확인해주세요.\",\r\n  err_nullAuth:\"해당 병원에 없는 계정입니다.\"\r\n}\r\n\r\nfunction Hospital(props) {\r\n\r\n  const globalUserid = useSelector((state) => {return state.authReducer.userid});\r\n  const dispatch = useDispatch();\r\n\r\n  const [errorMessageCode, setErrorMessageCode] = useState(errorMsg.code_empty);\r\n  const [errorMessageUserid, setErrorMessageUserid] = useState(errorMsg.userid_empty);\r\n  const [errorMessagePassword, setErrorPassword] = useState(errorMsg.password_empty);\r\n\r\n  const [isInvalidCode, setIsInvalidCode] = useState(false);\r\n  const [isInvalidUserid, setIsInvalidUserid] = useState(false);\r\n  const [isInvalidPassword, setIsInvalidPassword] = useState(false);\r\n\r\n  const [validated, setValidated] = useState(false);\r\n  \r\n  const [loginForm, setLoginFoem] = useState({\r\n    codenumber:\"\",\r\n    userid:\"\",\r\n    userpassword:\"\"\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    setLoginFoem({\r\n      ...loginForm,\r\n      [event.target.name]:event.target.value\r\n    })\r\n  }\r\n  //만약 로그인이 되어 있다면 홈으로 이동\r\n  if(globalUserid != null && globalUserid !== \"\") {\r\n    return <Redirect to=\"/main/home\"></Redirect>\r\n    // history.push('/main');\r\n  } \r\n\r\n  const handleLogin = (event) => {\r\n\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (form.checkValidity() === false) {//빈칸이 있을경우\r\n      setErrorMessageCode(errorMsg.code_empty);\r\n      setErrorMessageUserid(errorMsg.userid_empty);\r\n      setErrorPassword(errorMsg.password_empty);\r\n      setValidated(true);\r\n    } else {\r\n      const response = LoginApi(loginForm);\r\n\r\n      response\r\n        .then((response) => {\r\n          if(response.data.state === \"success\"){\r\n\r\n              //로그인 성공시 redux에 저장\r\n            dispatch(createSetUseridAction(response.data.userid));\r\n            dispatch(createSetAuthTokenAction(response.data.authToken));\r\n            dispatch(createSetRoleAuthority(response.data.role_authority));\r\n            dispatch(createSetCodeNumberAction(response.data.codenumber));\r\n\r\n            //요청 헤더에 추가\r\n            addAuthHeader(response.data.authToken);\r\n\r\n            //로그인 성공시 sessionStorage에 저장\r\n            sessionStorage.setItem(\"userid\", response.data.userid);\r\n            sessionStorage.setItem(\"authToken\", response.data.authToken);\r\n            sessionStorage.setItem(\"role_authority\", response.data.role_authority);\r\n            sessionStorage.setItem(\"codenumber\", response.data.codenumber); \r\n\r\n          } else if(response.data.state === \"err_nullAuth\") {// 해당 병원에 계정이 없을경우\r\n            setIsInvalidCode(false);\r\n            setIsInvalidUserid(true);\r\n            setIsInvalidPassword(false);\r\n\r\n            setErrorMessageCode(errorMsg.code_empty);\r\n            setErrorMessageUserid(errorMsg.err_nullAuth);\r\n            setErrorPassword(errorMsg.password_empty);\r\n          }\r\n\r\n        }).catch((error) =>{\r\n          console.log(error.response);\r\n          if(error.response.status === 401) {\r\n            setErrorMessageUserid(\"\");\r\n            setErrorPassword(errorMsg.err_login);\r\n            setIsInvalidUserid(true);\r\n            setIsInvalidPassword(true);\r\n          }\r\n        })\r\n\r\n    }\r\n\r\n  }\r\n \r\n  \r\n  return (\r\n    <div style={{height:\"100vh\", backgroundImage:'url(/assets/docc.jpg)', backgroundRepeat:\"no-repeat\"}}>\r\n      <div className=\"d-flex\">\r\n            <div className=\"card\" style={{width:\"50%\", height:\"30%\", marginLeft:\"25%\", marginTop:\"12%\"}}>\r\n              <div className=\"card-header\" style={{backgroundColor:\"rgb(18, 60, 114)\", color:\"white\", fontWeight:\"bold\", fontSize:\"24px\"}}>LOGIN</div>\r\n                <div className=\"card-body row mt-4 ml-2\" style={{height:\"410px\"}}>\r\n                  <div className=\"col-5\" style={{height:\"390px\"}}>\r\n                  <Form noValidate validated={validated} onSubmit={handleLogin}>\r\n\r\n                      <Form.Group controlId=\"formBasicID\">\r\n                        <Form.Label><div style={{fontWeight:\"bold\"}}>Hospital Code</div></Form.Label>\r\n                        <Form.Control required type=\"text\" name=\"codenumber\" placeholder=\"병원코드(숫자)를 입력하세요.\" value={loginForm.codenumber} onChange={handleChange} isInvalid={isInvalidCode}/>\r\n                        <Form.Control.Feedback type=\"invalid\">{errorMessageCode}</Form.Control.Feedback>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"formBasicID\">\r\n                        <Form.Label><div style={{fontWeight:\"bold\"}}>UserID</div></Form.Label>\r\n                        <Form.Control required type=\"text\" name=\"userid\" placeholder=\"직원 ID를 입력하세요.\" value={loginForm.userid} onChange={handleChange} isInvalid={isInvalidUserid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">{errorMessageUserid}</Form.Control.Feedback>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label><div style={{fontWeight:\"bold\"}}>Password</div></Form.Label>\r\n                        <Form.Control required type=\"password\" autoComplete=\"off\" name=\"userpassword\" placeholder=\"비밀번호를 입력하세요.\" value={loginForm.userpassword} onChange={handleChange} isInvalid={isInvalidPassword}/>\r\n                        <Form.Control.Feedback type=\"invalid\">{errorMessagePassword}</Form.Control.Feedback>\r\n                      </Form.Group>\r\n                      <div className=\"text-center mt-4\">\r\n                        <Button variant=\"dark\" block type=\"submit\">\r\n                          로그인\r\n                        </Button>\r\n                      </div>\r\n                    </Form>\r\n                  </div>\r\n                  <div className=\"ml-4 mr-4\" style={{borderLeft:\"1px solid #dddddd\", height:\"340px\"}}></div>\r\n                  <div className=\"col-6\">\r\n                    <HospitalNotice></HospitalNotice>\r\n                  </div>\r\n\r\n                </div>\r\n            </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Hospital;","import axios from \"axios\";\r\nexport function LoginApi(user){\r\n    const result = axios.post(\"/auth/login\",user);\r\n    return result;\r\n}\r\n\r\nexport function LogoutApi(){\r\n    axios.get(\"/Auth/logout\")\r\n}\r\n\r\nexport function test(){\r\n    axios.get(\"/Auth/test\", {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n}\r\n\r\nexport function test2(){\r\n    axios.get(\"/Auth/test2\", {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }});\r\n}","\r\nimport { AppContextProvider } from \"AppContext\";\r\nimport Main from \"Main\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Hospital from \"views/hospital\";\r\nimport './App.css';\r\nimport axiosConfig from \"apis/axiosConfig\"\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"d-flex flex-column vh-100\" style={{width:\"1920px\", backgroundColor:\"#F9F7F9\"}}>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Hospital}/>\r\n        <AppContextProvider>\r\n        <Route path=\"/main\" component={Main}/>\r\n        </AppContextProvider>\r\n \r\n        <Redirect to=\"/\"/>\r\n        {/* 어느 누구도 해당하지 않으면 home으로 감  */}\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n//  <div className=\"col-1 pl-0 border-right border-gray align-items-end text-bottom\" style={{position:\"relative\", backgroundColor:\"#FFFFFF\"}}>","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n  treatment: { \r\n  }\r\n}\r\n\r\n//액션 타입 선언\r\nconst SET_TREATMENT=\"treatment/setTreatment\";\r\n\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetTreatment = (treatment) => {\r\n  return {type:SET_TREATMENT, treatment};\r\n} \r\n\r\n//리듀스 선언\r\nconst treatmentReducer = (state = initialState, action) => {\r\n  if(action.type === SET_TREATMENT) {\r\n    return {...state, treatment:action.treatment};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\n\r\nexport default treatmentReducer;","const initialState = {\r\n  realtime: {}\r\n}\r\n\r\n//액션 타입 선언\r\nconst SET_REALTIME=\"realtime/setRealTime\";\r\nconst SET_=\"realtime/setRealTime\";\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetRealTime = (realtime) => {\r\n  return {type:SET_REALTIME, realtime};\r\n} \r\n\r\n//리듀스 선언\r\nconst realtimeReducer = (state = initialState, action) => {\r\n  if(action.type === SET_REALTIME) {\r\n    return {...state, realtime:action.realtime};\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\n\r\nexport default realtimeReducer;","\r\nconst initState = {\r\n    websocket:null,\r\n}\r\nconst SET_WEBSOCKET = \"websocket/set_websocket\"\r\nexport const CreateSetWebSocket =(websocket) =>{\r\n    return({\r\n        type:SET_WEBSOCKET,\r\n        websocket\r\n    })\r\n}\r\nconst websocketReducer=(state = initState,action)=> {\r\n    switch(action.type){\r\n        case SET_WEBSOCKET:\r\n            return{\r\n                ...state,\r\n                websocket:action.websocket\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default websocketReducer;","import { combineReducers } from \"redux\";\r\nimport patientReducer from \"./patient-reducer\"\r\nimport treatmentReducer from \"./treatment-reducer\"\r\nimport reservationReducer from \"./reservation-reducer\"\r\nimport receptionReducer from \"./reception-reducer\"\r\nimport authReducer from \"./auth-rducer\"\r\nimport realtimeReducer from \"./realtime-reducer\"\r\nimport websocketReducer from \"./websocket-reducer\"\r\nimport toastReducer from \"./toast-reducer\"\r\nconst rootReducer = combineReducers({\r\n  patientReducer,\r\n  treatmentReducer,\r\n  reservationReducer,\r\n  receptionReducer,\r\n  authReducer,\r\n  websocketReducer,\r\n  realtimeReducer,\r\n  toastReducer\r\n\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport { createStore } from 'redux';\r\nimport rootReducer from 'redux/root-reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from 'react-redux';\r\nimport { createSetAuthTokenAction, createSetCodeNumberAction, createSetRoleAuthority, createSetUseridAction } from 'redux/auth-rducer';\r\nimport { addAuthHeader } from 'apis/axiosConfig';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\n//Redux에 인증 정보 설정\r\nstore.dispatch(createSetCodeNumberAction(sessionStorage.getItem(\"codenumber\") || \"\"));\r\nstore.dispatch(createSetUseridAction(sessionStorage.getItem(\"userid\") || \"\"));\r\nstore.dispatch(createSetAuthTokenAction(sessionStorage.getItem(\"authToken\") || \"\"));\r\nstore.dispatch(createSetRoleAuthority(sessionStorage.getItem(\"role_authority\") || \"\"));\r\n\r\n//Axios에 인증 헤더 추가\r\naddAuthHeader(sessionStorage.getItem(\"authToken\"));\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
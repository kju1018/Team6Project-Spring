<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
	
<!-- 보안을 체크할 필요가 없는 경로설정 -->
<!-- 	 <security:http pattern="/resources/**" security="none"/>
	보안 필터 체인(프로세싱)
	<security:http auto-config="true" use-expressions="true">   
	
		<security:csrf disabled="true"/>
		<security:intercept-url pattern="/Auth/test" access="hasRole('ROLE_USER')"/> 
	 	<security:intercept-url pattern="/**" access="permitAll"/>
	 	
	  	
		로그인/로그아웃 설정
		<security:form-login username-parameter="uid"  
							password-parameter="upassword"/>
							
		 <security:custom-filter before="CHANNEL_FILTER" ref="JwtAuthenticationFilter"/> 
		
	</security:http>

	사용자 인증 처리를 위한 설정(DB 테이블 관련)
	<security:authentication-manager>
		<security:authentication-provider ref="com.mycompany.webapp.daoAuthenticationProvider"/>
		 
	</security:authentication-manager>	
	
	<bean id="com.mycompany.webapp.daoAuthenticationProvider"
			class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="UserDetailService"/>
	</bean>
	<bean id="UserDetailService"
			class="com.mycompany.webapp.service.UsersService"/>
	<bean id="bCryptPasswordEncoder" 
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<security:jdbc-user-service id="jdbcUsersService"
									data-source-ref="dataSource"
									users-by-username-query="select userid,userpassword,userenabled from users where userid=?"
									authorities-by-username-query="select userid,role_authority from users where userid=?"/>
	<bean id="roleHierachyAuthoritiesMapper"
			class="org.springframework.security.access.hierarchicalroles.RoleHierarchyAuthoritiesMapper">
		<constructor-arg>
			<bean class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
				<property name="hierarchy">
					<value>
						ROLE_ADMIN > ROLE_MANAGER
						ROLE_MANAGER > ROLE_USER
					</value>
				</property>
			</bean>
		</constructor-arg>
	
	</bean>

	 <bean id="JwtAuthenticationFilter" 
			class="com.mycompany.webapp.util.JwtAuthenticationFilter">
			<constructor-arg>
			<bean id="UserDetailService"
			class="com.mycompany.webapp.service.UsersService"/>
		</constructor-arg>
	</bean> 

	 -->
	<!-- <mvc:cors>
		<mvc:mapping path="/**" allowed-origins="*"/> 
	</mvc:cors> -->
	
	
</beans>
